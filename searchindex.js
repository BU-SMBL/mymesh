Search.setIndex({"alltitles": {"0.0.1 (2024-11-24)": [[2, "id1"]], "0.1.0-alpha (2025-09-22)": [[2, "alpha-2025-09-22"]], "2D Example": [[433, "d-example"]], "2D Planar Meshes": [[444, "d-planar-meshes"]], "2D to 3D Constructions": [[91, "d-to-3d-constructions"]], "2\u21923 and 3\u21922 Flips": [[454, null]], "3D Surfaces": [[444, "d-surfaces"]], "API Reference": [[0, null]], "Acknowledgements": [[445, "acknowledgements"]], "Analytical Curvature": [[451, "analytical-curvature"]], "Bowyer-Watson": [[452, "bowyer-watson"]], "Bowyer-Watson: Initialization": [[452, "bowyer-watson-initialization"]], "Bowyer-Watson: Point Insertion": [[452, "bowyer-watson-point-insertion"]], "Calculating Curvature": [[451, "calculating-curvature"]], "Cavity Formation": [[452, "cavity-formation"]], "Change Log": [[2, null]], "Circumcircle Test": [[452, "circumcircle-test"]], "Clip()": [[442, "clip"]], "Computation times": [[6, null], [11, null], [13, null], [446, null]], "Connectivity Representations": [[433, null]], "Connectivity conversion": [[16, "connectivity-conversion"]], "Constructive Solid Geometry": [[434, null]], "Contour": [[450, null]], "Contour()": [[442, "contour"]], "Contouring": [[15, "contouring"]], "Contributions": [[3, "contributions"]], "Conventions": [[451, "conventions"]], "Conversion From Octree": [[95, "conversion-from-octree"]], "Conversion From Quadtree": [[95, "conversion-from-quadtree"]], "Core dependencies": [[439, "core-dependencies"]], "Creating a Surface": [[7, "creating-a-surface"]], "Cubic Surface Fitting": [[451, "cubic-surface-fitting"]], "Curvature": [[451, null]], "Curvature Analysis": [[4, null]], "Curvature Calculation": [[17, "curvature-calculation"]], "Curvature Conversion": [[17, "curvature-conversion"]], "Curvature Metrics": [[451, "curvature-metrics"]], "Curvature calculation": [[4, "curvature-calculation"]], "Curvedness": [[451, "curvedness"]], "Data Structure": [[454, "data-structure"]], "Defining an implicit function": [[7, "defining-an-implicit-function"]], "Defining implicit functions": [[438, "defining-implicit-functions"]], "Delaunay Triangulation": [[452, null]], "Dependencies": [[439, "dependencies"]], "Developer\u2019s Guide": [[3, null]], "Development": [[1, null]], "Edge Contraction": [[453, null]], "Edge Table": [[454, "id3"]], "Element Table": [[454, "id1"]], "Element Types": [[435, null]], "Element type conversion": [[16, "element-type-conversion"]], "Error Measurement": [[4, "error-measurement"]], "Euclidean Distance Error": [[458, "euclidean-distance-error"]], "Examples": [[12, null], [445, "examples"]], "Explicit CSG": [[434, "explicit-csg"]], "Face Table": [[454, "id2"]], "Feat": [[2, "feat"]], "File IO": [[21, "file-io"]], "File Input/Output": [[440, null]], "Fix": [[2, "fix"]], "Flipping Procedure": [[454, "flipping-procedure"]], "From meshes to meshes": [[442, "from-meshes-to-meshes"]], "Functions": [[0, "functions"]], "Gaussian Curvature": [[451, "gaussian-curvature"]], "Generating Octrees": [[458, "generating-octrees"]], "Getting Started": [[436, null]], "Hulls": [[18, "hulls"]], "Image files": [[440, "image-files"]], "Image-based Mesh Generation": [[21, "image-based-mesh-generation"]], "Image-based Meshing": [[437, null]], "Images in MyMesh": [[437, "images-in-mymesh"]], "Implicit CSG": [[434, "implicit-csg"]], "Implicit Function Octrees": [[458, "implicit-function-octrees"]], "Implicit Function Operators": [[22, "implicit-function-operators"]], "Implicit Functions": [[22, "implicit-functions"]], "Implicit Heart": [[7, null]], "Implicit Meshing": [[438, null]], "Importing MyMesh": [[432, "importing-mymesh"]], "Improvement": [[456, null]], "Inside/Outside Tests": [[93, "inside-outside-tests"]], "Installation": [[439, null]], "Installing from source:": [[439, "installing-from-source"]], "Interpretation": [[451, "interpretation"]], "Intersection Tests": [[93, "intersection-tests"]], "Laplacian Smoothing": [[457, null]], "Line Meshes (Type='line')": [[444, "line-meshes-type-line"]], "Local mesh topology": [[23, "local-mesh-topology"]], "Marching Cubes": [[450, "marching-cubes"]], "Marching Cubes 33": [[450, "marching-cubes-33"]], "Marching Squares": [[450, "marching-squares"]], "Marching Tetrahedra": [[450, "marching-tetrahedra"]], "Mean Curvature": [[451, "mean-curvature"]], "Mesh Analysis Examples": [[5, null], [12, "mesh-analysis-examples"]], "Mesh Cleanup": [[96, "mesh-cleanup"]], "Mesh Connectivity": [[96, "mesh-connectivity"]], "Mesh Generation": [[22, "mesh-generation"]], "Mesh Generation Examples": [[10, null], [12, "mesh-generation-examples"]], "Mesh Manipulations": [[96, "mesh-manipulations"]], "Mesh Measurements": [[96, "mesh-measurements"]], "Mesh Types": [[444, "mesh-types"]], "Mesh files": [[440, "mesh-files"]], "Mesh smoothing/node repositioning": [[23, "mesh-smoothing-node-repositioning"]], "Mesh type conversion": [[16, "mesh-type-conversion"]], "Mesh-Based Curvature": [[451, "mesh-based-curvature"]], "Meshing Implicit Functions": [[438, "meshing-implicit-functions"]], "Methods": [[24, "methods"], [342, "methods"], [364, "methods"], [382, "methods"]], "Miscellaneous": [[96, "miscellaneous"]], "Mixed-Topology TPMS": [[8, null]], "MyMesh: General purpose, implicit, and image-based meshing in python": [[445, null]], "Node Repositioning": [[456, "node-repositioning"]], "Node Spring-based": [[460, "node-spring-based"]], "Objects": [[0, "objects"]], "Octree": [[95, "octree"], [458, null]], "Octree Creation": [[95, "octree-creation"]], "Octree Definition": [[458, "octree-definition"]], "Octree Querying": [[95, "octree-querying"]], "On-demand properties": [[442, "on-demand-properties"]], "Operations": [[14, "operations"]], "Optimization": [[94, "optimization"]], "Optional dependencies": [[439, "optional-dependencies"]], "Other Implicit Mesh Utilities": [[22, "other-implicit-mesh-utilities"]], "Package Overview": [[432, "package-overview"]], "Pasta Shapes": [[9, null]], "Plane-Box Intersection": [[459, "plane-box-intersection"]], "Plane-Shape Intersection Tests": [[459, "plane-shape-intersection-tests"]], "Plane-Triangle Intersection": [[459, "plane-triangle-intersection"]], "Point Cloud Octrees": [[458, "point-cloud-octrees"]], "Point Inclusion Tests": [[459, "point-inclusion-tests"]], "Point Location": [[452, "point-location"]], "Point in Boundary": [[459, "point-in-boundary"]], "Point in Surface": [[459, "point-in-surface"]], "Principal Curvatures": [[451, "principal-curvatures"]], "Properties": [[24, "properties"], [342, "properties"], [364, "properties"], [382, "properties"]], "Python Package Index (PyPI)": [[439, "python-package-index-pypi"]], "Quadratic Surface Fitting": [[451, "quadratic-surface-fitting"]], "Quadtree": [[95, "quadtree"]], "Quadtree Creation": [[95, "quadtree-creation"]], "Quality Calculation Helper Functions": [[92, "quality-calculation-helper-functions"]], "Quality Metrics": [[92, "quality-metrics"]], "Ray-Box Intersection": [[459, "ray-box-intersection"]], "Ray-Segment Intersection": [[459, "ray-segment-intersection"]], "Ray-Shape Intersection Tests": [[459, "ray-shape-intersection-tests"]], "Ray-Triangle Intersection": [[459, "ray-triangle-intersection"]], "Rays": [[459, null]], "References": [[443, null]], "Registration": [[94, "registration"]], "Retriangulation": [[452, "retriangulation"]], "Roadmap & Planned features": [[1, "roadmap-planned-features"]], "Segment-Segment Intersection": [[459, "segment-segment-intersection"]], "Shape Index": [[451, "shape-index"]], "Shape-Shape Intersection Tests": [[459, "shape-shape-intersection-tests"]], "Shapes": [[91, "shapes"]], "Similarity Metrics": [[94, "similarity-metrics"]], "Smart Laplacian Smoothing": [[457, "smart-laplacian-smoothing"]], "Smoothing": [[7, "smoothing"]], "Spring-based Smoothing": [[460, null]], "Statement of need": [[445, "statement-of-need"]], "Storing data with meshes": [[442, "storing-data-with-meshes"]], "Submodules": [[0, "submodules"]], "Summary": [[445, "summary"]], "Surface Mesh Octrees": [[458, "surface-mesh-octrees"]], "Surface Meshes (Type='surf')": [[444, "surface-meshes-type-surf"]], "Surface Projection": [[96, "surface-projection"]], "Surface Reconstruction": [[455, "surface-reconstruction"]], "Tangential Laplacian Smoothing": [[457, "tangential-laplacian-smoothing"]], "Tetrahedralization": [[18, "tetrahedralization"]], "Theory Guide": [[449, null]], "Threshold()": [[442, "threshold"]], "Tips for using MyMesh in MATLAB": [[441, "tips-for-using-mymesh-in-matlab"]], "Topological Modifications": [[456, "topological-modifications"]], "Transformation": [[94, "transformation"]], "Tree": [[95, "tree"]], "Tree Utilities": [[95, "tree-utilities"]], "Triangle-Box Intersection": [[459, "triangle-box-intersection"]], "Triangle-Triangle Intersection": [[459, "triangle-triangle-intersection"]], "Triangulation": [[18, "triangulation"]], "Unpacking": [[442, "unpacking"]], "Unreleased": [[2, "unreleased"]], "Updating and Versioning": [[3, "updating-and-versioning"]], "User Guide": [[432, null]], "Using MyMesh in MATLAB": [[441, null]], "Visualization": [[94, "visualization"], [97, "visualization"]], "Visualization Utilities": [[97, "visualization-utilities"]], "Volume Meshes (Type='vol')": [[444, "volume-meshes-type-vol"]], "Voxel Meshes": [[444, "voxel-meshes"]], "Voxel Octrees": [[458, "voxel-octrees"]], "What do you want to do?": [[436, "what-do-you-want-to-do"]], "What is a mesh?": [[444, null]], "What is an implicit function?": [[438, "what-is-an-implicit-function"]], "Working with the mesh class": [[442, null]], "copy()": [[442, "copy"]], "implicit": [[455, null]], "mymesh.booleans": [[14, null]], "mymesh.booleans.MeshBooleans": [[98, null]], "mymesh.booleans.SplitMesh": [[99, null]], "mymesh.contour": [[15, null]], "mymesh.contour.Adaptive": [[100, null]], "mymesh.contour.MarchingCubes": [[101, null]], "mymesh.contour.MarchingCubesImage": [[102, null]], "mymesh.contour.MarchingElements": [[103, null]], "mymesh.contour.MarchingSquares": [[104, null]], "mymesh.contour.MarchingSquaresImage": [[105, null]], "mymesh.contour.MarchingTetrahedra": [[106, null]], "mymesh.contour.MarchingTriangles": [[107, null]], "mymesh.converter": [[16, null]], "mymesh.converter.EdgesByElement": [[108, null]], "mymesh.converter.edge2quadratic": [[109, null]], "mymesh.converter.edge32linear": [[110, null]], "mymesh.converter.edges2unique": [[111, null]], "mymesh.converter.faces2surface": [[112, null]], "mymesh.converter.faces2unique": [[113, null]], "mymesh.converter.hex202linear": [[114, null]], "mymesh.converter.hex2edges": [[115, null]], "mymesh.converter.hex2faces": [[116, null]], "mymesh.converter.hex2quadratic": [[117, null]], "mymesh.converter.hex2tet": [[118, null]], "mymesh.converter.hexsubdivide": [[119, null]], "mymesh.converter.im2voxel": [[120, null]], "mymesh.converter.linear2quadratic": [[121, null]], "mymesh.converter.mesh2im": [[122, null]], "mymesh.converter.polygon2edges": [[123, null]], "mymesh.converter.pyr132linear": [[124, null]], "mymesh.converter.pyr2quadratic": [[125, null]], "mymesh.converter.pyramid2edges": [[126, null]], "mymesh.converter.pyramid2faces": [[127, null]], "mymesh.converter.pyramid2tet": [[128, null]], "mymesh.converter.quad2edges": [[129, null]], "mymesh.converter.quad2quadratic": [[130, null]], "mymesh.converter.quad2tri": [[131, null]], "mymesh.converter.quad82linear": [[132, null]], "mymesh.converter.quadratic2linear": [[133, null]], "mymesh.converter.solid2edges": [[134, null]], "mymesh.converter.solid2faces": [[135, null]], "mymesh.converter.solid2surface": [[136, null]], "mymesh.converter.solid2tets": [[137, null]], "mymesh.converter.surf2dual": [[138, null]], "mymesh.converter.surf2edges": [[139, null]], "mymesh.converter.surf2tris": [[140, null]], "mymesh.converter.surf2voxel": [[141, null]], "mymesh.converter.tet102linear": [[142, null]], "mymesh.converter.tet2edges": [[143, null]], "mymesh.converter.tet2faces": [[144, null]], "mymesh.converter.tet2quadratic": [[145, null]], "mymesh.converter.tetsubdivide": [[146, null]], "mymesh.converter.tri2edges": [[147, null]], "mymesh.converter.tri2quadratic": [[148, null]], "mymesh.converter.tri62linear": [[149, null]], "mymesh.converter.voxel2im": [[150, null]], "mymesh.converter.wdg152linear": [[151, null]], "mymesh.converter.wdg2quadratic": [[152, null]], "mymesh.converter.wedge2edges": [[153, null]], "mymesh.converter.wedge2faces": [[154, null]], "mymesh.converter.wedge2tet": [[155, null]], "mymesh.curvature": [[17, null]], "mymesh.curvature.AnalyticalCurvature": [[156, null]], "mymesh.curvature.CubicFit": [[157, null]], "mymesh.curvature.Curvedness": [[158, null]], "mymesh.curvature.GaussianCurvature": [[159, null]], "mymesh.curvature.ImageCurvature": [[160, null]], "mymesh.curvature.MeanCurvature": [[161, null]], "mymesh.curvature.NormCurve": [[162, null]], "mymesh.curvature.QuadFit": [[163, null]], "mymesh.curvature.ShapeCategory": [[164, null]], "mymesh.curvature.ShapeIndex": [[165, null]], "mymesh.delaunay": [[18, null]], "mymesh.delaunay.Alpha2d": [[166, null]], "mymesh.delaunay.Alpha3d": [[167, null]], "mymesh.delaunay.AlphaPeel3d": [[168, null]], "mymesh.delaunay.AlphaShape": [[169, null]], "mymesh.delaunay.BowyerWatson2d": [[170, null]], "mymesh.delaunay.BowyerWatson3d": [[171, null]], "mymesh.delaunay.ConvexHull": [[172, null]], "mymesh.delaunay.FanTriangulation": [[173, null]], "mymesh.delaunay.GiftWrapping": [[174, null]], "mymesh.delaunay.SciPy": [[175, null]], "mymesh.delaunay.Tetrahedralize": [[176, null]], "mymesh.delaunay.Triangle": [[177, null]], "mymesh.delaunay.Triangulate": [[178, null]], "mymesh.demo_image": [[19, null], [447, null]], "mymesh.demo_mesh": [[20, null], [448, null]], "mymesh.image": [[21, null]], "mymesh.image.PixelMesh": [[179, null]], "mymesh.image.SurfaceMesh": [[180, null]], "mymesh.image.SurfaceNodeOptimization": [[181, null]], "mymesh.image.TetMesh": [[182, null]], "mymesh.image.VoxelMesh": [[183, null]], "mymesh.image.read": [[184, null]], "mymesh.image.write": [[185, null]], "mymesh.implicit": [[22, null]], "mymesh.implicit.SurfaceMesh": [[186, null]], "mymesh.implicit.SurfaceNodeOptimization": [[187, null]], "mymesh.implicit.TetMesh": [[188, null]], "mymesh.implicit.VoxelMesh": [[189, null]], "mymesh.implicit.box": [[190, null]], "mymesh.implicit.cylinder": [[191, null]], "mymesh.implicit.diamond": [[192, null]], "mymesh.implicit.diff": [[193, null]], "mymesh.implicit.difff": [[194, null]], "mymesh.implicit.diffs": [[195, null]], "mymesh.implicit.grid2fun": [[196, null]], "mymesh.implicit.grid2grad": [[197, null]], "mymesh.implicit.gyroid": [[198, null]], "mymesh.implicit.intersection": [[199, null]], "mymesh.implicit.intersectionf": [[200, null]], "mymesh.implicit.intersections": [[201, null]], "mymesh.implicit.lidinoid": [[202, null]], "mymesh.implicit.mesh2udf": [[203, null]], "mymesh.implicit.mixed_topology": [[204, null]], "mymesh.implicit.neovius": [[205, null]], "mymesh.implicit.offset": [[206, null]], "mymesh.implicit.plane": [[207, null]], "mymesh.implicit.primitive": [[208, null]], "mymesh.implicit.rMax": [[209, null]], "mymesh.implicit.rMin": [[210, null]], "mymesh.implicit.sphere": [[211, null]], "mymesh.implicit.thicken": [[212, null]], "mymesh.implicit.thickenf": [[213, null]], "mymesh.implicit.thickens": [[214, null]], "mymesh.implicit.torus": [[215, null]], "mymesh.implicit.tpms": [[216, null]], "mymesh.implicit.union": [[217, null]], "mymesh.implicit.unionf": [[218, null]], "mymesh.implicit.unions": [[219, null]], "mymesh.implicit.xplane": [[220, null]], "mymesh.implicit.yplane": [[221, null]], "mymesh.implicit.zplane": [[222, null]], "mymesh.improvement": [[23, null]], "mymesh.improvement.Contract": [[223, null]], "mymesh.improvement.GeoTransformSmoothing": [[224, null]], "mymesh.improvement.LocalLaplacianSmoothing": [[225, null]], "mymesh.improvement.NodeSpringSmoothing": [[226, null]], "mymesh.improvement.SegmentSpringSmoothing": [[227, null]], "mymesh.improvement.SmartLaplacianSmoothing": [[228, null]], "mymesh.improvement.TangentialLaplacianSmoothing": [[229, null]], "mymesh.improvement.TetFlip": [[230, null]], "mymesh.improvement.TetImprove": [[231, null]], "mymesh.improvement.TetSplit": [[232, null]], "mymesh.mesh": [[24, null]], "mymesh.mesh.mesh.Boundary": [[25, null]], "mymesh.mesh.mesh.BoundaryConn": [[26, null]], "mymesh.mesh.mesh.BoundaryNodes": [[27, null]], "mymesh.mesh.mesh.Centroids": [[28, null]], "mymesh.mesh.mesh.Clip": [[29, null]], "mymesh.mesh.mesh.Contour": [[30, null]], "mymesh.mesh.mesh.CreateBoundaryLayer": [[31, null]], "mymesh.mesh.mesh.Crop": [[32, null]], "mymesh.mesh.mesh.EdgeConn": [[33, null]], "mymesh.mesh.mesh.EdgeElemConn": [[34, null]], "mymesh.mesh.mesh.Edges": [[35, null]], "mymesh.mesh.mesh.ElemConn": [[36, null]], "mymesh.mesh.mesh.ElemNeighbors": [[37, null]], "mymesh.mesh.mesh.ElemNormals": [[38, null]], "mymesh.mesh.mesh.ElemType": [[39, null]], "mymesh.mesh.mesh.EulerCharacteristic": [[40, null]], "mymesh.mesh.mesh.FaceConn": [[41, null]], "mymesh.mesh.mesh.FaceElemConn": [[42, null]], "mymesh.mesh.mesh.Faces": [[43, null]], "mymesh.mesh.mesh.Genus": [[44, null]], "mymesh.mesh.mesh.MeshNodes": [[45, null]], "mymesh.mesh.mesh.Mirror": [[46, null]], "mymesh.mesh.mesh.ND": [[47, null]], "mymesh.mesh.mesh.NEdge": [[48, null]], "mymesh.mesh.mesh.NElem": [[49, null]], "mymesh.mesh.mesh.NFace": [[50, null]], "mymesh.mesh.mesh.NNode": [[51, null]], "mymesh.mesh.mesh.NodeNeighbors": [[52, null]], "mymesh.mesh.mesh.NodeNormals": [[53, null]], "mymesh.mesh.mesh.NodeNormalsMethod": [[54, null]], "mymesh.mesh.mesh.RenumberFacesBySet": [[55, null]], "mymesh.mesh.mesh.RenumberNodesBySet": [[56, null]], "mymesh.mesh.mesh.SurfConn": [[57, null]], "mymesh.mesh.mesh.SurfElemConn": [[58, null]], "mymesh.mesh.mesh.SurfNodeNeighbors": [[59, null]], "mymesh.mesh.mesh.SurfNodes": [[60, null]], "mymesh.mesh.mesh.Surface": [[61, null]], "mymesh.mesh.mesh.Threshold": [[62, null]], "mymesh.mesh.mesh.aabb": [[63, null]], "mymesh.mesh.mesh.addEdges": [[64, null]], "mymesh.mesh.mesh.addElems": [[65, null]], "mymesh.mesh.mesh.addFaces": [[66, null]], "mymesh.mesh.mesh.addNodes": [[67, null]], "mymesh.mesh.mesh.bounds": [[68, null]], "mymesh.mesh.mesh.cells": [[69, null]], "mymesh.mesh.mesh.cleanup": [[70, null]], "mymesh.mesh.mesh.copy": [[71, null]], "mymesh.mesh.mesh.getCurvature": [[72, null]], "mymesh.mesh.mesh.getQuality": [[73, null]], "mymesh.mesh.mesh.identify_type": [[74, null]], "mymesh.mesh.mesh.imread": [[75, null]], "mymesh.mesh.mesh.merge": [[76, null]], "mymesh.mesh.mesh.mesh2dmesh": [[77, null]], "mymesh.mesh.mesh.meshio2mymesh": [[78, null]], "mymesh.mesh.mesh.mvbb": [[79, null]], "mymesh.mesh.mesh.mymesh2meshio": [[80, null]], "mymesh.mesh.mesh.plot": [[81, null]], "mymesh.mesh.mesh.points": [[82, null]], "mymesh.mesh.mesh.read": [[83, null]], "mymesh.mesh.mesh.removeElems": [[84, null]], "mymesh.mesh.mesh.reset": [[85, null]], "mymesh.mesh.mesh.to_meshio": [[86, null]], "mymesh.mesh.mesh.to_pyvista": [[87, null]], "mymesh.mesh.mesh.validate": [[88, null]], "mymesh.mesh.mesh.view": [[89, null]], "mymesh.mesh.mesh.write": [[90, null]], "mymesh.primitives": [[91, null]], "mymesh.primitives.Box": [[233, null]], "mymesh.primitives.Circle": [[234, null]], "mymesh.primitives.CirclePt": [[235, null]], "mymesh.primitives.Cylinder": [[236, null]], "mymesh.primitives.Extrude": [[237, null]], "mymesh.primitives.Grid": [[238, null]], "mymesh.primitives.Grid2D": [[239, null]], "mymesh.primitives.Line": [[240, null]], "mymesh.primitives.Multiline": [[241, null]], "mymesh.primitives.Plane": [[242, null]], "mymesh.primitives.Revolve": [[243, null]], "mymesh.primitives.Sphere": [[244, null]], "mymesh.primitives.Torus": [[245, null]], "mymesh.quality": [[92, null]], "mymesh.quality.Area": [[246, null]], "mymesh.quality.AspectRatio": [[247, null]], "mymesh.quality.InverseOrthogonalQuality": [[248, null]], "mymesh.quality.InverseOrthogonality": [[249, null]], "mymesh.quality.MaxDihedral": [[250, null]], "mymesh.quality.MeanRatio": [[251, null]], "mymesh.quality.MinDihedral": [[252, null]], "mymesh.quality.OrthogonalQuality": [[253, null]], "mymesh.quality.Orthogonality": [[254, null]], "mymesh.quality.Skewness": [[255, null]], "mymesh.quality.SurfDihedralAngles": [[256, null]], "mymesh.quality.Volume": [[257, null]], "mymesh.quality.dihedralAngles": [[258, null]], "mymesh.quality.equiangular_skewness": [[259, null]], "mymesh.quality.quad_skewness": [[260, null]], "mymesh.quality.tet_circumradius": [[261, null]], "mymesh.quality.tet_vol_skewness": [[262, null]], "mymesh.quality.tet_volume": [[263, null]], "mymesh.quality.tri_area": [[264, null]], "mymesh.quality.tri_skewness": [[265, null]], "mymesh.rays": [[93, null]], "mymesh.rays.BoundaryBoundaryIntersection": [[266, null]], "mymesh.rays.BoxBoxIntersection": [[267, null]], "mymesh.rays.BoxTrianglesIntersection": [[268, null]], "mymesh.rays.PlaneBoxIntersection": [[269, null]], "mymesh.rays.PlaneSurfIntersection": [[270, null]], "mymesh.rays.PlaneTriangleIntersection": [[271, null]], "mymesh.rays.PlaneTrianglesIntersection": [[272, null]], "mymesh.rays.PointInBoundary": [[273, null]], "mymesh.rays.PointInBox": [[274, null]], "mymesh.rays.PointInBox2D": [[275, null]], "mymesh.rays.PointInSurf": [[276, null]], "mymesh.rays.PointInTet": [[277, null]], "mymesh.rays.PointInTri": [[278, null]], "mymesh.rays.PointsInSurf": [[279, null]], "mymesh.rays.PointsInTris": [[280, null]], "mymesh.rays.PointsInVoxel": [[281, null]], "mymesh.rays.RayBoundaryIntersection": [[282, null]], "mymesh.rays.RayBoxIntersection": [[283, null]], "mymesh.rays.RayBoxesIntersection": [[284, null]], "mymesh.rays.RayOctreeIntersection": [[285, null]], "mymesh.rays.RaySegmentIntersection": [[286, null]], "mymesh.rays.RaySegmentsIntersection": [[287, null]], "mymesh.rays.RaySurfIntersection": [[288, null]], "mymesh.rays.RayTriangleIntersection": [[289, null]], "mymesh.rays.RayTrianglesIntersection": [[290, null]], "mymesh.rays.RaysSurfIntersection": [[291, null]], "mymesh.rays.RaysTrianglesIntersection": [[292, null]], "mymesh.rays.SegmentBox2DIntersection": [[293, null]], "mymesh.rays.SegmentBoxIntersection": [[294, null]], "mymesh.rays.SegmentSegmentIntersection": [[295, null]], "mymesh.rays.SegmentsSegmentsIntersection": [[296, null]], "mymesh.rays.SurfSelfIntersection": [[297, null]], "mymesh.rays.SurfSurfIntersection": [[298, null]], "mymesh.rays.TriangleBoxIntersection": [[299, null]], "mymesh.rays.TriangleTriangleIntersection": [[300, null]], "mymesh.rays.TriangleTriangleIntersectionPt": [[301, null]], "mymesh.rays.TrianglesTrianglesIntersection": [[302, null]], "mymesh.rays.TrianglesTrianglesIntersectionPts": [[303, null]], "mymesh.register": [[94, null]], "mymesh.register.AxisAlignImage": [[304, null]], "mymesh.register.AxisAlignPoints": [[305, null]], "mymesh.register.ICP": [[306, null]], "mymesh.register.Image2Image": [[307, null]], "mymesh.register.ImageOverlay": [[308, null]], "mymesh.register.Mesh2Mesh": [[309, null]], "mymesh.register.Point2Point": [[310, null]], "mymesh.register.R2d": [[311, null]], "mymesh.register.R3d": [[312, null]], "mymesh.register.S2d": [[313, null]], "mymesh.register.S3d": [[314, null]], "mymesh.register.Sh2d": [[315, null]], "mymesh.register.Sh3d": [[316, null]], "mymesh.register.T2d": [[317, null]], "mymesh.register.T3d": [[318, null]], "mymesh.register.affine": [[319, null]], "mymesh.register.affine2d": [[320, null]], "mymesh.register.closest_point_MSE": [[321, null]], "mymesh.register.dice": [[322, null]], "mymesh.register.hausdorff": [[323, null]], "mymesh.register.jaccard": [[324, null]], "mymesh.register.mutual_information": [[325, null]], "mymesh.register.optimize": [[326, null]], "mymesh.register.rigid": [[327, null]], "mymesh.register.rigid2d": [[328, null]], "mymesh.register.rotation": [[329, null]], "mymesh.register.rotation2d": [[330, null]], "mymesh.register.similarity": [[331, null]], "mymesh.register.similarity2d": [[332, null]], "mymesh.register.symmetric_closest_point_MSE": [[333, null]], "mymesh.register.transform_image": [[334, null]], "mymesh.register.transform_points": [[335, null]], "mymesh.register.translation": [[336, null]], "mymesh.register.translation2d": [[337, null]], "mymesh.tree": [[95, null]], "mymesh.tree.Edges2Quadtree": [[338, null]], "mymesh.tree.Function2Octree": [[339, null]], "mymesh.tree.Octree2Dual": [[340, null]], "mymesh.tree.Octree2Voxel": [[341, null]], "mymesh.tree.OctreeNode": [[342, null]], "mymesh.tree.OctreeNode.ContainsBoxes": [[343, null]], "mymesh.tree.OctreeNode.ContainsPts": [[344, null]], "mymesh.tree.OctreeNode.ContainsTris": [[345, null]], "mymesh.tree.OctreeNode.PointInNode": [[346, null]], "mymesh.tree.OctreeNode.PointsInNode": [[347, null]], "mymesh.tree.OctreeNode.clearData": [[348, null]], "mymesh.tree.OctreeNode.getLevel": [[349, null]], "mymesh.tree.OctreeNode.getLimits": [[350, null]], "mymesh.tree.OctreeNode.getMaxDepth": [[351, null]], "mymesh.tree.OctreeNode.getVertices": [[352, null]], "mymesh.tree.OctreeNode.hasChildren": [[353, null]], "mymesh.tree.OctreeNode.makeChildren": [[354, null]], "mymesh.tree.OctreeNode.makeChildrenBoxes": [[355, null]], "mymesh.tree.OctreeNode.makeChildrenPts": [[356, null]], "mymesh.tree.OctreeNode.makeChildrenTris": [[357, null]], "mymesh.tree.OctreeNode.prune": [[358, null]], "mymesh.tree.Points2Octree": [[359, null]], "mymesh.tree.Points2Quadtree": [[360, null]], "mymesh.tree.Print": [[361, null]], "mymesh.tree.Quadtree2Dual": [[362, null]], "mymesh.tree.Quadtree2Pixel": [[363, null]], "mymesh.tree.QuadtreeNode": [[364, null]], "mymesh.tree.QuadtreeNode.ContainsEdges": [[365, null]], "mymesh.tree.QuadtreeNode.ContainsPts": [[366, null]], "mymesh.tree.QuadtreeNode.PointInNode": [[367, null]], "mymesh.tree.QuadtreeNode.PointsInNode": [[368, null]], "mymesh.tree.QuadtreeNode.clearData": [[369, null]], "mymesh.tree.QuadtreeNode.getLevel": [[370, null]], "mymesh.tree.QuadtreeNode.getLimits": [[371, null]], "mymesh.tree.QuadtreeNode.getMaxDepth": [[372, null]], "mymesh.tree.QuadtreeNode.getVertices": [[373, null]], "mymesh.tree.QuadtreeNode.hasChildren": [[374, null]], "mymesh.tree.QuadtreeNode.makeChildren": [[375, null]], "mymesh.tree.QuadtreeNode.makeChildrenEdges": [[376, null]], "mymesh.tree.QuadtreeNode.makeChildrenPts": [[377, null]], "mymesh.tree.QuadtreeNode.prune": [[378, null]], "mymesh.tree.SearchOctree": [[379, null]], "mymesh.tree.SearchOctreeTri": [[380, null]], "mymesh.tree.Surface2Octree": [[381, null]], "mymesh.tree.TreeNode": [[382, null]], "mymesh.tree.TreeNode.clearData": [[383, null]], "mymesh.tree.TreeNode.getLevel": [[384, null]], "mymesh.tree.TreeNode.getMaxDepth": [[385, null]], "mymesh.tree.TreeNode.hasChildren": [[386, null]], "mymesh.tree.TreeNode.prune": [[387, null]], "mymesh.tree.Voxel2Octree": [[388, null]], "mymesh.tree.getAllLeaf": [[389, null]], "mymesh.utils": [[96, null]], "mymesh.utils.AABB": [[390, null]], "mymesh.utils.BaryTet": [[391, null]], "mymesh.utils.BaryTri": [[392, null]], "mymesh.utils.BaryTris": [[393, null]], "mymesh.utils.CalcFaceNormal": [[394, null]], "mymesh.utils.Centroids": [[395, null]], "mymesh.utils.CleanupDegenerateElements": [[396, null]], "mymesh.utils.DeleteDegenerateElements": [[397, null]], "mymesh.utils.DeleteDuplicateNodes": [[398, null]], "mymesh.utils.DetectFeatures": [[399, null]], "mymesh.utils.DilateVoxel": [[400, null]], "mymesh.utils.ErodeVoxel": [[401, null]], "mymesh.utils.ExtractRagged": [[402, null]], "mymesh.utils.Face2NodeNormal": [[403, null]], "mymesh.utils.MVBB": [[404, null]], "mymesh.utils.MergeMesh": [[405, null]], "mymesh.utils.MirrorMesh": [[406, null]], "mymesh.utils.PadRagged": [[407, null]], "mymesh.utils.Project2Surface": [[408, null]], "mymesh.utils.RelabelNodes": [[409, null]], "mymesh.utils.SortRaggedByLength": [[410, null]], "mymesh.utils.SplitRaggedByLength": [[411, null]], "mymesh.utils.SurfMapping": [[412, null]], "mymesh.utils.TetMeshVol": [[413, null]], "mymesh.utils.TriSurfVol": [[414, null]], "mymesh.utils.ValueMapping": [[415, null]], "mymesh.utils.getConnectedElements": [[416, null]], "mymesh.utils.getConnectedNodes": [[417, null]], "mymesh.utils.getElemConnectivity": [[418, null]], "mymesh.utils.getElemNeighbors": [[419, null]], "mymesh.utils.getNodeNeighborhood": [[420, null]], "mymesh.utils.getNodeNeighborhoodByRadius": [[421, null]], "mymesh.utils.getNodeNeighbors": [[422, null]], "mymesh.utils.identify_elem": [[423, null]], "mymesh.utils.identify_type": [[424, null]], "mymesh.utils.makePyramidLayer": [[425, null]], "mymesh.visualize": [[97, null]], "mymesh.visualize.FaceColor": [[426, null]], "mymesh.visualize.GetTheme": [[427, null]], "mymesh.visualize.ParseColor": [[428, null]], "mymesh.visualize.Subplot": [[429, null]], "mymesh.visualize.View": [[430, null]], "mymesh.visualize.set_vispy_backend": [[431, null]]}, "docnames": ["api", "dev", "dev/CHANGELOG", "dev/dev_guide", "examples/MeshAnalysis/demo_curvature", "examples/MeshAnalysis/index", "examples/MeshAnalysis/sg_execution_times", "examples/MeshGeneration/demo_heart", "examples/MeshGeneration/demo_mixed-top", "examples/MeshGeneration/demo_pasta", "examples/MeshGeneration/index", "examples/MeshGeneration/sg_execution_times", "examples/index", "examples/sg_execution_times", "generated/mymesh.booleans", "generated/mymesh.contour", "generated/mymesh.converter", "generated/mymesh.curvature", "generated/mymesh.delaunay", "generated/mymesh.demo_image", "generated/mymesh.demo_mesh", "generated/mymesh.image", "generated/mymesh.implicit", "generated/mymesh.improvement", "generated/mymesh.mesh", "generated/mymesh.mesh.mesh.Boundary", "generated/mymesh.mesh.mesh.BoundaryConn", "generated/mymesh.mesh.mesh.BoundaryNodes", "generated/mymesh.mesh.mesh.Centroids", "generated/mymesh.mesh.mesh.Clip", "generated/mymesh.mesh.mesh.Contour", "generated/mymesh.mesh.mesh.CreateBoundaryLayer", "generated/mymesh.mesh.mesh.Crop", "generated/mymesh.mesh.mesh.EdgeConn", "generated/mymesh.mesh.mesh.EdgeElemConn", "generated/mymesh.mesh.mesh.Edges", "generated/mymesh.mesh.mesh.ElemConn", "generated/mymesh.mesh.mesh.ElemNeighbors", "generated/mymesh.mesh.mesh.ElemNormals", "generated/mymesh.mesh.mesh.ElemType", "generated/mymesh.mesh.mesh.EulerCharacteristic", "generated/mymesh.mesh.mesh.FaceConn", "generated/mymesh.mesh.mesh.FaceElemConn", "generated/mymesh.mesh.mesh.Faces", "generated/mymesh.mesh.mesh.Genus", "generated/mymesh.mesh.mesh.MeshNodes", "generated/mymesh.mesh.mesh.Mirror", "generated/mymesh.mesh.mesh.ND", "generated/mymesh.mesh.mesh.NEdge", "generated/mymesh.mesh.mesh.NElem", "generated/mymesh.mesh.mesh.NFace", "generated/mymesh.mesh.mesh.NNode", "generated/mymesh.mesh.mesh.NodeNeighbors", "generated/mymesh.mesh.mesh.NodeNormals", "generated/mymesh.mesh.mesh.NodeNormalsMethod", "generated/mymesh.mesh.mesh.RenumberFacesBySet", "generated/mymesh.mesh.mesh.RenumberNodesBySet", "generated/mymesh.mesh.mesh.SurfConn", "generated/mymesh.mesh.mesh.SurfElemConn", "generated/mymesh.mesh.mesh.SurfNodeNeighbors", "generated/mymesh.mesh.mesh.SurfNodes", "generated/mymesh.mesh.mesh.Surface", "generated/mymesh.mesh.mesh.Threshold", "generated/mymesh.mesh.mesh.aabb", "generated/mymesh.mesh.mesh.addEdges", "generated/mymesh.mesh.mesh.addElems", "generated/mymesh.mesh.mesh.addFaces", "generated/mymesh.mesh.mesh.addNodes", "generated/mymesh.mesh.mesh.bounds", "generated/mymesh.mesh.mesh.cells", "generated/mymesh.mesh.mesh.cleanup", "generated/mymesh.mesh.mesh.copy", "generated/mymesh.mesh.mesh.getCurvature", "generated/mymesh.mesh.mesh.getQuality", "generated/mymesh.mesh.mesh.identify_type", "generated/mymesh.mesh.mesh.imread", "generated/mymesh.mesh.mesh.merge", "generated/mymesh.mesh.mesh.mesh2dmesh", "generated/mymesh.mesh.mesh.meshio2mymesh", "generated/mymesh.mesh.mesh.mvbb", "generated/mymesh.mesh.mesh.mymesh2meshio", "generated/mymesh.mesh.mesh.plot", "generated/mymesh.mesh.mesh.points", "generated/mymesh.mesh.mesh.read", "generated/mymesh.mesh.mesh.removeElems", "generated/mymesh.mesh.mesh.reset", "generated/mymesh.mesh.mesh.to_meshio", "generated/mymesh.mesh.mesh.to_pyvista", "generated/mymesh.mesh.mesh.validate", "generated/mymesh.mesh.mesh.view", "generated/mymesh.mesh.mesh.write", "generated/mymesh.primitives", "generated/mymesh.quality", "generated/mymesh.rays", "generated/mymesh.register", "generated/mymesh.tree", "generated/mymesh.utils", "generated/mymesh.visualize", "generated/submodules/mymesh.booleans.MeshBooleans", "generated/submodules/mymesh.booleans.SplitMesh", "generated/submodules/mymesh.contour.Adaptive", "generated/submodules/mymesh.contour.MarchingCubes", "generated/submodules/mymesh.contour.MarchingCubesImage", "generated/submodules/mymesh.contour.MarchingElements", "generated/submodules/mymesh.contour.MarchingSquares", "generated/submodules/mymesh.contour.MarchingSquaresImage", "generated/submodules/mymesh.contour.MarchingTetrahedra", "generated/submodules/mymesh.contour.MarchingTriangles", "generated/submodules/mymesh.converter.EdgesByElement", "generated/submodules/mymesh.converter.edge2quadratic", "generated/submodules/mymesh.converter.edge32linear", "generated/submodules/mymesh.converter.edges2unique", "generated/submodules/mymesh.converter.faces2surface", "generated/submodules/mymesh.converter.faces2unique", "generated/submodules/mymesh.converter.hex202linear", "generated/submodules/mymesh.converter.hex2edges", "generated/submodules/mymesh.converter.hex2faces", "generated/submodules/mymesh.converter.hex2quadratic", "generated/submodules/mymesh.converter.hex2tet", "generated/submodules/mymesh.converter.hexsubdivide", "generated/submodules/mymesh.converter.im2voxel", "generated/submodules/mymesh.converter.linear2quadratic", "generated/submodules/mymesh.converter.mesh2im", "generated/submodules/mymesh.converter.polygon2edges", "generated/submodules/mymesh.converter.pyr132linear", "generated/submodules/mymesh.converter.pyr2quadratic", "generated/submodules/mymesh.converter.pyramid2edges", "generated/submodules/mymesh.converter.pyramid2faces", "generated/submodules/mymesh.converter.pyramid2tet", "generated/submodules/mymesh.converter.quad2edges", "generated/submodules/mymesh.converter.quad2quadratic", "generated/submodules/mymesh.converter.quad2tri", "generated/submodules/mymesh.converter.quad82linear", "generated/submodules/mymesh.converter.quadratic2linear", "generated/submodules/mymesh.converter.solid2edges", "generated/submodules/mymesh.converter.solid2faces", "generated/submodules/mymesh.converter.solid2surface", "generated/submodules/mymesh.converter.solid2tets", "generated/submodules/mymesh.converter.surf2dual", "generated/submodules/mymesh.converter.surf2edges", "generated/submodules/mymesh.converter.surf2tris", "generated/submodules/mymesh.converter.surf2voxel", "generated/submodules/mymesh.converter.tet102linear", "generated/submodules/mymesh.converter.tet2edges", "generated/submodules/mymesh.converter.tet2faces", "generated/submodules/mymesh.converter.tet2quadratic", "generated/submodules/mymesh.converter.tetsubdivide", "generated/submodules/mymesh.converter.tri2edges", "generated/submodules/mymesh.converter.tri2quadratic", "generated/submodules/mymesh.converter.tri62linear", "generated/submodules/mymesh.converter.voxel2im", "generated/submodules/mymesh.converter.wdg152linear", "generated/submodules/mymesh.converter.wdg2quadratic", "generated/submodules/mymesh.converter.wedge2edges", "generated/submodules/mymesh.converter.wedge2faces", "generated/submodules/mymesh.converter.wedge2tet", "generated/submodules/mymesh.curvature.AnalyticalCurvature", "generated/submodules/mymesh.curvature.CubicFit", "generated/submodules/mymesh.curvature.Curvedness", "generated/submodules/mymesh.curvature.GaussianCurvature", "generated/submodules/mymesh.curvature.ImageCurvature", "generated/submodules/mymesh.curvature.MeanCurvature", "generated/submodules/mymesh.curvature.NormCurve", "generated/submodules/mymesh.curvature.QuadFit", "generated/submodules/mymesh.curvature.ShapeCategory", "generated/submodules/mymesh.curvature.ShapeIndex", "generated/submodules/mymesh.delaunay.Alpha2d", "generated/submodules/mymesh.delaunay.Alpha3d", "generated/submodules/mymesh.delaunay.AlphaPeel3d", "generated/submodules/mymesh.delaunay.AlphaShape", "generated/submodules/mymesh.delaunay.BowyerWatson2d", "generated/submodules/mymesh.delaunay.BowyerWatson3d", "generated/submodules/mymesh.delaunay.ConvexHull", "generated/submodules/mymesh.delaunay.FanTriangulation", "generated/submodules/mymesh.delaunay.GiftWrapping", "generated/submodules/mymesh.delaunay.SciPy", "generated/submodules/mymesh.delaunay.Tetrahedralize", "generated/submodules/mymesh.delaunay.Triangle", "generated/submodules/mymesh.delaunay.Triangulate", "generated/submodules/mymesh.image.PixelMesh", "generated/submodules/mymesh.image.SurfaceMesh", "generated/submodules/mymesh.image.SurfaceNodeOptimization", "generated/submodules/mymesh.image.TetMesh", "generated/submodules/mymesh.image.VoxelMesh", "generated/submodules/mymesh.image.read", "generated/submodules/mymesh.image.write", "generated/submodules/mymesh.implicit.SurfaceMesh", "generated/submodules/mymesh.implicit.SurfaceNodeOptimization", "generated/submodules/mymesh.implicit.TetMesh", "generated/submodules/mymesh.implicit.VoxelMesh", "generated/submodules/mymesh.implicit.box", "generated/submodules/mymesh.implicit.cylinder", "generated/submodules/mymesh.implicit.diamond", "generated/submodules/mymesh.implicit.diff", "generated/submodules/mymesh.implicit.difff", "generated/submodules/mymesh.implicit.diffs", "generated/submodules/mymesh.implicit.grid2fun", "generated/submodules/mymesh.implicit.grid2grad", "generated/submodules/mymesh.implicit.gyroid", "generated/submodules/mymesh.implicit.intersection", "generated/submodules/mymesh.implicit.intersectionf", "generated/submodules/mymesh.implicit.intersections", "generated/submodules/mymesh.implicit.lidinoid", "generated/submodules/mymesh.implicit.mesh2udf", "generated/submodules/mymesh.implicit.mixed_topology", "generated/submodules/mymesh.implicit.neovius", "generated/submodules/mymesh.implicit.offset", "generated/submodules/mymesh.implicit.plane", "generated/submodules/mymesh.implicit.primitive", "generated/submodules/mymesh.implicit.rMax", "generated/submodules/mymesh.implicit.rMin", "generated/submodules/mymesh.implicit.sphere", "generated/submodules/mymesh.implicit.thicken", "generated/submodules/mymesh.implicit.thickenf", "generated/submodules/mymesh.implicit.thickens", "generated/submodules/mymesh.implicit.torus", "generated/submodules/mymesh.implicit.tpms", "generated/submodules/mymesh.implicit.union", "generated/submodules/mymesh.implicit.unionf", "generated/submodules/mymesh.implicit.unions", "generated/submodules/mymesh.implicit.xplane", "generated/submodules/mymesh.implicit.yplane", "generated/submodules/mymesh.implicit.zplane", "generated/submodules/mymesh.improvement.Contract", "generated/submodules/mymesh.improvement.GeoTransformSmoothing", "generated/submodules/mymesh.improvement.LocalLaplacianSmoothing", "generated/submodules/mymesh.improvement.NodeSpringSmoothing", "generated/submodules/mymesh.improvement.SegmentSpringSmoothing", "generated/submodules/mymesh.improvement.SmartLaplacianSmoothing", "generated/submodules/mymesh.improvement.TangentialLaplacianSmoothing", "generated/submodules/mymesh.improvement.TetFlip", "generated/submodules/mymesh.improvement.TetImprove", "generated/submodules/mymesh.improvement.TetSplit", "generated/submodules/mymesh.primitives.Box", "generated/submodules/mymesh.primitives.Circle", "generated/submodules/mymesh.primitives.CirclePt", "generated/submodules/mymesh.primitives.Cylinder", "generated/submodules/mymesh.primitives.Extrude", "generated/submodules/mymesh.primitives.Grid", "generated/submodules/mymesh.primitives.Grid2D", "generated/submodules/mymesh.primitives.Line", "generated/submodules/mymesh.primitives.Multiline", "generated/submodules/mymesh.primitives.Plane", "generated/submodules/mymesh.primitives.Revolve", "generated/submodules/mymesh.primitives.Sphere", "generated/submodules/mymesh.primitives.Torus", "generated/submodules/mymesh.quality.Area", "generated/submodules/mymesh.quality.AspectRatio", "generated/submodules/mymesh.quality.InverseOrthogonalQuality", "generated/submodules/mymesh.quality.InverseOrthogonality", "generated/submodules/mymesh.quality.MaxDihedral", "generated/submodules/mymesh.quality.MeanRatio", "generated/submodules/mymesh.quality.MinDihedral", "generated/submodules/mymesh.quality.OrthogonalQuality", "generated/submodules/mymesh.quality.Orthogonality", "generated/submodules/mymesh.quality.Skewness", "generated/submodules/mymesh.quality.SurfDihedralAngles", "generated/submodules/mymesh.quality.Volume", "generated/submodules/mymesh.quality.dihedralAngles", "generated/submodules/mymesh.quality.equiangular_skewness", "generated/submodules/mymesh.quality.quad_skewness", "generated/submodules/mymesh.quality.tet_circumradius", "generated/submodules/mymesh.quality.tet_vol_skewness", "generated/submodules/mymesh.quality.tet_volume", "generated/submodules/mymesh.quality.tri_area", "generated/submodules/mymesh.quality.tri_skewness", "generated/submodules/mymesh.rays.BoundaryBoundaryIntersection", "generated/submodules/mymesh.rays.BoxBoxIntersection", "generated/submodules/mymesh.rays.BoxTrianglesIntersection", "generated/submodules/mymesh.rays.PlaneBoxIntersection", "generated/submodules/mymesh.rays.PlaneSurfIntersection", "generated/submodules/mymesh.rays.PlaneTriangleIntersection", "generated/submodules/mymesh.rays.PlaneTrianglesIntersection", "generated/submodules/mymesh.rays.PointInBoundary", "generated/submodules/mymesh.rays.PointInBox", "generated/submodules/mymesh.rays.PointInBox2D", "generated/submodules/mymesh.rays.PointInSurf", "generated/submodules/mymesh.rays.PointInTet", "generated/submodules/mymesh.rays.PointInTri", "generated/submodules/mymesh.rays.PointsInSurf", "generated/submodules/mymesh.rays.PointsInTris", "generated/submodules/mymesh.rays.PointsInVoxel", "generated/submodules/mymesh.rays.RayBoundaryIntersection", "generated/submodules/mymesh.rays.RayBoxIntersection", "generated/submodules/mymesh.rays.RayBoxesIntersection", "generated/submodules/mymesh.rays.RayOctreeIntersection", "generated/submodules/mymesh.rays.RaySegmentIntersection", "generated/submodules/mymesh.rays.RaySegmentsIntersection", "generated/submodules/mymesh.rays.RaySurfIntersection", "generated/submodules/mymesh.rays.RayTriangleIntersection", "generated/submodules/mymesh.rays.RayTrianglesIntersection", "generated/submodules/mymesh.rays.RaysSurfIntersection", "generated/submodules/mymesh.rays.RaysTrianglesIntersection", "generated/submodules/mymesh.rays.SegmentBox2DIntersection", "generated/submodules/mymesh.rays.SegmentBoxIntersection", "generated/submodules/mymesh.rays.SegmentSegmentIntersection", "generated/submodules/mymesh.rays.SegmentsSegmentsIntersection", "generated/submodules/mymesh.rays.SurfSelfIntersection", "generated/submodules/mymesh.rays.SurfSurfIntersection", "generated/submodules/mymesh.rays.TriangleBoxIntersection", "generated/submodules/mymesh.rays.TriangleTriangleIntersection", "generated/submodules/mymesh.rays.TriangleTriangleIntersectionPt", "generated/submodules/mymesh.rays.TrianglesTrianglesIntersection", "generated/submodules/mymesh.rays.TrianglesTrianglesIntersectionPts", "generated/submodules/mymesh.register.AxisAlignImage", "generated/submodules/mymesh.register.AxisAlignPoints", "generated/submodules/mymesh.register.ICP", "generated/submodules/mymesh.register.Image2Image", "generated/submodules/mymesh.register.ImageOverlay", "generated/submodules/mymesh.register.Mesh2Mesh", "generated/submodules/mymesh.register.Point2Point", "generated/submodules/mymesh.register.R2d", "generated/submodules/mymesh.register.R3d", "generated/submodules/mymesh.register.S2d", "generated/submodules/mymesh.register.S3d", "generated/submodules/mymesh.register.Sh2d", "generated/submodules/mymesh.register.Sh3d", "generated/submodules/mymesh.register.T2d", "generated/submodules/mymesh.register.T3d", "generated/submodules/mymesh.register.affine", "generated/submodules/mymesh.register.affine2d", "generated/submodules/mymesh.register.closest_point_MSE", "generated/submodules/mymesh.register.dice", "generated/submodules/mymesh.register.hausdorff", "generated/submodules/mymesh.register.jaccard", "generated/submodules/mymesh.register.mutual_information", "generated/submodules/mymesh.register.optimize", "generated/submodules/mymesh.register.rigid", "generated/submodules/mymesh.register.rigid2d", "generated/submodules/mymesh.register.rotation", "generated/submodules/mymesh.register.rotation2d", "generated/submodules/mymesh.register.similarity", "generated/submodules/mymesh.register.similarity2d", "generated/submodules/mymesh.register.symmetric_closest_point_MSE", "generated/submodules/mymesh.register.transform_image", "generated/submodules/mymesh.register.transform_points", "generated/submodules/mymesh.register.translation", "generated/submodules/mymesh.register.translation2d", "generated/submodules/mymesh.tree.Edges2Quadtree", "generated/submodules/mymesh.tree.Function2Octree", "generated/submodules/mymesh.tree.Octree2Dual", "generated/submodules/mymesh.tree.Octree2Voxel", "generated/submodules/mymesh.tree.OctreeNode", "generated/submodules/mymesh.tree.OctreeNode.ContainsBoxes", "generated/submodules/mymesh.tree.OctreeNode.ContainsPts", "generated/submodules/mymesh.tree.OctreeNode.ContainsTris", "generated/submodules/mymesh.tree.OctreeNode.PointInNode", "generated/submodules/mymesh.tree.OctreeNode.PointsInNode", "generated/submodules/mymesh.tree.OctreeNode.clearData", "generated/submodules/mymesh.tree.OctreeNode.getLevel", "generated/submodules/mymesh.tree.OctreeNode.getLimits", "generated/submodules/mymesh.tree.OctreeNode.getMaxDepth", "generated/submodules/mymesh.tree.OctreeNode.getVertices", "generated/submodules/mymesh.tree.OctreeNode.hasChildren", "generated/submodules/mymesh.tree.OctreeNode.makeChildren", "generated/submodules/mymesh.tree.OctreeNode.makeChildrenBoxes", "generated/submodules/mymesh.tree.OctreeNode.makeChildrenPts", "generated/submodules/mymesh.tree.OctreeNode.makeChildrenTris", "generated/submodules/mymesh.tree.OctreeNode.prune", "generated/submodules/mymesh.tree.Points2Octree", "generated/submodules/mymesh.tree.Points2Quadtree", "generated/submodules/mymesh.tree.Print", "generated/submodules/mymesh.tree.Quadtree2Dual", "generated/submodules/mymesh.tree.Quadtree2Pixel", "generated/submodules/mymesh.tree.QuadtreeNode", "generated/submodules/mymesh.tree.QuadtreeNode.ContainsEdges", "generated/submodules/mymesh.tree.QuadtreeNode.ContainsPts", "generated/submodules/mymesh.tree.QuadtreeNode.PointInNode", "generated/submodules/mymesh.tree.QuadtreeNode.PointsInNode", "generated/submodules/mymesh.tree.QuadtreeNode.clearData", "generated/submodules/mymesh.tree.QuadtreeNode.getLevel", "generated/submodules/mymesh.tree.QuadtreeNode.getLimits", "generated/submodules/mymesh.tree.QuadtreeNode.getMaxDepth", "generated/submodules/mymesh.tree.QuadtreeNode.getVertices", "generated/submodules/mymesh.tree.QuadtreeNode.hasChildren", "generated/submodules/mymesh.tree.QuadtreeNode.makeChildren", "generated/submodules/mymesh.tree.QuadtreeNode.makeChildrenEdges", "generated/submodules/mymesh.tree.QuadtreeNode.makeChildrenPts", "generated/submodules/mymesh.tree.QuadtreeNode.prune", "generated/submodules/mymesh.tree.SearchOctree", "generated/submodules/mymesh.tree.SearchOctreeTri", "generated/submodules/mymesh.tree.Surface2Octree", "generated/submodules/mymesh.tree.TreeNode", "generated/submodules/mymesh.tree.TreeNode.clearData", "generated/submodules/mymesh.tree.TreeNode.getLevel", "generated/submodules/mymesh.tree.TreeNode.getMaxDepth", "generated/submodules/mymesh.tree.TreeNode.hasChildren", "generated/submodules/mymesh.tree.TreeNode.prune", "generated/submodules/mymesh.tree.Voxel2Octree", "generated/submodules/mymesh.tree.getAllLeaf", "generated/submodules/mymesh.utils.AABB", "generated/submodules/mymesh.utils.BaryTet", "generated/submodules/mymesh.utils.BaryTri", "generated/submodules/mymesh.utils.BaryTris", "generated/submodules/mymesh.utils.CalcFaceNormal", "generated/submodules/mymesh.utils.Centroids", "generated/submodules/mymesh.utils.CleanupDegenerateElements", "generated/submodules/mymesh.utils.DeleteDegenerateElements", "generated/submodules/mymesh.utils.DeleteDuplicateNodes", "generated/submodules/mymesh.utils.DetectFeatures", "generated/submodules/mymesh.utils.DilateVoxel", "generated/submodules/mymesh.utils.ErodeVoxel", "generated/submodules/mymesh.utils.ExtractRagged", "generated/submodules/mymesh.utils.Face2NodeNormal", "generated/submodules/mymesh.utils.MVBB", "generated/submodules/mymesh.utils.MergeMesh", "generated/submodules/mymesh.utils.MirrorMesh", "generated/submodules/mymesh.utils.PadRagged", "generated/submodules/mymesh.utils.Project2Surface", "generated/submodules/mymesh.utils.RelabelNodes", "generated/submodules/mymesh.utils.SortRaggedByLength", "generated/submodules/mymesh.utils.SplitRaggedByLength", "generated/submodules/mymesh.utils.SurfMapping", "generated/submodules/mymesh.utils.TetMeshVol", "generated/submodules/mymesh.utils.TriSurfVol", "generated/submodules/mymesh.utils.ValueMapping", "generated/submodules/mymesh.utils.getConnectedElements", "generated/submodules/mymesh.utils.getConnectedNodes", "generated/submodules/mymesh.utils.getElemConnectivity", "generated/submodules/mymesh.utils.getElemNeighbors", "generated/submodules/mymesh.utils.getNodeNeighborhood", "generated/submodules/mymesh.utils.getNodeNeighborhoodByRadius", "generated/submodules/mymesh.utils.getNodeNeighbors", "generated/submodules/mymesh.utils.identify_elem", "generated/submodules/mymesh.utils.identify_type", "generated/submodules/mymesh.utils.makePyramidLayer", "generated/submodules/mymesh.visualize.FaceColor", "generated/submodules/mymesh.visualize.GetTheme", "generated/submodules/mymesh.visualize.ParseColor", "generated/submodules/mymesh.visualize.Subplot", "generated/submodules/mymesh.visualize.View", "generated/submodules/mymesh.visualize.set_vispy_backend", "guide", "guide/connectivity", "guide/csg", "guide/elem_types", "guide/getting_started", "guide/image_meshing", "guide/implicit_meshing", "guide/installation", "guide/io", "guide/matlab", "guide/mesh_class", "guide/ref", "guide/what_mesh", "index", "sg_execution_times", "submodules/mymesh.demo_image", "submodules/mymesh.demo_mesh", "theory", "theory/contour", "theory/curvature", "theory/delaunay", "theory/edgecontract", "theory/flips23", "theory/implicit", "theory/improvement", "theory/laplaciansmooth", "theory/octree", "theory/rays", "theory/springsmooth"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["api.rst", "dev.rst", "dev/CHANGELOG.md", "dev/dev_guide.rst", "examples/MeshAnalysis/demo_curvature.rst", "examples/MeshAnalysis/index.rst", "examples/MeshAnalysis/sg_execution_times.rst", "examples/MeshGeneration/demo_heart.rst", "examples/MeshGeneration/demo_mixed-top.rst", "examples/MeshGeneration/demo_pasta.rst", "examples/MeshGeneration/index.rst", "examples/MeshGeneration/sg_execution_times.rst", "examples/index.rst", "examples/sg_execution_times.rst", "generated/mymesh.booleans.rst", "generated/mymesh.contour.rst", "generated/mymesh.converter.rst", "generated/mymesh.curvature.rst", "generated/mymesh.delaunay.rst", "generated/mymesh.demo_image.rst", "generated/mymesh.demo_mesh.rst", "generated/mymesh.image.rst", "generated/mymesh.implicit.rst", "generated/mymesh.improvement.rst", "generated/mymesh.mesh.rst", "generated/mymesh.mesh.mesh.Boundary.rst", "generated/mymesh.mesh.mesh.BoundaryConn.rst", "generated/mymesh.mesh.mesh.BoundaryNodes.rst", "generated/mymesh.mesh.mesh.Centroids.rst", "generated/mymesh.mesh.mesh.Clip.rst", "generated/mymesh.mesh.mesh.Contour.rst", "generated/mymesh.mesh.mesh.CreateBoundaryLayer.rst", "generated/mymesh.mesh.mesh.Crop.rst", "generated/mymesh.mesh.mesh.EdgeConn.rst", "generated/mymesh.mesh.mesh.EdgeElemConn.rst", "generated/mymesh.mesh.mesh.Edges.rst", "generated/mymesh.mesh.mesh.ElemConn.rst", "generated/mymesh.mesh.mesh.ElemNeighbors.rst", "generated/mymesh.mesh.mesh.ElemNormals.rst", "generated/mymesh.mesh.mesh.ElemType.rst", "generated/mymesh.mesh.mesh.EulerCharacteristic.rst", "generated/mymesh.mesh.mesh.FaceConn.rst", "generated/mymesh.mesh.mesh.FaceElemConn.rst", "generated/mymesh.mesh.mesh.Faces.rst", "generated/mymesh.mesh.mesh.Genus.rst", "generated/mymesh.mesh.mesh.MeshNodes.rst", "generated/mymesh.mesh.mesh.Mirror.rst", "generated/mymesh.mesh.mesh.ND.rst", "generated/mymesh.mesh.mesh.NEdge.rst", "generated/mymesh.mesh.mesh.NElem.rst", "generated/mymesh.mesh.mesh.NFace.rst", "generated/mymesh.mesh.mesh.NNode.rst", "generated/mymesh.mesh.mesh.NodeNeighbors.rst", "generated/mymesh.mesh.mesh.NodeNormals.rst", "generated/mymesh.mesh.mesh.NodeNormalsMethod.rst", "generated/mymesh.mesh.mesh.RenumberFacesBySet.rst", "generated/mymesh.mesh.mesh.RenumberNodesBySet.rst", "generated/mymesh.mesh.mesh.SurfConn.rst", "generated/mymesh.mesh.mesh.SurfElemConn.rst", "generated/mymesh.mesh.mesh.SurfNodeNeighbors.rst", "generated/mymesh.mesh.mesh.SurfNodes.rst", "generated/mymesh.mesh.mesh.Surface.rst", "generated/mymesh.mesh.mesh.Threshold.rst", "generated/mymesh.mesh.mesh.aabb.rst", "generated/mymesh.mesh.mesh.addEdges.rst", "generated/mymesh.mesh.mesh.addElems.rst", "generated/mymesh.mesh.mesh.addFaces.rst", "generated/mymesh.mesh.mesh.addNodes.rst", "generated/mymesh.mesh.mesh.bounds.rst", "generated/mymesh.mesh.mesh.cells.rst", "generated/mymesh.mesh.mesh.cleanup.rst", "generated/mymesh.mesh.mesh.copy.rst", "generated/mymesh.mesh.mesh.getCurvature.rst", "generated/mymesh.mesh.mesh.getQuality.rst", "generated/mymesh.mesh.mesh.identify_type.rst", "generated/mymesh.mesh.mesh.imread.rst", "generated/mymesh.mesh.mesh.merge.rst", "generated/mymesh.mesh.mesh.mesh2dmesh.rst", "generated/mymesh.mesh.mesh.meshio2mymesh.rst", "generated/mymesh.mesh.mesh.mvbb.rst", "generated/mymesh.mesh.mesh.mymesh2meshio.rst", "generated/mymesh.mesh.mesh.plot.rst", "generated/mymesh.mesh.mesh.points.rst", "generated/mymesh.mesh.mesh.read.rst", "generated/mymesh.mesh.mesh.removeElems.rst", "generated/mymesh.mesh.mesh.reset.rst", "generated/mymesh.mesh.mesh.to_meshio.rst", "generated/mymesh.mesh.mesh.to_pyvista.rst", "generated/mymesh.mesh.mesh.validate.rst", "generated/mymesh.mesh.mesh.view.rst", "generated/mymesh.mesh.mesh.write.rst", "generated/mymesh.primitives.rst", "generated/mymesh.quality.rst", "generated/mymesh.rays.rst", "generated/mymesh.register.rst", "generated/mymesh.tree.rst", "generated/mymesh.utils.rst", "generated/mymesh.visualize.rst", "generated/submodules/mymesh.booleans.MeshBooleans.rst", "generated/submodules/mymesh.booleans.SplitMesh.rst", "generated/submodules/mymesh.contour.Adaptive.rst", "generated/submodules/mymesh.contour.MarchingCubes.rst", "generated/submodules/mymesh.contour.MarchingCubesImage.rst", "generated/submodules/mymesh.contour.MarchingElements.rst", "generated/submodules/mymesh.contour.MarchingSquares.rst", "generated/submodules/mymesh.contour.MarchingSquaresImage.rst", "generated/submodules/mymesh.contour.MarchingTetrahedra.rst", "generated/submodules/mymesh.contour.MarchingTriangles.rst", "generated/submodules/mymesh.converter.EdgesByElement.rst", "generated/submodules/mymesh.converter.edge2quadratic.rst", "generated/submodules/mymesh.converter.edge32linear.rst", "generated/submodules/mymesh.converter.edges2unique.rst", "generated/submodules/mymesh.converter.faces2surface.rst", "generated/submodules/mymesh.converter.faces2unique.rst", "generated/submodules/mymesh.converter.hex202linear.rst", "generated/submodules/mymesh.converter.hex2edges.rst", "generated/submodules/mymesh.converter.hex2faces.rst", "generated/submodules/mymesh.converter.hex2quadratic.rst", "generated/submodules/mymesh.converter.hex2tet.rst", "generated/submodules/mymesh.converter.hexsubdivide.rst", "generated/submodules/mymesh.converter.im2voxel.rst", "generated/submodules/mymesh.converter.linear2quadratic.rst", "generated/submodules/mymesh.converter.mesh2im.rst", "generated/submodules/mymesh.converter.polygon2edges.rst", "generated/submodules/mymesh.converter.pyr132linear.rst", "generated/submodules/mymesh.converter.pyr2quadratic.rst", "generated/submodules/mymesh.converter.pyramid2edges.rst", "generated/submodules/mymesh.converter.pyramid2faces.rst", "generated/submodules/mymesh.converter.pyramid2tet.rst", "generated/submodules/mymesh.converter.quad2edges.rst", "generated/submodules/mymesh.converter.quad2quadratic.rst", "generated/submodules/mymesh.converter.quad2tri.rst", "generated/submodules/mymesh.converter.quad82linear.rst", "generated/submodules/mymesh.converter.quadratic2linear.rst", "generated/submodules/mymesh.converter.solid2edges.rst", "generated/submodules/mymesh.converter.solid2faces.rst", "generated/submodules/mymesh.converter.solid2surface.rst", "generated/submodules/mymesh.converter.solid2tets.rst", "generated/submodules/mymesh.converter.surf2dual.rst", "generated/submodules/mymesh.converter.surf2edges.rst", "generated/submodules/mymesh.converter.surf2tris.rst", "generated/submodules/mymesh.converter.surf2voxel.rst", "generated/submodules/mymesh.converter.tet102linear.rst", "generated/submodules/mymesh.converter.tet2edges.rst", "generated/submodules/mymesh.converter.tet2faces.rst", "generated/submodules/mymesh.converter.tet2quadratic.rst", "generated/submodules/mymesh.converter.tetsubdivide.rst", "generated/submodules/mymesh.converter.tri2edges.rst", "generated/submodules/mymesh.converter.tri2quadratic.rst", "generated/submodules/mymesh.converter.tri62linear.rst", "generated/submodules/mymesh.converter.voxel2im.rst", "generated/submodules/mymesh.converter.wdg152linear.rst", "generated/submodules/mymesh.converter.wdg2quadratic.rst", "generated/submodules/mymesh.converter.wedge2edges.rst", "generated/submodules/mymesh.converter.wedge2faces.rst", "generated/submodules/mymesh.converter.wedge2tet.rst", "generated/submodules/mymesh.curvature.AnalyticalCurvature.rst", "generated/submodules/mymesh.curvature.CubicFit.rst", "generated/submodules/mymesh.curvature.Curvedness.rst", "generated/submodules/mymesh.curvature.GaussianCurvature.rst", "generated/submodules/mymesh.curvature.ImageCurvature.rst", "generated/submodules/mymesh.curvature.MeanCurvature.rst", "generated/submodules/mymesh.curvature.NormCurve.rst", "generated/submodules/mymesh.curvature.QuadFit.rst", "generated/submodules/mymesh.curvature.ShapeCategory.rst", "generated/submodules/mymesh.curvature.ShapeIndex.rst", "generated/submodules/mymesh.delaunay.Alpha2d.rst", "generated/submodules/mymesh.delaunay.Alpha3d.rst", "generated/submodules/mymesh.delaunay.AlphaPeel3d.rst", "generated/submodules/mymesh.delaunay.AlphaShape.rst", "generated/submodules/mymesh.delaunay.BowyerWatson2d.rst", "generated/submodules/mymesh.delaunay.BowyerWatson3d.rst", "generated/submodules/mymesh.delaunay.ConvexHull.rst", "generated/submodules/mymesh.delaunay.FanTriangulation.rst", "generated/submodules/mymesh.delaunay.GiftWrapping.rst", "generated/submodules/mymesh.delaunay.SciPy.rst", "generated/submodules/mymesh.delaunay.Tetrahedralize.rst", "generated/submodules/mymesh.delaunay.Triangle.rst", "generated/submodules/mymesh.delaunay.Triangulate.rst", "generated/submodules/mymesh.image.PixelMesh.rst", "generated/submodules/mymesh.image.SurfaceMesh.rst", "generated/submodules/mymesh.image.SurfaceNodeOptimization.rst", "generated/submodules/mymesh.image.TetMesh.rst", "generated/submodules/mymesh.image.VoxelMesh.rst", "generated/submodules/mymesh.image.read.rst", "generated/submodules/mymesh.image.write.rst", "generated/submodules/mymesh.implicit.SurfaceMesh.rst", "generated/submodules/mymesh.implicit.SurfaceNodeOptimization.rst", "generated/submodules/mymesh.implicit.TetMesh.rst", "generated/submodules/mymesh.implicit.VoxelMesh.rst", "generated/submodules/mymesh.implicit.box.rst", "generated/submodules/mymesh.implicit.cylinder.rst", "generated/submodules/mymesh.implicit.diamond.rst", "generated/submodules/mymesh.implicit.diff.rst", "generated/submodules/mymesh.implicit.difff.rst", "generated/submodules/mymesh.implicit.diffs.rst", "generated/submodules/mymesh.implicit.grid2fun.rst", "generated/submodules/mymesh.implicit.grid2grad.rst", "generated/submodules/mymesh.implicit.gyroid.rst", "generated/submodules/mymesh.implicit.intersection.rst", "generated/submodules/mymesh.implicit.intersectionf.rst", "generated/submodules/mymesh.implicit.intersections.rst", "generated/submodules/mymesh.implicit.lidinoid.rst", "generated/submodules/mymesh.implicit.mesh2udf.rst", "generated/submodules/mymesh.implicit.mixed_topology.rst", "generated/submodules/mymesh.implicit.neovius.rst", "generated/submodules/mymesh.implicit.offset.rst", "generated/submodules/mymesh.implicit.plane.rst", "generated/submodules/mymesh.implicit.primitive.rst", "generated/submodules/mymesh.implicit.rMax.rst", "generated/submodules/mymesh.implicit.rMin.rst", "generated/submodules/mymesh.implicit.sphere.rst", "generated/submodules/mymesh.implicit.thicken.rst", "generated/submodules/mymesh.implicit.thickenf.rst", "generated/submodules/mymesh.implicit.thickens.rst", "generated/submodules/mymesh.implicit.torus.rst", "generated/submodules/mymesh.implicit.tpms.rst", "generated/submodules/mymesh.implicit.union.rst", "generated/submodules/mymesh.implicit.unionf.rst", "generated/submodules/mymesh.implicit.unions.rst", "generated/submodules/mymesh.implicit.xplane.rst", "generated/submodules/mymesh.implicit.yplane.rst", "generated/submodules/mymesh.implicit.zplane.rst", "generated/submodules/mymesh.improvement.Contract.rst", "generated/submodules/mymesh.improvement.GeoTransformSmoothing.rst", "generated/submodules/mymesh.improvement.LocalLaplacianSmoothing.rst", "generated/submodules/mymesh.improvement.NodeSpringSmoothing.rst", "generated/submodules/mymesh.improvement.SegmentSpringSmoothing.rst", "generated/submodules/mymesh.improvement.SmartLaplacianSmoothing.rst", "generated/submodules/mymesh.improvement.TangentialLaplacianSmoothing.rst", "generated/submodules/mymesh.improvement.TetFlip.rst", "generated/submodules/mymesh.improvement.TetImprove.rst", "generated/submodules/mymesh.improvement.TetSplit.rst", "generated/submodules/mymesh.primitives.Box.rst", "generated/submodules/mymesh.primitives.Circle.rst", "generated/submodules/mymesh.primitives.CirclePt.rst", "generated/submodules/mymesh.primitives.Cylinder.rst", "generated/submodules/mymesh.primitives.Extrude.rst", "generated/submodules/mymesh.primitives.Grid.rst", "generated/submodules/mymesh.primitives.Grid2D.rst", "generated/submodules/mymesh.primitives.Line.rst", "generated/submodules/mymesh.primitives.Multiline.rst", "generated/submodules/mymesh.primitives.Plane.rst", "generated/submodules/mymesh.primitives.Revolve.rst", "generated/submodules/mymesh.primitives.Sphere.rst", "generated/submodules/mymesh.primitives.Torus.rst", "generated/submodules/mymesh.quality.Area.rst", "generated/submodules/mymesh.quality.AspectRatio.rst", "generated/submodules/mymesh.quality.InverseOrthogonalQuality.rst", "generated/submodules/mymesh.quality.InverseOrthogonality.rst", "generated/submodules/mymesh.quality.MaxDihedral.rst", "generated/submodules/mymesh.quality.MeanRatio.rst", "generated/submodules/mymesh.quality.MinDihedral.rst", "generated/submodules/mymesh.quality.OrthogonalQuality.rst", "generated/submodules/mymesh.quality.Orthogonality.rst", "generated/submodules/mymesh.quality.Skewness.rst", "generated/submodules/mymesh.quality.SurfDihedralAngles.rst", "generated/submodules/mymesh.quality.Volume.rst", "generated/submodules/mymesh.quality.dihedralAngles.rst", "generated/submodules/mymesh.quality.equiangular_skewness.rst", "generated/submodules/mymesh.quality.quad_skewness.rst", "generated/submodules/mymesh.quality.tet_circumradius.rst", "generated/submodules/mymesh.quality.tet_vol_skewness.rst", "generated/submodules/mymesh.quality.tet_volume.rst", "generated/submodules/mymesh.quality.tri_area.rst", "generated/submodules/mymesh.quality.tri_skewness.rst", "generated/submodules/mymesh.rays.BoundaryBoundaryIntersection.rst", "generated/submodules/mymesh.rays.BoxBoxIntersection.rst", "generated/submodules/mymesh.rays.BoxTrianglesIntersection.rst", "generated/submodules/mymesh.rays.PlaneBoxIntersection.rst", "generated/submodules/mymesh.rays.PlaneSurfIntersection.rst", "generated/submodules/mymesh.rays.PlaneTriangleIntersection.rst", "generated/submodules/mymesh.rays.PlaneTrianglesIntersection.rst", "generated/submodules/mymesh.rays.PointInBoundary.rst", "generated/submodules/mymesh.rays.PointInBox.rst", "generated/submodules/mymesh.rays.PointInBox2D.rst", "generated/submodules/mymesh.rays.PointInSurf.rst", "generated/submodules/mymesh.rays.PointInTet.rst", "generated/submodules/mymesh.rays.PointInTri.rst", "generated/submodules/mymesh.rays.PointsInSurf.rst", "generated/submodules/mymesh.rays.PointsInTris.rst", "generated/submodules/mymesh.rays.PointsInVoxel.rst", "generated/submodules/mymesh.rays.RayBoundaryIntersection.rst", "generated/submodules/mymesh.rays.RayBoxIntersection.rst", "generated/submodules/mymesh.rays.RayBoxesIntersection.rst", "generated/submodules/mymesh.rays.RayOctreeIntersection.rst", "generated/submodules/mymesh.rays.RaySegmentIntersection.rst", "generated/submodules/mymesh.rays.RaySegmentsIntersection.rst", "generated/submodules/mymesh.rays.RaySurfIntersection.rst", "generated/submodules/mymesh.rays.RayTriangleIntersection.rst", "generated/submodules/mymesh.rays.RayTrianglesIntersection.rst", "generated/submodules/mymesh.rays.RaysSurfIntersection.rst", "generated/submodules/mymesh.rays.RaysTrianglesIntersection.rst", "generated/submodules/mymesh.rays.SegmentBox2DIntersection.rst", "generated/submodules/mymesh.rays.SegmentBoxIntersection.rst", "generated/submodules/mymesh.rays.SegmentSegmentIntersection.rst", "generated/submodules/mymesh.rays.SegmentsSegmentsIntersection.rst", "generated/submodules/mymesh.rays.SurfSelfIntersection.rst", "generated/submodules/mymesh.rays.SurfSurfIntersection.rst", "generated/submodules/mymesh.rays.TriangleBoxIntersection.rst", "generated/submodules/mymesh.rays.TriangleTriangleIntersection.rst", "generated/submodules/mymesh.rays.TriangleTriangleIntersectionPt.rst", "generated/submodules/mymesh.rays.TrianglesTrianglesIntersection.rst", "generated/submodules/mymesh.rays.TrianglesTrianglesIntersectionPts.rst", "generated/submodules/mymesh.register.AxisAlignImage.rst", "generated/submodules/mymesh.register.AxisAlignPoints.rst", "generated/submodules/mymesh.register.ICP.rst", "generated/submodules/mymesh.register.Image2Image.rst", "generated/submodules/mymesh.register.ImageOverlay.rst", "generated/submodules/mymesh.register.Mesh2Mesh.rst", "generated/submodules/mymesh.register.Point2Point.rst", "generated/submodules/mymesh.register.R2d.rst", "generated/submodules/mymesh.register.R3d.rst", "generated/submodules/mymesh.register.S2d.rst", "generated/submodules/mymesh.register.S3d.rst", "generated/submodules/mymesh.register.Sh2d.rst", "generated/submodules/mymesh.register.Sh3d.rst", "generated/submodules/mymesh.register.T2d.rst", "generated/submodules/mymesh.register.T3d.rst", "generated/submodules/mymesh.register.affine.rst", "generated/submodules/mymesh.register.affine2d.rst", "generated/submodules/mymesh.register.closest_point_MSE.rst", "generated/submodules/mymesh.register.dice.rst", "generated/submodules/mymesh.register.hausdorff.rst", "generated/submodules/mymesh.register.jaccard.rst", "generated/submodules/mymesh.register.mutual_information.rst", "generated/submodules/mymesh.register.optimize.rst", "generated/submodules/mymesh.register.rigid.rst", "generated/submodules/mymesh.register.rigid2d.rst", "generated/submodules/mymesh.register.rotation.rst", "generated/submodules/mymesh.register.rotation2d.rst", "generated/submodules/mymesh.register.similarity.rst", "generated/submodules/mymesh.register.similarity2d.rst", "generated/submodules/mymesh.register.symmetric_closest_point_MSE.rst", "generated/submodules/mymesh.register.transform_image.rst", "generated/submodules/mymesh.register.transform_points.rst", "generated/submodules/mymesh.register.translation.rst", "generated/submodules/mymesh.register.translation2d.rst", "generated/submodules/mymesh.tree.Edges2Quadtree.rst", "generated/submodules/mymesh.tree.Function2Octree.rst", "generated/submodules/mymesh.tree.Octree2Dual.rst", "generated/submodules/mymesh.tree.Octree2Voxel.rst", "generated/submodules/mymesh.tree.OctreeNode.rst", "generated/submodules/mymesh.tree.OctreeNode.ContainsBoxes.rst", "generated/submodules/mymesh.tree.OctreeNode.ContainsPts.rst", "generated/submodules/mymesh.tree.OctreeNode.ContainsTris.rst", "generated/submodules/mymesh.tree.OctreeNode.PointInNode.rst", "generated/submodules/mymesh.tree.OctreeNode.PointsInNode.rst", "generated/submodules/mymesh.tree.OctreeNode.clearData.rst", "generated/submodules/mymesh.tree.OctreeNode.getLevel.rst", "generated/submodules/mymesh.tree.OctreeNode.getLimits.rst", "generated/submodules/mymesh.tree.OctreeNode.getMaxDepth.rst", "generated/submodules/mymesh.tree.OctreeNode.getVertices.rst", "generated/submodules/mymesh.tree.OctreeNode.hasChildren.rst", "generated/submodules/mymesh.tree.OctreeNode.makeChildren.rst", "generated/submodules/mymesh.tree.OctreeNode.makeChildrenBoxes.rst", "generated/submodules/mymesh.tree.OctreeNode.makeChildrenPts.rst", "generated/submodules/mymesh.tree.OctreeNode.makeChildrenTris.rst", "generated/submodules/mymesh.tree.OctreeNode.prune.rst", "generated/submodules/mymesh.tree.Points2Octree.rst", "generated/submodules/mymesh.tree.Points2Quadtree.rst", "generated/submodules/mymesh.tree.Print.rst", "generated/submodules/mymesh.tree.Quadtree2Dual.rst", "generated/submodules/mymesh.tree.Quadtree2Pixel.rst", "generated/submodules/mymesh.tree.QuadtreeNode.rst", "generated/submodules/mymesh.tree.QuadtreeNode.ContainsEdges.rst", "generated/submodules/mymesh.tree.QuadtreeNode.ContainsPts.rst", "generated/submodules/mymesh.tree.QuadtreeNode.PointInNode.rst", "generated/submodules/mymesh.tree.QuadtreeNode.PointsInNode.rst", "generated/submodules/mymesh.tree.QuadtreeNode.clearData.rst", "generated/submodules/mymesh.tree.QuadtreeNode.getLevel.rst", "generated/submodules/mymesh.tree.QuadtreeNode.getLimits.rst", "generated/submodules/mymesh.tree.QuadtreeNode.getMaxDepth.rst", "generated/submodules/mymesh.tree.QuadtreeNode.getVertices.rst", "generated/submodules/mymesh.tree.QuadtreeNode.hasChildren.rst", "generated/submodules/mymesh.tree.QuadtreeNode.makeChildren.rst", "generated/submodules/mymesh.tree.QuadtreeNode.makeChildrenEdges.rst", "generated/submodules/mymesh.tree.QuadtreeNode.makeChildrenPts.rst", "generated/submodules/mymesh.tree.QuadtreeNode.prune.rst", "generated/submodules/mymesh.tree.SearchOctree.rst", "generated/submodules/mymesh.tree.SearchOctreeTri.rst", "generated/submodules/mymesh.tree.Surface2Octree.rst", "generated/submodules/mymesh.tree.TreeNode.rst", "generated/submodules/mymesh.tree.TreeNode.clearData.rst", "generated/submodules/mymesh.tree.TreeNode.getLevel.rst", "generated/submodules/mymesh.tree.TreeNode.getMaxDepth.rst", "generated/submodules/mymesh.tree.TreeNode.hasChildren.rst", "generated/submodules/mymesh.tree.TreeNode.prune.rst", "generated/submodules/mymesh.tree.Voxel2Octree.rst", "generated/submodules/mymesh.tree.getAllLeaf.rst", "generated/submodules/mymesh.utils.AABB.rst", "generated/submodules/mymesh.utils.BaryTet.rst", "generated/submodules/mymesh.utils.BaryTri.rst", "generated/submodules/mymesh.utils.BaryTris.rst", "generated/submodules/mymesh.utils.CalcFaceNormal.rst", "generated/submodules/mymesh.utils.Centroids.rst", "generated/submodules/mymesh.utils.CleanupDegenerateElements.rst", "generated/submodules/mymesh.utils.DeleteDegenerateElements.rst", "generated/submodules/mymesh.utils.DeleteDuplicateNodes.rst", "generated/submodules/mymesh.utils.DetectFeatures.rst", "generated/submodules/mymesh.utils.DilateVoxel.rst", "generated/submodules/mymesh.utils.ErodeVoxel.rst", "generated/submodules/mymesh.utils.ExtractRagged.rst", "generated/submodules/mymesh.utils.Face2NodeNormal.rst", "generated/submodules/mymesh.utils.MVBB.rst", "generated/submodules/mymesh.utils.MergeMesh.rst", "generated/submodules/mymesh.utils.MirrorMesh.rst", "generated/submodules/mymesh.utils.PadRagged.rst", "generated/submodules/mymesh.utils.Project2Surface.rst", "generated/submodules/mymesh.utils.RelabelNodes.rst", "generated/submodules/mymesh.utils.SortRaggedByLength.rst", "generated/submodules/mymesh.utils.SplitRaggedByLength.rst", "generated/submodules/mymesh.utils.SurfMapping.rst", "generated/submodules/mymesh.utils.TetMeshVol.rst", "generated/submodules/mymesh.utils.TriSurfVol.rst", "generated/submodules/mymesh.utils.ValueMapping.rst", "generated/submodules/mymesh.utils.getConnectedElements.rst", "generated/submodules/mymesh.utils.getConnectedNodes.rst", "generated/submodules/mymesh.utils.getElemConnectivity.rst", "generated/submodules/mymesh.utils.getElemNeighbors.rst", "generated/submodules/mymesh.utils.getNodeNeighborhood.rst", "generated/submodules/mymesh.utils.getNodeNeighborhoodByRadius.rst", "generated/submodules/mymesh.utils.getNodeNeighbors.rst", "generated/submodules/mymesh.utils.identify_elem.rst", "generated/submodules/mymesh.utils.identify_type.rst", "generated/submodules/mymesh.utils.makePyramidLayer.rst", "generated/submodules/mymesh.visualize.FaceColor.rst", "generated/submodules/mymesh.visualize.GetTheme.rst", "generated/submodules/mymesh.visualize.ParseColor.rst", "generated/submodules/mymesh.visualize.Subplot.rst", "generated/submodules/mymesh.visualize.View.rst", "generated/submodules/mymesh.visualize.set_vispy_backend.rst", "guide.rst", "guide/connectivity.rst", "guide/csg.rst", "guide/elem_types.rst", "guide/getting_started.rst", "guide/image_meshing.rst", "guide/implicit_meshing.rst", "guide/installation.rst", "guide/io.rst", "guide/matlab.rst", "guide/mesh_class.rst", "guide/ref.rst", "guide/what_mesh.rst", "index.rst", "sg_execution_times.rst", "submodules/mymesh.demo_image.rst", "submodules/mymesh.demo_mesh.rst", "theory.rst", "theory/contour.rst", "theory/curvature.rst", "theory/delaunay.rst", "theory/edgecontract.rst", "theory/flips23.rst", "theory/implicit.rst", "theory/improvement.rst", "theory/laplaciansmooth.rst", "theory/octree.rst", "theory/rays.rst", "theory/springsmooth.rst"], "indexentries": {"aabb (mymesh.mesh.mesh property)": [[63, "mymesh.mesh.mesh.aabb", false]], "aabb() (in module mymesh.utils)": [[390, "mymesh.utils.AABB", false]], "adaptive() (in module mymesh.contour)": [[100, "mymesh.contour.Adaptive", false]], "addedges() (mymesh.mesh.mesh method)": [[64, "mymesh.mesh.mesh.addEdges", false]], "addelems() (mymesh.mesh.mesh method)": [[65, "mymesh.mesh.mesh.addElems", false]], "addfaces() (mymesh.mesh.mesh method)": [[66, "mymesh.mesh.mesh.addFaces", false]], "addnodes() (mymesh.mesh.mesh method)": [[67, "mymesh.mesh.mesh.addNodes", false]], "affine() (in module mymesh.register)": [[319, "mymesh.register.affine", false]], "affine2d() (in module mymesh.register)": [[320, "mymesh.register.affine2d", false]], "alpha2d() (in module mymesh.delaunay)": [[166, "mymesh.delaunay.Alpha2d", false]], "alpha3d() (in module mymesh.delaunay)": [[167, "mymesh.delaunay.Alpha3d", false]], "alphapeel3d() (in module mymesh.delaunay)": [[168, "mymesh.delaunay.AlphaPeel3d", false]], "alphashape() (in module mymesh.delaunay)": [[169, "mymesh.delaunay.AlphaShape", false]], "analyticalcurvature() (in module mymesh.curvature)": [[156, "mymesh.curvature.AnalyticalCurvature", false]], "area() (in module mymesh.quality)": [[246, "mymesh.quality.Area", false]], "aspectratio() (in module mymesh.quality)": [[247, "mymesh.quality.AspectRatio", false]], "axisalignimage() (in module mymesh.register)": [[304, "mymesh.register.AxisAlignImage", false]], "axisalignpoints() (in module mymesh.register)": [[305, "mymesh.register.AxisAlignPoints", false]], "barytet() (in module mymesh.utils)": [[391, "mymesh.utils.BaryTet", false]], "barytri() (in module mymesh.utils)": [[392, "mymesh.utils.BaryTri", false]], "barytris() (in module mymesh.utils)": [[393, "mymesh.utils.BaryTris", false]], "boundary (mymesh.mesh.mesh property)": [[25, "mymesh.mesh.mesh.Boundary", false]], "boundaryboundaryintersection() (in module mymesh.rays)": [[266, "mymesh.rays.BoundaryBoundaryIntersection", false]], "boundaryconn (mymesh.mesh.mesh property)": [[26, "mymesh.mesh.mesh.BoundaryConn", false]], "boundarynodes (mymesh.mesh.mesh property)": [[27, "mymesh.mesh.mesh.BoundaryNodes", false]], "bounds (mymesh.mesh.mesh property)": [[68, "mymesh.mesh.mesh.bounds", false]], "bowyerwatson2d() (in module mymesh.delaunay)": [[170, "mymesh.delaunay.BowyerWatson2d", false]], "bowyerwatson3d() (in module mymesh.delaunay)": [[171, "mymesh.delaunay.BowyerWatson3d", false]], "box() (in module mymesh.implicit)": [[190, "mymesh.implicit.box", false]], "box() (in module mymesh.primitives)": [[233, "mymesh.primitives.Box", false]], "boxboxintersection() (in module mymesh.rays)": [[267, "mymesh.rays.BoxBoxIntersection", false]], "boxtrianglesintersection() (in module mymesh.rays)": [[268, "mymesh.rays.BoxTrianglesIntersection", false]], "calcfacenormal() (in module mymesh.utils)": [[394, "mymesh.utils.CalcFaceNormal", false]], "cells (mymesh.mesh.mesh property)": [[69, "mymesh.mesh.mesh.cells", false]], "centroids (mymesh.mesh.mesh property)": [[28, "mymesh.mesh.mesh.Centroids", false]], "centroids() (in module mymesh.utils)": [[395, "mymesh.utils.Centroids", false]], "circle() (in module mymesh.primitives)": [[234, "mymesh.primitives.Circle", false]], "circlept() (in module mymesh.primitives)": [[235, "mymesh.primitives.CirclePt", false]], "cleanup() (mymesh.mesh.mesh method)": [[70, "mymesh.mesh.mesh.cleanup", false]], "cleanupdegenerateelements() (in module mymesh.utils)": [[396, "mymesh.utils.CleanupDegenerateElements", false]], "cleardata() (mymesh.tree.octreenode method)": [[348, "mymesh.tree.OctreeNode.clearData", false]], "cleardata() (mymesh.tree.quadtreenode method)": [[369, "mymesh.tree.QuadtreeNode.clearData", false]], "cleardata() (mymesh.tree.treenode method)": [[383, "mymesh.tree.TreeNode.clearData", false]], "clip() (mymesh.mesh.mesh method)": [[29, "mymesh.mesh.mesh.Clip", false]], "closest_point_mse() (in module mymesh.register)": [[321, "mymesh.register.closest_point_MSE", false]], "containsboxes() (mymesh.tree.octreenode method)": [[343, "mymesh.tree.OctreeNode.ContainsBoxes", false]], "containsedges() (mymesh.tree.quadtreenode method)": [[365, "mymesh.tree.QuadtreeNode.ContainsEdges", false]], "containspts() (mymesh.tree.octreenode method)": [[344, "mymesh.tree.OctreeNode.ContainsPts", false]], "containspts() (mymesh.tree.quadtreenode method)": [[366, "mymesh.tree.QuadtreeNode.ContainsPts", false]], "containstris() (mymesh.tree.octreenode method)": [[345, "mymesh.tree.OctreeNode.ContainsTris", false]], "contour() (mymesh.mesh.mesh method)": [[30, "mymesh.mesh.mesh.Contour", false]], "contract() (in module mymesh.improvement)": [[223, "mymesh.improvement.Contract", false]], "convexhull() (in module mymesh.delaunay)": [[172, "mymesh.delaunay.ConvexHull", false]], "copy() (mymesh.mesh.mesh method)": [[71, "mymesh.mesh.mesh.copy", false]], "createboundarylayer() (mymesh.mesh.mesh method)": [[31, "mymesh.mesh.mesh.CreateBoundaryLayer", false]], "crop() (mymesh.mesh.mesh method)": [[32, "mymesh.mesh.mesh.Crop", false]], "cubicfit() (in module mymesh.curvature)": [[157, "mymesh.curvature.CubicFit", false]], "curvedness() (in module mymesh.curvature)": [[158, "mymesh.curvature.Curvedness", false]], "cylinder() (in module mymesh.implicit)": [[191, "mymesh.implicit.cylinder", false]], "cylinder() (in module mymesh.primitives)": [[236, "mymesh.primitives.Cylinder", false]], "deletedegenerateelements() (in module mymesh.utils)": [[397, "mymesh.utils.DeleteDegenerateElements", false]], "deleteduplicatenodes() (in module mymesh.utils)": [[398, "mymesh.utils.DeleteDuplicateNodes", false]], "demo_image() (in module mymesh)": [[19, "mymesh.demo_image", false], [447, "mymesh.demo_image", false]], "demo_mesh() (in module mymesh)": [[20, "mymesh.demo_mesh", false], [448, "mymesh.demo_mesh", false]], "detectfeatures() (in module mymesh.utils)": [[399, "mymesh.utils.DetectFeatures", false]], "diamond() (in module mymesh.implicit)": [[192, "mymesh.implicit.diamond", false]], "dice() (in module mymesh.register)": [[322, "mymesh.register.dice", false]], "diff() (in module mymesh.implicit)": [[193, "mymesh.implicit.diff", false]], "difff() (in module mymesh.implicit)": [[194, "mymesh.implicit.difff", false]], "diffs() (in module mymesh.implicit)": [[195, "mymesh.implicit.diffs", false]], "dihedralangles() (in module mymesh.quality)": [[258, "mymesh.quality.dihedralAngles", false]], "dilatevoxel() (in module mymesh.utils)": [[400, "mymesh.utils.DilateVoxel", false]], "edge2quadratic() (in module mymesh.converter)": [[109, "mymesh.converter.edge2quadratic", false]], "edge32linear() (in module mymesh.converter)": [[110, "mymesh.converter.edge32linear", false]], "edgeconn (mymesh.mesh.mesh property)": [[33, "mymesh.mesh.mesh.EdgeConn", false]], "edgeelemconn (mymesh.mesh.mesh property)": [[34, "mymesh.mesh.mesh.EdgeElemConn", false]], "edges (mymesh.mesh.mesh property)": [[35, "mymesh.mesh.mesh.Edges", false]], "edges2quadtree() (in module mymesh.tree)": [[338, "mymesh.tree.Edges2Quadtree", false]], "edges2unique() (in module mymesh.converter)": [[111, "mymesh.converter.edges2unique", false]], "edgesbyelement() (in module mymesh.converter)": [[108, "mymesh.converter.EdgesByElement", false]], "edgesets (mymesh.mesh attribute)": [[24, "mymesh.mesh.EdgeSets", false]], "elemconn (mymesh.mesh.mesh property)": [[36, "mymesh.mesh.mesh.ElemConn", false]], "elemdata (mymesh.mesh attribute)": [[24, "mymesh.mesh.ElemData", false]], "elemneighbors (mymesh.mesh.mesh property)": [[37, "mymesh.mesh.mesh.ElemNeighbors", false]], "elemnormals (mymesh.mesh.mesh property)": [[38, "mymesh.mesh.mesh.ElemNormals", false]], "elemsets (mymesh.mesh attribute)": [[24, "mymesh.mesh.ElemSets", false]], "elemtype (mymesh.mesh.mesh property)": [[39, "mymesh.mesh.mesh.ElemType", false]], "equiangular_skewness() (in module mymesh.quality)": [[259, "mymesh.quality.equiangular_skewness", false]], "erodevoxel() (in module mymesh.utils)": [[401, "mymesh.utils.ErodeVoxel", false]], "eulercharacteristic (mymesh.mesh.mesh property)": [[40, "mymesh.mesh.mesh.EulerCharacteristic", false]], "extractragged() (in module mymesh.utils)": [[402, "mymesh.utils.ExtractRagged", false]], "extrude() (in module mymesh.primitives)": [[237, "mymesh.primitives.Extrude", false]], "face2nodenormal() (in module mymesh.utils)": [[403, "mymesh.utils.Face2NodeNormal", false]], "facecolor() (in module mymesh.visualize)": [[426, "mymesh.visualize.FaceColor", false]], "faceconn (mymesh.mesh.mesh property)": [[41, "mymesh.mesh.mesh.FaceConn", false]], "faceelemconn (mymesh.mesh.mesh property)": [[42, "mymesh.mesh.mesh.FaceElemConn", false]], "faces (mymesh.mesh.mesh property)": [[43, "mymesh.mesh.mesh.Faces", false]], "faces2surface() (in module mymesh.converter)": [[112, "mymesh.converter.faces2surface", false]], "faces2unique() (in module mymesh.converter)": [[113, "mymesh.converter.faces2unique", false]], "facesets (mymesh.mesh attribute)": [[24, "mymesh.mesh.FaceSets", false]], "fantriangulation() (in module mymesh.delaunay)": [[173, "mymesh.delaunay.FanTriangulation", false]], "function2octree() (in module mymesh.tree)": [[339, "mymesh.tree.Function2Octree", false]], "gaussiancurvature() (in module mymesh.curvature)": [[159, "mymesh.curvature.GaussianCurvature", false]], "genus (mymesh.mesh.mesh property)": [[44, "mymesh.mesh.mesh.Genus", false]], "geotransformsmoothing() (in module mymesh.improvement)": [[224, "mymesh.improvement.GeoTransformSmoothing", false]], "getallleaf() (in module mymesh.tree)": [[389, "mymesh.tree.getAllLeaf", false]], "getconnectedelements() (in module mymesh.utils)": [[416, "mymesh.utils.getConnectedElements", false]], "getconnectednodes() (in module mymesh.utils)": [[417, "mymesh.utils.getConnectedNodes", false]], "getcurvature() (mymesh.mesh.mesh method)": [[72, "mymesh.mesh.mesh.getCurvature", false]], "getelemconnectivity() (in module mymesh.utils)": [[418, "mymesh.utils.getElemConnectivity", false]], "getelemneighbors() (in module mymesh.utils)": [[419, "mymesh.utils.getElemNeighbors", false]], "getlevel() (mymesh.tree.octreenode method)": [[349, "mymesh.tree.OctreeNode.getLevel", false]], "getlevel() (mymesh.tree.quadtreenode method)": [[370, "mymesh.tree.QuadtreeNode.getLevel", false]], "getlevel() (mymesh.tree.treenode method)": [[384, "mymesh.tree.TreeNode.getLevel", false]], "getlimits() (mymesh.tree.octreenode method)": [[350, "mymesh.tree.OctreeNode.getLimits", false]], "getlimits() (mymesh.tree.quadtreenode method)": [[371, "mymesh.tree.QuadtreeNode.getLimits", false]], "getmaxdepth() (mymesh.tree.octreenode method)": [[351, "mymesh.tree.OctreeNode.getMaxDepth", false]], "getmaxdepth() (mymesh.tree.quadtreenode method)": [[372, "mymesh.tree.QuadtreeNode.getMaxDepth", false]], "getmaxdepth() (mymesh.tree.treenode method)": [[385, "mymesh.tree.TreeNode.getMaxDepth", false]], "getnodeneighborhood() (in module mymesh.utils)": [[420, "mymesh.utils.getNodeNeighborhood", false]], "getnodeneighborhoodbyradius() (in module mymesh.utils)": [[421, "mymesh.utils.getNodeNeighborhoodByRadius", false]], "getnodeneighbors() (in module mymesh.utils)": [[422, "mymesh.utils.getNodeNeighbors", false]], "getquality() (mymesh.mesh.mesh method)": [[73, "mymesh.mesh.mesh.getQuality", false]], "gettheme() (in module mymesh.visualize)": [[427, "mymesh.visualize.GetTheme", false]], "getvertices() (mymesh.tree.octreenode method)": [[352, "mymesh.tree.OctreeNode.getVertices", false]], "getvertices() (mymesh.tree.quadtreenode method)": [[373, "mymesh.tree.QuadtreeNode.getVertices", false]], "giftwrapping() (in module mymesh.delaunay)": [[174, "mymesh.delaunay.GiftWrapping", false]], "grid() (in module mymesh.primitives)": [[238, "mymesh.primitives.Grid", false]], "grid2d() (in module mymesh.primitives)": [[239, "mymesh.primitives.Grid2D", false]], "grid2fun() (in module mymesh.implicit)": [[196, "mymesh.implicit.grid2fun", false]], "grid2grad() (in module mymesh.implicit)": [[197, "mymesh.implicit.grid2grad", false]], "gyroid() (in module mymesh.implicit)": [[198, "mymesh.implicit.gyroid", false]], "haschildren() (mymesh.tree.octreenode method)": [[353, "mymesh.tree.OctreeNode.hasChildren", false]], "haschildren() (mymesh.tree.quadtreenode method)": [[374, "mymesh.tree.QuadtreeNode.hasChildren", false]], "haschildren() (mymesh.tree.treenode method)": [[386, "mymesh.tree.TreeNode.hasChildren", false]], "hausdorff() (in module mymesh.register)": [[323, "mymesh.register.hausdorff", false]], "hex202linear() (in module mymesh.converter)": [[114, "mymesh.converter.hex202linear", false]], "hex2edges() (in module mymesh.converter)": [[115, "mymesh.converter.hex2edges", false]], "hex2faces() (in module mymesh.converter)": [[116, "mymesh.converter.hex2faces", false]], "hex2quadratic() (in module mymesh.converter)": [[117, "mymesh.converter.hex2quadratic", false]], "hex2tet() (in module mymesh.converter)": [[118, "mymesh.converter.hex2tet", false]], "hexsubdivide() (in module mymesh.converter)": [[119, "mymesh.converter.hexsubdivide", false]], "icp() (in module mymesh.register)": [[306, "mymesh.register.ICP", false]], "identify_elem() (in module mymesh.utils)": [[423, "mymesh.utils.identify_elem", false]], "identify_type() (in module mymesh.utils)": [[424, "mymesh.utils.identify_type", false]], "identify_type() (mymesh.mesh.mesh method)": [[74, "mymesh.mesh.mesh.identify_type", false]], "im2voxel() (in module mymesh.converter)": [[120, "mymesh.converter.im2voxel", false]], "image2image() (in module mymesh.register)": [[307, "mymesh.register.Image2Image", false]], "imagecurvature() (in module mymesh.curvature)": [[160, "mymesh.curvature.ImageCurvature", false]], "imageoverlay() (in module mymesh.register)": [[308, "mymesh.register.ImageOverlay", false]], "imread() (mymesh.mesh.mesh method)": [[75, "mymesh.mesh.mesh.imread", false]], "intersection() (in module mymesh.implicit)": [[199, "mymesh.implicit.intersection", false]], "intersectionf() (in module mymesh.implicit)": [[200, "mymesh.implicit.intersectionf", false]], "intersections() (in module mymesh.implicit)": [[201, "mymesh.implicit.intersections", false]], "inverseorthogonality() (in module mymesh.quality)": [[249, "mymesh.quality.InverseOrthogonality", false]], "inverseorthogonalquality() (in module mymesh.quality)": [[248, "mymesh.quality.InverseOrthogonalQuality", false]], "jaccard() (in module mymesh.register)": [[324, "mymesh.register.jaccard", false]], "lidinoid() (in module mymesh.implicit)": [[202, "mymesh.implicit.lidinoid", false]], "line() (in module mymesh.primitives)": [[240, "mymesh.primitives.Line", false]], "linear2quadratic() (in module mymesh.converter)": [[121, "mymesh.converter.linear2quadratic", false]], "locallaplaciansmoothing() (in module mymesh.improvement)": [[225, "mymesh.improvement.LocalLaplacianSmoothing", false]], "makechildren() (mymesh.tree.octreenode method)": [[354, "mymesh.tree.OctreeNode.makeChildren", false]], "makechildren() (mymesh.tree.quadtreenode method)": [[375, "mymesh.tree.QuadtreeNode.makeChildren", false]], "makechildrenboxes() (mymesh.tree.octreenode method)": [[355, "mymesh.tree.OctreeNode.makeChildrenBoxes", false]], "makechildrenedges() (mymesh.tree.quadtreenode method)": [[376, "mymesh.tree.QuadtreeNode.makeChildrenEdges", false]], "makechildrenpts() (mymesh.tree.octreenode method)": [[356, "mymesh.tree.OctreeNode.makeChildrenPts", false]], "makechildrenpts() (mymesh.tree.quadtreenode method)": [[377, "mymesh.tree.QuadtreeNode.makeChildrenPts", false]], "makechildrentris() (mymesh.tree.octreenode method)": [[357, "mymesh.tree.OctreeNode.makeChildrenTris", false]], "makepyramidlayer() (in module mymesh.utils)": [[425, "mymesh.utils.makePyramidLayer", false]], "marchingcubes() (in module mymesh.contour)": [[101, "mymesh.contour.MarchingCubes", false]], "marchingcubesimage() (in module mymesh.contour)": [[102, "mymesh.contour.MarchingCubesImage", false]], "marchingelements() (in module mymesh.contour)": [[103, "mymesh.contour.MarchingElements", false]], "marchingsquares() (in module mymesh.contour)": [[104, "mymesh.contour.MarchingSquares", false]], "marchingsquaresimage() (in module mymesh.contour)": [[105, "mymesh.contour.MarchingSquaresImage", false]], "marchingtetrahedra() (in module mymesh.contour)": [[106, "mymesh.contour.MarchingTetrahedra", false]], "marchingtriangles() (in module mymesh.contour)": [[107, "mymesh.contour.MarchingTriangles", false]], "maxdihedral() (in module mymesh.quality)": [[250, "mymesh.quality.MaxDihedral", false]], "meancurvature() (in module mymesh.curvature)": [[161, "mymesh.curvature.MeanCurvature", false]], "meanratio() (in module mymesh.quality)": [[251, "mymesh.quality.MeanRatio", false]], "merge() (mymesh.mesh.mesh method)": [[76, "mymesh.mesh.mesh.merge", false]], "mergemesh() (in module mymesh.utils)": [[405, "mymesh.utils.MergeMesh", false]], "mesh (class in mymesh)": [[24, "mymesh.mesh", false]], "mesh2dmesh() (mymesh.mesh.mesh method)": [[77, "mymesh.mesh.mesh.mesh2dmesh", false]], "mesh2im() (in module mymesh.converter)": [[122, "mymesh.converter.mesh2im", false]], "mesh2mesh() (in module mymesh.register)": [[309, "mymesh.register.Mesh2Mesh", false]], "mesh2udf() (in module mymesh.implicit)": [[203, "mymesh.implicit.mesh2udf", false]], "meshbooleans() (in module mymesh.booleans)": [[98, "mymesh.booleans.MeshBooleans", false]], "meshio2mymesh() (mymesh.mesh.mesh method)": [[78, "mymesh.mesh.mesh.meshio2mymesh", false]], "meshnodes (mymesh.mesh.mesh property)": [[45, "mymesh.mesh.mesh.MeshNodes", false]], "mindihedral() (in module mymesh.quality)": [[252, "mymesh.quality.MinDihedral", false]], "mirror() (mymesh.mesh.mesh method)": [[46, "mymesh.mesh.mesh.Mirror", false]], "mirrormesh() (in module mymesh.utils)": [[406, "mymesh.utils.MirrorMesh", false]], "mixed_topology() (in module mymesh.implicit)": [[204, "mymesh.implicit.mixed_topology", false]], "module": [[0, "module-mymesh", false], [14, "module-mymesh.booleans", false], [15, "module-mymesh.contour", false], [16, "module-mymesh.converter", false], [17, "module-mymesh.curvature", false], [18, "module-mymesh.delaunay", false], [21, "module-mymesh.image", false], [22, "module-mymesh.implicit", false], [23, "module-mymesh.improvement", false], [91, "module-mymesh.primitives", false], [92, "module-mymesh.quality", false], [93, "module-mymesh.rays", false], [94, "module-mymesh.register", false], [95, "module-mymesh.tree", false], [96, "module-mymesh.utils", false], [97, "module-mymesh.visualize", false]], "multiline() (in module mymesh.primitives)": [[241, "mymesh.primitives.Multiline", false]], "mutual_information() (in module mymesh.register)": [[325, "mymesh.register.mutual_information", false]], "mvbb (mymesh.mesh.mesh property)": [[79, "mymesh.mesh.mesh.mvbb", false]], "mvbb() (in module mymesh.utils)": [[404, "mymesh.utils.MVBB", false]], "mymesh": [[0, "module-mymesh", false]], "mymesh.booleans": [[14, "module-mymesh.booleans", false]], "mymesh.contour": [[15, "module-mymesh.contour", false]], "mymesh.converter": [[16, "module-mymesh.converter", false]], "mymesh.curvature": [[17, "module-mymesh.curvature", false]], "mymesh.delaunay": [[18, "module-mymesh.delaunay", false]], "mymesh.image": [[21, "module-mymesh.image", false]], "mymesh.implicit": [[22, "module-mymesh.implicit", false]], "mymesh.improvement": [[23, "module-mymesh.improvement", false]], "mymesh.primitives": [[91, "module-mymesh.primitives", false]], "mymesh.quality": [[92, "module-mymesh.quality", false]], "mymesh.rays": [[93, "module-mymesh.rays", false]], "mymesh.register": [[94, "module-mymesh.register", false]], "mymesh.tree": [[95, "module-mymesh.tree", false]], "mymesh.utils": [[96, "module-mymesh.utils", false]], "mymesh.visualize": [[97, "module-mymesh.visualize", false]], "mymesh2meshio() (mymesh.mesh.mesh method)": [[80, "mymesh.mesh.mesh.mymesh2meshio", false]], "nd (mymesh.mesh.mesh property)": [[47, "mymesh.mesh.mesh.ND", false]], "nedge (mymesh.mesh.mesh property)": [[48, "mymesh.mesh.mesh.NEdge", false]], "nelem (mymesh.mesh.mesh property)": [[49, "mymesh.mesh.mesh.NElem", false]], "neovius() (in module mymesh.implicit)": [[205, "mymesh.implicit.neovius", false]], "nface (mymesh.mesh.mesh property)": [[50, "mymesh.mesh.mesh.NFace", false]], "nnode (mymesh.mesh.mesh property)": [[51, "mymesh.mesh.mesh.NNode", false]], "nodeconn (mymesh.mesh attribute)": [[24, "mymesh.mesh.NodeConn", false]], "nodecoords (mymesh.mesh attribute)": [[24, "mymesh.mesh.NodeCoords", false]], "nodedata (mymesh.mesh attribute)": [[24, "mymesh.mesh.NodeData", false]], "nodeneighbors (mymesh.mesh.mesh property)": [[52, "mymesh.mesh.mesh.NodeNeighbors", false]], "nodenormals (mymesh.mesh.mesh property)": [[53, "mymesh.mesh.mesh.NodeNormals", false]], "nodenormalsmethod (mymesh.mesh.mesh property)": [[54, "mymesh.mesh.mesh.NodeNormalsMethod", false]], "nodesets (mymesh.mesh attribute)": [[24, "mymesh.mesh.NodeSets", false]], "nodespringsmoothing() (in module mymesh.improvement)": [[226, "mymesh.improvement.NodeSpringSmoothing", false]], "normcurve() (in module mymesh.curvature)": [[162, "mymesh.curvature.NormCurve", false]], "octree2dual() (in module mymesh.tree)": [[340, "mymesh.tree.Octree2Dual", false]], "octree2voxel() (in module mymesh.tree)": [[341, "mymesh.tree.Octree2Voxel", false]], "octreenode (class in mymesh.tree)": [[342, "mymesh.tree.OctreeNode", false]], "offset() (in module mymesh.implicit)": [[206, "mymesh.implicit.offset", false]], "optimize() (in module mymesh.register)": [[326, "mymesh.register.optimize", false]], "orthogonality() (in module mymesh.quality)": [[254, "mymesh.quality.Orthogonality", false]], "orthogonalquality() (in module mymesh.quality)": [[253, "mymesh.quality.OrthogonalQuality", false]], "padragged() (in module mymesh.utils)": [[407, "mymesh.utils.PadRagged", false]], "parsecolor() (in module mymesh.visualize)": [[428, "mymesh.visualize.ParseColor", false]], "pixelmesh() (in module mymesh.image)": [[179, "mymesh.image.PixelMesh", false]], "plane() (in module mymesh.implicit)": [[207, "mymesh.implicit.plane", false]], "plane() (in module mymesh.primitives)": [[242, "mymesh.primitives.Plane", false]], "planeboxintersection() (in module mymesh.rays)": [[269, "mymesh.rays.PlaneBoxIntersection", false]], "planesurfintersection() (in module mymesh.rays)": [[270, "mymesh.rays.PlaneSurfIntersection", false]], "planetriangleintersection() (in module mymesh.rays)": [[271, "mymesh.rays.PlaneTriangleIntersection", false]], "planetrianglesintersection() (in module mymesh.rays)": [[272, "mymesh.rays.PlaneTrianglesIntersection", false]], "plot() (mymesh.mesh.mesh method)": [[81, "mymesh.mesh.mesh.plot", false]], "point2point() (in module mymesh.register)": [[310, "mymesh.register.Point2Point", false]], "pointinboundary() (in module mymesh.rays)": [[273, "mymesh.rays.PointInBoundary", false]], "pointinbox() (in module mymesh.rays)": [[274, "mymesh.rays.PointInBox", false]], "pointinbox2d() (in module mymesh.rays)": [[275, "mymesh.rays.PointInBox2D", false]], "pointinnode() (mymesh.tree.octreenode method)": [[346, "mymesh.tree.OctreeNode.PointInNode", false]], "pointinnode() (mymesh.tree.quadtreenode method)": [[367, "mymesh.tree.QuadtreeNode.PointInNode", false]], "pointinsurf() (in module mymesh.rays)": [[276, "mymesh.rays.PointInSurf", false]], "pointintet() (in module mymesh.rays)": [[277, "mymesh.rays.PointInTet", false]], "pointintri() (in module mymesh.rays)": [[278, "mymesh.rays.PointInTri", false]], "points (mymesh.mesh.mesh property)": [[82, "mymesh.mesh.mesh.points", false]], "points2octree() (in module mymesh.tree)": [[359, "mymesh.tree.Points2Octree", false]], "points2quadtree() (in module mymesh.tree)": [[360, "mymesh.tree.Points2Quadtree", false]], "pointsinnode() (mymesh.tree.octreenode method)": [[347, "mymesh.tree.OctreeNode.PointsInNode", false]], "pointsinnode() (mymesh.tree.quadtreenode method)": [[368, "mymesh.tree.QuadtreeNode.PointsInNode", false]], "pointsinsurf() (in module mymesh.rays)": [[279, "mymesh.rays.PointsInSurf", false]], "pointsintris() (in module mymesh.rays)": [[280, "mymesh.rays.PointsInTris", false]], "pointsinvoxel() (in module mymesh.rays)": [[281, "mymesh.rays.PointsInVoxel", false]], "polygon2edges() (in module mymesh.converter)": [[123, "mymesh.converter.polygon2edges", false]], "primitive() (in module mymesh.implicit)": [[208, "mymesh.implicit.primitive", false]], "print() (in module mymesh.tree)": [[361, "mymesh.tree.Print", false]], "project2surface() (in module mymesh.utils)": [[408, "mymesh.utils.Project2Surface", false]], "prune() (mymesh.tree.octreenode method)": [[358, "mymesh.tree.OctreeNode.prune", false]], "prune() (mymesh.tree.quadtreenode method)": [[378, "mymesh.tree.QuadtreeNode.prune", false]], "prune() (mymesh.tree.treenode method)": [[387, "mymesh.tree.TreeNode.prune", false]], "pyr132linear() (in module mymesh.converter)": [[124, "mymesh.converter.pyr132linear", false]], "pyr2quadratic() (in module mymesh.converter)": [[125, "mymesh.converter.pyr2quadratic", false]], "pyramid2edges() (in module mymesh.converter)": [[126, "mymesh.converter.pyramid2edges", false]], "pyramid2faces() (in module mymesh.converter)": [[127, "mymesh.converter.pyramid2faces", false]], "pyramid2tet() (in module mymesh.converter)": [[128, "mymesh.converter.pyramid2tet", false]], "quad2edges() (in module mymesh.converter)": [[129, "mymesh.converter.quad2edges", false]], "quad2quadratic() (in module mymesh.converter)": [[130, "mymesh.converter.quad2quadratic", false]], "quad2tri() (in module mymesh.converter)": [[131, "mymesh.converter.quad2tri", false]], "quad82linear() (in module mymesh.converter)": [[132, "mymesh.converter.quad82linear", false]], "quad_skewness() (in module mymesh.quality)": [[260, "mymesh.quality.quad_skewness", false]], "quadfit() (in module mymesh.curvature)": [[163, "mymesh.curvature.QuadFit", false]], "quadratic2linear() (in module mymesh.converter)": [[133, "mymesh.converter.quadratic2linear", false]], "quadtree2dual() (in module mymesh.tree)": [[362, "mymesh.tree.Quadtree2Dual", false]], "quadtree2pixel() (in module mymesh.tree)": [[363, "mymesh.tree.Quadtree2Pixel", false]], "quadtreenode (class in mymesh.tree)": [[364, "mymesh.tree.QuadtreeNode", false]], "r2d() (in module mymesh.register)": [[311, "mymesh.register.R2d", false]], "r3d() (in module mymesh.register)": [[312, "mymesh.register.R3d", false]], "rayboundaryintersection() (in module mymesh.rays)": [[282, "mymesh.rays.RayBoundaryIntersection", false]], "rayboxesintersection() (in module mymesh.rays)": [[284, "mymesh.rays.RayBoxesIntersection", false]], "rayboxintersection() (in module mymesh.rays)": [[283, "mymesh.rays.RayBoxIntersection", false]], "rayoctreeintersection() (in module mymesh.rays)": [[285, "mymesh.rays.RayOctreeIntersection", false]], "raysegmentintersection() (in module mymesh.rays)": [[286, "mymesh.rays.RaySegmentIntersection", false]], "raysegmentsintersection() (in module mymesh.rays)": [[287, "mymesh.rays.RaySegmentsIntersection", false]], "rayssurfintersection() (in module mymesh.rays)": [[291, "mymesh.rays.RaysSurfIntersection", false]], "raystrianglesintersection() (in module mymesh.rays)": [[292, "mymesh.rays.RaysTrianglesIntersection", false]], "raysurfintersection() (in module mymesh.rays)": [[288, "mymesh.rays.RaySurfIntersection", false]], "raytriangleintersection() (in module mymesh.rays)": [[289, "mymesh.rays.RayTriangleIntersection", false]], "raytrianglesintersection() (in module mymesh.rays)": [[290, "mymesh.rays.RayTrianglesIntersection", false]], "read() (in module mymesh.image)": [[184, "mymesh.image.read", false]], "read() (mymesh.mesh.mesh method)": [[83, "mymesh.mesh.mesh.read", false]], "relabelnodes() (in module mymesh.utils)": [[409, "mymesh.utils.RelabelNodes", false]], "removeelems() (mymesh.mesh.mesh method)": [[84, "mymesh.mesh.mesh.removeElems", false]], "renumberfacesbyset() (mymesh.mesh.mesh method)": [[55, "mymesh.mesh.mesh.RenumberFacesBySet", false]], "renumbernodesbyset() (mymesh.mesh.mesh method)": [[56, "mymesh.mesh.mesh.RenumberNodesBySet", false]], "reset() (mymesh.mesh.mesh method)": [[85, "mymesh.mesh.mesh.reset", false]], "revolve() (in module mymesh.primitives)": [[243, "mymesh.primitives.Revolve", false]], "rigid() (in module mymesh.register)": [[327, "mymesh.register.rigid", false]], "rigid2d() (in module mymesh.register)": [[328, "mymesh.register.rigid2d", false]], "rmax() (in module mymesh.implicit)": [[209, "mymesh.implicit.rMax", false]], "rmin() (in module mymesh.implicit)": [[210, "mymesh.implicit.rMin", false]], "rotation() (in module mymesh.register)": [[329, "mymesh.register.rotation", false]], "rotation2d() (in module mymesh.register)": [[330, "mymesh.register.rotation2d", false]], "s2d() (in module mymesh.register)": [[313, "mymesh.register.S2d", false]], "s3d() (in module mymesh.register)": [[314, "mymesh.register.S3d", false]], "scipy() (in module mymesh.delaunay)": [[175, "mymesh.delaunay.SciPy", false]], "searchoctree() (in module mymesh.tree)": [[379, "mymesh.tree.SearchOctree", false]], "searchoctreetri() (in module mymesh.tree)": [[380, "mymesh.tree.SearchOctreeTri", false]], "segmentbox2dintersection() (in module mymesh.rays)": [[293, "mymesh.rays.SegmentBox2DIntersection", false]], "segmentboxintersection() (in module mymesh.rays)": [[294, "mymesh.rays.SegmentBoxIntersection", false]], "segmentsegmentintersection() (in module mymesh.rays)": [[295, "mymesh.rays.SegmentSegmentIntersection", false]], "segmentspringsmoothing() (in module mymesh.improvement)": [[227, "mymesh.improvement.SegmentSpringSmoothing", false]], "segmentssegmentsintersection() (in module mymesh.rays)": [[296, "mymesh.rays.SegmentsSegmentsIntersection", false]], "set_vispy_backend() (in module mymesh.visualize)": [[431, "mymesh.visualize.set_vispy_backend", false]], "sh2d() (in module mymesh.register)": [[315, "mymesh.register.Sh2d", false]], "sh3d() (in module mymesh.register)": [[316, "mymesh.register.Sh3d", false]], "shapecategory() (in module mymesh.curvature)": [[164, "mymesh.curvature.ShapeCategory", false]], "shapeindex() (in module mymesh.curvature)": [[165, "mymesh.curvature.ShapeIndex", false]], "similarity() (in module mymesh.register)": [[331, "mymesh.register.similarity", false]], "similarity2d() (in module mymesh.register)": [[332, "mymesh.register.similarity2d", false]], "skewness() (in module mymesh.quality)": [[255, "mymesh.quality.Skewness", false]], "smartlaplaciansmoothing() (in module mymesh.improvement)": [[228, "mymesh.improvement.SmartLaplacianSmoothing", false]], "solid2edges() (in module mymesh.converter)": [[134, "mymesh.converter.solid2edges", false]], "solid2faces() (in module mymesh.converter)": [[135, "mymesh.converter.solid2faces", false]], "solid2surface() (in module mymesh.converter)": [[136, "mymesh.converter.solid2surface", false]], "solid2tets() (in module mymesh.converter)": [[137, "mymesh.converter.solid2tets", false]], "sortraggedbylength() (in module mymesh.utils)": [[410, "mymesh.utils.SortRaggedByLength", false]], "sphere() (in module mymesh.implicit)": [[211, "mymesh.implicit.sphere", false]], "sphere() (in module mymesh.primitives)": [[244, "mymesh.primitives.Sphere", false]], "splitmesh() (in module mymesh.booleans)": [[99, "mymesh.booleans.SplitMesh", false]], "splitraggedbylength() (in module mymesh.utils)": [[411, "mymesh.utils.SplitRaggedByLength", false]], "subplot() (in module mymesh.visualize)": [[429, "mymesh.visualize.Subplot", false]], "surf2dual() (in module mymesh.converter)": [[138, "mymesh.converter.surf2dual", false]], "surf2edges() (in module mymesh.converter)": [[139, "mymesh.converter.surf2edges", false]], "surf2tris() (in module mymesh.converter)": [[140, "mymesh.converter.surf2tris", false]], "surf2voxel() (in module mymesh.converter)": [[141, "mymesh.converter.surf2voxel", false]], "surface (mymesh.mesh.mesh property)": [[61, "mymesh.mesh.mesh.Surface", false]], "surface2octree() (in module mymesh.tree)": [[381, "mymesh.tree.Surface2Octree", false]], "surfacemesh() (in module mymesh.image)": [[180, "mymesh.image.SurfaceMesh", false]], "surfacemesh() (in module mymesh.implicit)": [[186, "mymesh.implicit.SurfaceMesh", false]], "surfacenodeoptimization() (in module mymesh.image)": [[181, "mymesh.image.SurfaceNodeOptimization", false]], "surfacenodeoptimization() (in module mymesh.implicit)": [[187, "mymesh.implicit.SurfaceNodeOptimization", false]], "surfconn (mymesh.mesh.mesh property)": [[57, "mymesh.mesh.mesh.SurfConn", false]], "surfdihedralangles() (in module mymesh.quality)": [[256, "mymesh.quality.SurfDihedralAngles", false]], "surfelemconn (mymesh.mesh.mesh property)": [[58, "mymesh.mesh.mesh.SurfElemConn", false]], "surfmapping() (in module mymesh.utils)": [[412, "mymesh.utils.SurfMapping", false]], "surfnodeneighbors (mymesh.mesh.mesh property)": [[59, "mymesh.mesh.mesh.SurfNodeNeighbors", false]], "surfnodes (mymesh.mesh.mesh property)": [[60, "mymesh.mesh.mesh.SurfNodes", false]], "surfselfintersection() (in module mymesh.rays)": [[297, "mymesh.rays.SurfSelfIntersection", false]], "surfsurfintersection() (in module mymesh.rays)": [[298, "mymesh.rays.SurfSurfIntersection", false]], "symmetric_closest_point_mse() (in module mymesh.register)": [[333, "mymesh.register.symmetric_closest_point_MSE", false]], "t2d() (in module mymesh.register)": [[317, "mymesh.register.T2d", false]], "t3d() (in module mymesh.register)": [[318, "mymesh.register.T3d", false]], "tangentiallaplaciansmoothing() (in module mymesh.improvement)": [[229, "mymesh.improvement.TangentialLaplacianSmoothing", false]], "tet102linear() (in module mymesh.converter)": [[142, "mymesh.converter.tet102linear", false]], "tet2edges() (in module mymesh.converter)": [[143, "mymesh.converter.tet2edges", false]], "tet2faces() (in module mymesh.converter)": [[144, "mymesh.converter.tet2faces", false]], "tet2quadratic() (in module mymesh.converter)": [[145, "mymesh.converter.tet2quadratic", false]], "tet_circumradius() (in module mymesh.quality)": [[261, "mymesh.quality.tet_circumradius", false]], "tet_vol_skewness() (in module mymesh.quality)": [[262, "mymesh.quality.tet_vol_skewness", false]], "tet_volume() (in module mymesh.quality)": [[263, "mymesh.quality.tet_volume", false]], "tetflip() (in module mymesh.improvement)": [[230, "mymesh.improvement.TetFlip", false]], "tetimprove() (in module mymesh.improvement)": [[231, "mymesh.improvement.TetImprove", false]], "tetmesh() (in module mymesh.image)": [[182, "mymesh.image.TetMesh", false]], "tetmesh() (in module mymesh.implicit)": [[188, "mymesh.implicit.TetMesh", false]], "tetmeshvol() (in module mymesh.utils)": [[413, "mymesh.utils.TetMeshVol", false]], "tetrahedralize() (in module mymesh.delaunay)": [[176, "mymesh.delaunay.Tetrahedralize", false]], "tetsplit() (in module mymesh.improvement)": [[232, "mymesh.improvement.TetSplit", false]], "tetsubdivide() (in module mymesh.converter)": [[146, "mymesh.converter.tetsubdivide", false]], "thicken() (in module mymesh.implicit)": [[212, "mymesh.implicit.thicken", false]], "thickenf() (in module mymesh.implicit)": [[213, "mymesh.implicit.thickenf", false]], "thickens() (in module mymesh.implicit)": [[214, "mymesh.implicit.thickens", false]], "threshold() (mymesh.mesh.mesh method)": [[62, "mymesh.mesh.mesh.Threshold", false]], "to_meshio() (mymesh.mesh.mesh method)": [[86, "mymesh.mesh.mesh.to_meshio", false]], "to_pyvista() (mymesh.mesh.mesh method)": [[87, "mymesh.mesh.mesh.to_pyvista", false]], "torus() (in module mymesh.implicit)": [[215, "mymesh.implicit.torus", false]], "torus() (in module mymesh.primitives)": [[245, "mymesh.primitives.Torus", false]], "tpms() (in module mymesh.implicit)": [[216, "mymesh.implicit.tpms", false]], "transform_image() (in module mymesh.register)": [[334, "mymesh.register.transform_image", false]], "transform_points() (in module mymesh.register)": [[335, "mymesh.register.transform_points", false]], "translation() (in module mymesh.register)": [[336, "mymesh.register.translation", false]], "translation2d() (in module mymesh.register)": [[337, "mymesh.register.translation2d", false]], "treenode (class in mymesh.tree)": [[382, "mymesh.tree.TreeNode", false]], "tri2edges() (in module mymesh.converter)": [[147, "mymesh.converter.tri2edges", false]], "tri2quadratic() (in module mymesh.converter)": [[148, "mymesh.converter.tri2quadratic", false]], "tri62linear() (in module mymesh.converter)": [[149, "mymesh.converter.tri62linear", false]], "tri_area() (in module mymesh.quality)": [[264, "mymesh.quality.tri_area", false]], "tri_skewness() (in module mymesh.quality)": [[265, "mymesh.quality.tri_skewness", false]], "triangle() (in module mymesh.delaunay)": [[177, "mymesh.delaunay.Triangle", false]], "triangleboxintersection() (in module mymesh.rays)": [[299, "mymesh.rays.TriangleBoxIntersection", false]], "trianglestrianglesintersection() (in module mymesh.rays)": [[302, "mymesh.rays.TrianglesTrianglesIntersection", false]], "trianglestrianglesintersectionpts() (in module mymesh.rays)": [[303, "mymesh.rays.TrianglesTrianglesIntersectionPts", false]], "triangletriangleintersection() (in module mymesh.rays)": [[300, "mymesh.rays.TriangleTriangleIntersection", false]], "triangletriangleintersectionpt() (in module mymesh.rays)": [[301, "mymesh.rays.TriangleTriangleIntersectionPt", false]], "triangulate() (in module mymesh.delaunay)": [[178, "mymesh.delaunay.Triangulate", false]], "trisurfvol() (in module mymesh.utils)": [[414, "mymesh.utils.TriSurfVol", false]], "type (mymesh.mesh attribute)": [[24, "mymesh.mesh.Type", false]], "union() (in module mymesh.implicit)": [[217, "mymesh.implicit.union", false]], "unionf() (in module mymesh.implicit)": [[218, "mymesh.implicit.unionf", false]], "unions() (in module mymesh.implicit)": [[219, "mymesh.implicit.unions", false]], "validate() (mymesh.mesh.mesh method)": [[88, "mymesh.mesh.mesh.validate", false]], "valuemapping() (in module mymesh.utils)": [[415, "mymesh.utils.ValueMapping", false]], "verbose (mymesh.mesh attribute)": [[24, "mymesh.mesh.verbose", false]], "view() (in module mymesh.visualize)": [[430, "mymesh.visualize.View", false]], "view() (mymesh.mesh.mesh method)": [[89, "mymesh.mesh.mesh.view", false]], "volume() (in module mymesh.quality)": [[257, "mymesh.quality.Volume", false]], "voxel2im() (in module mymesh.converter)": [[150, "mymesh.converter.voxel2im", false]], "voxel2octree() (in module mymesh.tree)": [[388, "mymesh.tree.Voxel2Octree", false]], "voxelmesh() (in module mymesh.image)": [[183, "mymesh.image.VoxelMesh", false]], "voxelmesh() (in module mymesh.implicit)": [[189, "mymesh.implicit.VoxelMesh", false]], "wdg152linear() (in module mymesh.converter)": [[151, "mymesh.converter.wdg152linear", false]], "wdg2quadratic() (in module mymesh.converter)": [[152, "mymesh.converter.wdg2quadratic", false]], "wedge2edges() (in module mymesh.converter)": [[153, "mymesh.converter.wedge2edges", false]], "wedge2faces() (in module mymesh.converter)": [[154, "mymesh.converter.wedge2faces", false]], "wedge2tet() (in module mymesh.converter)": [[155, "mymesh.converter.wedge2tet", false]], "write() (in module mymesh.image)": [[185, "mymesh.image.write", false]], "write() (mymesh.mesh.mesh method)": [[90, "mymesh.mesh.mesh.write", false]], "xplane() (in module mymesh.implicit)": [[220, "mymesh.implicit.xplane", false]], "yplane() (in module mymesh.implicit)": [[221, "mymesh.implicit.yplane", false]], "zplane() (in module mymesh.implicit)": [[222, "mymesh.implicit.zplane", false]]}, "objects": {"": [[0, 0, 0, "-", "mymesh"]], "mymesh": [[14, 0, 0, "-", "booleans"], [15, 0, 0, "-", "contour"], [16, 0, 0, "-", "converter"], [17, 0, 0, "-", "curvature"], [18, 0, 0, "-", "delaunay"], [447, 1, 1, "", "demo_image"], [448, 1, 1, "", "demo_mesh"], [21, 0, 0, "-", "image"], [22, 0, 0, "-", "implicit"], [23, 0, 0, "-", "improvement"], [24, 2, 1, "", "mesh"], [91, 0, 0, "-", "primitives"], [92, 0, 0, "-", "quality"], [93, 0, 0, "-", "rays"], [94, 0, 0, "-", "register"], [95, 0, 0, "-", "tree"], [96, 0, 0, "-", "utils"], [97, 0, 0, "-", "visualize"]], "mymesh.booleans": [[98, 1, 1, "", "MeshBooleans"], [99, 1, 1, "", "SplitMesh"]], "mymesh.contour": [[100, 1, 1, "", "Adaptive"], [101, 1, 1, "", "MarchingCubes"], [102, 1, 1, "", "MarchingCubesImage"], [103, 1, 1, "", "MarchingElements"], [104, 1, 1, "", "MarchingSquares"], [105, 1, 1, "", "MarchingSquaresImage"], [106, 1, 1, "", "MarchingTetrahedra"], [107, 1, 1, "", "MarchingTriangles"]], "mymesh.converter": [[108, 1, 1, "", "EdgesByElement"], [109, 1, 1, "", "edge2quadratic"], [110, 1, 1, "", "edge32linear"], [111, 1, 1, "", "edges2unique"], [112, 1, 1, "", "faces2surface"], [113, 1, 1, "", "faces2unique"], [114, 1, 1, "", "hex202linear"], [115, 1, 1, "", "hex2edges"], [116, 1, 1, "", "hex2faces"], [117, 1, 1, "", "hex2quadratic"], [118, 1, 1, "", "hex2tet"], [119, 1, 1, "", "hexsubdivide"], [120, 1, 1, "", "im2voxel"], [121, 1, 1, "", "linear2quadratic"], [122, 1, 1, "", "mesh2im"], [123, 1, 1, "", "polygon2edges"], [124, 1, 1, "", "pyr132linear"], [125, 1, 1, "", "pyr2quadratic"], [126, 1, 1, "", "pyramid2edges"], [127, 1, 1, "", "pyramid2faces"], [128, 1, 1, "", "pyramid2tet"], [129, 1, 1, "", "quad2edges"], [130, 1, 1, "", "quad2quadratic"], [131, 1, 1, "", "quad2tri"], [132, 1, 1, "", "quad82linear"], [133, 1, 1, "", "quadratic2linear"], [134, 1, 1, "", "solid2edges"], [135, 1, 1, "", "solid2faces"], [136, 1, 1, "", "solid2surface"], [137, 1, 1, "", "solid2tets"], [138, 1, 1, "", "surf2dual"], [139, 1, 1, "", "surf2edges"], [140, 1, 1, "", "surf2tris"], [141, 1, 1, "", "surf2voxel"], [142, 1, 1, "", "tet102linear"], [143, 1, 1, "", "tet2edges"], [144, 1, 1, "", "tet2faces"], [145, 1, 1, "", "tet2quadratic"], [146, 1, 1, "", "tetsubdivide"], [147, 1, 1, "", "tri2edges"], [148, 1, 1, "", "tri2quadratic"], [149, 1, 1, "", "tri62linear"], [150, 1, 1, "", "voxel2im"], [151, 1, 1, "", "wdg152linear"], [152, 1, 1, "", "wdg2quadratic"], [153, 1, 1, "", "wedge2edges"], [154, 1, 1, "", "wedge2faces"], [155, 1, 1, "", "wedge2tet"]], "mymesh.curvature": [[156, 1, 1, "", "AnalyticalCurvature"], [157, 1, 1, "", "CubicFit"], [158, 1, 1, "", "Curvedness"], [159, 1, 1, "", "GaussianCurvature"], [160, 1, 1, "", "ImageCurvature"], [161, 1, 1, "", "MeanCurvature"], [162, 1, 1, "", "NormCurve"], [163, 1, 1, "", "QuadFit"], [164, 1, 1, "", "ShapeCategory"], [165, 1, 1, "", "ShapeIndex"]], "mymesh.delaunay": [[166, 1, 1, "", "Alpha2d"], [167, 1, 1, "", "Alpha3d"], [168, 1, 1, "", "AlphaPeel3d"], [169, 1, 1, "", "AlphaShape"], [170, 1, 1, "", "BowyerWatson2d"], [171, 1, 1, "", "BowyerWatson3d"], [172, 1, 1, "", "ConvexHull"], [173, 1, 1, "", "FanTriangulation"], [174, 1, 1, "", "GiftWrapping"], [175, 1, 1, "", "SciPy"], [176, 1, 1, "", "Tetrahedralize"], [177, 1, 1, "", "Triangle"], [178, 1, 1, "", "Triangulate"]], "mymesh.image": [[179, 1, 1, "", "PixelMesh"], [180, 1, 1, "", "SurfaceMesh"], [181, 1, 1, "", "SurfaceNodeOptimization"], [182, 1, 1, "", "TetMesh"], [183, 1, 1, "", "VoxelMesh"], [184, 1, 1, "", "read"], [185, 1, 1, "", "write"]], "mymesh.implicit": [[186, 1, 1, "", "SurfaceMesh"], [187, 1, 1, "", "SurfaceNodeOptimization"], [188, 1, 1, "", "TetMesh"], [189, 1, 1, "", "VoxelMesh"], [190, 1, 1, "", "box"], [191, 1, 1, "", "cylinder"], [192, 1, 1, "", "diamond"], [193, 1, 1, "", "diff"], [194, 1, 1, "", "difff"], [195, 1, 1, "", "diffs"], [196, 1, 1, "", "grid2fun"], [197, 1, 1, "", "grid2grad"], [198, 1, 1, "", "gyroid"], [199, 1, 1, "", "intersection"], [200, 1, 1, "", "intersectionf"], [201, 1, 1, "", "intersections"], [202, 1, 1, "", "lidinoid"], [203, 1, 1, "", "mesh2udf"], [204, 1, 1, "", "mixed_topology"], [205, 1, 1, "", "neovius"], [206, 1, 1, "", "offset"], [207, 1, 1, "", "plane"], [208, 1, 1, "", "primitive"], [209, 1, 1, "", "rMax"], [210, 1, 1, "", "rMin"], [211, 1, 1, "", "sphere"], [212, 1, 1, "", "thicken"], [213, 1, 1, "", "thickenf"], [214, 1, 1, "", "thickens"], [215, 1, 1, "", "torus"], [216, 1, 1, "", "tpms"], [217, 1, 1, "", "union"], [218, 1, 1, "", "unionf"], [219, 1, 1, "", "unions"], [220, 1, 1, "", "xplane"], [221, 1, 1, "", "yplane"], [222, 1, 1, "", "zplane"]], "mymesh.improvement": [[223, 1, 1, "", "Contract"], [224, 1, 1, "", "GeoTransformSmoothing"], [225, 1, 1, "", "LocalLaplacianSmoothing"], [226, 1, 1, "", "NodeSpringSmoothing"], [227, 1, 1, "", "SegmentSpringSmoothing"], [228, 1, 1, "", "SmartLaplacianSmoothing"], [229, 1, 1, "", "TangentialLaplacianSmoothing"], [230, 1, 1, "", "TetFlip"], [231, 1, 1, "", "TetImprove"], [232, 1, 1, "", "TetSplit"]], "mymesh.mesh": [[24, 3, 1, "", "EdgeSets"], [24, 3, 1, "", "ElemData"], [24, 3, 1, "", "ElemSets"], [24, 3, 1, "", "FaceSets"], [24, 3, 1, "", "NodeConn"], [24, 3, 1, "", "NodeCoords"], [24, 3, 1, "", "NodeData"], [24, 3, 1, "", "NodeSets"], [24, 3, 1, "", "Type"], [24, 3, 1, "", "verbose"]], "mymesh.mesh.mesh": [[25, 4, 1, "", "Boundary"], [26, 4, 1, "", "BoundaryConn"], [27, 4, 1, "", "BoundaryNodes"], [28, 4, 1, "", "Centroids"], [29, 5, 1, "", "Clip"], [30, 5, 1, "", "Contour"], [31, 5, 1, "", "CreateBoundaryLayer"], [32, 5, 1, "", "Crop"], [33, 4, 1, "", "EdgeConn"], [34, 4, 1, "", "EdgeElemConn"], [35, 4, 1, "", "Edges"], [36, 4, 1, "", "ElemConn"], [37, 4, 1, "", "ElemNeighbors"], [38, 4, 1, "", "ElemNormals"], [39, 4, 1, "", "ElemType"], [40, 4, 1, "", "EulerCharacteristic"], [41, 4, 1, "", "FaceConn"], [42, 4, 1, "", "FaceElemConn"], [43, 4, 1, "", "Faces"], [44, 4, 1, "", "Genus"], [45, 4, 1, "", "MeshNodes"], [46, 5, 1, "", "Mirror"], [47, 4, 1, "", "ND"], [48, 4, 1, "", "NEdge"], [49, 4, 1, "", "NElem"], [50, 4, 1, "", "NFace"], [51, 4, 1, "", "NNode"], [52, 4, 1, "", "NodeNeighbors"], [53, 4, 1, "", "NodeNormals"], [54, 4, 1, "", "NodeNormalsMethod"], [55, 5, 1, "", "RenumberFacesBySet"], [56, 5, 1, "", "RenumberNodesBySet"], [57, 4, 1, "", "SurfConn"], [58, 4, 1, "", "SurfElemConn"], [59, 4, 1, "", "SurfNodeNeighbors"], [60, 4, 1, "", "SurfNodes"], [61, 4, 1, "", "Surface"], [62, 5, 1, "", "Threshold"], [63, 4, 1, "", "aabb"], [64, 5, 1, "", "addEdges"], [65, 5, 1, "", "addElems"], [66, 5, 1, "", "addFaces"], [67, 5, 1, "", "addNodes"], [68, 4, 1, "", "bounds"], [69, 4, 1, "", "cells"], [70, 5, 1, "", "cleanup"], [71, 5, 1, "", "copy"], [72, 5, 1, "", "getCurvature"], [73, 5, 1, "", "getQuality"], [74, 5, 1, "", "identify_type"], [75, 5, 1, "", "imread"], [76, 5, 1, "", "merge"], [77, 5, 1, "", "mesh2dmesh"], [78, 5, 1, "", "meshio2mymesh"], [79, 4, 1, "", "mvbb"], [80, 5, 1, "", "mymesh2meshio"], [81, 5, 1, "", "plot"], [82, 4, 1, "", "points"], [83, 5, 1, "", "read"], [84, 5, 1, "", "removeElems"], [85, 5, 1, "", "reset"], [86, 5, 1, "", "to_meshio"], [87, 5, 1, "", "to_pyvista"], [88, 5, 1, "", "validate"], [89, 5, 1, "", "view"], [90, 5, 1, "", "write"]], "mymesh.primitives": [[233, 1, 1, "", "Box"], [234, 1, 1, "", "Circle"], [235, 1, 1, "", "CirclePt"], [236, 1, 1, "", "Cylinder"], [237, 1, 1, "", "Extrude"], [238, 1, 1, "", "Grid"], [239, 1, 1, "", "Grid2D"], [240, 1, 1, "", "Line"], [241, 1, 1, "", "Multiline"], [242, 1, 1, "", "Plane"], [243, 1, 1, "", "Revolve"], [244, 1, 1, "", "Sphere"], [245, 1, 1, "", "Torus"]], "mymesh.quality": [[246, 1, 1, "", "Area"], [247, 1, 1, "", "AspectRatio"], [248, 1, 1, "", "InverseOrthogonalQuality"], [249, 1, 1, "", "InverseOrthogonality"], [250, 1, 1, "", "MaxDihedral"], [251, 1, 1, "", "MeanRatio"], [252, 1, 1, "", "MinDihedral"], [253, 1, 1, "", "OrthogonalQuality"], [254, 1, 1, "", "Orthogonality"], [255, 1, 1, "", "Skewness"], [256, 1, 1, "", "SurfDihedralAngles"], [257, 1, 1, "", "Volume"], [258, 1, 1, "", "dihedralAngles"], [259, 1, 1, "", "equiangular_skewness"], [260, 1, 1, "", "quad_skewness"], [261, 1, 1, "", "tet_circumradius"], [262, 1, 1, "", "tet_vol_skewness"], [263, 1, 1, "", "tet_volume"], [264, 1, 1, "", "tri_area"], [265, 1, 1, "", "tri_skewness"]], "mymesh.rays": [[266, 1, 1, "", "BoundaryBoundaryIntersection"], [267, 1, 1, "", "BoxBoxIntersection"], [268, 1, 1, "", "BoxTrianglesIntersection"], [269, 1, 1, "", "PlaneBoxIntersection"], [270, 1, 1, "", "PlaneSurfIntersection"], [271, 1, 1, "", "PlaneTriangleIntersection"], [272, 1, 1, "", "PlaneTrianglesIntersection"], [273, 1, 1, "", "PointInBoundary"], [274, 1, 1, "", "PointInBox"], [275, 1, 1, "", "PointInBox2D"], [276, 1, 1, "", "PointInSurf"], [277, 1, 1, "", "PointInTet"], [278, 1, 1, "", "PointInTri"], [279, 1, 1, "", "PointsInSurf"], [280, 1, 1, "", "PointsInTris"], [281, 1, 1, "", "PointsInVoxel"], [282, 1, 1, "", "RayBoundaryIntersection"], [283, 1, 1, "", "RayBoxIntersection"], [284, 1, 1, "", "RayBoxesIntersection"], [285, 1, 1, "", "RayOctreeIntersection"], [286, 1, 1, "", "RaySegmentIntersection"], [287, 1, 1, "", "RaySegmentsIntersection"], [288, 1, 1, "", "RaySurfIntersection"], [289, 1, 1, "", "RayTriangleIntersection"], [290, 1, 1, "", "RayTrianglesIntersection"], [291, 1, 1, "", "RaysSurfIntersection"], [292, 1, 1, "", "RaysTrianglesIntersection"], [293, 1, 1, "", "SegmentBox2DIntersection"], [294, 1, 1, "", "SegmentBoxIntersection"], [295, 1, 1, "", "SegmentSegmentIntersection"], [296, 1, 1, "", "SegmentsSegmentsIntersection"], [297, 1, 1, "", "SurfSelfIntersection"], [298, 1, 1, "", "SurfSurfIntersection"], [299, 1, 1, "", "TriangleBoxIntersection"], [300, 1, 1, "", "TriangleTriangleIntersection"], [301, 1, 1, "", "TriangleTriangleIntersectionPt"], [302, 1, 1, "", "TrianglesTrianglesIntersection"], [303, 1, 1, "", "TrianglesTrianglesIntersectionPts"]], "mymesh.register": [[304, 1, 1, "", "AxisAlignImage"], [305, 1, 1, "", "AxisAlignPoints"], [306, 1, 1, "", "ICP"], [307, 1, 1, "", "Image2Image"], [308, 1, 1, "", "ImageOverlay"], [309, 1, 1, "", "Mesh2Mesh"], [310, 1, 1, "", "Point2Point"], [311, 1, 1, "", "R2d"], [312, 1, 1, "", "R3d"], [313, 1, 1, "", "S2d"], [314, 1, 1, "", "S3d"], [315, 1, 1, "", "Sh2d"], [316, 1, 1, "", "Sh3d"], [317, 1, 1, "", "T2d"], [318, 1, 1, "", "T3d"], [319, 1, 1, "", "affine"], [320, 1, 1, "", "affine2d"], [321, 1, 1, "", "closest_point_MSE"], [322, 1, 1, "", "dice"], [323, 1, 1, "", "hausdorff"], [324, 1, 1, "", "jaccard"], [325, 1, 1, "", "mutual_information"], [326, 1, 1, "", "optimize"], [327, 1, 1, "", "rigid"], [328, 1, 1, "", "rigid2d"], [329, 1, 1, "", "rotation"], [330, 1, 1, "", "rotation2d"], [331, 1, 1, "", "similarity"], [332, 1, 1, "", "similarity2d"], [333, 1, 1, "", "symmetric_closest_point_MSE"], [334, 1, 1, "", "transform_image"], [335, 1, 1, "", "transform_points"], [336, 1, 1, "", "translation"], [337, 1, 1, "", "translation2d"]], "mymesh.tree": [[338, 1, 1, "", "Edges2Quadtree"], [339, 1, 1, "", "Function2Octree"], [340, 1, 1, "", "Octree2Dual"], [341, 1, 1, "", "Octree2Voxel"], [342, 2, 1, "", "OctreeNode"], [359, 1, 1, "", "Points2Octree"], [360, 1, 1, "", "Points2Quadtree"], [361, 1, 1, "", "Print"], [362, 1, 1, "", "Quadtree2Dual"], [363, 1, 1, "", "Quadtree2Pixel"], [364, 2, 1, "", "QuadtreeNode"], [379, 1, 1, "", "SearchOctree"], [380, 1, 1, "", "SearchOctreeTri"], [381, 1, 1, "", "Surface2Octree"], [382, 2, 1, "", "TreeNode"], [388, 1, 1, "", "Voxel2Octree"], [389, 1, 1, "", "getAllLeaf"]], "mymesh.tree.OctreeNode": [[343, 5, 1, "", "ContainsBoxes"], [344, 5, 1, "", "ContainsPts"], [345, 5, 1, "", "ContainsTris"], [346, 5, 1, "", "PointInNode"], [347, 5, 1, "", "PointsInNode"], [348, 5, 1, "", "clearData"], [349, 5, 1, "", "getLevel"], [350, 5, 1, "", "getLimits"], [351, 5, 1, "", "getMaxDepth"], [352, 5, 1, "", "getVertices"], [353, 5, 1, "", "hasChildren"], [354, 5, 1, "", "makeChildren"], [355, 5, 1, "", "makeChildrenBoxes"], [356, 5, 1, "", "makeChildrenPts"], [357, 5, 1, "", "makeChildrenTris"], [358, 5, 1, "", "prune"]], "mymesh.tree.QuadtreeNode": [[365, 5, 1, "", "ContainsEdges"], [366, 5, 1, "", "ContainsPts"], [367, 5, 1, "", "PointInNode"], [368, 5, 1, "", "PointsInNode"], [369, 5, 1, "", "clearData"], [370, 5, 1, "", "getLevel"], [371, 5, 1, "", "getLimits"], [372, 5, 1, "", "getMaxDepth"], [373, 5, 1, "", "getVertices"], [374, 5, 1, "", "hasChildren"], [375, 5, 1, "", "makeChildren"], [376, 5, 1, "", "makeChildrenEdges"], [377, 5, 1, "", "makeChildrenPts"], [378, 5, 1, "", "prune"]], "mymesh.tree.TreeNode": [[383, 5, 1, "", "clearData"], [384, 5, 1, "", "getLevel"], [385, 5, 1, "", "getMaxDepth"], [386, 5, 1, "", "hasChildren"], [387, 5, 1, "", "prune"]], "mymesh.utils": [[390, 1, 1, "", "AABB"], [391, 1, 1, "", "BaryTet"], [392, 1, 1, "", "BaryTri"], [393, 1, 1, "", "BaryTris"], [394, 1, 1, "", "CalcFaceNormal"], [395, 1, 1, "", "Centroids"], [396, 1, 1, "", "CleanupDegenerateElements"], [397, 1, 1, "", "DeleteDegenerateElements"], [398, 1, 1, "", "DeleteDuplicateNodes"], [399, 1, 1, "", "DetectFeatures"], [400, 1, 1, "", "DilateVoxel"], [401, 1, 1, "", "ErodeVoxel"], [402, 1, 1, "", "ExtractRagged"], [403, 1, 1, "", "Face2NodeNormal"], [404, 1, 1, "", "MVBB"], [405, 1, 1, "", "MergeMesh"], [406, 1, 1, "", "MirrorMesh"], [407, 1, 1, "", "PadRagged"], [408, 1, 1, "", "Project2Surface"], [409, 1, 1, "", "RelabelNodes"], [410, 1, 1, "", "SortRaggedByLength"], [411, 1, 1, "", "SplitRaggedByLength"], [412, 1, 1, "", "SurfMapping"], [413, 1, 1, "", "TetMeshVol"], [414, 1, 1, "", "TriSurfVol"], [415, 1, 1, "", "ValueMapping"], [416, 1, 1, "", "getConnectedElements"], [417, 1, 1, "", "getConnectedNodes"], [418, 1, 1, "", "getElemConnectivity"], [419, 1, 1, "", "getElemNeighbors"], [420, 1, 1, "", "getNodeNeighborhood"], [421, 1, 1, "", "getNodeNeighborhoodByRadius"], [422, 1, 1, "", "getNodeNeighbors"], [423, 1, 1, "", "identify_elem"], [424, 1, 1, "", "identify_type"], [425, 1, 1, "", "makePyramidLayer"]], "mymesh.visualize": [[426, 1, 1, "", "FaceColor"], [427, 1, 1, "", "GetTheme"], [428, 1, 1, "", "ParseColor"], [429, 1, 1, "", "Subplot"], [430, 1, 1, "", "View"], [431, 1, 1, "", "set_vispy_backend"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "method", "Python method"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:property", "5": "py:method"}, "terms": {"": [7, 18, 20, 62, 64, 65, 66, 67, 95, 100, 138, 160, 177, 178, 180, 192, 193, 198, 199, 202, 205, 206, 208, 212, 216, 217, 223, 231, 232, 283, 284, 289, 293, 294, 301, 303, 307, 308, 313, 314, 326, 380, 399, 423, 432, 435, 440, 441, 443, 444, 445, 448, 451, 452, 454, 458, 459], "0": [4, 6, 7, 8, 9, 11, 13, 19, 22, 29, 46, 75, 92, 100, 101, 102, 103, 104, 105, 106, 107, 118, 120, 122, 128, 150, 155, 164, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 198, 202, 205, 208, 209, 210, 211, 215, 220, 221, 222, 223, 224, 225, 226, 227, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 248, 249, 253, 254, 255, 259, 260, 262, 265, 266, 272, 273, 276, 279, 282, 286, 287, 289, 290, 292, 295, 296, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 324, 327, 328, 329, 330, 331, 332, 339, 342, 349, 355, 356, 357, 364, 370, 376, 377, 382, 384, 397, 398, 399, 410, 411, 423, 430, 432, 433, 434, 437, 438, 441, 442, 443, 446, 447, 450, 451, 452, 459, 460], "00": [6, 11, 13, 446], "000": 13, "00012": 443, "001": 397, "002": 443, "0020": 443, "005": 443, "00529": 443, "00843": 443, "01": [181, 315, 316, 339, 443], "012": 312, "0181": 443, "01880": 443, "019": 443, "0190": 443, "02": [316, 399], "024": 443, "0262": 443, "027": 443, "03": 399, "03581": 443, "0363": 443, "04": [8, 11, 446], "05": [7, 122, 186, 187, 188, 189, 190, 192, 198, 202, 205, 208, 223, 238, 239, 434, 438, 443], "06": [289, 443], "08": [11, 98, 176, 178, 273, 276, 279, 306, 445, 446], "08831": 443, "09": 443, "1": [4, 6, 7, 8, 9, 29, 30, 31, 46, 64, 65, 66, 72, 75, 92, 100, 102, 105, 106, 118, 120, 122, 128, 150, 155, 160, 164, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 198, 202, 204, 205, 208, 211, 215, 216, 220, 221, 222, 223, 225, 226, 227, 231, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 247, 248, 249, 253, 254, 255, 259, 260, 262, 265, 283, 284, 289, 293, 294, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 322, 324, 326, 327, 329, 330, 331, 332, 334, 339, 398, 399, 401, 402, 405, 407, 410, 411, 412, 415, 423, 425, 428, 430, 432, 433, 434, 437, 438, 441, 442, 443, 450, 451, 452, 454, 457, 459, 460], "10": [4, 7, 31, 70, 74, 98, 106, 107, 117, 122, 142, 145, 225, 229, 233, 234, 235, 236, 244, 245, 268, 283, 284, 289, 290, 292, 293, 294, 299, 300, 301, 302, 303, 359, 360, 410, 411, 424, 435, 443, 450, 459], "100": [180, 182, 183, 228, 237, 306, 307, 326], "1002": 443, "1007": [31, 443], "1016": 443, "10487472": [300, 301, 302, 303, 443], "10487487": 443, "1056": 443, "1080": [300, 301, 302, 303, 443], "10867651": [300, 301, 302, 303, 443], "1093": 443, "1097": 443, "11": 450, "1109": 443, "1111": 443, "1145": [98, 268, 283, 284, 289, 290, 292, 293, 294, 299, 443], "1148": 443, "115": 443, "117": 443, "1198555": [268, 283, 284, 289, 290, 292, 293, 294, 299, 443], "1198746": [289, 290, 292, 443], "1198747": [268, 299, 443], "1198748": [283, 284, 293, 294, 443], "12": [99, 106, 107, 277, 278, 280, 316, 397, 398, 434, 443, 450], "123811": 443, "126": 443, "13": [124, 125, 435, 450], "131": 443, "13th": 443, "14": [9, 11, 76, 266, 270, 272, 282, 288, 290, 291, 292, 297, 298, 300, 301, 302, 303, 398, 450], "144": 443, "1467": 443, "14th": 443, "15": [151, 152, 435, 450], "150": 443, "1571135649789292416": 443, "15904": [98, 443], "15922": [98, 443], "16": 450, "160": 443, "161": 443, "162": 443, "1620080402": 443, "163": 443, "1641": 443, "164360": 443, "164427": 443, "1652": 443, "166": 443, "167": 443, "169": 443, "170": 443, "172": 443, "179": 397, "18": [31, 232, 443], "180": 397, "1805": 443, "182": 443, "19": 443, "1908": 443, "1932409": 443, "1945": 443, "1948": 443, "195": 443, "1973": 443, "1974": 443, "1981": 443, "1986": 443, "1987": 443, "199": 443, "1991": 443, "1992": [158, 164, 165, 443], "1993": 443, "1994": 443, "1995": 443, "1996": 443, "1997": [300, 301, 302, 303, 443], "1998": 443, "1d": [186, 188, 189, 436, 444], "1e": [70, 76, 98, 99, 106, 107, 176, 178, 187, 225, 226, 228, 229, 266, 270, 272, 273, 276, 277, 278, 279, 280, 282, 288, 289, 290, 291, 292, 297, 298, 300, 301, 302, 303, 306, 326, 397, 398], "1to14": 155, "1to2": 128, "1to20": 128, "1to24": [118, 128, 146], "1to2c": 128, "1to3": 155, "1to36": 155, "1to3c": 155, "1to4": [128, 146], "1to5": 118, "1to6": 118, "2": [4, 7, 9, 44, 100, 102, 106, 109, 110, 128, 131, 150, 155, 164, 169, 170, 172, 175, 176, 178, 184, 186, 188, 191, 209, 210, 212, 213, 223, 224, 225, 230, 232, 234, 235, 236, 237, 243, 244, 245, 264, 268, 275, 282, 284, 286, 287, 295, 296, 299, 300, 301, 302, 303, 304, 305, 307, 308, 312, 319, 327, 329, 331, 335, 337, 338, 339, 350, 360, 365, 371, 376, 398, 399, 405, 410, 411, 412, 415, 424, 425, 430, 433, 434, 435, 437, 438, 443, 450, 451, 452, 456, 459], "20": [114, 117, 226, 234, 235, 236, 244, 245, 316, 326, 434, 435, 443], "2000": [227, 443], "20000330": 443, "2001": [414, 443], "2002": [31, 443], "2003": 443, "2004": [157, 162, 163, 443], "2005": [156, 160, 268, 283, 284, 289, 290, 292, 293, 294, 299, 443], "2008": 443, "2009": 443, "201": 443, "2010": 443, "2015": 443, "2016": 443, "2018": 443, "2019": 443, "2020": 443, "2024": 443, "2025": 445, "203": 443, "209": 443, "21": [4, 6, 316, 443, 446], "216": 443, "22": 443, "220": 443, "221": 443, "222": 443, "23": 443, "230": 443, "2307": 443, "24": [261, 443], "243": 11, "24th": 443, "25": [8, 9, 180, 182, 183, 215, 223, 231, 245, 300, 301, 302, 303, 399, 434, 443], "250": 307, "255": [19, 185, 307, 308, 447], "256": 450, "258734": 443, "258849": 443, "26": 443, "2629697": 443, "286": 443, "28807934": 276, "291": 443, "297": 443, "2d": [24, 64, 65, 66, 105, 134, 136, 150, 166, 169, 170, 172, 173, 174, 175, 178, 179, 185, 191, 237, 242, 243, 273, 282, 284, 292, 307, 328, 330, 337, 407, 414, 432, 436, 437, 443], "2exi": 451, "2fxy": 451, "2x_ii": 451, "2x_iy_i": 451, "2y": 451, "2y_0": 451, "2y_1": 451, "2y_i": 451, "2y_n": 451, "3": [4, 7, 11, 67, 74, 106, 109, 110, 128, 134, 135, 147, 148, 149, 155, 164, 170, 172, 173, 175, 176, 178, 185, 187, 215, 223, 225, 226, 230, 232, 233, 241, 261, 263, 264, 268, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 285, 286, 287, 288, 290, 291, 292, 295, 296, 297, 302, 303, 304, 305, 308, 326, 329, 330, 334, 335, 336, 337, 344, 345, 356, 357, 360, 366, 377, 393, 396, 397, 398, 410, 411, 424, 433, 434, 435, 437, 438, 443, 450, 451, 452, 456, 459], "30": [300, 301, 302, 303, 443], "302": 443, "3197517": 443, "32": [227, 443], "3201353": 443, "324": 443, "33": [100, 101, 102, 180, 186, 443], "336156": 443, "338193": 443, "338200": 443, "3386569": 443, "3392385": 443, "34": 443, "349": 443, "35": [4, 446], "36": 9, "368": 443, "37": 443, "37401": 443, "37422": 443, "376": 443, "381": 443, "384": 443, "39": 443, "3c647": 443, "3d": [20, 22, 75, 102, 118, 120, 122, 128, 136, 137, 150, 155, 160, 167, 168, 169, 171, 172, 175, 176, 184, 185, 186, 188, 211, 215, 216, 237, 238, 243, 268, 269, 273, 274, 275, 276, 279, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 297, 299, 307, 314, 327, 329, 336, 379, 414, 432, 436, 437, 443, 448], "3dx": 451, "3e3": 443, "3gy": 451, "3x3": [311, 313, 315, 317, 334, 380], "3x_i": 451, "3y_i": 451, "4": [4, 9, 117, 121, 128, 129, 130, 131, 132, 134, 135, 142, 143, 144, 145, 146, 155, 164, 185, 223, 230, 232, 261, 263, 304, 305, 306, 309, 310, 327, 329, 335, 336, 352, 373, 396, 398, 410, 411, 422, 433, 434, 435, 437, 443, 446, 450], "407": 443, "412": 443, "43": 443, "45": 443, "46": 443, "463": [4, 6, 446], "4x4": [312, 314, 316, 318, 334], "5": [7, 8, 9, 74, 75, 100, 120, 122, 124, 125, 126, 127, 128, 134, 135, 155, 164, 179, 180, 182, 183, 184, 186, 187, 188, 223, 231, 240, 244, 304, 307, 309, 310, 338, 339, 381, 398, 410, 411, 424, 433, 435, 441, 442, 443, 450, 451, 454], "50": 245, "50040": 443, "501": 4, "55": [9, 283, 284, 293, 294, 443], "557": 443, "560840": 443, "564": 443, "577": [7, 11, 446], "58": 443, "595": 4, "5987": 443, "6": [74, 100, 134, 135, 148, 149, 151, 152, 153, 154, 155, 164, 186, 188, 189, 225, 227, 228, 229, 263, 289, 307, 309, 327, 328, 339, 410, 411, 424, 433, 435, 443, 450, 454, 459], "60": [283, 284, 293, 294, 443], "600": 430, "63": 443, "632": 443, "647": [227, 443], "658": 443, "66": [31, 443], "668": [227, 443], "679": 443, "696": 443, "7": [9, 100, 106, 164, 410, 411, 443, 450], "706": 446, "72323857": 276, "73": 443, "75": 289, "7721": 443, "781606": 443, "781653": 443, "7823": 443, "7830": 443, "79": [31, 443], "8": [8, 74, 98, 114, 115, 116, 118, 119, 130, 132, 134, 135, 164, 233, 273, 276, 279, 352, 410, 411, 424, 435, 443, 450, 458], "800": 430, "806": [9, 11, 446], "82": 397, "83": 443, "860": [8, 11, 446], "8659": 443, "8856": 443, "9": [9, 190, 255, 410, 411, 433, 434, 438, 443, 450], "90020": 443, "90076": 443, "91396855": 276, "92": 443, "966131": 443, "966134": 443, "967": 443, "990": 443, "A": [4, 13, 30, 31, 74, 109, 117, 118, 125, 128, 130, 145, 148, 152, 155, 158, 164, 165, 204, 246, 261, 264, 268, 283, 284, 293, 294, 304, 307, 309, 310, 327, 329, 330, 336, 337, 412, 424, 434, 436, 437, 442, 443, 444, 445, 450, 451, 452, 454], "As": [20, 448, 452, 454], "At": [46, 340, 362], "BY": 326, "By": [8, 32, 46, 54, 85, 100, 101, 102, 103, 104, 105, 106, 107, 112, 160, 175, 186, 187, 188, 223, 225, 226, 228, 229, 236, 237, 238, 239, 240, 242, 243, 244, 273, 286, 287, 295, 296, 304, 307, 308, 326, 396, 423, 430, 451], "For": [4, 33, 34, 36, 37, 38, 40, 41, 42, 44, 52, 97, 102, 104, 105, 106, 118, 128, 134, 135, 155, 172, 181, 184, 185, 186, 187, 188, 192, 198, 202, 205, 206, 208, 212, 213, 225, 226, 228, 229, 236, 243, 246, 247, 248, 249, 253, 254, 255, 257, 273, 276, 279, 289, 290, 292, 304, 305, 309, 310, 311, 312, 326, 393, 396, 400, 415, 416, 417, 419, 423, 430, 434, 437, 438, 441, 442, 450, 451, 454, 457, 458, 459, 460], "If": [1, 3, 24, 29, 30, 31, 32, 45, 46, 48, 50, 54, 57, 62, 64, 65, 66, 67, 73, 75, 81, 85, 88, 90, 98, 99, 101, 102, 103, 104, 105, 106, 107, 111, 112, 113, 120, 121, 122, 134, 135, 137, 138, 140, 157, 160, 166, 167, 168, 169, 170, 172, 173, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 220, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 261, 262, 266, 273, 279, 286, 287, 289, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 326, 334, 338, 339, 341, 348, 360, 363, 369, 379, 381, 383, 396, 405, 412, 415, 416, 417, 419, 425, 430, 431, 434, 436, 441, 452, 459], "In": [20, 74, 157, 162, 163, 277, 278, 280, 289, 290, 292, 402, 407, 410, 411, 415, 424, 430, 433, 434, 438, 444, 445, 448, 451, 452], "It": [31, 134, 228, 326, 438, 445, 451, 452, 454, 458], "No": [101, 102, 103, 104, 105, 106, 107, 354, 375], "Not": [118, 128, 155, 307, 309, 310, 419], "On": 443, "One": [326, 442, 443, 450], "Or": 432, "Such": 8, "That": 272, "The": [4, 7, 20, 22, 24, 31, 46, 71, 95, 99, 100, 102, 105, 111, 113, 118, 119, 122, 134, 135, 137, 138, 141, 146, 155, 179, 183, 186, 187, 188, 189, 197, 212, 213, 215, 223, 225, 227, 232, 236, 244, 245, 251, 304, 305, 307, 308, 323, 326, 334, 338, 339, 351, 359, 360, 372, 381, 385, 393, 396, 398, 400, 401, 403, 406, 411, 412, 416, 417, 425, 431, 433, 436, 440, 441, 442, 443, 444, 445, 448, 449, 450, 451, 452, 454, 456, 457, 458, 459], "There": [53, 134, 432, 436, 441, 442, 445, 454], "These": [9, 64, 65, 66, 67, 95, 138, 292, 326, 350, 352, 371, 410, 411, 432, 434, 435, 444, 450, 452, 457], "To": [4, 8, 40, 122, 177, 223, 236, 425, 439, 442, 445, 452, 454, 459], "Will": [134, 135, 268, 276, 279, 299, 408, 412, 415], "With": [292, 410], "_": [4, 441, 451], "_ax": 81, "_description_": [224, 292, 339, 430], "_edg": 64, "_face": 66, "_i": [451, 457, 460], "_j": [457, 460], "_mesh": [78, 80, 86], "_type_": [224, 241, 292, 339, 430], "a1": 434, "a2": 434, "a3": 434, "a_i": [451, 452], "a_x": 452, "aa": 261, "ab": [74, 258, 424, 443], "abil": [179, 180, 182, 183, 186, 188, 189, 233, 236, 237, 238, 239, 240, 242, 243, 244, 245], "abl": [122, 194, 200, 213, 218], "about": [20, 138, 215, 245, 307, 311, 312, 316, 329, 406, 443, 448], "abov": [22, 107, 189, 216, 220, 221, 222, 232, 255, 339, 450, 454], "absolut": [351, 372, 385], "ac": 443, "academ": [1, 443], "acceler": [276, 279, 288, 291, 292], "accept": [438, 457], "access": [19, 20, 90, 103, 410, 442, 445, 447, 448], "accomplish": 451, "accord": [409, 444], "accordingli": 405, "account": 334, "accur": [4, 8, 443, 454], "achiev": [226, 434, 442, 460], "acknowledg": [20, 448], "acm": [98, 268, 283, 284, 289, 290, 292, 293, 294, 299, 443], "across": [1, 46, 452], "activ": [24, 454], "actual": [212, 213], "ad": [64, 65, 66, 67, 118, 128, 137, 155, 227, 232, 441, 452, 454, 456], "adapt": [232, 339, 443], "add": [2, 64, 65, 66, 67, 134, 179, 183, 226, 227, 452], "addit": [2, 4, 106, 111, 113, 186, 188, 189, 307, 309, 310, 326, 410, 419, 444, 450, 451, 454], "addition": [88, 439, 440, 442], "adjac": [37, 52, 101, 102, 103, 104, 105, 106, 107, 157, 225, 228, 229, 256, 300, 301, 302, 303, 399, 410, 422, 450, 452, 456], "admiss": 459, "adopt": [438, 451], "adrian": [443, 452], "advanc": [64, 66, 103, 434], "advantag": [442, 451], "affin": [304, 305, 306, 307, 309, 310, 327, 329, 330, 336, 337], "affine_transform": [304, 307, 334], "after": [65, 225, 228, 229, 231, 232, 304, 305, 459], "ag073671": 445, "against": 458, "agatho": 443, "ahead": 452, "ai": 254, "aid": 443, "aim": [434, 445, 449], "akenin": [268, 299, 443], "al": [232, 453, 459], "alec": 443, "alexand": 443, "algebra": 443, "algorithm": [18, 101, 102, 104, 105, 106, 107, 170, 171, 172, 174, 176, 178, 269, 283, 284, 289, 290, 292, 293, 294, 306, 307, 309, 326, 340, 362, 432, 443, 445, 449, 450, 452, 457, 459], "algorthim": 326, "alia": [69, 82, 86], "alias": [25, 61, 442], "align": [4, 63, 94, 118, 128, 137, 155, 236, 269, 283, 284, 293, 294, 304, 305, 307, 309, 310, 390, 404, 451, 459], "all": [8, 32, 45, 62, 65, 73, 74, 75, 85, 97, 103, 105, 106, 107, 115, 116, 118, 120, 123, 126, 127, 128, 129, 131, 134, 135, 137, 140, 141, 143, 144, 147, 153, 154, 155, 160, 186, 188, 189, 216, 225, 226, 228, 229, 247, 249, 253, 254, 307, 309, 310, 326, 334, 348, 349, 361, 369, 370, 383, 384, 389, 411, 412, 415, 424, 432, 433, 435, 437, 439, 441, 442, 445, 446, 451, 452, 454, 459], "all_nod": 62, "allevi": 434, "allow": [1, 177, 181, 186, 225, 228, 334, 430, 435, 451, 452, 458, 460], "allow_invers": 223, "alohner08": [403, 443], "alon": 451, "along": [29, 31, 99, 101, 102, 103, 104, 105, 106, 107, 184, 220, 221, 222, 225, 233, 236, 243, 244, 326, 408, 434, 442, 450, 459], "alpha": [4, 166, 167, 168, 169, 209, 210, 312, 327, 328, 329, 391, 392, 393, 408, 412, 428, 430, 436], "alpha_0": 452, "alphashap": 436, "alreadi": [57, 64, 65, 66, 304, 307, 308], "also": [7, 8, 17, 20, 121, 133, 134, 240, 243, 300, 301, 302, 303, 409, 435, 436, 437, 445, 448, 450, 452, 453, 454, 458, 460], "alter": [181, 187, 440], "altern": [74, 141, 157, 424, 431, 432, 452], "alwai": [410, 449], "am": [134, 135], "ambigu": [74, 121, 157, 304, 305, 424, 435, 450], "amd": 443, "american": 443, "ami": 443, "amoller05": [268, 299, 443], "among": 452, "amount": [206, 237, 410, 441, 443], "amplitud": 443, "an": [22, 24, 30, 62, 75, 86, 88, 89, 90, 95, 100, 101, 104, 106, 107, 114, 120, 139, 141, 156, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 193, 194, 195, 196, 197, 199, 200, 201, 203, 206, 207, 212, 213, 217, 218, 219, 223, 226, 227, 231, 232, 236, 244, 247, 251, 268, 269, 271, 272, 276, 279, 280, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 326, 334, 335, 338, 339, 340, 341, 351, 354, 359, 360, 362, 363, 372, 375, 381, 385, 388, 396, 397, 399, 403, 408, 412, 415, 419, 420, 421, 430, 431, 433, 435, 436, 439, 441, 442, 443, 444, 445, 449, 450, 451, 452, 454, 456, 458, 459, 460], "analog": [95, 107, 444], "analogi": [226, 227, 443], "analysi": [6, 432, 433, 444, 445, 446], "analyt": 4, "analyticalcurvatur": 4, "analyz": [5, 12, 445], "andr": 445, "andrea": 443, "angel": [20, 448], "angl": [54, 223, 231, 243, 250, 252, 254, 255, 256, 258, 327, 328, 329, 330, 397, 399, 403], "anglestep": 243, "angletol": 397, "ani": [1, 9, 31, 32, 45, 62, 74, 83, 88, 95, 133, 139, 141, 181, 187, 189, 196, 197, 223, 257, 271, 272, 322, 324, 334, 353, 374, 386, 419, 424, 434, 438, 440, 442, 445, 452, 458], "anim": [20, 448], "anisotrop": 238, "annual": 443, "anoth": [20, 225, 228, 229, 273, 340, 398, 412, 415, 433, 434, 448, 450], "ansi": [248, 249, 253, 254], "anyth": [20, 448, 451], "apart": [226, 398], "api": [445, 449], "appear": [20, 74, 405, 424, 448], "append": [4, 64, 65, 66, 67, 119, 146], "appli": [20, 102, 105, 225, 226, 227, 307, 308, 309, 310, 334, 335, 443, 448, 460], "applic": [90, 166, 167, 168, 169, 326, 434, 443, 445, 457], "approach": [8, 74, 157, 326, 339, 408, 412, 415, 424, 434, 450, 452, 457], "appropri": [88, 90, 103, 434, 441, 445], "approxim": [8, 100, 162, 180, 182, 186, 187, 188, 192, 198, 202, 205, 208, 240, 241, 326, 443, 450], "ar": [3, 4, 7, 8, 18, 19, 20, 22, 23, 25, 32, 40, 45, 46, 53, 61, 62, 64, 65, 66, 73, 74, 85, 88, 95, 98, 101, 102, 103, 104, 105, 106, 107, 110, 114, 116, 119, 122, 124, 127, 132, 133, 134, 135, 137, 138, 141, 142, 144, 146, 149, 151, 154, 157, 160, 162, 163, 169, 170, 172, 173, 175, 178, 179, 181, 183, 184, 185, 186, 187, 188, 189, 193, 194, 195, 199, 200, 201, 216, 217, 218, 219, 223, 225, 226, 228, 229, 232, 240, 241, 261, 263, 264, 271, 272, 277, 278, 279, 280, 281, 282, 288, 289, 290, 291, 297, 304, 307, 308, 309, 310, 326, 327, 328, 329, 330, 334, 336, 337, 338, 339, 343, 344, 345, 350, 352, 354, 365, 366, 371, 375, 381, 389, 394, 396, 398, 403, 410, 411, 412, 419, 422, 424, 430, 432, 433, 434, 435, 436, 437, 438, 439, 442, 444, 445, 447, 448, 449, 450, 451, 452, 454, 456, 457, 458, 459, 460], "arang": [45, 237], "arbitrari": [207, 307, 309, 443, 459], "arbitrarili": [74, 304, 305, 307, 308, 424], "arcco": [4, 258], "archiv": [19, 447], "arctan": 451, "area": [255, 264], "aren": [74, 112, 122, 138, 226, 424, 454], "arg": [186, 188, 189], "argmax": 4, "argument": [7, 81, 85, 89, 156, 186, 188, 189, 196, 197, 231, 273, 304, 307, 309, 310, 326, 334], "ariella": 445, "aris": [4, 444], "armadillo": [20, 448], "around": [172, 173, 400, 420, 421, 451], "arrai": [4, 19, 24, 27, 45, 60, 64, 65, 66, 67, 75, 81, 100, 101, 102, 104, 105, 111, 113, 120, 128, 133, 137, 140, 150, 155, 157, 160, 162, 163, 170, 171, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 223, 225, 226, 232, 233, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 259, 260, 262, 265, 268, 269, 271, 272, 276, 277, 278, 280, 283, 284, 289, 290, 292, 293, 294, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 319, 320, 322, 324, 327, 328, 329, 330, 334, 335, 338, 339, 340, 346, 347, 352, 362, 367, 368, 373, 381, 393, 396, 398, 402, 407, 408, 430, 434, 437, 438, 447, 454], "array_lik": [24, 29, 30, 32, 62, 64, 65, 66, 67, 81, 100, 101, 103, 104, 106, 107, 109, 110, 114, 117, 119, 121, 122, 124, 125, 128, 130, 131, 132, 133, 138, 141, 142, 145, 146, 148, 149, 150, 151, 152, 155, 160, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 185, 186, 187, 188, 189, 191, 203, 204, 207, 211, 215, 223, 225, 226, 228, 229, 231, 232, 234, 235, 236, 237, 240, 241, 243, 244, 245, 246, 250, 251, 252, 256, 257, 258, 261, 262, 266, 267, 269, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 316, 321, 323, 326, 329, 330, 333, 334, 335, 338, 339, 344, 345, 347, 356, 357, 359, 360, 365, 366, 368, 376, 377, 379, 380, 381, 388, 390, 393, 396, 404, 409, 411, 418, 422, 423, 424, 430], "articl": [20, 443, 448], "artifact": [20, 448], "artifici": 443, "arxiv": 443, "ascii": 90, "asid": [20, 448], "aspect": [73, 247], "aspectratio": [73, 92], "assert": 88, "assess": [339, 450, 458], "assign": [204, 226, 227, 425], "associ": [24, 150, 157, 405, 415, 433, 436, 442, 443, 458], "assovi": 133, "assum": [101, 102, 103, 104, 105, 106, 107, 110, 114, 124, 132, 134, 135, 142, 149, 151, 181, 184, 193, 194, 195, 199, 200, 201, 217, 218, 219, 228, 273, 307, 308, 394, 400, 401, 422, 425, 437, 438], "assumpt": 451, "attempt": [74, 157, 185, 223, 424, 431], "attribut": [24, 348, 369, 383, 435, 442], "aubri": 443, "aug": 443, "auger": 445, "author": 449, "auto": [108, 134, 135, 139, 232, 257, 396, 422], "automat": [24, 185, 246, 307, 443], "avail": [8, 19, 20, 73, 103, 216, 225, 226, 228, 229, 326, 430, 431, 436, 438, 447, 448, 449], "averag": [120, 228, 232, 403, 451, 452, 457], "avoid": [74, 227, 424, 432, 442], "awai": 452, "ax": [4, 81, 102, 150, 181, 184, 236, 244, 304, 305, 312, 329, 451, 459], "ax1": [4, 434], "ax2": [4, 434], "ax3": [4, 434], "ax4": 4, "axi": [8, 9, 63, 81, 184, 191, 215, 220, 221, 222, 225, 234, 235, 236, 237, 243, 244, 245, 269, 283, 284, 293, 294, 297, 304, 305, 313, 314, 317, 318, 326, 390, 459], "axial_resolut": 236, "axis_ord": [304, 305], "b": [64, 65, 66, 209, 210, 261, 268, 271, 272, 289, 290, 292, 299, 300, 301, 302, 303, 434, 443, 451, 452, 454, 459], "b978": 443, "b_i": 451, "b_x": 452, "b_y": 452, "back": [137, 140], "backend": 431, "background": [2, 160, 186, 188, 399, 434], "bajaj": 443, "balanc": 442, "bar": [4, 457, 459, 460], "bari": [391, 392], "barrier": 416, "barrierelem": 416, "barriernod": 417, "barru": [283, 284, 293, 294, 443], "barycentr": [391, 392, 393, 408, 412, 415, 452, 459], "barytri": 452, "base": [1, 4, 24, 30, 31, 47, 75, 95, 100, 120, 156, 157, 160, 162, 163, 175, 181, 187, 236, 307, 326, 339, 340, 342, 355, 356, 357, 362, 364, 376, 377, 382, 403, 414, 430, 434, 438, 440, 442, 443, 444, 450, 456, 458, 459], "basi": 173, "basic": [18, 193, 217, 452], "bb": 261, "bd02": [31, 443], "becaus": 8, "becom": [119, 122, 146, 460], "been": [4, 48, 50, 64, 66, 137, 138, 401, 441, 450, 452], "befor": [64, 66, 223], "begin": [311, 312, 313, 314, 315, 316, 317, 318, 451, 452, 459], "behavior": 141, "behind": [449, 452], "being": [23, 62, 223, 247, 248, 249, 253, 254, 255, 259, 260, 262, 265, 289, 290, 292, 408, 433, 434, 438, 441, 445, 451, 452, 458], "below": [20, 107, 189, 223, 339, 433, 448, 450], "belyaev": [187, 443], "ben": 443, "bend": 451, "benjamin": 443, "bent": 451, "bernd": 443, "best": [4, 92, 115, 116, 123, 126, 127, 129, 143, 144, 147, 153, 154, 248, 249, 253, 254, 255, 259, 260, 262, 265], "beta": [312, 327, 328, 329, 391, 392, 393, 408, 412], "beta_0": 452, "better": [162, 163, 223, 415, 441, 457], "between": [1, 8, 16, 95, 99, 101, 102, 103, 104, 105, 106, 107, 111, 112, 113, 118, 121, 128, 137, 155, 223, 227, 232, 240, 243, 250, 252, 254, 256, 258, 266, 268, 269, 271, 272, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 303, 321, 322, 323, 324, 333, 334, 339, 340, 354, 362, 375, 393, 399, 433, 434, 435, 443, 449, 458, 459, 460], "beyond": 334, "bf01313411": 443, "bfb0014497": 443, "bgcolor": [4, 8, 9, 100, 186, 188, 189, 190, 191, 192, 198, 202, 205, 208, 211, 215, 225, 233, 234, 236, 237, 238, 239, 240, 244, 245, 399, 430, 434, 442], "bias": 326, "bicub": [102, 105], "bidirect": [283, 284, 285, 288, 289, 290, 291, 292, 459], "big": [451, 452], "biggest": 451, "bilinear": [101, 102, 104, 105], "billion": 443, "binar": [122, 304, 307, 308], "binari": [90, 122, 307, 322, 324, 450], "bioinformat": 443, "biologi": 443, "biomechan": [1, 443, 445], "bit": 7, "blackbox": 449, "blake": 445, "blo00": [226, 443, 460], "blo94": [106, 443, 450], "block": 442, "blom": [227, 443, 460], "bloomenth": [443, 450], "blue": 433, "bmatrix": [311, 312, 313, 314, 315, 316, 317, 318, 451, 459], "board": 1, "bobyqa": 326, "bolun": 443, "bone": [443, 451], "bong": 443, "book": [20, 448], "bool": [19, 24, 30, 31, 32, 46, 62, 65, 73, 76, 81, 90, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 117, 122, 125, 130, 133, 134, 135, 137, 140, 145, 148, 152, 157, 160, 175, 179, 181, 183, 184, 186, 187, 188, 223, 225, 226, 227, 228, 229, 231, 232, 236, 238, 239, 241, 242, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 309, 310, 322, 324, 341, 346, 347, 348, 353, 361, 363, 367, 368, 369, 374, 380, 383, 386, 389, 398, 404, 405, 410, 411, 412, 415, 430, 447], "boolean": [20, 193, 194, 195, 199, 200, 201, 217, 218, 219, 284, 434, 436, 445, 448], "boston": 445, "both": [4, 23, 62, 74, 187, 212, 213, 227, 241, 283, 284, 285, 288, 289, 290, 291, 292, 307, 308, 309, 310, 339, 341, 363, 424, 430, 436, 442, 444, 445, 451, 452, 454, 458, 459, 460], "bottasso": [31, 443], "bottom": [20, 448], "boubekeur": 443, "bound": [2, 7, 8, 29, 32, 62, 63, 79, 81, 100, 186, 188, 189, 190, 196, 197, 238, 239, 242, 267, 268, 269, 283, 284, 293, 294, 299, 304, 305, 307, 309, 310, 326, 334, 339, 343, 346, 347, 350, 355, 367, 368, 371, 390, 404, 430, 452, 458, 459], "boundai": 266, "boundari": [7, 26, 27, 30, 31, 101, 102, 104, 105, 107, 122, 160, 189, 232, 266, 273, 281, 282, 307, 346, 347, 367, 368, 380, 443, 444, 450, 452, 457], "boundaryconn": [25, 273, 282], "boundaryconn1": 266, "boundaryconn2": 266, "bow81": [170, 171, 443, 452], "bowyer": [170, 171, 172, 176, 178, 443], "bowyerwatson": [172, 176, 178], "bowyerwatson2d": [172, 178, 452], "bowyerwatson3d": [172, 176, 452], "box": [29, 63, 79, 100, 238, 239, 267, 268, 269, 274, 275, 283, 284, 293, 294, 299, 304, 305, 343, 355, 390, 404, 434, 436, 438, 443, 458], "box1": 267, "box2": 267, "boxcent": [268, 299], "branch": [95, 354, 375, 458], "break": [20, 25, 61, 448], "bridg": [20, 448, 449], "bright": [160, 451], "brightobject": 160, "brows": [20, 448], "brute": [326, 408, 412, 415], "bu": [9, 443], "bucati": 9, "buddha": [20, 448], "build": [160, 436, 445, 452], "built": [8, 438, 439], "bunni": [19, 20, 180, 182, 183, 223, 307, 309, 447, 448], "bunny_res2": [20, 448], "bunny_res3": [20, 448], "bunny_res4": [20, 448], "bx": 451, "bx_0y_0": 451, "bx_1y_1": 451, "bx_ny_n": 451, "bxy": 451, "c": [31, 64, 65, 66, 216, 231, 261, 268, 271, 272, 289, 290, 292, 299, 300, 301, 302, 303, 414, 443, 451, 452, 454, 459], "c_0": [311, 312], "c_1": [311, 312], "c_2": 312, "c_i": 451, "c_x": 452, "c_y": 452, "cach": [65, 85, 442], "cag": 443, "cagd": 443, "calcfacenorm": [157, 162, 163, 256], "calcul": [38, 44, 54, 65, 138, 156, 157, 158, 159, 160, 161, 162, 163, 165, 173, 187, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 279, 390, 394, 395, 403, 404, 413, 414, 434, 442, 452, 457, 459], "call": [4, 419, 442], "callabl": [193, 194, 200, 204, 206, 213, 216, 217, 218, 232, 326], "came": 108, "can": [4, 7, 8, 9, 20, 24, 30, 31, 53, 64, 65, 66, 67, 73, 81, 95, 97, 102, 104, 105, 106, 107, 122, 138, 141, 157, 160, 162, 163, 176, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 196, 197, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 244, 245, 251, 288, 291, 292, 307, 308, 309, 310, 322, 324, 326, 334, 379, 393, 398, 408, 410, 412, 415, 416, 417, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 448, 450, 451, 452, 454, 456, 457, 458, 459, 460], "candid": 454, "cannot": 416, "cap": [164, 236, 451], "capabl": [1, 12, 18, 100, 432], "captur": 451, "care": [450, 458], "carefulli": [64, 66, 432], "cartesian": [46, 312, 319, 327, 329, 331, 332], "case": [74, 118, 137, 155, 184, 300, 301, 302, 303, 415, 424, 433, 439, 444, 450, 451, 452], "cast": [93, 273, 276, 279, 402], "categor": 164, "categori": 164, "caus": [289, 441], "cav74": [443, 457], "cavendish": 443, "cc": 261, "ccw": 138, "cdot": [263, 457, 459], "cell": [80, 86, 87, 204, 216, 227, 442], "cellcent": 227, "cellsiz": [204, 216], "center": [9, 29, 118, 128, 155, 191, 211, 215, 225, 227, 228, 229, 234, 235, 236, 237, 243, 244, 245, 268, 299, 304, 305, 307, 311, 312, 316, 319, 320, 327, 328, 329, 330, 331, 332, 438, 450, 451, 452, 457], "centric": [391, 392], "centrod": 227, "centroid": [32, 100, 119, 138, 141, 146, 189, 254, 305, 340, 342, 350, 362, 364, 371, 441, 442, 458], "certain": [185, 326], "cgal": 445, "chalmer": 443, "chanc": [74, 424], "chandrajit": 443, "chang": [3, 25, 54, 61, 64, 66, 71, 334, 339, 396, 450, 452, 454, 456, 460], "changelog": 3, "channel": 437, "charact": 231, "characterist": [40, 44], "charl": 443, "che95": [101, 102, 443, 450], "chear": 316, "check": [88, 283, 284, 285, 288, 289, 290, 291, 292, 346, 347, 353, 367, 368, 374, 386, 396, 452, 454, 458, 459], "check_numba": 157, "chen": 414, "chernyaev": [443, 450], "chi": [40, 44], "child": [118, 128, 137, 155, 348, 349, 353, 354, 355, 356, 357, 369, 370, 374, 375, 376, 377, 383, 384, 386, 458], "children": [348, 354, 369, 375, 383, 458], "childstat": [354, 375], "chines": [20, 448], "choic": [226, 273, 276, 279, 452, 458], "choos": [20, 289, 290, 292, 448, 450], "chosen": [100, 307, 308, 309, 310, 326, 430, 431, 434, 442], "christian": [20, 448], "church": [20, 448], "ci": 254, "cir": 443, "circl": [235, 236, 245], "circular": [215, 236, 244, 245], "circumfer": [234, 235, 236], "circumferenti": [234, 235, 244, 245], "circumradii": 261, "citat": 449, "cite": [20, 251, 448, 452], "class": [24, 103, 185, 342, 364, 382, 432, 433, 440, 451], "classic": [434, 457], "classif": 451, "classifi": [74, 106, 107, 399, 424], "cleaner": 434, "cleanup": [32, 62, 76, 102, 104, 105, 106, 107, 109, 117, 125, 130, 133, 145, 148, 152, 223, 405], "cleanup_tol": [106, 107], "clear": [54, 85, 348, 369, 383, 445], "clearchildren": [348, 369, 383], "clim": [81, 430], "cline": [443, 450], "clip": [180, 182, 183, 223], "clockwis": [116, 127, 138, 144, 154, 352, 394, 452], "clone": 439, "close": [4, 25, 106, 107, 122, 139, 141, 160, 236, 241, 272, 273, 276, 279, 289, 290, 292, 300, 301, 302, 303, 434, 444, 459], "closest": [306, 307, 309, 321, 323, 333], "closest_point_ms": [309, 310, 333], "cloud": [94, 304, 305, 307, 309, 310, 436], "cma": 443, "cmap": [122, 307], "cmu": 443, "cnm": 443, "co": [192, 198, 202, 205, 208, 311, 312, 443], "coars": 223, "coarsen": [75, 120, 179, 180, 182, 183, 184, 223, 309, 456], "coarser": [20, 448], "cobyla": 326, "code": [4, 7, 8, 9, 430, 442, 445], "coeffici": [181, 322], "collaps": 223, "collect": [432, 433, 444], "color": [4, 7, 9, 399, 426, 428, 430, 434, 445], "color_convert": [426, 430], "colorscal": 81, "colorspaci": [430, 439], "column": [175, 225], "column_stack": 237, "com": [315, 316, 441, 443], "combin": [8, 186, 292, 304, 305, 434, 438, 443, 450], "come": [248, 249, 253, 254, 442], "comjnl": 443, "command": 441, "commerci": [20, 448], "commit": 3, "commitizen": 3, "common": [122, 334, 440, 451, 454], "commonli": [8, 20, 442, 444, 448, 451], "commun": 443, "commut": 46, "compar": [4, 307, 309, 310, 393], "comparison": 393, "compat": [8, 186, 441], "compil": [157, 445], "complement": 451, "complet": 403, "complex": [9, 339, 434, 436, 438, 443, 449, 454, 458], "compo": 444, "compon": [47, 451, 459], "comprehens": 445, "compris": 433, "comput": [1, 20, 31, 53, 54, 106, 174, 179, 183, 228, 268, 299, 321, 333, 416, 417, 434, 443, 444, 448, 452, 459], "computation": 434, "concav": [436, 451], "concern": 434, "conclud": 459, "conclus": 326, "concurr": 452, "condens": 443, "condit": [62, 438, 459], "confer": 443, "configur": [454, 456], "confirm": 88, "conflict": 432, "connect": [7, 19, 20, 24, 26, 33, 34, 36, 37, 41, 42, 45, 52, 57, 58, 64, 65, 66, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 162, 163, 170, 171, 173, 175, 177, 181, 187, 196, 197, 227, 228, 237, 241, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 273, 276, 279, 281, 282, 288, 291, 297, 298, 338, 340, 341, 362, 363, 381, 388, 394, 395, 396, 397, 398, 399, 400, 401, 403, 405, 406, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 435, 442, 444, 447, 448, 450, 451, 452, 454, 456, 457, 460], "connect_end": 241, "connet": [103, 106, 107], "consid": [22, 30, 106, 107, 160, 179, 180, 182, 183, 186, 188, 189, 272, 277, 278, 280, 286, 287, 289, 290, 292, 295, 296, 419, 438, 444, 451], "consider": [227, 443], "consist": [18, 122, 128, 157, 172, 181, 187, 307, 308, 327, 328, 334, 336, 337, 400, 401, 408, 425, 433, 444, 450, 451, 452, 459], "constant": [102, 105, 304, 307], "constitut": [8, 397, 419], "constrain": [1, 177, 225, 326, 439], "constraint": [176, 177, 178, 187, 225, 326], "construct": [9, 141, 234, 235, 291, 292, 433, 436, 443, 450, 451, 452, 458], "contain": [4, 20, 24, 31, 45, 74, 75, 81, 98, 99, 108, 111, 113, 134, 135, 172, 176, 178, 179, 180, 182, 183, 185, 186, 188, 189, 227, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 257, 327, 328, 329, 330, 336, 337, 338, 339, 340, 341, 343, 344, 345, 354, 359, 360, 362, 363, 365, 366, 375, 379, 380, 381, 389, 396, 398, 400, 401, 408, 412, 413, 414, 415, 416, 417, 422, 424, 425, 433, 437, 444, 445, 448, 452, 454, 458, 459], "content": [334, 443], "contigu": 4, "continu": [8, 118, 128, 137, 155, 193, 194, 195, 199, 200, 201, 217, 218, 219, 339, 458], "contour": [160, 180, 186, 223, 434, 436, 443], "contract": [231, 232, 456], "contractit": 231, "contribut": [157, 162, 163], "contributor": 3, "control": [8, 430, 460], "contruct": 288, "conveni": [442, 451], "convent": [3, 22, 122, 216, 438, 444], "converg": [225, 226, 228, 229, 230], "convers": [75, 122, 288, 291, 430, 436, 445], "convert": [75, 77, 78, 80, 86, 87, 97, 98, 99, 106, 160, 187, 196, 197, 237, 243, 257, 307, 340, 341, 362, 363, 396, 398, 402, 422, 430, 433, 435, 436, 440, 442, 444], "convex": [172, 173, 174, 176, 178, 436, 443, 444, 451, 454], "convexhul": 436, "convolut": 181, "coolwarm": [4, 399], "coordin": [24, 29, 47, 67, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 162, 163, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 186, 188, 189, 190, 191, 192, 196, 197, 198, 202, 205, 207, 208, 211, 215, 220, 221, 222, 227, 232, 235, 236, 237, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 310, 321, 323, 333, 335, 338, 339, 340, 341, 344, 345, 346, 347, 352, 356, 357, 359, 360, 362, 363, 365, 366, 367, 368, 373, 376, 377, 379, 380, 381, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 442, 444, 451, 452, 454, 459, 460], "copi": [32, 46, 62, 181, 187, 228, 307, 309, 406], "coplanar": [235, 452, 459], "core": [87, 442], "corner": [105, 119, 223, 225, 226, 228, 229, 390, 399, 404, 450, 451], "correct": [160, 175, 443, 450], "correspond": [73, 85, 101, 102, 104, 112, 122, 136, 137, 140, 150, 166, 167, 168, 169, 179, 180, 181, 182, 183, 184, 212, 213, 220, 221, 222, 228, 231, 236, 304, 305, 338, 339, 352, 373, 381, 408, 412, 415, 433, 437, 451, 458, 459], "cosalpha": 4, "cosin": 254, "cost": [106, 179, 183, 304, 307], "could": [1, 141, 166, 167, 168, 169, 189, 233, 234, 235, 236, 237, 238, 243, 244, 245, 444, 450, 454, 459], "count": [40, 300, 301, 302, 303, 459], "counter": [116, 127, 138, 144, 154, 352, 394, 452], "counterclockwis": 174, "cours": [237, 268, 283, 284, 289, 290, 292, 293, 294, 299, 443, 454], "cover": [307, 309, 310, 425], "cr": 181, "creat": [1, 9, 24, 30, 62, 71, 73, 74, 106, 109, 117, 125, 130, 141, 145, 148, 152, 181, 183, 187, 223, 228, 241, 288, 291, 400, 406, 408, 412, 415, 424, 434, 436, 441, 442, 450, 452, 458], "creation": 458, "credit": [20, 448], "crid": 443, "criteria": [228, 338, 381, 458], "crop": [46, 62, 75, 120, 436], "cross": [157, 191, 236, 244, 245, 452, 459], "csg": 438, "ct": [19, 307, 445, 447, 451], "cube": [4, 95, 100, 101, 102, 105, 180, 186, 352, 434, 443, 458], "cubic": [102, 105, 120, 157, 180, 186, 238, 400, 425, 443, 444], "cubicfit": [4, 162, 163, 451], "cuda": 1, "cultur": [20, 448], "cup": [164, 451], "cupi": 1, "current": [3, 18, 30, 31, 76, 95, 98, 225, 228, 229, 340, 346, 347, 350, 351, 354, 362, 367, 368, 371, 372, 375, 385, 397, 400, 415, 419, 445, 458], "curv": [156, 160, 443], "curvatur": [5, 6, 8, 12, 443, 445, 446], "curved": 72, "custom": 442, "cut": [29, 442], "cv2": 439, "cw": 138, "cy": 451, "cylind": [244, 245, 436, 451], "cylindr": [191, 236, 451], "cz": 181, "d": [1, 8, 31, 77, 192, 216, 232, 268, 271, 272, 289, 290, 292, 299, 300, 301, 302, 303, 322, 323, 326, 434, 443, 445, 451, 454, 459], "d_x": 459, "d_y": 459, "d_z": 459, "daniel": 443, "dansk": 443, "dark": 160, "darker": 160, "data": [19, 20, 24, 62, 75, 80, 86, 87, 95, 102, 105, 120, 150, 160, 179, 183, 184, 185, 276, 279, 285, 307, 308, 322, 324, 328, 338, 341, 342, 348, 354, 363, 364, 369, 375, 381, 382, 383, 389, 402, 405, 412, 430, 433, 434, 437, 440, 443, 447, 448, 452, 458], "databas": [19, 20, 447, 448], "dataset": [20, 326, 448], "date": 445, "david": [443, 452], "de": 443, "deal": 442, "dec": 443, "decid": [223, 430], "decim": [307, 309, 310], "decompos": [118, 128, 137, 140, 155, 450], "decomposit": [118, 128, 155], "decreas": 228, "def": [7, 438], "default": [19, 20, 22, 24, 29, 30, 31, 32, 46, 54, 62, 64, 65, 66, 67, 73, 75, 76, 81, 85, 90, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 117, 120, 122, 125, 128, 130, 134, 135, 137, 138, 140, 141, 145, 148, 152, 155, 160, 166, 167, 168, 169, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 204, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 266, 268, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 312, 316, 321, 326, 329, 333, 334, 338, 339, 340, 341, 346, 347, 348, 354, 355, 356, 357, 359, 360, 361, 362, 363, 367, 368, 369, 375, 376, 377, 380, 381, 383, 389, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 417, 419, 422, 423, 425, 430, 431, 438, 447, 448], "defect": [20, 122, 434, 448], "defin": [30, 35, 43, 91, 101, 102, 104, 105, 106, 110, 114, 122, 124, 132, 142, 149, 151, 157, 203, 305, 326, 406, 412, 415, 433, 436, 442, 444, 451, 452, 459], "definit": [248, 249, 253, 254, 442], "deform": [226, 460], "defualt": 415, "deg": 73, "degener": [74, 102, 104, 105, 340, 362, 396, 397, 424], "degre": [73, 223, 231, 397, 399], "delaunai": [1, 436, 439, 443], "delaunau": 443, "delet": [396, 397, 405, 452], "deleteduplicatenod": [106, 107, 396], "delta": 391, "delval": 402, "demand": [19, 20, 65, 434, 447, 448], "demo": 445, "demo_curvatur": [4, 6, 446], "demo_heart": [7, 11, 446], "demo_imag": [180, 182, 183, 307], "demo_mesh": [223, 309], "demo_mix": [8, 11, 446], "demo_pasta": [9, 11, 446], "demonstr": 9, "deni": 443, "denot": [101, 102, 103, 104, 105, 106, 107, 243, 430], "depend": [1, 8, 137, 212, 213, 307, 308, 326, 396, 434, 436, 445, 451], "depict": 454, "depth": [100, 338, 339, 351, 355, 356, 357, 359, 360, 372, 376, 377, 381, 385, 458], "deriv": 326, "describ": [22, 100, 186, 187, 188, 189, 232, 339, 451, 452], "descript": 445, "design": [8, 443, 445], "desir": [64, 66], "despit": 157, "destruct": [181, 187], "det": [443, 452, 459], "detail": [53, 54, 111, 113, 166, 167, 168, 169, 307, 309, 310, 422, 434, 438, 440, 442, 445], "detect": [121, 134, 135, 181, 187, 268, 269, 271, 272, 283, 284, 286, 287, 289, 290, 292, 293, 294, 295, 296, 299, 339], "detectfeatur": [223, 225, 226, 228, 229, 231], "determin": [24, 48, 50, 62, 73, 76, 102, 103, 104, 105, 106, 107, 118, 137, 141, 155, 160, 166, 167, 168, 169, 189, 223, 228, 246, 254, 258, 272, 273, 276, 277, 278, 279, 281, 283, 284, 285, 288, 289, 290, 291, 292, 300, 301, 302, 303, 339, 341, 363, 397, 398, 399, 403, 410, 418, 419, 422, 430, 450, 452, 458, 459], "detomi": [31, 443], "deuteranomali": 430, "dev": 445, "develop": [18, 97, 326, 445, 452], "deviat": [4, 160, 181, 238, 239, 242], "diagon": 450, "diamond": [8, 216], "dic45": [322, 443], "dice": [307, 443], "dicom": [75, 120, 185, 437, 439], "dict": [24, 73, 186, 188, 189, 224, 225, 226, 228, 229, 231, 304, 307, 309, 310, 326, 334, 442, 452], "dictionari": [24, 73, 186, 188, 189, 442, 454], "diff": 434, "diff_fun": 194, "diff_sym": [195, 201], "differ": [10, 12, 14, 24, 98, 100, 107, 134, 139, 181, 187, 193, 194, 195, 201, 231, 271, 272, 305, 326, 396, 430, 433, 434, 435, 436, 438, 444, 445, 451, 457, 459], "differen": [223, 232], "differenti": [100, 187, 192, 193, 194, 195, 198, 199, 200, 201, 202, 205, 208, 217, 218, 219, 326], "differential_evolut": 326, "difff": [193, 434], "difficult": [434, 445, 452], "diffv": 193, "dihedr": [73, 250, 252, 256, 258, 399], "dimens": [47, 122, 175, 176, 178, 181, 307, 360, 437, 438], "dimension": [95, 101, 104, 122, 169, 170, 173, 275, 304, 307, 308, 437, 443, 444, 452, 458], "dimetr": 430, "dimitri": 443, "direct": [4, 100, 138, 157, 186, 188, 189, 212, 213, 220, 221, 222, 236, 237, 238, 268, 269, 283, 284, 285, 288, 289, 290, 291, 292, 293, 294, 299, 307, 309, 310, 315, 316, 323, 326, 339, 434, 443, 445, 451, 459], "directed_hausdorff": 323, "direction": [160, 451], "directl": 326, "directli": [4, 103, 106, 115, 116, 118, 123, 126, 127, 128, 129, 143, 144, 147, 153, 154, 155, 179, 180, 182, 183, 186, 188, 189, 228, 233, 236, 237, 238, 239, 240, 242, 243, 244, 245, 432, 434, 437, 442, 445, 451, 452], "directori": [75, 120, 184, 185, 437, 439], "dirichlet": 443, "disadvantag": 451, "discard": [75, 120], "disconnect": 45, "discuss": [449, 451, 452], "displac": [225, 226, 227, 327, 328, 336, 337, 457], "displai": [81, 223, 231, 232, 307, 430], "distanc": [122, 186, 188, 203, 206, 212, 213, 215, 225, 232, 237, 245, 251, 272, 282, 288, 291, 321, 323, 333, 339, 398, 408, 412, 415, 443, 452, 459, 460], "distance_transform_edt": 122, "distort": [181, 187], "distribut": [7, 456, 460], "divid": [241, 247, 338, 381, 451, 458], "divis": 443, "dl": [98, 443], "dmesh": 77, "do": [20, 223, 228, 442, 445, 448], "document": [326, 445], "doesn": [31, 32, 139, 223, 228, 307, 308, 452, 456, 458], "doi": [31, 98, 268, 283, 284, 289, 290, 292, 293, 294, 299, 300, 301, 302, 303, 443], "domain": [443, 444], "dome": 164, "domin": [236, 243, 244], "don": [20, 46, 88, 95, 286, 287, 288, 291, 295, 296, 448, 452], "done": [7, 64, 66, 432, 434], "doorn": [158, 164, 165, 443], "dot": 4, "doubl": 62, "down": 437, "download": [4, 7, 8, 9, 439], "dragon": [20, 448], "dragon_res2": [20, 448], "dragon_res3": [20, 448], "dragon_res4": [20, 448], "dramat": 1, "drawn": 452, "driven": 445, "dtype": [185, 187, 261, 263, 264, 277, 322, 324, 402], "dual": [100, 138, 340, 362, 443], "dualconn": [138, 340, 362], "dualcoord": [138, 340, 362], "dualgrid_method": 100, "due": [157, 179, 180, 182, 183, 186, 188, 189, 233, 236, 237, 238, 239, 240, 242, 243, 244, 245, 452, 457], "duplic": [76, 102, 104, 105, 109, 117, 125, 130, 135, 145, 148, 152, 398, 405], "dure": [109, 117, 122, 125, 130, 145, 148, 152, 181, 187, 223, 225, 226, 228, 229, 309, 310], "dx": [443, 451], "dx_0": 451, "dx_1": 451, "dx_n": 451, "dxnew": 227, "dynam": [77, 443], "e": [4, 16, 40, 64, 65, 66, 101, 104, 111, 112, 113, 118, 122, 128, 134, 135, 137, 150, 155, 184, 185, 216, 223, 225, 232, 236, 241, 243, 255, 268, 271, 272, 274, 275, 289, 290, 292, 299, 300, 301, 302, 303, 307, 321, 323, 326, 333, 340, 351, 362, 372, 385, 433, 434, 435, 437, 439, 441, 443, 444, 445, 451, 452, 454, 456, 457, 459], "e0": 134, "e1": 134, "e10": 134, "e2": 134, "e3": 134, "e4": 134, "e5": 134, "e6": 134, "e7": 134, "e8": 134, "e9": 134, "e_": 459, "e_1": 459, "e_2": 459, "each": [20, 24, 33, 34, 35, 36, 37, 41, 42, 43, 47, 52, 100, 101, 103, 104, 105, 106, 107, 109, 112, 117, 120, 125, 130, 131, 134, 135, 137, 138, 140, 145, 148, 152, 156, 157, 160, 162, 163, 186, 188, 189, 196, 197, 203, 204, 225, 227, 228, 229, 231, 232, 233, 238, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 268, 272, 281, 282, 284, 288, 290, 291, 292, 297, 302, 303, 304, 305, 307, 308, 309, 310, 326, 338, 339, 347, 359, 360, 368, 381, 398, 400, 401, 403, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 433, 435, 437, 442, 444, 448, 450, 451, 452, 454, 457, 458, 459], "earliest": 450, "easi": [442, 445], "easili": [8, 442, 454], "ebcb8b": 9, "ecolog": 443, "ecologi": 443, "ecosystem": 442, "ederror": [100, 339, 458], "edg": [16, 24, 33, 34, 40, 48, 64, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 117, 118, 119, 123, 125, 126, 128, 129, 130, 134, 137, 139, 143, 145, 146, 147, 148, 152, 153, 155, 160, 176, 177, 178, 181, 187, 223, 225, 226, 228, 229, 231, 232, 233, 234, 235, 236, 244, 245, 247, 261, 277, 278, 280, 300, 301, 302, 303, 365, 376, 396, 399, 416, 419, 430, 433, 434, 435, 444, 450, 452, 456, 459], "edge3": 435, "edgeconn": [134, 433, 454], "edgeedg": [300, 301, 302, 303], "edgeelem": 134, "edgeelemconn": [433, 454], "edgemod": [102, 105], "edges2uniqu": 433, "edgeset": [24, 64], "edu": [9, 443], "educ": 449, "effect": 457, "effici": [23, 74, 95, 192, 198, 202, 205, 208, 283, 284, 289, 290, 292, 293, 294, 304, 307, 334, 414, 424, 434, 439, 442, 443, 450, 452, 454, 457, 458, 459], "effort": 434, "egregium": 451, "eigenvalu": 451, "eight": [95, 458], "either": [30, 62, 64, 65, 66, 67, 74, 100, 101, 102, 104, 106, 107, 150, 160, 181, 184, 186, 187, 194, 200, 213, 218, 223, 232, 237, 238, 239, 242, 243, 245, 255, 304, 307, 326, 334, 335, 393, 396, 398, 424, 430, 433, 444, 445, 450], "elbow": 9, "elem": 423, "elemconn": [138, 227, 403, 418, 419, 433], "elemdata": [24, 30, 62, 73, 75, 179, 183, 223, 231, 232, 430, 442], "element": [7, 8, 20, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 49, 58, 62, 64, 65, 66, 73, 74, 75, 80, 81, 86, 87, 88, 92, 100, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 115, 116, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 131, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 146, 147, 150, 153, 154, 155, 172, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 196, 207, 223, 224, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 271, 272, 273, 276, 279, 282, 283, 288, 291, 293, 294, 297, 298, 299, 304, 307, 308, 338, 339, 340, 346, 352, 362, 367, 381, 394, 395, 396, 397, 398, 399, 400, 401, 403, 406, 408, 409, 412, 415, 416, 418, 419, 422, 423, 424, 425, 430, 433, 434, 437, 440, 442, 443, 444, 445, 448, 450, 451, 452, 456, 457, 458], "elementedg": 108, "elemet": 154, "elemid": [84, 137, 140, 408], "elemlabel": 77, "elemneighbor": [65, 256, 416, 419, 433], "elemnorm": [256, 273, 276, 279, 394, 403], "elemregion": 416, "elemset": [24, 65], "elemtyp": [106, 108, 134, 135, 139, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 245, 257, 399, 422, 423, 434], "elia": 443, "elimin": [7, 95, 458], "elis": [443, 445], "ellipsoid": 244, "ellipt": [236, 244, 451], "elsewher": 438, "emb": 223, "embed": 451, "emploi": [449, 457], "empti": [25, 31, 74, 88, 286, 287, 295, 296, 341, 354, 361, 363, 375, 389, 424, 458], "enabl": [1, 192, 198, 202, 205, 208, 458], "encod": 458, "encount": [4, 157], "end": [4, 7, 8, 9, 64, 65, 66, 67, 110, 236, 286, 287, 295, 296, 311, 312, 313, 314, 315, 316, 317, 318, 354, 375, 451, 452, 459], "endpoint": 286, "endpt_inclus": [286, 287, 295, 296], "energi": 443, "enforc": [238, 239, 242], "engin": [31, 443], "enhanc": [1, 439], "enough": [451, 452], "ensur": [172, 177, 297, 450, 452, 454, 459], "entir": 31, "entiti": [95, 433], "entri": [24, 30, 62, 73, 85, 102, 111, 113, 134, 179, 180, 182, 183, 223, 231, 232, 402, 430, 442, 450, 454], "environ": [97, 441], "ep": [74, 99, 266, 270, 272, 273, 276, 277, 278, 279, 280, 282, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 300, 301, 302, 303, 339, 424], "epsilon": 459, "equal": [4, 30, 122, 179, 180, 182, 183, 185, 186, 188, 189, 223, 227, 232, 238, 239, 242, 251, 393, 397, 399, 410, 411, 430, 443, 451, 458], "equat": [227, 451], "equiangular": [255, 259], "equilater": [255, 262], "equilibrium": [226, 460], "equival": [45, 62, 110, 114, 124, 132, 142, 149, 151, 216, 326, 350, 371, 434, 442], "error": [88, 100, 157, 160, 162, 163, 223, 321, 333, 339, 415, 434, 439, 443, 450], "especi": 434, "essenti": [334, 452, 458], "establish": [439, 442, 443], "estim": 451, "et": [232, 453, 459], "eta": 224, "etc": [20, 95, 216, 236, 307, 308, 396, 430, 435, 441, 448], "euclidean": 122, "euclidian": 339, "euler": [40, 44], "ev": 443, "evalu": [73, 100, 106, 156, 160, 181, 186, 188, 189, 192, 196, 197, 198, 202, 203, 205, 208, 220, 221, 222, 232, 326, 339, 434, 436, 441, 445, 450, 458], "even": [31, 223, 289, 430, 459], "evenli": [7, 181, 187, 456, 460], "everi": [227, 326, 452, 454, 458], "evolut": 326, "ex": [134, 136, 256, 396, 398, 400, 401, 413, 414, 415, 425, 451], "ex_0": 451, "ex_1": 451, "ex_n": 451, "exact": [29, 100, 458], "exact_h": [238, 239, 242], "exact_mins": 381, "exactli": [238, 239, 242, 271, 272, 281, 286, 287, 295, 296, 300, 301, 302, 303, 346, 347, 367, 368, 380, 398, 452, 458], "examin": 451, "exampl": [4, 6, 7, 8, 9, 11, 13, 19, 20, 46, 95, 100, 106, 107, 118, 122, 128, 155, 176, 178, 180, 182, 183, 186, 188, 189, 190, 191, 192, 198, 202, 205, 208, 211, 215, 223, 225, 233, 234, 236, 237, 240, 244, 245, 289, 290, 292, 304, 305, 307, 309, 310, 326, 398, 399, 410, 411, 423, 435, 437, 438, 440, 441, 442, 446, 447, 448, 450, 451, 454, 457, 458, 459], "example_func": 438, "except": [20, 326, 410, 445, 448], "exclud": [45, 286], "exclus": 62, "exculd": [408, 412, 415], "execut": [6, 11, 13, 441, 446], "executionmod": 441, "exist": [31, 62, 65, 88, 141, 184, 399, 434, 435, 444, 450, 452, 458], "expand": 452, "expans": 1, "expect": 97, "expens": 189, "experi": [20, 448], "experiment": 97, "explain": [340, 362, 445], "explan": [436, 449], "explicit": 436, "explicitli": [74, 424], "explod": [20, 448], "explor": 1, "expos": [134, 139, 181, 187, 444], "express": [192, 198, 202, 205, 208], "extend": [445, 450, 452], "extens": [90, 185, 437, 445], "exterior": [101, 102, 103, 104, 105, 106, 107], "extern": [3, 133, 445, 460], "extract": [15, 30, 101, 103, 104, 106, 107, 115, 116, 123, 126, 127, 129, 135, 136, 139, 143, 144, 147, 153, 154, 414, 450], "extrem": 223, "extrud": [9, 236, 242, 436], "extrus": 237, "ezproxi": 443, "f": [4, 8, 22, 40, 100, 186, 188, 189, 192, 198, 202, 204, 205, 206, 208, 212, 213, 216, 227, 231, 232, 268, 271, 272, 289, 290, 292, 299, 300, 301, 302, 303, 326, 339, 438, 443, 451, 460], "f1": [193, 194, 199, 200, 217, 218], "f2": [193, 194, 199, 200, 217, 218], "face": [16, 24, 31, 40, 41, 42, 50, 65, 66, 111, 112, 113, 116, 118, 119, 127, 128, 134, 135, 144, 146, 154, 155, 227, 250, 252, 254, 256, 277, 394, 399, 403, 409, 419, 430, 433, 456], "face2nodenorm": [53, 54, 157, 162, 163], "face2uniqu": 135, "face_alpha": [426, 430], "facecent": 227, "faceconn": [135, 433, 454], "faceelem": 135, "faceelemconn": [433, 454], "faces2surfac": 135, "faces2uniqu": 433, "faceset": [24, 31, 66], "facet": 443, "facilit": 454, "factor": [31, 75, 120, 179, 180, 182, 183, 184, 220, 221, 222, 227, 304, 307, 309, 310, 313, 314], "fail": [88, 412], "fall": [450, 459], "fals": [4, 29, 30, 32, 46, 62, 72, 75, 81, 101, 102, 103, 104, 105, 106, 107, 111, 112, 113, 120, 122, 134, 135, 136, 137, 140, 157, 160, 179, 181, 183, 186, 187, 223, 225, 226, 227, 228, 229, 230, 232, 238, 239, 241, 242, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 266, 268, 269, 271, 272, 273, 276, 279, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 319, 320, 327, 328, 329, 331, 332, 336, 337, 346, 347, 361, 367, 368, 389, 396, 397, 398, 404, 410, 411, 412, 415, 429, 430, 434, 442], "famou": 450, "fan": 173, "far": [232, 452], "faraj": [232, 443, 453], "fast": [268, 289, 290, 292, 299, 300, 301, 302, 303, 443], "faster": [4, 157, 289, 290, 292], "fatol": 326, "featur": [97, 181, 187, 223, 225, 226, 228, 229, 231, 232, 399, 414, 434, 442, 443, 445, 451, 454, 458], "featureangl": [223, 231], "feb": 443, "few": 436, "fi": 254, "field": [122, 203, 232, 338, 381, 443, 450], "fig": [4, 81, 434], "fig1": [4, 434], "fig2": [4, 434], "fig3": [4, 434], "fig4": 4, "figsiz": [429, 434], "figur": [81, 430], "file": [6, 11, 13, 24, 75, 83, 90, 120, 179, 180, 181, 182, 183, 184, 185, 437, 439, 442, 446], "filenam": [90, 185], "filetyp": [90, 185, 440], "fill": [104, 122, 141, 407, 450], "fill_valu": 196, "fillval": 407, "final": [20, 176, 178, 233, 234, 235, 236, 238, 243, 244, 245, 309, 310, 448, 459], "find": [1, 99, 227, 452, 454, 459], "fine": 309, "finfo": [74, 424], "finish": 326, "finit": [100, 187, 434, 443, 444], "finite_diff_step": 187, "first": [4, 46, 74, 99, 110, 114, 119, 121, 122, 124, 132, 133, 142, 146, 149, 151, 175, 181, 184, 193, 199, 217, 223, 225, 240, 241, 258, 266, 267, 287, 295, 296, 298, 300, 301, 304, 305, 307, 308, 321, 323, 333, 391, 392, 393, 396, 405, 410, 416, 417, 424, 433, 434, 435, 437, 441, 442, 454, 458, 459], "fischer": 216, "fit": [157, 163], "fix": [31, 223, 225, 226, 227, 228, 229, 306, 307, 308, 309, 310, 457], "fixedg": [181, 187], "fixednod": [31, 181, 187, 223, 225, 226, 228, 229], "fixednot": 227, "fixfeatur": [225, 226, 228, 229], "fixsurf": [225, 226, 228, 229], "fixvol": 175, "flat": [235, 430], "fld979": 443, "flexibl": 435, "flip": [101, 102, 103, 104, 105, 106, 107, 157, 230, 231, 289, 456], "flippabl": 454, "float": [30, 31, 46, 62, 74, 75, 76, 99, 100, 102, 105, 106, 107, 120, 122, 141, 158, 159, 160, 161, 165, 166, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 188, 190, 191, 211, 215, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 266, 272, 273, 276, 277, 278, 279, 280, 282, 288, 289, 290, 291, 292, 297, 298, 300, 301, 302, 303, 304, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 321, 322, 323, 324, 326, 333, 338, 339, 355, 356, 357, 376, 377, 381, 391, 392, 393, 397, 398, 399, 406, 408, 412, 413, 414, 415, 421, 424, 425, 430, 434], "float64": [4, 187], "flow": [181, 187], "fluid": [227, 443], "focu": [438, 445], "focus": 445, "follow": [3, 20, 122, 216, 232, 237, 243, 308, 326, 339, 352, 405, 412, 430, 432, 433, 438, 442, 448, 450, 451, 452, 457, 459], "forc": [226, 227, 326, 408, 412, 415, 460], "foreground": [160, 451], "form": [100, 174, 186, 188, 189, 290, 292, 339, 340, 362, 438, 444, 452, 454, 459], "format": [3, 19, 24, 32, 68, 100, 184, 186, 188, 189, 227, 267, 268, 271, 272, 277, 278, 280, 289, 290, 292, 299, 300, 301, 302, 303, 307, 309, 310, 339, 343, 350, 355, 361, 371, 393, 437, 440, 442, 447], "former": 85, "formula": [156, 160, 443], "forum": 443, "forward": [434, 458], "found": [85, 379, 434, 452], "four": [95, 134, 135, 239, 450, 452, 459], "fourier": [8, 443], "fourth": 391, "frac": [261, 263, 264, 451, 457, 459, 460], "fractur": 445, "frad": 197, "frame": 451, "fran": 443, "frd": 216, "fre97": [228, 443, 457], "freder": 443, "free": [20, 45, 226, 326, 448], "freenod": 187, "freitag": 443, "fring": 445, "from": [1, 4, 6, 7, 8, 9, 11, 13, 15, 19, 20, 40, 44, 45, 89, 101, 104, 106, 107, 108, 110, 114, 115, 116, 118, 120, 122, 123, 124, 126, 127, 128, 129, 132, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 147, 149, 151, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 181, 185, 187, 215, 216, 223, 226, 227, 232, 234, 235, 236, 237, 238, 239, 242, 243, 244, 245, 248, 249, 251, 253, 254, 255, 256, 259, 260, 262, 265, 266, 272, 289, 298, 307, 309, 326, 341, 348, 351, 359, 360, 363, 369, 372, 383, 385, 394, 396, 397, 398, 401, 402, 405, 410, 411, 412, 415, 432, 433, 434, 435, 436, 437, 438, 440, 443, 444, 445, 446, 447, 448, 450, 451, 452, 454, 458, 459], "ftb16": [232, 443, 453], "ftetwild": 434, "full": [4, 7, 8, 9, 81, 89, 97, 160, 183, 216, 233, 238, 243, 257, 309, 310, 433, 442, 443, 444, 458], "fulli": [339, 416, 417], "fulltext": 443, "fun": [196, 204], "func": [75, 100, 103, 106, 156, 186, 187, 188, 189, 190, 191, 192, 198, 202, 205, 207, 208, 211, 215, 216, 220, 221, 222, 304, 305, 339, 434, 438], "func1": 434, "func2": 434, "function": [4, 8, 15, 16, 23, 64, 66, 74, 100, 103, 106, 134, 135, 138, 156, 180, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 228, 232, 258, 273, 276, 279, 326, 339, 396, 424, 434, 435, 436, 437, 439, 440, 441, 442, 445, 450, 451], "function2octre": [100, 458], "fund": 445, "fundament": 443, "further": [3, 18, 339, 355, 356, 357, 376, 377, 436, 445, 458], "furthest": 452, "fusilli": 9, "fusion": 443, "futur": 18, "fx_0y_0": 451, "fx_1y_1": 451, "fx_ny_n": 451, "fxxx": 216, "fxy": 451, "fy": 451, "g": [4, 16, 44, 65, 101, 104, 184, 185, 216, 223, 225, 232, 236, 241, 268, 271, 272, 274, 275, 289, 290, 292, 299, 300, 301, 302, 303, 307, 326, 433, 434, 435, 437, 441, 443, 444, 445, 451, 457], "gabriel": 443, "galleri": [4, 7, 8, 9, 12, 446], "gamma": [312, 327, 328, 329, 391, 392, 393, 408, 412], "gamma_0": 452, "gao": 443, "gap": 449, "garland": 443, "gauss": 451, "gaussian": [72, 156, 159, 160, 181], "gaussian_filt": [160, 181], "gaussian_sigma": [75, 120, 160, 181], "gaussiancurvatur": 451, "gem": 443, "gener": [3, 4, 7, 8, 9, 30, 31, 74, 81, 89, 91, 100, 101, 102, 103, 104, 105, 106, 107, 118, 128, 137, 140, 141, 155, 157, 162, 163, 172, 173, 176, 178, 179, 180, 182, 183, 186, 188, 189, 193, 199, 203, 206, 217, 232, 233, 236, 238, 239, 240, 242, 244, 245, 276, 279, 282, 283, 284, 288, 289, 290, 291, 292, 293, 294, 297, 308, 311, 312, 313, 314, 315, 316, 317, 318, 338, 339, 341, 359, 360, 363, 381, 388, 400, 403, 408, 412, 415, 424, 425, 432, 434, 436, 437, 438, 440, 442, 443], "genu": 438, "geometr": [118, 137, 155, 224, 315, 316, 443, 451, 452], "geometri": [100, 186, 188, 189, 237, 339, 398, 399, 438, 443, 444, 457], "geq": 459, "get": [54, 105, 181, 237, 243, 257, 349, 350, 351, 352, 370, 371, 372, 373, 384, 385, 419, 435, 445], "get_arrai": 434, "get_imag": 434, "getelemconnect": 138, "getelemneighbor": 416, "getnodeneighbor": [157, 162, 163, 416, 417, 419, 442], "getthem": 430, "gh97": [223, 443], "gi04": [157, 162, 163, 443, 451], "gift": [172, 174], "giftwrap": 172, "github": 439, "give": [150, 286, 307, 308, 420, 421, 451, 459], "given": [20, 46, 75, 98, 99, 120, 166, 167, 168, 169, 170, 173, 176, 178, 181, 184, 185, 225, 236, 297, 307, 308, 326, 351, 354, 372, 375, 379, 385, 400, 430, 448], "glfw": 431, "global": 326, "gmbh": 443, "gmsh": [443, 445], "go": [4, 7, 8, 9, 227, 442], "goal": [442, 456], "gol05": [156, 160, 443, 451], "goldfeath": [157, 162, 163, 443, 451], "goldman": [156, 160, 443, 451], "gomiti": 9, "good": [20, 448], "gpu": 1, "grad": [100, 339], "gradient": [100, 160, 181, 187, 197, 326, 458], "grai": 122, "grant": 445, "graphic": [20, 300, 301, 302, 303, 434, 443, 444, 448], "grayscal": [102, 105, 160, 430], "greater": [75, 101, 102, 103, 104, 105, 106, 107, 120, 122, 179, 180, 182, 183, 184, 185, 232, 397, 408, 412, 415, 451], "grid": [87, 100, 101, 104, 106, 107, 118, 150, 160, 188, 196, 197, 203, 233, 239, 242, 326, 334, 399, 434, 442, 443, 444, 450], "grid2d": 104, "grid2fun": 160, "grit": 443, "group": [108, 326, 411, 416, 417, 443], "growth": 445, "guarante": 128, "guess": [307, 309, 310, 326], "guid": [1, 17, 339, 436, 445], "guidelin": 3, "gutierrez": 445, "gy": 451, "gy_0": 451, "gy_1": 451, "gy_n": 451, "gyroid": [8, 186, 188, 189, 216, 399, 436], "h": [2, 7, 8, 102, 105, 141, 179, 180, 181, 182, 183, 186, 187, 188, 189, 223, 231, 232, 238, 239, 240, 241, 242, 268, 271, 272, 289, 290, 292, 299, 300, 301, 302, 303, 443, 451], "h_node": 232, "ha": [7, 20, 47, 64, 66, 74, 88, 106, 134, 135, 138, 185, 289, 290, 292, 339, 353, 354, 374, 375, 386, 396, 400, 424, 432, 435, 440, 441, 445, 448, 450, 452, 454, 457, 459], "ha01": [443, 459], "half": [236, 244, 309, 310, 433, 452, 454], "halt": 339, "handl": [7, 74, 100, 102, 105, 122, 160, 194, 200, 213, 218, 292, 424, 435, 452], "hang": 443, "happen": [20, 334, 448], "harvei": 443, "hash": 454, "hasn": [64, 66, 138], "hat": [451, 457, 459], "hausdorff": 307, "have": [1, 4, 20, 25, 30, 32, 99, 103, 104, 105, 106, 107, 122, 137, 166, 167, 168, 169, 181, 256, 268, 272, 282, 284, 290, 292, 302, 303, 308, 326, 338, 393, 396, 397, 401, 432, 433, 437, 442, 448, 450, 451, 452, 457], "haven": [48, 50], "health": 445, "heap": 223, "hear": 1, "heart": [10, 11, 12, 446], "heavili": 1, "heckbert": 443, "height": [236, 425, 430], "held": [31, 223, 225, 226, 227, 228, 229], "help": [121, 223, 315, 316, 449], "her": [20, 448], "here": [434, 449, 451, 452, 454], "hex": [128, 134, 135, 233, 236, 238, 244, 396, 430, 435], "hex20": 435, "hex20nodeconn": [114, 117], "hex8nodeconn": [114, 117], "hexahedr": [16, 101, 114, 115, 116, 118, 237, 238, 243, 248, 255, 281, 340, 341, 352, 363, 400, 401, 425, 444, 445], "hexahedra": [101, 119, 340, 444], "hexahedron": [74, 424, 435], "hexconn": 118, "hexcoord": 118, "hi": 232, "hide": 430, "hierarch": 458, "hierarchi": 95, "high": [4, 326, 434, 443], "higher": [103, 228, 458], "highest": [351, 372, 385], "highli": [157, 162, 163], "highlight": [12, 445], "hilton": 443, "hindu": [20, 448], "hip": 445, "hner": 443, "hol10": [340, 362, 443], "hold": [81, 181, 187, 226], "holder": 445, "hole": [20, 122, 166, 167, 168, 169, 448], "holmlid": 443, "home": 4, "hormann": 443, "how": [4, 9, 20, 47, 102, 105, 122, 396, 436, 445, 448, 449, 451, 452, 459], "howev": [20, 25, 31, 61, 160, 176, 178, 326, 434, 448, 450, 452, 457], "hsiw96": [107, 443], "hsw": [434, 443], "html": [315, 316, 441, 443], "http": [31, 98, 177, 268, 283, 284, 289, 290, 292, 293, 294, 299, 300, 301, 302, 303, 315, 316, 441, 443], "hu": 443, "hugh": 443, "hull": [172, 173, 174, 436, 443], "hundr": [20, 448], "hx": [102, 120, 179, 180, 182, 183], "hy": [102, 120, 179, 180, 182, 183], "hyperbol": 451, "hz": [102, 120, 180, 182, 183], "hzg": [232, 443], "i": [1, 4, 8, 19, 20, 22, 24, 30, 31, 35, 40, 43, 44, 46, 47, 57, 62, 64, 65, 66, 74, 75, 81, 85, 86, 88, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 115, 116, 117, 118, 119, 122, 123, 125, 126, 127, 128, 129, 130, 134, 135, 137, 141, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 160, 166, 167, 168, 169, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 195, 199, 200, 201, 206, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 232, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 253, 254, 255, 258, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 321, 323, 326, 328, 333, 334, 339, 340, 341, 343, 344, 345, 346, 347, 351, 354, 359, 360, 362, 363, 365, 366, 367, 368, 372, 375, 380, 381, 385, 393, 396, 398, 399, 400, 401, 402, 403, 406, 408, 409, 410, 411, 412, 415, 416, 417, 419, 422, 423, 424, 425, 430, 433, 434, 437, 439, 440, 441, 442, 445, 447, 448, 449, 450, 451, 452, 454, 456, 457, 458, 459, 460], "i2": [216, 328], "icip": 443, "icp": [307, 309, 310], "id": [24, 27, 31, 45, 60, 106, 107, 112, 136, 137, 140, 256, 266, 298, 338, 381, 396, 408, 409, 412], "idea": 449, "ideal": 251, "ident": [322, 324, 434, 442], "identif": [304, 434, 443], "identifi": [7, 74, 76, 112, 172, 223, 225, 226, 228, 229, 231, 232, 266, 282, 285, 288, 291, 297, 298, 304, 305, 326, 343, 344, 345, 365, 366, 399, 416, 417, 423, 424, 436, 452, 454], "identify_typ": [24, 121, 122, 134, 135, 246, 396, 423, 435], "idx": [111, 113, 396, 398, 410, 411], "ieee": 443, "ignor": [170, 173, 175, 176, 178, 188, 360], "ij": 460, "illingworth": 443, "im2voxel": [75, 160], "imag": [1, 4, 15, 19, 20, 75, 94, 102, 105, 120, 122, 150, 160, 304, 307, 308, 315, 316, 319, 320, 322, 324, 327, 328, 329, 331, 332, 334, 336, 337, 430, 434, 436, 439, 443, 444, 447, 448, 450, 451], "imageoverlai": 307, "img": [19, 75, 120, 122, 179, 180, 181, 182, 183, 184, 304, 307, 308, 447], "img1": [307, 308, 325], "img2": [307, 308, 325], "img_align": 307, "img_data": 430, "impath": 185, "imperfect": 434, "implement": [18, 100, 339, 340, 362, 419, 445, 449, 452], "implicit": [1, 4, 8, 10, 11, 12, 15, 100, 106, 156, 160, 223, 225, 339, 399, 436, 442, 443, 446, 450, 451], "implicitli": 438, "import": [4, 7, 8, 9, 20, 97, 122, 160, 289, 307, 309, 440, 441, 448, 449, 451, 452], "improv": [1, 7, 18, 31, 95, 408, 412, 415, 434, 436, 445, 457], "imshow": [122, 307, 434], "inaccur": 451, "inact": 454, "incircl": 452, "inclu": [300, 301, 302, 303], "includ": [8, 95, 216, 273, 281, 341, 346, 347, 361, 363, 367, 368, 380, 389, 403, 410, 416, 420, 436, 437, 438, 440, 443, 444, 445, 450, 451, 456, 458], "include_empti": 389, "includecollinear": 174, "inclus": [62, 273, 274, 275, 277, 278, 280, 281, 346, 347, 367, 368, 380, 452], "inconsequenti": 459, "increas": [304, 307], "increment": 452, "independ": [71, 451, 452], "index": [31, 72, 122, 134, 135, 304, 305, 324, 393, 408, 409, 433, 450], "indic": [30, 35, 43, 62, 111, 113, 134, 135, 137, 140, 164, 165, 174, 176, 177, 178, 186, 188, 223, 225, 231, 238, 282, 288, 290, 291, 297, 343, 344, 345, 365, 366, 396, 398, 410, 411, 412, 419, 433, 444, 452], "individu": 423, "inf": [355, 356, 357, 376, 377, 408, 412, 415], "infer": [122, 396, 435, 454], "inferno": 307, "infinit": [452, 459], "influenc": [40, 71], "info": [33, 34, 36, 37, 41, 42, 52, 443], "inform": [4, 24, 223, 231, 443, 445, 451, 454], "infti": 92, "inher": [232, 451], "initi": [95, 106, 225, 227, 228, 229, 237, 243, 307, 309, 310, 326, 354, 375, 434, 445], "inner": 24, "inp": [83, 440], "inplac": [32, 46, 62, 181, 187, 228], "input": [7, 30, 32, 46, 98, 100, 101, 102, 103, 104, 105, 106, 107, 110, 114, 118, 124, 128, 132, 142, 149, 151, 155, 181, 184, 185, 186, 193, 194, 195, 200, 213, 218, 228, 232, 237, 243, 257, 304, 307, 326, 334, 396, 402, 404, 407, 435, 437, 438, 442], "insid": [22, 30, 62, 101, 102, 103, 104, 105, 106, 107, 122, 141, 179, 180, 181, 182, 183, 186, 188, 189, 193, 194, 195, 199, 200, 201, 217, 218, 219, 273, 274, 275, 276, 277, 278, 279, 280, 281, 340, 346, 347, 362, 367, 368, 438, 450, 451, 452, 459], "inspir": [232, 445, 450], "instal": [157, 177, 326, 441], "instanc": [32, 46, 442], "instead": [107, 179, 180, 182, 183, 185, 186, 188, 189, 233, 236, 237, 238, 239, 240, 242, 243, 244, 245, 307, 326, 403, 459], "institut": [443, 445], "instruct": 439, "int": [30, 31, 62, 75, 100, 101, 102, 103, 104, 105, 106, 107, 120, 160, 177, 179, 180, 181, 182, 183, 184, 187, 191, 204, 220, 221, 222, 223, 225, 226, 228, 229, 231, 233, 234, 235, 236, 237, 240, 243, 244, 245, 261, 263, 264, 286, 287, 295, 296, 304, 307, 338, 339, 349, 351, 355, 356, 357, 359, 360, 370, 372, 376, 377, 381, 384, 385, 401, 402, 407, 412, 415, 420, 430], "int16": 185, "integ": [179, 180, 182, 183, 186, 188, 189, 234, 235, 304, 307], "intellig": 443, "intend": [122, 282, 307, 308, 434, 445, 449], "intens": [75, 120], "interact": [89, 430, 443], "interc": 451, "interesect": 297, "interest": [3, 8, 451, 458], "interfac": [18, 99, 177, 193, 199, 206, 217, 223, 228, 231, 232, 326, 334, 434, 441, 445], "interfer": 452, "interior": [101, 102, 103, 104, 105, 106, 107, 139, 223, 225, 226, 228, 229, 444, 452], "intermedi": [354, 375, 442], "intern": [173, 181, 187, 227, 258, 443], "internet": [19, 20, 447, 448], "interpol": [1, 4, 30, 75, 101, 102, 103, 104, 105, 106, 107, 120, 179, 180, 181, 182, 183, 184, 186, 188, 196, 197, 304, 307, 334, 339, 412, 450, 458], "interpolation_ord": [304, 307], "interpret": [251, 452, 454, 459], "interrant": [157, 162, 163, 443, 451], "intersect": [14, 95, 98, 99, 200, 266, 267, 268, 269, 271, 272, 276, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 343, 345, 365, 434, 438, 443, 445, 452, 458], "intersection_fun": 200, "intersection_leav": 285, "intersection_v": 199, "intersectionf": [199, 434], "intersectionpair": 297, "intersectionpoint": [266, 297, 298], "intersectionpt": [282, 288, 289, 290, 291, 303], "intersections1": 266, "intersections2": 266, "intersectionv": 199, "interv": 459, "intins": 451, "intric": 459, "introduc": [4, 434], "intuit": 451, "inv": [4, 111, 113, 137, 140, 398, 410, 411], "invalid": [4, 118, 128, 137, 155, 452, 453], "invari": 443, "invers": [4, 73, 181, 187, 226, 248, 249, 450, 457], "inverseorthogon": [73, 92], "inverseorthogonalqu": [73, 92, 253], "invert": [88, 223, 334, 454], "involv": [1, 434, 452], "iortho": 249, "iorthoq": 248, "ipynb": [4, 7, 8, 9], "irregular": 4, "irrelev": 226, "isn": [30, 95, 186, 339, 423, 457, 460], "iso": 430, "isocontour": 104, "isolin": [30, 104, 107, 450], "isometr": 430, "isosurfac": [15, 22, 30, 101, 102, 103, 104, 105, 106, 156, 180, 181, 182, 186, 187, 188, 206, 212, 339, 443, 450, 451], "isotrop": [102, 105, 181, 388], "isovalu": [100, 104, 179, 180, 182, 183, 186, 188, 189, 450], "iss": 443, "issu": [88, 452], "italian": [20, 448], "item": [327, 328, 329, 330, 336, 337], "iter": [4, 181, 187, 225, 226, 228, 229, 230, 231, 306, 307, 309, 310, 403, 457, 460], "itertool": 292, "its": [24, 95, 118, 128, 137, 155, 225, 228, 229, 408, 442, 452, 454, 457, 458, 460], "itself": [451, 459], "iwp": 216, "j": [158, 164, 165, 227, 324, 326, 443, 457, 460], "jack": 443, "jacobson": 443, "jame": 443, "jan": 443, "jar73": [174, 443], "jarvi": 443, "jean": 443, "jeann": 443, "jit": 157, "jm24": [8, 443, 445], "joachim": 443, "joe": 443, "john": 443, "join": 434, "jonathan": [18, 177, 443], "jonathon": 178, "josephson": [1, 443, 445], "joshua": 445, "journal": [20, 227, 300, 301, 302, 303, 443, 448, 452], "jp": 443, "jpeg": 185, "jpg": [185, 437], "jstor": 443, "jul": 443, "jule": 443, "jupyt": [4, 7, 8, 9], "jupyter_rfb": 439, "just": [45, 179, 183, 234, 235], "k": [227, 283, 284, 293, 294, 443, 451], "k1a_smooth": 4, "k1a_spher": 4, "k1m_smooth": 4, "k1m_sphere": 4, "k2a_smooth": 4, "k2a_spher": 4, "k2m_smooth": 4, "k2m_sphere": 4, "k_": 460, "kai": 443, "kappa_": 451, "kappa_1": [4, 451], "kappa_2": [4, 451], "kdtree": [321, 333], "keep": [20, 29, 32, 62, 85, 100, 179, 180, 182, 183, 186, 188, 189, 226, 304, 442, 448], "kei": [31, 231, 445, 452, 454, 459], "keith": 443, "kept": [141, 189, 396], "kernel": 181, "keyword": [186, 188, 189, 334], "kf": 227, "know": [95, 452], "known": [8, 423, 459], "koch": 216, "koenderink": [158, 164, 165, 443], "kong": 443, "ku": 227, "kvd92": [158, 164, 165, 443, 451], "kwarg": [81, 89, 186, 188, 189, 429], "l": [31, 339, 443], "l0overrid": 227, "lab": 445, "label": [4, 223, 228, 231, 232, 434], "laboratori": [20, 448], "laidlaw": 443, "lambda": [8, 106], "lambdifi": [192, 198, 202, 205, 208], "laplacian": [4, 7, 181, 187, 225, 226, 228, 229, 443, 456], "larg": [179, 183, 226, 326, 355, 356, 357, 376, 377, 434, 441], "larger": [228, 444, 454, 458], "largest": [225, 226, 228, 229, 323, 452], "last": [122, 241, 304, 305, 410], "later": [31, 442], "layer": [31, 400, 401, 425, 443], "layerconn": 400, "layercoord": 400, "lc87": [101, 102, 443, 450], "lead": [95, 434, 450, 451, 452, 457], "leaf": [285, 341, 354, 355, 356, 357, 363, 375, 376, 377, 379, 380, 389, 458], "least": [46, 419, 451, 452, 459], "leav": [32, 46, 236, 354, 375, 389, 452], "lectur": 443, "lee": 443, "left": [451, 457, 459], "legend": 4, "len": [4, 150, 237, 297, 326, 410, 412, 415], "length": [24, 64, 65, 66, 186, 188, 189, 223, 227, 231, 232, 247, 261, 304, 305, 407, 410, 411, 430, 435], "leq": 459, "less": [22, 30, 74, 75, 101, 102, 103, 104, 105, 106, 107, 120, 122, 179, 180, 182, 183, 184, 185, 186, 188, 189, 223, 225, 226, 228, 229, 309, 310, 339, 396, 399, 424, 451], "lessen": 449, "lestin": 443, "letter": 443, "level": [30, 101, 102, 103, 104, 105, 106, 107, 339, 340, 342, 349, 351, 358, 362, 364, 370, 372, 378, 382, 384, 385, 387, 442, 458], "lexicograph": 437, "li": [452, 459], "lib": 443, "librari": [20, 138, 443, 445, 448], "lidinoid": 216, "lie": [4, 156, 181, 186, 187, 188, 236, 271, 272, 300, 301, 302, 303, 399, 454], "light": [20, 448], "like": [20, 103, 118, 137, 155, 292, 326, 436, 445, 448], "likewis": [442, 454], "limit": [138, 225, 274, 275, 350, 371, 434, 435, 445, 457, 459], "linalg": [4, 289], "lincoa": 326, "line": [9, 24, 30, 99, 104, 107, 166, 172, 234, 235, 237, 241, 243, 282, 286, 287, 295, 296, 338, 423, 424, 430, 435, 450, 452, 459], "line_color": 430, "line_width": 430, "linear": [30, 101, 102, 103, 104, 105, 106, 107, 121, 133, 180, 181, 182, 186, 188, 196, 197, 227, 326, 339, 435, 451, 458], "lineconn": 338, "link": [25, 61, 443, 452, 458], "linspac": 237, "list": [20, 24, 29, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 52, 64, 65, 66, 73, 76, 81, 85, 89, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 174, 176, 178, 184, 186, 188, 189, 196, 197, 203, 216, 227, 233, 238, 239, 242, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 265, 266, 269, 273, 276, 279, 281, 282, 283, 285, 288, 291, 293, 294, 298, 303, 304, 307, 311, 326, 327, 328, 329, 330, 336, 337, 338, 339, 340, 343, 344, 345, 350, 355, 361, 362, 365, 366, 371, 380, 381, 389, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 430, 433, 441, 442, 448], "liu1994": 251, "ller": 443, "load": [75, 184, 307, 309, 437, 440, 460], "local": [181, 187, 223, 225, 226, 228, 229, 231, 326, 404, 451, 457], "locallaplaciansmooth": [7, 457], "locally_bias": 326, "locat": [22, 224, 225, 226, 228, 229, 304, 307, 396, 398, 409], "lock": 442, "log": 4, "long": [8, 20, 191, 236, 273, 339, 448, 459], "longer": [32, 62, 133, 289, 458], "longest": [227, 247, 304, 305], "look": 451, "lookup": 450, "loop": [241, 289, 290, 292], "loos": 445, "lorensen": [443, 450], "lori": 443, "loss": 434, "lot": 436, "love": 1, "low": [4, 8, 434, 451], "lower": [62, 81, 190, 223, 268, 269, 274, 275, 283, 284, 293, 294, 299, 304, 307, 442, 458, 459], "lth86": [434, 443], "luci": [20, 448], "lumetr": 444, "ly": [286, 287, 295, 296], "m": [20, 30, 32, 45, 46, 64, 65, 66, 71, 73, 75, 78, 80, 83, 86, 97, 122, 166, 167, 168, 169, 181, 187, 203, 209, 210, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 237, 243, 261, 263, 264, 291, 297, 309, 326, 430, 438, 440, 441, 442, 443, 448, 460], "m1": [8, 309, 434], "m2": [8, 309, 434, 442], "m3": 8, "m4": 8, "m_align": 309, "macaroni": 9, "machin": [74, 424, 443], "made": [20, 32, 46, 444, 448], "magnitud": [122, 157, 160, 181, 451], "mai": [20, 25, 61, 64, 66, 97, 118, 128, 133, 137, 155, 157, 166, 167, 168, 169, 185, 186, 188, 189, 226, 238, 239, 242, 243, 304, 305, 307, 308, 326, 334, 340, 362, 415, 433, 434, 438, 441, 448, 451, 454, 459], "main": [95, 444, 450], "maintain": 1, "major": [3, 215, 245, 434, 438], "make": [2, 24, 64, 66, 95, 122, 238, 239, 242, 355, 356, 357, 376, 377, 436, 442, 445, 451], "mani": [23, 47, 74, 289, 290, 292, 326, 424, 442, 451, 457, 459], "manifold": [20, 276, 279, 443, 448], "manipul": [64, 66, 432, 436, 445], "manufactur": 444, "map": [1, 408, 412, 415], "mappingmatrix": [408, 412, 415], "marc": 443, "march": [4, 100, 101, 102, 104, 105, 106, 107, 180, 186, 188, 443], "marchingcub": [103, 180, 186, 450], "marchingcubesimag": [160, 180, 186], "marchingsquar": [103, 450], "marchingtetrahedra": [103, 180, 186, 450], "marchingtriangl": 103, "mark": [452, 458], "marot": 443, "marti": 445, "masknan": 4, "mat": 404, "match": [133, 223, 232, 402], "materi": [223, 232, 443], "mathbf": [311, 312, 313, 314, 315, 316, 317, 318, 451, 457], "mathemat": [438, 443], "mathwork": [315, 316, 441], "matplotlib": [4, 81, 122, 307, 439], "matric": 227, "matrix": [102, 105, 150, 184, 304, 305, 306, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 327, 329, 330, 334, 335, 336, 337, 404, 412, 415, 451, 459], "matter": [46, 193, 194, 195, 273, 276, 279, 443], "max": [68, 72, 73, 227, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 307, 309, 310, 351, 372, 385, 459], "maxangl": 250, "maxdepth": [100, 338, 339, 355, 356, 357, 359, 360, 376, 377, 381, 388], "maxdihedr": [73, 258], "maximum": [31, 81, 100, 156, 157, 158, 159, 160, 161, 162, 163, 165, 177, 185, 186, 188, 189, 193, 194, 199, 200, 225, 226, 228, 229, 231, 248, 250, 338, 339, 351, 352, 355, 356, 357, 359, 360, 372, 376, 377, 381, 385, 451, 458], "maxit": [225, 226, 228, 229, 306, 326], "maxprincip": [156, 157, 158, 159, 160, 161, 162, 163, 165], "maxprincipaldirect": [4, 157], "maxsiz": [355, 356, 357, 376, 377], "mb": [6, 11, 13, 446], "mc": [100, 180, 186, 188], "mc33": [100, 180, 186], "me": 1, "mead": 326, "mean": [4, 8, 71, 72, 73, 156, 160, 161, 228, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 321, 333, 442, 452, 454, 459], "meancurvatur": 451, "meaning": 160, "meanratio": [73, 92, 228], "measur": [8, 92, 321, 322, 323, 324, 333, 443, 451, 458], "mechan": 443, "mechanobiolog": [443, 445], "mechanobiologi": [1, 443, 445], "meet": [261, 300, 301, 302, 303, 454], "melt": [20, 448], "mem": [6, 11, 13, 446], "memori": 454, "merg": [109, 117, 125, 130, 145, 148, 152, 223, 405, 425], "mergedconn": 405, "mergedcoord": 405, "mergedv": 405, "mergemesh": 425, "mesh": [1, 4, 7, 9, 14, 20, 91, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 162, 163, 166, 167, 168, 169, 172, 176, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 196, 197, 203, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 273, 276, 279, 281, 282, 288, 291, 297, 298, 307, 309, 338, 339, 340, 341, 362, 363, 381, 388, 393, 394, 396, 397, 398, 399, 400, 401, 405, 406, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 429, 430, 432, 433, 434, 435, 436, 439, 441, 443, 448, 449, 452, 454, 456, 460], "mesh2": 76, "mesh2sdf": 1, "meshanalysi": [6, 446], "meshboolean": 434, "meshgener": [11, 446], "meshio": [78, 80, 83, 86, 87, 90, 439, 440], "meshio2mymesh": 440, "meshpi": 445, "messag": 184, "met": [338, 359, 360, 381, 459], "meth": 76, "method": [4, 9, 10, 12, 18, 29, 32, 53, 54, 95, 100, 101, 102, 103, 106, 107, 118, 128, 137, 146, 155, 160, 166, 167, 168, 169, 172, 176, 178, 180, 181, 182, 186, 187, 188, 196, 197, 224, 225, 227, 228, 229, 232, 255, 259, 262, 305, 307, 309, 310, 326, 339, 340, 362, 403, 416, 434, 436, 440, 442, 443, 444, 450, 451, 457, 460], "metric": [72, 73, 307, 308, 309, 310, 443], "michael": 443, "micro": 445, "middl": 7, "midpoint": [101, 102, 103, 104, 105, 106, 107, 109, 117, 125, 130, 145, 148, 152, 180, 182, 186, 188, 232, 307, 308, 450], "might": [20, 432, 448], "million": [20, 448], "min": [68, 72, 73, 227, 228, 230, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 307, 309, 310, 412, 415, 459], "minangl": 252, "mind": 451, "mindepth": [100, 339], "mindihedr": [73, 258], "minim": [8, 74, 192, 198, 202, 205, 208, 216, 223, 326, 424, 436, 454], "minimum": [79, 81, 100, 156, 157, 158, 159, 160, 161, 162, 163, 165, 186, 188, 189, 195, 201, 217, 218, 219, 228, 252, 254, 289, 290, 292, 304, 305, 326, 338, 339, 352, 355, 356, 357, 376, 377, 381, 404, 443, 451], "mininum": 157, "minor": [3, 215, 245], "minprincip": [156, 157, 158, 159, 160, 161, 162, 163, 165], "minprincipaldirect": 157, "minsiz": [338, 355, 356, 357, 376, 377, 381], "minut": [4, 7, 8, 9, 443], "mirror": [20, 334, 406, 448], "mirroredconn": 406, "mirroredcoord": 406, "mislabel": [74, 424], "mitig": 457, "mix": [10, 11, 12, 24, 30, 64, 65, 66, 103, 104, 105, 106, 107, 134, 135, 204, 422, 435, 445, 446, 450], "mixed_el": [30, 103, 104, 105, 106, 107, 186, 223], "mixed_top": 204, "mixed_topology1": 8, "mixed_topology2": 8, "mixed_topology3": 8, "mixed_topology4": 8, "mm": 4, "mnew": [223, 224, 225, 226, 228, 229, 231, 232, 309], "mode": [24, 62, 102, 105, 141, 160, 189, 304, 307, 334, 341, 363, 416, 419, 430, 441, 442], "model": [20, 307, 309, 310, 434, 443, 445, 448], "modif": 442, "modifi": [32, 46, 62, 228, 273, 307, 434, 436, 437, 442, 454, 456], "modul": [1, 8, 16, 18, 22, 95, 432, 433, 436, 440, 442], "mohebi": 445, "moller97": [300, 301, 302, 303, 443], "mollert05": [289, 290, 292, 443, 459], "more": [1, 4, 7, 33, 34, 36, 37, 41, 42, 52, 53, 54, 75, 95, 96, 97, 103, 120, 166, 167, 168, 169, 179, 180, 181, 182, 183, 184, 187, 223, 231, 289, 290, 292, 304, 307, 334, 396, 403, 434, 436, 438, 440, 442, 444, 445, 449, 456, 460], "morgan": [443, 445], "morlei": [283, 284, 293, 294, 443], "morph": [20, 448], "morpholog": 307, "moscow": 443, "most": [4, 74, 138, 307, 309, 310, 326, 403, 416, 417, 422, 424, 430, 433, 443, 444, 445, 449, 450, 451, 452, 458], "mostvis": 403, "mostvisible_it": 403, "mostvisible_loop": 403, "motion": [181, 225], "motiv": 457, "movabl": 187, "move": [4, 181, 186, 187, 188, 225, 226, 228, 229, 232, 306, 307, 308, 309, 310, 334, 416, 442, 452, 456, 457], "movement": [181, 225, 226, 228, 229, 457], "mpr19": [171, 443], "mse": [321, 333], "mt": [100, 180, 186], "much": [4, 289, 290, 292, 434, 459], "multi": [241, 415, 437, 443], "multichannel": [184, 185, 437], "multidimension": 326, "multipl": [8, 46, 64, 65, 66, 67, 76, 111, 134, 231, 268, 289, 290, 292, 415, 433, 438, 442, 450], "must": [31, 46, 62, 64, 65, 66, 75, 103, 106, 107, 119, 120, 141, 146, 157, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 223, 224, 226, 227, 232, 236, 292, 304, 305, 307, 326, 338, 355, 356, 357, 376, 377, 381, 396, 437, 441, 450, 452, 459], "mvbb": [304, 305], "mx3": [170, 175, 177], "mx4": 171, "my": 1, "mymesh": [1, 3, 4, 7, 8, 9, 12, 434, 435, 436, 438, 439, 440, 442, 444, 449, 452, 458], "mymesh2meshio": 86, "m\u00f6ller": [268, 289, 290, 292, 299, 300, 301, 302, 303, 459], "n": [9, 13, 64, 65, 66, 67, 119, 134, 146, 169, 170, 172, 175, 176, 178, 220, 221, 222, 226, 233, 240, 241, 261, 263, 264, 268, 272, 279, 280, 281, 282, 284, 287, 290, 292, 296, 297, 302, 303, 305, 326, 335, 338, 344, 345, 356, 357, 360, 365, 366, 376, 377, 393, 420, 443, 451, 452, 457, 459], "n0": 134, "n1": [134, 136], "n2": [134, 136], "n3": 136, "n4": 136, "n5": 136, "n_i": [457, 460], "name": [19, 20, 24, 31, 64, 65, 66, 67, 85, 90, 185, 204, 216, 430, 431, 432, 437, 442, 444, 447, 448], "nan": [4, 53, 287, 296, 297], "nasti": [20, 448], "nation": 445, "natur": [157, 339, 449, 452, 458], "ndarari": [327, 328, 329, 330], "ndarrai": [19, 75, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 117, 118, 119, 120, 122, 124, 125, 128, 130, 132, 137, 140, 141, 142, 145, 146, 148, 149, 150, 151, 152, 155, 156, 157, 160, 162, 163, 170, 171, 173, 174, 175, 177, 179, 180, 181, 182, 183, 184, 192, 193, 198, 199, 202, 205, 206, 208, 212, 217, 219, 225, 226, 242, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 272, 277, 280, 282, 284, 286, 287, 288, 289, 290, 291, 295, 296, 297, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 322, 324, 326, 327, 328, 329, 330, 334, 335, 336, 337, 340, 341, 343, 345, 346, 347, 352, 362, 363, 365, 367, 368, 373, 380, 390, 392, 396, 398, 402, 404, 407, 408, 410, 411, 430, 447], "ndimag": [75, 120, 122, 160, 179, 180, 181, 182, 183, 184, 304, 307, 334], "necessari": [31, 160, 304, 339, 452, 459, 460], "necessarili": [128, 137], "need": [95, 138, 227, 289, 290, 292, 334, 415, 423, 434, 439, 441, 442, 449, 450, 452, 454, 458], "neg": [30, 122, 175, 179, 180, 182, 183, 186, 188, 189, 193, 194, 195, 199, 200, 201, 217, 218, 219, 220, 221, 222, 236, 451, 452], "neglect": [110, 114, 124, 132, 142, 149, 151], "neighbor": [7, 37, 52, 59, 118, 128, 137, 155, 157, 162, 163, 225, 227, 228, 229, 254, 256, 416, 417, 419, 420, 421, 422, 433, 452, 454, 457, 460], "neighborhood": [157, 223, 420, 421, 451], "neilesh": 445, "neither": [240, 241], "nelder": 326, "nelem": [74, 223, 231, 232, 424], "nesper": [216, 443], "net": 460, "network": [31, 460], "never": 454, "nevertheless": 8, "new": [9, 64, 65, 66, 67, 101, 102, 103, 104, 105, 106, 107, 109, 117, 118, 119, 125, 128, 130, 131, 137, 140, 145, 146, 148, 152, 155, 223, 224, 225, 226, 228, 229, 232, 326, 396, 398, 400, 409, 410, 434, 442, 450, 452, 456], "new_imag": 334, "new_img": 307, "new_point": [306, 310, 335], "newconn": [101, 102, 104, 105, 109, 110, 119, 121, 125, 130, 132, 133, 146, 148, 149, 152, 396, 398, 409], "newcoord": [101, 102, 104, 105, 118, 119, 121, 128, 133, 146, 155, 398, 409], "newedg": 64, "newfac": 66, "newid": 409, "newli": 452, "newuoa": 326, "newvalu": [106, 107], "next": [119, 146, 339, 452, 458], "nface": 426, "ni": 258, "nii": 443, "nine": 164, "nj": 258, "nlayer": [31, 401], "nme": 443, "nnode": [45, 399], "nodal": [8, 30, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 147, 148, 149, 151, 152, 153, 154, 155, 157, 162, 163, 173, 196, 197, 216, 227, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 262, 265, 340, 362, 394, 395, 397, 398, 399, 400, 401, 403, 405, 406, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 443], "node": [4, 7, 16, 24, 26, 27, 31, 32, 35, 36, 40, 43, 45, 47, 51, 52, 53, 54, 57, 58, 59, 60, 62, 64, 65, 66, 67, 74, 75, 76, 80, 86, 87, 88, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 162, 163, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 181, 183, 187, 189, 196, 197, 203, 223, 224, 225, 226, 227, 228, 229, 232, 261, 263, 264, 266, 273, 276, 279, 281, 282, 285, 288, 291, 297, 298, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 383, 384, 385, 386, 388, 389, 391, 392, 396, 398, 399, 400, 401, 403, 405, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 430, 433, 435, 440, 442, 444, 450, 451, 452, 454, 457, 458], "nodeconn": [4, 24, 25, 57, 61, 65, 69, 74, 88, 100, 101, 103, 104, 106, 107, 108, 109, 110, 115, 116, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 143, 144, 146, 147, 148, 149, 151, 152, 153, 154, 155, 170, 171, 173, 175, 177, 179, 180, 182, 183, 186, 188, 189, 227, 233, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 393, 395, 396, 397, 398, 401, 403, 406, 409, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 433, 442, 444], "nodeconn1": 405, "nodeconn2": 405, "nodecoord": [4, 24, 25, 61, 67, 82, 88, 100, 101, 103, 104, 106, 107, 108, 109, 110, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 160, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 186, 188, 189, 223, 227, 233, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 270, 273, 276, 279, 282, 288, 291, 297, 309, 338, 381, 393, 394, 395, 396, 397, 398, 399, 401, 403, 406, 408, 409, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 433, 434, 442, 444], "nodecoords1": [266, 298, 405, 412, 415], "nodecoords2": [266, 298, 405, 412, 415], "nodedata": [24, 30, 62, 75, 120, 179, 183, 189, 223, 430, 434, 442], "nodeneighbor": [4, 157, 162, 163, 227, 417, 422, 433, 441, 442], "nodeneighborhood": [157, 420, 421], "nodenorm": [4, 138, 157, 162, 163, 403], "nodenormalsmethod": 53, "noderegion": 417, "nodeset": [24, 67], "nodespringsmooth": [181, 187, 460], "nodev": [197, 203, 405], "nodevals1": [405, 415], "nodevals2": [405, 415], "nodevalu": [101, 103, 104, 106, 107], "non": [20, 53, 74, 88, 98, 99, 135, 157, 226, 227, 232, 238, 239, 242, 321, 323, 403, 424, 433, 448, 450, 451, 452, 454], "none": [4, 24, 29, 30, 31, 46, 62, 64, 65, 66, 67, 73, 75, 77, 81, 85, 100, 103, 120, 121, 122, 138, 141, 160, 166, 167, 169, 173, 176, 177, 178, 179, 180, 182, 183, 185, 186, 187, 188, 196, 223, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 240, 241, 243, 244, 245, 246, 261, 262, 268, 273, 276, 279, 288, 291, 297, 299, 304, 305, 306, 307, 308, 309, 310, 321, 326, 331, 332, 333, 334, 338, 339, 342, 345, 364, 379, 381, 382, 388, 402, 406, 408, 409, 412, 415, 416, 417, 419, 423, 425, 426, 429, 430], "nonetyp": [29, 31, 73, 85, 122, 187, 226, 231, 279, 288, 291, 304, 305, 307, 308, 309, 310, 379, 423, 430], "nor": [20, 240, 241, 448], "nord": 445, "norm": [240, 289], "normal": [19, 29, 38, 53, 54, 138, 157, 162, 163, 172, 180, 181, 182, 183, 187, 207, 220, 221, 222, 242, 254, 256, 258, 268, 269, 270, 271, 272, 273, 276, 279, 299, 345, 357, 394, 403, 408, 436, 442, 443, 447, 451, 454, 457, 459], "notabl": 445, "note": [46, 64, 65, 66, 73, 107, 118, 128, 133, 137, 138, 155, 166, 167, 168, 169, 193, 194, 195, 233, 240, 244, 309, 310, 326, 400, 412, 415, 419, 434, 443, 452, 454], "notebook": [4, 7, 8, 9], "noth": 436, "notic": [20, 157, 448], "notion": 451, "notrim": 189, "noura": 443, "novel": 443, "now": 451, "np": [4, 8, 9, 19, 45, 53, 74, 75, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 117, 118, 119, 120, 122, 124, 125, 128, 130, 132, 137, 140, 141, 142, 145, 146, 148, 149, 150, 151, 152, 155, 156, 157, 160, 162, 163, 170, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 183, 184, 192, 193, 198, 199, 202, 205, 206, 208, 212, 217, 219, 223, 225, 226, 237, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 271, 272, 276, 277, 278, 279, 280, 282, 284, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 322, 324, 326, 327, 328, 329, 330, 334, 335, 336, 337, 340, 341, 343, 345, 346, 347, 352, 355, 356, 357, 362, 363, 365, 367, 368, 373, 376, 377, 380, 390, 392, 396, 398, 399, 402, 404, 407, 408, 410, 411, 412, 415, 424, 430, 447], "npt": [412, 415], "nring": [72, 420], "numba": [157, 439], "numbaperformancewarn": 4, "number": [3, 24, 31, 40, 47, 48, 49, 50, 51, 110, 114, 119, 124, 132, 134, 135, 142, 146, 149, 151, 177, 181, 187, 223, 225, 226, 228, 229, 231, 232, 233, 234, 235, 236, 240, 241, 244, 245, 255, 309, 310, 326, 352, 393, 396, 401, 411, 412, 415, 420, 430, 433, 435, 436, 439, 442, 452, 459, 460], "numer": [20, 227, 443, 448], "numpi": [1, 4, 8, 9, 101, 102, 104, 105, 111, 113, 120, 184, 185, 186, 188, 189, 192, 198, 202, 205, 208, 289, 307, 308, 309, 328, 339, 402, 407, 430, 437, 438, 439], "nvidia": 1, "nx2": 24, "nx3": [24, 157, 162, 163, 171, 226, 282, 288, 291, 347, 359, 368, 381, 390, 404], "nx3x3": 393, "nx4": 408, "o": [439, 443, 459], "o_x": 459, "ob01": [181, 187, 443], "obj": 440, "object": [20, 24, 25, 61, 73, 74, 75, 78, 80, 83, 86, 87, 97, 98, 100, 160, 172, 176, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 203, 224, 225, 226, 228, 229, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 304, 305, 326, 339, 382, 414, 424, 430, 434, 438, 440, 441, 442, 443, 445, 448, 451], "obp03": [229, 443, 457], "observ": 8, "obtain": [19, 20, 64, 66, 100, 102, 104, 105, 111, 112, 113, 138, 157, 162, 163, 181, 187, 193, 194, 195, 199, 200, 201, 217, 218, 219, 393, 419, 433, 434, 437, 438, 444, 447, 448, 450, 451, 459], "occur": [141, 160, 186, 355, 356, 357, 376, 377, 459], "oct": 445, "octre": [100, 141, 276, 279, 285, 288, 291, 292, 297, 338, 339, 340, 341, 349, 350, 351, 352, 355, 356, 357, 359, 360, 362, 370, 372, 377, 379, 380, 381, 384, 385, 388, 408, 412, 415], "octree2du": 100, "octree_ep": 100, "octree_strategi": 100, "octreenod": [141, 276, 279, 285, 288, 291, 297, 338, 339, 340, 341, 359, 379, 380, 381, 388, 408, 412, 415, 458], "odd": 459, "off": [223, 326, 454], "offer": [326, 434, 438, 442], "offset": [212, 213, 243], "offset_v": 206, "offsetf": 206, "offsetv": 206, "often": [223, 232, 434, 450, 460], "ohtak": [187, 443], "oi": 443, "old": [398, 409], "om": 437, "omit": 439, "onc": [396, 431, 441, 452], "one": [25, 29, 46, 61, 71, 111, 113, 118, 128, 134, 135, 137, 155, 181, 225, 227, 228, 229, 268, 286, 287, 288, 289, 290, 291, 292, 295, 296, 309, 310, 338, 359, 360, 381, 412, 415, 419, 433, 442, 443, 445, 450, 451, 452, 458, 459], "ones": 223, "ones_lik": 4, "ongo": 445, "onli": [29, 64, 66, 98, 103, 111, 113, 122, 134, 135, 160, 175, 181, 184, 187, 223, 225, 226, 227, 228, 229, 232, 236, 240, 244, 245, 273, 276, 279, 283, 284, 285, 288, 289, 290, 291, 292, 304, 305, 309, 310, 338, 340, 341, 359, 360, 362, 363, 381, 396, 397, 401, 412, 415, 419, 423, 430, 431, 433, 437, 439, 451, 452, 454, 457, 458, 459], "onlin": [19, 20, 447, 448], "onlinelibrari": 443, "onto": [4, 408, 452, 457, 459], "opac": 430, "opaqu": 430, "open": [236, 444, 451], "opencv": [437, 439], "oper": [20, 24, 25, 61, 65, 95, 98, 184, 193, 194, 195, 216, 223, 231, 398, 410, 433, 434, 436, 438, 442, 445, 448, 449, 450], "opposit": [30, 179, 180, 182, 183, 186, 188, 189, 261, 289, 438, 450, 451, 452], "optim": [8, 31, 138, 181, 187, 247, 307, 309, 310, 443, 445], "optimizer_arg": [307, 309, 310, 326], "optimizetet": 31, "option": [1, 2, 19, 20, 24, 29, 30, 31, 32, 46, 54, 62, 64, 65, 66, 67, 73, 75, 76, 81, 85, 88, 89, 90, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 118, 120, 122, 128, 134, 135, 137, 138, 140, 141, 155, 157, 160, 166, 167, 168, 169, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 204, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 261, 262, 266, 268, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 312, 321, 326, 327, 328, 329, 330, 333, 334, 338, 339, 340, 341, 345, 346, 347, 348, 354, 355, 356, 357, 359, 360, 361, 362, 363, 367, 368, 369, 375, 376, 377, 380, 381, 383, 389, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 417, 419, 422, 423, 425, 430, 431, 435, 436, 447, 448], "optionalperpendicular": 244, "order": [46, 75, 103, 116, 119, 120, 121, 127, 133, 138, 144, 146, 150, 154, 174, 179, 180, 182, 183, 184, 193, 194, 195, 231, 304, 307, 312, 329, 334, 352, 396, 398, 410, 411, 435, 437, 443, 444, 450, 451, 452, 454, 459], "org": [31, 98, 177, 268, 283, 284, 289, 290, 292, 293, 294, 299, 300, 301, 302, 303, 443], "organ": [95, 432], "orient": [118, 128, 137, 155, 157, 172, 215, 242, 286, 304, 305, 430, 433, 436, 451, 452], "orientsurf": 172, "origin": [1, 32, 46, 71, 101, 102, 106, 107, 111, 113, 119, 136, 137, 140, 146, 181, 187, 223, 232, 304, 305, 307, 311, 312, 396, 398, 410, 411, 442, 445, 449, 457, 459], "ortho": 254, "orthogon": [73, 92, 248, 249, 253], "orthogonalqu": [73, 92], "orthopaed": 1, "orthoq": 253, "other": [20, 24, 25, 61, 71, 85, 103, 107, 128, 138, 157, 181, 187, 212, 213, 216, 236, 257, 286, 287, 295, 296, 297, 311, 312, 351, 354, 372, 375, 385, 396, 407, 432, 434, 438, 441, 442, 445, 448, 451, 452, 454, 459], "otherwis": [30, 31, 32, 46, 62, 102, 103, 104, 105, 106, 107, 223, 228, 232, 236, 237, 238, 239, 242, 243, 268, 269, 271, 272, 273, 276, 279, 283, 284, 289, 293, 294, 299, 300, 302, 303, 341, 346, 347, 363, 367, 368, 437, 452, 459], "oup": 443, "our": [20, 448], "out": [3, 4, 62, 89, 344, 366, 402, 407, 410, 411], "outer": [444, 454], "outofprocess": 441, "output": [30, 32, 46, 89, 98, 99, 103, 141, 193, 194, 195, 199, 200, 201, 217, 218, 219, 402, 410, 411, 442], "outsid": [22, 62, 116, 122, 127, 144, 154, 273, 276, 279, 394, 438, 450, 451, 459], "outward": [172, 451, 452], "over": [223, 237, 454], "overal": 452, "overdetermin": 451, "overhead": [74, 157, 424, 441], "overlai": [307, 308], "overlap": [268, 299, 322, 324, 400, 443], "overrid": [185, 227], "overridden": [180, 186], "overview": 445, "p": [8, 208, 209, 210, 216, 251, 283, 284, 293, 294, 452, 459], "p1": 459, "p_": 452, "p_1": 459, "p_2": 459, "p_i": 452, "p_x": 452, "p_y": 452, "packag": [440, 442, 445], "pad": [102, 105, 160, 297, 402, 407], "page": 443, "pair": [258, 287, 296, 297, 302, 303, 454], "pairwis": [280, 292, 393], "pan": 430, "panozzo": 443, "paper": [452, 459], "papli": [307, 308], "paraboloid": 452, "parallel": [46, 273], "parallelepip": 459, "param": 397, "paramet": [8, 19, 20, 24, 29, 30, 31, 32, 46, 62, 64, 65, 66, 67, 73, 75, 76, 78, 81, 83, 85, 90, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 321, 322, 323, 324, 326, 327, 328, 329, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 375, 376, 377, 379, 380, 381, 383, 384, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 430, 431, 447, 448, 451, 459], "parametr": 459, "paraview": 440, "parent": [118, 128, 137, 155, 342, 364, 382, 458], "parentid": [106, 107], "pariti": 459, "parsecolor": 430, "part": [64, 66, 134, 135, 326, 452], "partial": [31, 340, 362, 451], "particular": [20, 95, 225, 349, 370, 384, 445, 448, 451], "particularli": [8, 326, 434, 445], "partit": [450, 458], "pasko": 443, "pass": [62, 89, 186, 188, 189, 231, 304, 307, 396, 437, 458], "past": 416, "pasta": [10, 11, 12, 446], "patch": 3, "path": [83, 179, 180, 181, 182, 183, 184, 185, 439, 452], "paul": 443, "pdf": [98, 443], "pdfo": 326, "peel": 401, "peelconn": 401, "peelcoord": 401, "peeledconn": 401, "peeledcoord": 401, "pellerin": 443, "penn": 9, "peopl": [20, 448], "per": [75, 120, 179, 180, 182, 183, 184, 433, 451], "perform": [1, 4, 7, 31, 73, 75, 101, 102, 103, 104, 105, 106, 107, 157, 181, 184, 187, 188, 189, 225, 226, 228, 229, 231, 307, 309, 312, 326, 329, 334, 403, 430, 433, 434, 454, 458, 459], "pergamon": 443, "perhap": 458, "period": [8, 192, 198, 202, 205, 208, 216, 436], "permiss": [20, 448], "perpendicular": [234, 235, 236], "peter": 443, "ph": 445, "phi_resolut": [244, 245], "physic": 443, "physik": 443, "pi": [9, 237, 243, 307, 309, 451], "pillow": 439, "pip": [177, 439], "pixel": [102, 105, 179, 307, 327, 328, 336, 337, 363, 430, 444], "pixelconn": 363, "pixelcoord": 363, "place": [32, 46, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 117, 125, 130, 145, 148, 152, 180, 181, 182, 186, 187, 188, 225, 226, 228, 229, 232, 304, 305, 307, 340, 362, 398, 436, 450, 452], "placement": [4, 181, 187], "plan": 18, "planar": [74, 424, 443], "plane": [29, 46, 150, 181, 187, 220, 221, 222, 229, 234, 235, 236, 269, 271, 272, 273, 406, 430, 442, 443, 444, 451, 457], "plant": 443, "pleas": [3, 9, 20, 448], "plot": [4, 7, 8, 9, 20, 89, 97, 100, 180, 182, 183, 186, 188, 189, 190, 191, 192, 198, 202, 205, 208, 211, 215, 233, 234, 236, 237, 238, 239, 240, 244, 245, 399, 430, 434, 442, 448], "plt": [4, 122, 307, 434], "pm": 451, "pmatrix": 452, "png": [185, 437], "point": [8, 29, 46, 94, 95, 110, 137, 140, 157, 160, 164, 170, 171, 172, 173, 174, 176, 177, 178, 181, 186, 188, 196, 197, 203, 207, 234, 235, 236, 240, 241, 242, 243, 244, 245, 266, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 321, 323, 326, 327, 328, 329, 330, 333, 334, 335, 344, 345, 346, 347, 356, 357, 359, 360, 365, 366, 367, 368, 376, 377, 379, 390, 391, 392, 393, 404, 408, 412, 415, 430, 434, 436, 438, 442, 443, 444, 450, 451, 457], "point_method": 307, "point_siz": 430, "pointinboundari": 459, "pointinsurf": 459, "points1": [306, 310, 321, 323, 333], "points2": [306, 310, 321, 323, 333], "points2octre": 458, "pointset": 87, "pole": 245, "polygon": [123, 134, 138, 443, 444, 452], "polyhedr": 443, "polyhedra": 444, "polyhedron": 454, "polytop": 443, "poor": 434, "popular": [452, 458], "pose": [166, 167, 168, 169], "posit": [30, 101, 102, 103, 104, 105, 106, 107, 122, 150, 179, 180, 181, 182, 183, 186, 187, 188, 189, 225, 226, 228, 229, 412, 451, 452, 457, 459], "possibl": [74, 186, 188, 231, 307, 309, 310, 424, 450, 454], "possibli": 1, "potenti": [74, 400, 424, 454], "powel": 326, "power": 445, "pp": 227, "practic": [115, 116, 123, 126, 127, 129, 143, 144, 147, 153, 154, 452], "pre": [91, 321, 333, 436, 452], "preced": [85, 240, 241], "precis": [74, 424], "precomput": [276, 279, 408, 412, 415], "predefin": [326, 436], "predominantli": [234, 235], "prefer": 431, "prefix": [185, 441], "prescrib": [206, 226], "presenc": 326, "present": [122, 134, 135, 176, 178, 223, 423, 424, 430], "preserv": [223, 231, 232, 305, 457], "prevent": [40, 226], "previous": [54, 225, 228, 229, 288, 291, 452], "primal": 443, "primari": [24, 118, 137, 155], "primarili": [229, 258, 433, 434, 435, 444], "primit": [8, 9, 101, 104, 106, 118, 122, 216, 399, 423, 432, 434, 436, 441, 442], "princip": [4, 72, 95, 156, 157, 158, 159, 160, 161, 162, 163, 165, 304, 305, 443], "print": [24, 73, 184, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 289, 307, 309, 310, 412, 415], "priorit": 223, "problem": [166, 167, 168, 169, 326, 443], "problemat": 434, "proce": 459, "procedur": [31, 443, 452], "proceed": 443, "process": [103, 109, 117, 125, 130, 145, 148, 152, 223, 434, 443, 452, 456, 458], "produc": [30, 64, 66, 169, 236, 244, 415, 434, 437, 442], "product": [20, 157, 448, 459], "progress": [223, 231, 232, 307, 309, 310, 449], "project": [1, 3, 177, 408, 412, 415, 445, 452, 457, 459], "proper": [138, 437], "properli": [141, 454, 458], "properti": [25, 26, 27, 28, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 65, 68, 69, 79, 82, 85, 118, 137, 155, 441, 451], "propos": [339, 340, 362, 450], "protanomali": 430, "provid": [1, 2, 16, 24, 30, 62, 64, 65, 66, 67, 85, 103, 106, 121, 122, 138, 141, 156, 160, 162, 163, 173, 175, 178, 181, 188, 223, 226, 227, 228, 232, 237, 238, 240, 261, 262, 268, 279, 299, 305, 334, 405, 408, 412, 415, 416, 417, 423, 440, 445, 449, 452], "pt": [29, 207, 242, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 379, 391, 392, 393], "pt1": 240, "pt2": 240, "public": 443, "publish": [20, 445, 448, 452], "pull": 334, "pure": [98, 99, 115, 116, 119, 126, 127, 129, 143, 144, 146, 147, 153, 154, 224, 234, 235, 236, 237, 243, 244, 263, 264, 393, 445], "purpos": [20, 257, 439, 444, 448, 449], "push": 334, "pv": 97, "pv_mesh": 97, "pvmesh": 87, "py": [4, 6, 7, 8, 9, 11, 441, 446], "pydicom": [437, 439], "pyenv": 441, "pyglet": 431, "pymesh": 445, "pypi": 177, "pyplot": [4, 122, 307], "pyr": 435, "pyr13": 435, "pyramid": [74, 124, 125, 126, 127, 128, 134, 135, 151, 243, 248, 255, 340, 424, 425, 435], "pyramidconn": [128, 425], "pyramidcoord": [128, 425], "pyramidheight": 425, "python": [4, 7, 8, 9, 177, 437, 441, 454], "pyvista": [87, 97, 439, 445], "q": 251, "qef": [339, 458], "qhull": 18, "qingnan": 443, "quad": [128, 131, 134, 135, 186, 236, 239, 242, 243, 244, 245, 260, 338, 362, 396, 422, 423, 435, 444], "quad8": 435, "quadfit": 451, "quadnod": 362, "quadrat": [106, 121, 133, 163, 188, 326, 339, 435, 458], "quadric": [223, 443], "quadrilater": [30, 74, 103, 104, 105, 106, 107, 116, 121, 127, 129, 130, 131, 132, 134, 135, 154, 234, 235, 237, 239, 242, 245, 260, 362, 424, 435, 450], "quadtre": [338, 360, 362, 363, 371, 373, 376], "quadtreenod": [338, 363], "quak": 443, "qual": 73, "qualiti": [4, 7, 23, 73, 118, 137, 155, 223, 228, 231, 304, 307, 434, 436, 439, 443, 445, 451, 454, 456, 457], "qualityfunc": 228, "qualitymetr": 230, "qualitys": 232, "qualitythreshold": 224, "queri": 454, "question": 1, "queue": 452, "quick": 442, "quit": 434, "r": [4, 181, 187, 193, 194, 195, 199, 200, 201, 215, 217, 218, 219, 245, 261, 283, 284, 293, 294, 307, 309, 311, 312, 434, 438, 443, 457, 459], "r1": 236, "r2": 236, "r_": 312, "r_0": [312, 459], "r_1": [312, 459], "r_2": [312, 459], "r_c": [311, 312], "r_x": 459, "r_y": 459, "r_z": 459, "radial": [234, 235, 236, 244, 245], "radial_resolut": [234, 235, 236, 244, 245], "radian": [73, 237, 243, 311, 312, 327, 328, 329, 330], "radii": 236, "radiu": [4, 191, 211, 215, 234, 236, 244, 245, 421, 438, 452], "rag": [402, 407, 410, 411, 433], "rai": [95, 434, 443, 458], "rainald": 443, "rais": [88, 439], "rand": [276, 279], "random": [74, 273, 276, 279, 309, 310, 412, 415, 424], "randomli": [309, 310, 452], "rang": [19, 20, 185, 186, 188, 248, 249, 253, 254, 255, 259, 260, 262, 265, 304, 307, 308, 309, 310, 322, 324, 430, 443, 447, 448, 451], "rare": [74, 424], "raster": 443, "rather": [29, 90, 115, 116, 118, 123, 126, 127, 128, 129, 143, 144, 147, 153, 154, 155, 179, 181, 183, 187, 340, 351, 362, 372, 385, 433, 434, 445, 450, 452, 454, 458], "ratio": [73, 247, 251], "rayboxesintersect": 459, "rayboxintersect": 459, "raysegmentintersect": 459, "raysegmentsintersect": 459, "rayssurfintersect": 292, "raystrianglesintersect": [289, 290, 459], "raysurfintersect": 95, "raytriangleintersect": [290, 292, 459], "raytrianglesintersect": [289, 292, 459], "re": [3, 62, 398, 410, 411, 436, 440, 451, 452], "reach": [3, 454, 458, 459], "reachabl": [351, 372, 385], "reactiv": 326, "read": [437, 440, 442], "readabl": [83, 403, 445], "reader": 437, "real": [192, 198, 202, 205, 208], "reason": [8, 454], "recalcul": [227, 442, 454], "receiv": 53, "recogniz": 451, "recommed": 326, "recommend": [223, 232, 440], "recomput": [64, 66], "reconnect": [398, 456], "reconstruct": [1, 20, 436, 448], "record": 443, "recov": [410, 411], "rectangular": [157, 238, 239, 297, 407, 433, 444], "rectilinear": [101, 104, 150], "recurs": [348, 369, 383], "red": [7, 433], "redistribut": [4, 20, 181, 187, 226, 448], "reduc": [111, 113, 181, 187, 223, 228, 304, 307, 309, 310, 334, 396, 450, 457], "redund": [64, 66, 454], "ref": [315, 316], "refer": [32, 38, 46, 65, 71, 88, 106, 107, 119, 146, 181, 223, 232, 311, 312, 313, 314, 315, 316, 327, 328, 329, 330, 340, 349, 370, 384, 430, 442, 445, 449, 451, 453], "referenc": [40, 64, 66, 433, 442], "refin": [338, 339, 381, 456, 458], "reflect": 46, "regardless": [186, 351, 372, 385, 434, 451, 459], "region": [104, 107, 223, 231, 232, 416, 417, 458], "regist": 1, "registr": [1, 307, 309, 326], "regulargridinterpol": 181, "rel": [157, 186, 188, 351, 372, 385, 391, 392, 393, 412], "relabel": 409, "relat": [18, 95, 111, 113], "relax": 181, "relev": [236, 244, 245, 419, 435, 452, 454], "reli": [434, 451, 458, 459], "reliabl": 440, "relianc": 445, "religi": [20, 448], "remacl": 443, "remain": [8, 110, 114, 124, 132, 142, 149, 151, 398], "rememb": [20, 448], "remesh": 443, "remov": [32, 62, 100, 102, 104, 105, 133, 135, 179, 180, 182, 183, 186, 187, 188, 189, 223, 232, 396, 398, 401, 402, 452, 454, 456], "render": [20, 448], "renumb": [133, 223, 398, 405], "reorder": [175, 410, 411], "repeat": [231, 309, 310, 434, 452, 457, 458], "replac": 439, "report": [73, 309, 310], "reposit": [181, 187, 223, 225, 228, 229, 460], "repositori": [20, 439, 448], "repres": [95, 120, 241, 269, 305, 433, 438, 444, 454, 458], "represent": [8, 16, 25, 33, 34, 36, 37, 41, 42, 52, 61, 315, 316, 338, 381, 388, 408, 412, 414, 415, 434, 454, 458], "request": 1, "requir": [19, 20, 106, 188, 307, 308, 326, 410, 419, 434, 439, 441, 447, 448, 451, 454], "res2": 309, "resampl": [75, 120, 179, 180, 182, 183, 184, 304, 307, 334], "research": [1, 20, 445, 448], "reset": [64, 65, 66, 348, 369, 383], "resolut": [75, 120, 122, 304, 307, 434, 443, 458], "resolv": [121, 122, 435, 450], "respect": [102, 236, 245, 450, 451, 456], "rest": [64, 66], "result": [4, 8, 99, 106, 118, 128, 137, 138, 155, 162, 163, 226, 234, 235, 238, 239, 242, 307, 308, 309, 310, 434, 451], "retriangul": 99, "retriev": [379, 380, 389], "return": [7, 19, 20, 29, 30, 32, 46, 71, 73, 74, 75, 77, 78, 80, 81, 83, 86, 87, 89, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 321, 322, 323, 324, 326, 327, 328, 329, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 350, 351, 352, 353, 359, 360, 362, 363, 365, 366, 367, 368, 371, 372, 373, 374, 379, 380, 381, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 430, 431, 434, 437, 438, 442, 447, 448], "return_anchor": [101, 104], "return_count": 111, "return_direct": 157, "return_edgeconn": 134, "return_edgeelem": 134, "return_faceconn": 135, "return_faceelem": 135, "return_fig": [4, 81, 429, 434], "return_gradi": [75, 120], "return_id": [112, 137, 140], "return_idx": [111, 113, 396, 398, 410, 411], "return_imag": 430, "return_intersect": [286, 287, 295, 296], "return_inv": [111, 113, 137, 140, 398, 410, 411], "return_kf": 227, "return_mappingmatrix": 415, "return_matrix": 404, "return_nodedata": [75, 120, 179, 183], "return_nodevalu": [106, 107], "return_octre": [412, 415], "return_parentid": [106, 107], "return_pt": [266, 297, 298], "return_separ": 410, "return_surfelem": 136, "return_transform": [304, 305], "rever": [20, 448], "revers": [398, 410], "revolut": [243, 245], "revolv": [9, 436], "rfboutputcontext": [4, 7, 8, 9], "rgb": [184, 185, 437], "rgba": [185, 430, 437], "rho": 224, "richard": 443, "ridg": [7, 164], "right": [430, 451, 457, 459], "rigid": [307, 309, 310, 328, 329, 330, 336, 337], "rigid2": 307, "rigid2d": 307, "ring": [420, 451], "risk": [181, 187], "rmax": [193, 194, 195, 199, 200, 201], "rmin": [217, 218, 219], "rmsd": 4, "rmsd_k1a_smooth": 4, "rmsd_k1a_spher": 4, "rmsd_k1m_smooth": 4, "rmsd_k1m_sphere": 4, "robust": [23, 283, 284, 293, 294, 443], "romain": 443, "ron": [156, 160, 443], "root": [4, 285, 338, 339, 340, 341, 349, 351, 354, 359, 360, 361, 362, 363, 370, 372, 375, 379, 380, 381, 384, 385, 388, 389, 439, 458], "rotat": [237, 243, 245, 307, 309, 310, 311, 312, 327, 328, 330, 336, 337, 404, 430, 450], "rotation2d": 307, "rotation_mod": [312, 319, 327, 329, 331, 332], "rotation_ord": [312, 319, 327, 329, 331, 332], "round": [304, 305], "row": [24, 398, 410, 411, 412, 433], "rrner": 443, "rule": [442, 459], "run": [4, 7, 8, 9, 32, 62, 179, 180, 182, 183, 186, 188, 189, 233, 236, 237, 238, 239, 240, 242, 243, 244, 245, 439, 441], "runner": 4, "runtimewarn": 4, "russia": 443, "rut": 164, "s0": [313, 314], "s003660200006": [31, 443], "s00371": 443, "s0925": 443, "s1": [223, 287, 295, 296, 313, 314], "s10237": 443, "s2": [223, 287, 295, 296, 314], "s_0": [313, 314], "s_1": [313, 314], "s_2": 314, "saddl": [164, 451], "safest": [64, 65, 66], "sale": [20, 448], "same": [24, 30, 32, 46, 57, 85, 103, 119, 128, 146, 155, 187, 225, 228, 229, 273, 308, 351, 372, 385, 396, 398, 432, 433, 442, 450, 452, 454, 457, 458, 459], "sampl": [74, 100, 156, 243, 244, 326, 412, 415, 424, 437, 443, 458], "satisfi": 438, "save": [185, 440, 442], "sc": 223, "scaffold": [443, 445], "scalar": [4, 24, 30, 62, 81, 100, 179, 180, 182, 183, 186, 188, 189, 192, 193, 194, 198, 199, 200, 202, 205, 206, 208, 212, 213, 217, 218, 219, 223, 232, 236, 237, 243, 244, 245, 307, 308, 309, 310, 399, 415, 426, 427, 430, 438, 442, 459], "scalar_prefer": [62, 430], "scale": [75, 120, 164, 179, 180, 181, 182, 183, 184, 185, 220, 221, 222, 227, 304, 307, 309, 310, 313, 314, 315, 316, 443, 451], "scalefactor": [75, 120, 179, 180, 182, 183, 184, 437], "scaleord": [75, 120, 179, 180, 182, 183, 184], "scan": [19, 20, 307, 445, 447, 448, 451], "scenario": [74, 424], "scf": 231, "schaefer": 443, "schedul": 231, "scheme": [3, 110, 114, 124, 132, 142, 149, 151, 352], "schneider": 443, "schnere": [216, 443], "schoen": 216, "scholarli": [20, 448], "schwald": 443, "schwarz": [8, 192, 208, 216], "scienc": 443, "scipi": [18, 75, 120, 122, 160, 166, 168, 172, 176, 178, 179, 180, 181, 182, 183, 184, 227, 304, 307, 321, 323, 326, 333, 334, 439], "score": [309, 310], "scott": 443, "scratch": [436, 445], "script": [4, 7, 8, 9], "sdf": 122, "se": 443, "search": [95, 326, 351, 372, 379, 380, 385, 458], "second": [4, 7, 8, 9, 76, 99, 119, 121, 133, 146, 181, 193, 199, 217, 225, 232, 240, 258, 266, 267, 287, 295, 296, 297, 298, 300, 301, 307, 308, 321, 323, 333, 391, 392, 393, 434, 443, 454], "section": [191, 236, 244, 245, 410, 449, 459], "see": [4, 17, 31, 33, 34, 36, 37, 41, 42, 52, 53, 54, 75, 76, 81, 89, 100, 106, 107, 108, 111, 113, 120, 121, 133, 160, 166, 167, 168, 169, 179, 180, 181, 182, 183, 184, 186, 187, 204, 216, 223, 231, 288, 289, 290, 291, 292, 304, 305, 307, 309, 310, 326, 422, 430, 433, 435, 436, 438, 440, 441, 442, 450, 451, 452, 453, 454, 457, 458, 459, 460], "seed": [309, 310], "seem": 441, "seemingli": [304, 305], "seen": [8, 20, 448], "segment": [104, 240, 241, 282, 286, 287, 293, 294, 295, 296, 450], "segmentsegmentintersect": 459, "segmentssegmentsintersect": 459, "select": [180, 186, 307, 309, 310, 430, 431, 452], "selesk": 443, "self": [297, 459], "semant": 3, "semicolon": 441, "semver": 3, "sens": [64, 66], "sensit": [157, 162, 163, 339], "sep": 443, "separ": [184, 223, 232, 410, 417, 442, 450], "sequenti": [225, 228, 229], "seri": [8, 241, 443, 444], "serv": [307, 309, 310, 449], "set": [8, 24, 31, 53, 54, 64, 65, 66, 67, 74, 101, 102, 103, 104, 105, 106, 107, 111, 113, 141, 160, 171, 172, 174, 176, 178, 181, 186, 187, 188, 193, 199, 204, 217, 223, 225, 226, 227, 228, 229, 272, 284, 287, 290, 292, 296, 302, 303, 306, 309, 310, 321, 323, 333, 343, 344, 345, 347, 359, 360, 365, 366, 368, 381, 389, 390, 393, 400, 404, 410, 416, 417, 422, 424, 425, 430, 431, 434, 435, 441, 442, 443, 444, 452, 458], "set_axis_off": 434, "set_titl": [4, 434], "set_xtick": 4, "set_xticklabel": 4, "set_ylabel": 4, "set_ylim": 4, "set_yscal": 4, "seven": 451, "sever": [8, 18, 20, 53, 432, 433, 434, 438, 439, 442, 444, 448, 450, 454, 457, 458], "sh": [315, 316], "sh01": [315, 316], "sh02": 316, "sh10": [315, 316], "sh12": 316, "sh20": 316, "sh21": 316, "sh_": [315, 316], "shade": 430, "shadi": 445, "shape": [10, 11, 12, 64, 65, 66, 67, 72, 119, 146, 164, 165, 166, 167, 168, 169, 172, 187, 223, 225, 233, 241, 261, 263, 264, 268, 272, 273, 274, 275, 276, 279, 280, 281, 282, 284, 285, 286, 287, 288, 290, 291, 292, 295, 296, 302, 303, 304, 305, 306, 307, 308, 309, 310, 322, 324, 327, 329, 330, 335, 336, 337, 338, 344, 345, 356, 357, 360, 365, 366, 376, 377, 393, 429, 434, 436, 443, 444, 446, 452], "shapeindex": [164, 451], "share": [111, 112, 113, 134, 300, 301, 302, 303, 419, 433, 454, 456], "sharp": [434, 443], "she96": [443, 445], "shear": [307, 309, 310, 315, 316], "shewchuk": [18, 177, 178, 443], "shi": 445, "shift": [9, 243], "shirlei": [283, 284, 293, 294, 443], "shortcom": 450, "shorter": 223, "shortest": [227, 247, 304, 305], "shoud": [75, 120], "should": [20, 24, 31, 64, 65, 66, 74, 75, 100, 102, 118, 120, 128, 131, 155, 156, 157, 176, 178, 179, 180, 182, 183, 186, 187, 188, 189, 194, 200, 213, 218, 256, 260, 265, 268, 272, 273, 277, 278, 280, 281, 282, 283, 284, 288, 289, 290, 291, 292, 293, 294, 302, 303, 307, 309, 310, 339, 393, 403, 408, 412, 415, 424, 430, 432, 438, 445, 448, 452], "shouldn": [273, 276, 279], "show": [4, 81, 429, 430, 433, 434, 449], "show_colorbar": 81, "show_edg": [4, 100, 223, 225, 233, 234, 236, 237, 238, 239, 240, 244, 245, 430, 442], "show_empti": 361, "show_fac": 430, "show_point": 430, "shown": [430, 452, 454], "shrinkag": [181, 187, 457], "si": 443, "si15": [443, 445], "sici": 443, "side": [29, 135, 186, 188, 189, 271, 272, 304, 305, 454, 459], "siggraph": [268, 283, 284, 289, 290, 292, 293, 294, 299, 443], "sigma_max": 224, "sigma_min": 224, "sign": [30, 122, 157, 175, 179, 180, 182, 183, 186, 188, 189, 203, 206, 212, 213, 339, 451, 452, 459], "signific": [4, 20, 95, 179, 183, 441, 448], "significantli": [289, 290, 292, 408, 412, 415], "similar": [307, 308, 309, 310, 322, 324, 443, 450], "similarli": [442, 454, 459], "simpl": [403, 434, 436], "simplex": 106, "simplexmethod": 255, "simpli": [248, 396, 415, 452], "simplif": 443, "simul": [1, 20, 430, 444, 448], "simultan": [181, 187, 225, 228, 229], "sin": [192, 198, 202, 205, 208, 237, 311, 312], "sinc": [1, 19, 20, 434, 442, 447, 448, 450, 458, 460], "singl": [9, 30, 62, 64, 65, 66, 67, 102, 103, 104, 105, 106, 107, 118, 128, 155, 158, 159, 161, 165, 179, 180, 182, 183, 184, 185, 186, 188, 189, 241, 292, 326, 393, 416, 417, 437, 454, 458], "site": [20, 448], "situat": 450, "six": [32, 238, 242], "size": [7, 8, 75, 102, 105, 120, 122, 141, 160, 179, 180, 181, 182, 183, 187, 204, 216, 223, 231, 232, 237, 238, 239, 240, 241, 242, 243, 255, 304, 307, 309, 310, 338, 339, 342, 350, 355, 356, 357, 364, 371, 376, 377, 381, 416, 417, 425, 430, 458], "skelet": 445, "skeleton": 307, "skew": [73, 92, 157, 162, 163, 230, 248, 259, 260, 262, 265], "skr": 443, "slice": [184, 410, 437], "slice0": 184, "slightli": [238, 239, 242, 289, 290, 292], "sliver": 255, "slow": 189, "slower": [403, 434], "small": [20, 99, 166, 167, 168, 169, 187, 266, 272, 273, 276, 277, 278, 279, 280, 282, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 300, 301, 302, 303, 410, 439, 448, 459, 460], "smaller": [95, 122, 338, 381, 458], "smart": 228, "smartlaplaciansmooth": [231, 457], "smooth": [4, 181, 187, 224, 225, 226, 228, 229, 231, 430, 443, 456], "smooth_kwarg": 231, "smoother": 231, "smoothheart": 7, "smoothspher": 4, "snap": [186, 188], "snap2surf": [186, 188], "snapgrid2surf": [186, 188], "so": [25, 46, 61, 64, 66, 119, 146, 160, 184, 193, 194, 195, 223, 228, 304, 305, 442, 450, 452, 454, 458, 459], "societi": 443, "sociologi": 443, "softwar": [442, 443, 445], "sohn": 443, "solid": [16, 134, 135, 430, 443], "solid2edg": [108, 111, 115, 123, 126, 129, 139, 143, 147, 153, 422, 433], "solid2fac": [112, 113, 116, 127, 144, 154, 433], "solid2tet": [106, 118, 128, 155], "solv": [227, 451, 452, 459, 460], "some": [20, 24, 25, 61, 74, 85, 157, 166, 167, 168, 169, 175, 236, 244, 245, 326, 340, 351, 362, 372, 385, 423, 424, 434, 435, 445, 448, 449, 451], "sometim": 457, "soo": 443, "sophist": 1, "sor48": [322, 443], "sorensen": [322, 443], "sort": [20, 138, 223, 398, 410, 411, 416, 417, 448, 454], "sourc": [4, 7, 8, 9, 19, 20, 24, 29, 30, 31, 32, 46, 55, 56, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 350, 352, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 371, 373, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 447, 448], "sp": [192, 193, 198, 202, 205, 208, 217], "space": [8, 95, 444, 458], "span": 339, "spars": [227, 341, 363], "spatial": [47, 172, 175, 176, 178, 313, 317, 321, 323, 333, 350, 371, 458], "spec": 443, "specfi": 30, "speci": 443, "special": [444, 452], "specif": [8, 9, 103, 185, 433, 436, 439, 442, 445, 449], "specifi": [29, 31, 32, 46, 73, 74, 85, 100, 102, 105, 108, 120, 122, 134, 135, 160, 176, 178, 179, 180, 182, 183, 185, 186, 188, 189, 191, 196, 197, 206, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 257, 277, 278, 280, 281, 286, 287, 288, 291, 295, 296, 304, 305, 307, 326, 327, 328, 329, 330, 336, 337, 339, 346, 347, 367, 368, 380, 396, 401, 402, 407, 412, 421, 424, 430, 458], "speed": [408, 412, 415], "spent": 434, "sphere": [4, 100, 106, 223, 225, 245, 423, 432, 434, 436, 438, 442, 451], "spheric": [164, 223, 451], "sphinx": [4, 7, 8, 9, 12], "split": [99, 103, 128, 131, 231, 232, 411, 434, 450, 456], "splitfeatur": 72, "spread": 226, "spring": [31, 181, 187, 226, 227, 443, 444, 456], "springer": 443, "spuriou": 451, "sqrt": [4, 261, 451], "squar": [4, 95, 104, 105, 239, 242, 321, 333, 373, 451], "src": 4, "stabl": 97, "stack": [75, 120, 185, 437], "standard": [74, 160, 181, 424, 444, 454, 457], "stanford": [19, 20, 307, 309, 447, 448], "star": 452, "start": [9, 31, 283, 284, 286, 289, 290, 292, 293, 294, 410, 445, 452, 458], "state": [73, 342, 354, 364, 375, 382, 450], "static": 81, "statist": [412, 415], "statu": [20, 184, 448, 454], "steiner": [177, 178], "step": [231, 237, 243, 434, 452], "steve": 443, "stiff": [31, 226, 227, 460], "stiffnessfactor": [31, 227], "still": [23, 97, 122, 245, 304, 307, 457], "stl": [83, 440], "stoddart": 443, "storag": [289, 290, 292, 440, 443], "store": [24, 73, 150, 179, 183, 184, 189, 223, 232, 437, 454], "str": [19, 20, 24, 30, 31, 32, 62, 64, 65, 66, 67, 73, 74, 75, 83, 85, 90, 100, 101, 102, 103, 104, 105, 106, 107, 108, 118, 120, 121, 122, 128, 134, 135, 138, 141, 146, 155, 160, 166, 167, 168, 169, 172, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 204, 216, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 255, 257, 276, 279, 288, 291, 297, 304, 307, 309, 310, 326, 339, 340, 354, 362, 375, 396, 403, 408, 412, 415, 416, 419, 422, 423, 424, 430, 431, 447, 448], "straight": [9, 240, 434, 458], "strain": 442, "strategi": [100, 339, 457, 458], "stretch": 451, "strict": 397, "strictli": [31, 176, 178, 226, 238, 239, 242, 260, 265, 288, 291, 460], "string": [30, 62, 85, 184, 223, 231, 232, 415, 423, 430], "strive": 445, "structur": [95, 141, 276, 279, 285, 288, 291, 321, 333, 339, 340, 359, 360, 362, 388, 398, 408, 412, 415, 433, 443, 452, 458], "sub": [119, 146, 257, 444], "subdivid": [31, 119, 146, 355, 356, 357, 359, 360, 376, 377, 458], "subdivis": [95, 100, 146, 339, 355, 356, 357, 376, 377], "subject": 8, "sublist": 410, "submit": 9, "submodul": 432, "subplot": [4, 223, 225, 434], "subsequ": 442, "subseri": 443, "substitut": 1, "subtract": 457, "suffer": 434, "suffici": [106, 107, 122, 272, 273, 276, 279, 289, 290, 292, 300, 301, 302, 303, 459, 460], "suit": 73, "suitabl": [134, 422], "sum": [4, 8, 204, 257], "sum_": [457, 460], "super": 452, "suppli": [338, 381, 419, 445], "support": [1, 3, 24, 30, 83, 98, 134, 138, 185, 412, 415, 435, 440, 441, 442, 445], "suppress": 441, "sure": [20, 441, 448, 452, 458], "surf": [24, 30, 31, 74, 88, 100, 103, 104, 105, 106, 107, 121, 122, 134, 135, 166, 167, 168, 169, 172, 233, 234, 235, 236, 237, 238, 243, 244, 245, 246, 396, 422, 423, 424, 434, 435, 442], "surf1": [98, 99], "surf1intersect": 298, "surf2": [98, 99], "surf2intersect": 298, "surf2octre": 297, "surf2tri": [288, 291], "surf2voxel": 442, "surfac": [1, 2, 4, 8, 16, 20, 22, 24, 25, 26, 27, 30, 31, 38, 40, 44, 53, 54, 57, 58, 59, 60, 74, 95, 98, 99, 100, 103, 104, 105, 106, 107, 112, 122, 134, 135, 136, 138, 139, 140, 141, 156, 157, 160, 162, 163, 180, 181, 186, 187, 188, 189, 190, 191, 192, 198, 202, 204, 205, 206, 208, 211, 212, 213, 215, 216, 223, 225, 226, 228, 229, 233, 234, 235, 236, 237, 238, 243, 244, 245, 246, 256, 266, 273, 276, 279, 288, 291, 297, 298, 339, 381, 394, 396, 399, 408, 412, 414, 415, 419, 424, 425, 430, 434, 435, 436, 438, 443, 445, 448, 450, 457], "surface2edg": 134, "surface2octre": [276, 279, 288, 291, 408, 412, 415, 458], "surfacemesh": [4, 7, 190, 191, 192, 198, 202, 205, 208, 211, 215, 225, 434, 436, 438], "surfacenodeoptim": 4, "surfacereconstruct": 436, "surfconn": [31, 38, 61, 112, 136, 138, 141, 157, 162, 163, 270, 276, 279, 288, 291, 297, 381, 394, 399, 408, 414], "surfconn1": [298, 412, 415], "surfconn2": [298, 412, 415], "surfcoord": 141, "sw05": [100, 339, 340, 362, 443, 458], "sweep": [9, 436], "sydnei": 445, "symbol": [20, 100, 156, 192, 195, 198, 201, 202, 205, 208, 219, 448], "symfun": 214, "symfun1": [195, 201, 219], "symfun2": [195, 201, 219], "symmetr": [193, 194, 195, 321, 323, 333, 434], "sympi": [156, 187, 192, 195, 198, 201, 202, 205, 208, 216, 219, 434, 439], "symposium": 443, "system": [97, 160, 404, 451, 458, 460], "t": [20, 30, 31, 32, 46, 48, 50, 64, 66, 71, 74, 81, 88, 95, 112, 122, 138, 139, 176, 178, 182, 186, 212, 213, 214, 223, 226, 228, 268, 273, 276, 279, 286, 287, 288, 289, 290, 291, 292, 295, 296, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 317, 318, 334, 335, 339, 408, 412, 414, 415, 419, 423, 424, 442, 443, 448, 449, 451, 452, 454, 456, 457, 458, 459, 460], "t0": [306, 307, 309, 310, 317, 318, 327, 328, 336, 337], "t1": [317, 318, 327, 328, 336, 337], "t2": [318, 327, 328, 336], "t_": 459, "t_0": [317, 318], "t_1": [317, 318], "t_2": 318, "t_i": 459, "t_j": 452, "t_p": 452, "tabl": [216, 433, 450, 452], "take": [8, 20, 85, 196, 197, 232, 240, 241, 326, 334, 442, 448, 452], "taken": [62, 134, 135, 232, 450, 458], "tami": 443, "tandfonlin": 443, "tangent": [181, 187, 229, 457], "tangenti": [4, 181, 187, 228, 229], "tangentiallaplaciansmooth": 457, "tangentialsurfac": 228, "target": [223, 228, 230, 231, 232], "task": 445, "tast": [20, 448], "tau93": [7, 443], "taubin": [7, 443], "td": 459, "techniqu": 443, "teeth": 445, "temporarili": 257, "term": [304, 305, 412, 415, 442, 443, 454, 459], "termin": [225, 226, 228, 229, 339, 354, 375, 389, 452, 458], "teseo": 443, "tessel": 443, "test": [95, 138, 268, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 285, 288, 291, 292, 299, 300, 301, 302, 303, 443, 450, 458], "tet": [106, 134, 135, 137, 182, 188, 233, 236, 237, 238, 243, 244, 257, 277, 396, 399, 422, 435, 454], "tet10": 435, "tet10nodeconn": [142, 145], "tet4nodeconn": [142, 145], "tetconn": [118, 128, 137, 155], "tetconn1to14": 155, "tetconn1to2": 128, "tetconn1to24": 118, "tetconn1to3": 155, "tetconn1to36": 155, "tetconn1to4": 128, "tetconn1to5": 118, "tetconn1to6": 118, "tetcoord": 137, "tetcoords1to14": 155, "tetcoords1to2": 128, "tetcoords1to24": 118, "tetcoords1to3": 155, "tetcoords1to36": 155, "tetcoords1to4": 128, "tetcoords1to5": 118, "tetcoords1to6": 118, "tetflip": 231, "tetgen": [443, 445], "tetmesh": [8, 223, 399, 434, 436, 438], "tetnodeconn": 106, "tetnodecoord": 106, "tetopt": 31, "tetradehdr": 142, "tetradehedr": 142, "tetrahdr": 146, "tetrahed": 263, "tetrahedr": [16, 31, 74, 106, 117, 118, 128, 134, 135, 137, 142, 143, 144, 145, 155, 167, 168, 169, 171, 175, 182, 188, 223, 224, 231, 232, 236, 237, 238, 243, 244, 248, 255, 261, 262, 391, 413, 424, 434, 436, 443, 445, 452, 454], "tetrahedra": [30, 100, 103, 106, 107, 118, 121, 128, 137, 146, 155, 175, 180, 186, 188, 236, 243, 244, 261, 262, 434, 443, 444, 454, 457], "tetrahedron": [251, 263, 277, 391, 435, 452], "tetraher": 1, "th": [443, 460], "tha": 452, "thai": [20, 448], "than": [22, 30, 74, 75, 85, 90, 101, 102, 103, 104, 105, 106, 107, 115, 116, 118, 120, 122, 123, 126, 127, 128, 129, 143, 144, 147, 153, 154, 155, 157, 160, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 223, 225, 226, 228, 229, 232, 257, 289, 290, 292, 309, 310, 311, 312, 338, 339, 340, 351, 355, 356, 357, 362, 372, 376, 377, 381, 385, 396, 397, 399, 408, 412, 415, 424, 433, 434, 445, 450, 451, 452, 454, 458], "thei": [8, 20, 48, 50, 62, 64, 66, 95, 102, 105, 108, 122, 138, 181, 187, 279, 398, 410, 411, 416, 432, 433, 442, 444, 448, 450, 451, 454, 458], "them": [20, 95, 99, 236, 436, 439, 442, 448, 452, 458], "theme": [427, 430, 445], "theorema": 451, "theoret": 4, "theori": [1, 17, 443, 445, 452], "therefor": 451, "theta": [311, 330], "theta_resolut": [234, 235, 236, 244, 245], "thi": [1, 3, 7, 8, 9, 16, 18, 20, 22, 24, 25, 29, 31, 32, 45, 47, 57, 61, 62, 64, 65, 66, 67, 73, 74, 86, 88, 95, 100, 104, 106, 107, 118, 121, 122, 128, 133, 137, 138, 139, 150, 155, 157, 160, 162, 163, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 198, 199, 202, 205, 206, 208, 212, 213, 215, 216, 217, 223, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 245, 248, 249, 253, 254, 258, 273, 276, 279, 282, 283, 284, 288, 289, 290, 291, 292, 293, 294, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 321, 323, 326, 333, 334, 338, 339, 340, 348, 354, 355, 356, 357, 362, 369, 375, 376, 377, 381, 383, 393, 396, 400, 415, 423, 424, 430, 432, 434, 438, 441, 442, 445, 448, 449, 450, 451, 452, 454, 458, 459, 460], "thick": [31, 212, 213], "thick_fun": 213, "thicken": 213, "thickenf": [8, 399], "thieri": 443, "thing": [20, 436, 442, 448], "think": [20, 448], "third": [110, 170, 173, 175, 176, 178, 181, 225, 360, 391, 392, 393], "thoroughli": 452, "those": [45, 85, 397, 405, 436, 442, 452, 454, 458, 459], "though": [8, 282, 289, 434], "thousand": 458, "three": [7, 102, 122, 150, 156, 169, 170, 179, 180, 181, 182, 183, 186, 188, 189, 190, 191, 194, 195, 200, 201, 207, 211, 213, 215, 218, 219, 220, 221, 222, 232, 238, 243, 244, 245, 256, 261, 271, 277, 278, 289, 299, 300, 301, 304, 307, 308, 346, 367, 380, 408, 433, 437, 438, 442, 443, 444, 451, 452, 454, 458, 459], "threhsold": 62, "thresh": 307, "threshold": [30, 75, 100, 101, 102, 103, 104, 105, 106, 107, 120, 179, 180, 181, 182, 183, 186, 187, 188, 189, 304, 307, 308, 339, 399, 434, 436, 444, 450, 451], "threshold_dir": [180, 182], "threshold_direct": [30, 75, 120, 179, 180, 182, 183, 186, 188, 189, 223, 434, 442], "thresholed": 307, "thrich": 443, "through": [29, 95, 100, 102, 103, 105, 186, 188, 189, 326, 396, 433, 434, 440, 450, 454], "throughout": [122, 438, 445, 456], "thu": [110, 114, 118, 124, 128, 132, 137, 142, 149, 151, 155, 181, 187, 451], "thurrnerwuthrich98": [403, 443], "tiff": [75, 120, 185, 437, 439], "tifffil": [437, 439], "tight_layout": 434, "tim": [1, 445], "time": [4, 7, 8, 9, 225, 228, 229, 231, 263, 264, 289, 290, 292, 442, 452, 459], "times3": 459, "timothi": 443, "tissu": [443, 445], "titl": [223, 429], "to_meshio": 440, "to_pyvista": 97, "todo": [134, 397, 415, 419], "togeth": [76, 405, 434], "toj": 9, "tol": [70, 76, 98, 176, 178, 306, 397, 398, 408, 412, 415], "toler": [76, 98, 99, 100, 106, 107, 225, 226, 228, 229, 266, 273, 277, 278, 280, 282, 286, 287, 288, 291, 295, 296, 297, 298, 397, 398, 408, 412, 415], "toma": 443, "too": [160, 326], "tool": [15, 16, 17, 21, 22, 94, 300, 301, 302, 303, 436, 443, 445], "toolbox": 445, "top": [8, 11, 446], "topolog": [20, 40, 44, 443, 448, 450], "topologi": [10, 11, 12, 204, 446, 454, 456], "toru": [122, 223, 436, 438, 441], "total": [4, 6, 7, 8, 9, 11, 13, 31, 244, 245, 246, 326, 446], "touch": 452, "tow": 307, "toward": [181, 187, 451, 452], "tpm": [2, 10, 11, 12, 192, 198, 202, 204, 205, 208, 446], "tpmss": 8, "trace": 434, "trade": 454, "transact": 443, "transfer": [24, 106, 107], "transform": [122, 224, 304, 305, 306, 307, 309, 310, 315, 316, 327, 328, 334, 335, 336, 337, 443], "transform_arg": [304, 307, 309, 310], "transform_imag": 307, "transform_point": [306, 309, 310], "transit": [340, 362], "translat": [307, 309, 310, 317, 318, 327, 328, 337], "translation2d": 307, "transpar": 430, "travers": [452, 454, 458], "treat": [102, 105, 134, 135, 181, 184, 187, 452, 460], "tree": [141, 276, 279, 285, 288, 291, 297, 408, 412, 415, 434, 458], "tree1": [321, 333], "tree2": 333, "treenod": [342, 361, 364, 389], "tri": [131, 134, 135, 140, 186, 234, 235, 236, 237, 239, 242, 243, 244, 245, 268, 272, 277, 278, 280, 290, 292, 345, 357, 362, 380, 393, 396, 423, 434, 435, 444], "tri1": [300, 301, 302, 303], "tri2": [300, 301, 302, 303], "tri6": 435, "triangl": [4, 18, 30, 74, 95, 103, 104, 105, 106, 107, 140, 157, 162, 163, 172, 175, 178, 236, 244, 245, 264, 265, 268, 271, 272, 277, 278, 280, 288, 289, 290, 291, 292, 299, 300, 301, 302, 303, 345, 357, 376, 380, 381, 392, 393, 394, 396, 397, 424, 435, 439, 443, 445, 450, 452, 458], "triangleboxintersect": 268, "triangluar": 415, "triangul": [1, 157, 162, 163, 166, 169, 170, 172, 173, 175, 176, 177, 180, 186, 436, 443, 450], "triangular": [31, 74, 98, 99, 107, 127, 131, 134, 135, 140, 144, 147, 148, 149, 154, 166, 223, 234, 235, 236, 237, 239, 242, 243, 244, 245, 255, 256, 264, 265, 273, 276, 279, 288, 291, 297, 381, 393, 394, 412, 414, 415, 424, 433, 445], "triaxial": [307, 309, 310], "triconn": [131, 140], "tricoord": [140, 271, 289, 299], "trimesh": 445, "trimetr": [430, 434, 442], "trinodeconn": 107, "trinodecoord": 107, "trinorm": [268, 299, 345, 357], "tripl": 459, "tripli": [8, 192, 198, 202, 205, 208, 216, 436], "tritanomali": 430, "trough": 164, "tru": 184, "true": [4, 19, 24, 30, 31, 32, 46, 62, 65, 73, 76, 81, 90, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 117, 122, 125, 130, 133, 134, 135, 137, 140, 145, 148, 152, 157, 160, 172, 174, 175, 181, 184, 185, 186, 187, 188, 192, 198, 202, 205, 208, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 326, 341, 346, 347, 348, 363, 367, 368, 369, 380, 381, 383, 398, 405, 410, 411, 412, 415, 429, 430, 434, 447], "truli": 8, "trumbor": [289, 290, 292, 443, 459], "try": 436, "tube": [215, 245], "tupl": [62, 81, 100, 102, 105, 120, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 227, 233, 238, 267, 269, 283, 293, 294, 307, 308, 326, 339, 430, 437], "turn": [223, 326, 436], "twin": 452, "twist": 237, "twist_cent": 237, "two": [4, 62, 81, 95, 98, 99, 101, 104, 105, 106, 107, 112, 113, 169, 173, 175, 193, 194, 195, 199, 200, 201, 217, 218, 219, 232, 236, 240, 266, 267, 269, 283, 286, 287, 293, 294, 295, 296, 298, 300, 301, 302, 303, 306, 307, 308, 309, 310, 321, 322, 323, 324, 333, 396, 398, 399, 405, 410, 433, 434, 437, 451, 452, 454, 458], "twt": 443, "type": [19, 20, 24, 25, 29, 30, 32, 39, 46, 64, 65, 66, 71, 73, 74, 75, 77, 78, 80, 83, 86, 87, 88, 89, 98, 100, 103, 104, 105, 106, 107, 108, 112, 115, 116, 121, 122, 123, 126, 127, 129, 131, 133, 134, 135, 136, 139, 143, 144, 147, 150, 153, 154, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 289, 292, 293, 294, 299, 300, 301, 302, 308, 311, 312, 313, 314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 328, 329, 330, 333, 334, 335, 336, 337, 338, 339, 343, 344, 345, 346, 347, 350, 351, 352, 353, 359, 360, 365, 366, 367, 368, 371, 372, 373, 374, 379, 380, 381, 385, 386, 388, 389, 390, 394, 395, 396, 397, 400, 402, 403, 407, 408, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 430, 431, 433, 434, 437, 440, 442, 445, 447, 448, 458], "typic": [4, 118, 128, 137, 155], "u": [322, 324, 410, 411, 434, 457, 459], "uedg": 111, "ufac": 113, "uint8": [19, 447], "ultim": 459, "un": 454, "unalt": [32, 46], "unambigu": [74, 424, 454], "unattach": 40, "unchang": [110, 114, 118, 124, 128, 132, 142, 149, 151, 155, 398, 402, 437, 451], "unclos": [134, 139, 141, 434], "unconstrain": 326, "underbrac": 451, "undergon": 138, "understand": [445, 449], "unexpect": 141, "unidirect": 459, "uniform": [4, 24, 95, 106, 188, 232, 307, 309, 310, 400, 425, 444], "union": [14, 98, 106, 218, 434, 438, 445], "union_fun": 218, "union_sym": 219, "union_v": 217, "unionf": [100, 217, 434], "unionv": 217, "uniqu": [40, 111, 113, 396, 411, 423, 450, 452], "unit": [4, 122, 157, 160, 162, 163, 181, 204, 216, 273, 283, 284, 289, 290, 292, 293, 294, 403, 438, 451, 457, 460], "unitless": 451, "univers": 445, "unknown": [342, 354, 364, 375, 382, 451], "unless": [188, 305, 381, 422], "unlik": 333, "unload": 227, "unnecessari": 442, "unnot": [166, 167, 168, 169], "unpack": [179, 180, 182, 183, 186, 188, 189, 233, 236, 237, 238, 239, 240, 242, 243, 244, 245], "unsign": 203, "unstructur": 87, "unstructuredgrid": 87, "until": [225, 226, 228, 229, 338, 359, 360, 381, 458, 460], "unus": 223, "uobyqa": 326, "up": [24, 74, 103, 424, 430, 435, 436, 437, 444], "updat": [64, 65, 66, 73, 227, 396, 398, 454, 457], "upon": 445, "upper": [62, 81, 190, 238, 239, 242, 268, 269, 274, 275, 283, 284, 293, 294, 299, 459], "url": 443, "us": [1, 8, 9, 18, 20, 22, 24, 29, 30, 31, 40, 44, 53, 62, 64, 65, 66, 75, 81, 95, 100, 102, 103, 104, 105, 106, 107, 115, 116, 118, 121, 122, 123, 126, 127, 128, 129, 134, 135, 137, 138, 141, 143, 144, 147, 153, 154, 155, 157, 160, 166, 167, 168, 169, 172, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 208, 216, 217, 218, 219, 223, 225, 226, 228, 229, 231, 232, 237, 240, 255, 258, 259, 262, 272, 273, 276, 279, 286, 288, 289, 290, 291, 292, 300, 301, 302, 303, 304, 307, 309, 310, 326, 334, 339, 340, 351, 362, 372, 385, 396, 398, 399, 403, 407, 408, 410, 411, 412, 415, 416, 423, 425, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 448, 449, 450, 451, 452, 454, 456, 458, 459, 460], "usag": 454, "user": [436, 439, 442, 445, 449], "util": [3, 4, 90, 106, 107, 118, 121, 137, 138, 155, 157, 160, 162, 163, 216, 256, 292, 304, 305, 434, 435, 437, 439, 440, 442, 454], "uv_1": 459, "v": [4, 40, 100, 183, 186, 188, 189, 257, 261, 262, 263, 322, 324, 339, 413, 414, 452, 459], "v_0": [263, 264, 459], "v_1": [263, 264, 459], "v_2": [263, 459], "v_3": [263, 264], "val": [150, 196], "valid": [273, 276, 279, 397, 445, 452, 453, 454], "valu": [4, 22, 30, 31, 62, 81, 98, 101, 102, 103, 104, 105, 106, 107, 122, 150, 158, 159, 160, 161, 165, 166, 167, 168, 169, 179, 180, 182, 183, 185, 186, 188, 189, 193, 194, 195, 196, 197, 199, 200, 201, 203, 206, 212, 213, 217, 218, 219, 227, 272, 273, 276, 279, 289, 290, 292, 300, 301, 302, 303, 304, 307, 308, 326, 339, 397, 398, 402, 407, 408, 412, 415, 416, 417, 430, 434, 442, 450, 451, 454, 459], "van": [158, 164, 165, 443], "vari": [8, 238, 239, 242, 433], "variabl": [194, 195, 200, 201, 213, 218, 219, 407, 432, 438, 459], "variant": [307, 457], "varieti": [90, 95, 433, 437, 440, 444, 445, 450], "variou": [96, 440, 442, 445, 454, 458], "vartzioti": 443, "vartziotis2009": 251, "vast": 434, "vdot": 451, "vector": [1, 7, 24, 29, 38, 53, 54, 100, 138, 157, 162, 163, 181, 187, 191, 192, 194, 198, 200, 202, 205, 207, 208, 213, 216, 218, 232, 242, 243, 254, 256, 258, 268, 269, 271, 272, 273, 276, 279, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 299, 302, 303, 345, 357, 394, 403, 408, 436, 442, 443, 451, 454, 457, 459], "vector_func": [192, 198, 202, 205, 208], "vectoriz": 438, "verbos": [4, 24, 73, 184, 185, 223, 230, 231, 232, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 307, 309, 310, 412, 415], "veri": [64, 66, 445, 459], "verifi": [88, 415, 445, 454], "versa": 458, "version": [4, 20, 90, 106, 157, 268, 292, 309, 326, 403, 441, 445, 448, 454], "vertebr": 445, "vertex": [40, 261, 352, 373, 443, 452, 454, 457, 459], "vertexvalu": [102, 105], "vertic": [40, 100, 102, 105, 114, 124, 132, 142, 146, 149, 151, 180, 181, 182, 186, 187, 188, 233, 263, 264, 268, 271, 272, 277, 278, 280, 289, 290, 292, 299, 300, 301, 302, 303, 339, 340, 352, 362, 373, 380, 391, 392, 393, 450, 452, 458, 459], "via": [3, 4, 177, 181], "vice": 458, "victoria": 443, "vidensk": 443, "view": [20, 81, 116, 127, 144, 154, 180, 182, 183, 223, 394, 434, 442, 448, 451], "visibl": [403, 452], "vision": [430, 443], "vispi": [430, 431, 439], "visual": [81, 89, 183, 223, 225, 434, 439, 440, 443], "vivian": 445, "vo": 444, "vol": [24, 25, 30, 74, 88, 100, 103, 104, 105, 106, 107, 121, 122, 134, 135, 167, 168, 169, 233, 236, 238, 244, 245, 246, 263, 396, 423, 424, 434, 435], "volum": [7, 19, 24, 25, 38, 40, 44, 73, 74, 79, 88, 98, 99, 100, 103, 104, 105, 106, 107, 118, 122, 136, 137, 139, 155, 175, 181, 187, 229, 237, 243, 246, 251, 255, 261, 262, 263, 304, 305, 396, 404, 413, 414, 424, 435, 438, 443, 445, 447, 450, 452, 454, 459], "volumetr": [16, 30, 233, 236, 238, 244, 245, 434, 444, 457], "von": [216, 443], "voronoi": 443, "voxel": [75, 102, 105, 120, 122, 141, 150, 160, 180, 181, 182, 183, 184, 189, 196, 197, 203, 281, 304, 307, 341, 388, 400, 401, 425, 442], "voxel2octre": 458, "voxelconn": [120, 141, 150, 196, 197, 281, 341, 388, 400, 425], "voxelcoord": [120, 141, 150, 196, 197, 281, 341, 388, 400, 425], "voxeldata": 120, "voxelmesh": [436, 437, 438], "voxelnodeconn": [101, 442], "voxelnodecoord": [101, 442], "voxels": [75, 120, 122, 160, 180, 182, 183], "vsn91": [8, 216, 443], "vtk": [83, 440, 445], "vtu": [83, 440, 442], "vv_2": 459, "vws09": [224, 443], "w": [8, 9, 100, 186, 188, 189, 190, 191, 192, 198, 202, 205, 208, 211, 215, 225, 233, 234, 236, 237, 238, 239, 240, 244, 245, 399, 434, 442, 443, 451], "wa": [1, 223, 431, 442, 445, 452], "wai": [128, 155, 157, 162, 163, 432, 434, 438, 452, 459], "walk": 452, "wang": 443, "want": [20, 448], "warn": 88, "warren": 443, "wat81": [170, 171, 443, 452], "watertight": 450, "watson": [170, 171, 172, 176, 178, 443], "wbms05": [283, 284, 293, 294, 443, 459], "wdg": 435, "wdg15": 435, "we": [20, 448, 451], "web": [20, 448], "websit": [20, 340, 448], "wedg": [30, 74, 103, 106, 128, 134, 135, 151, 152, 153, 154, 155, 237, 243, 248, 255, 424, 435, 450], "wedgeconn": 155, "wedgecoord": 155, "weight": [8, 204, 403], "weights1": 8, "weights2": 8, "weights3": 8, "weights4": 8, "weingarten": 451, "welcom": [20, 448], "well": [18, 138, 157, 186, 188, 255, 282, 304, 305, 439, 442, 445, 449, 456], "were": [223, 232], "what": [137, 238, 239, 242, 334, 397, 419, 434, 450], "when": [2, 24, 74, 116, 127, 144, 154, 185, 220, 221, 222, 223, 225, 226, 228, 229, 277, 278, 280, 286, 289, 290, 292, 334, 394, 398, 424, 433, 434, 441, 442, 449, 451, 452, 458], "where": [3, 4, 22, 24, 110, 114, 124, 132, 142, 149, 151, 186, 188, 189, 226, 232, 238, 239, 242, 261, 263, 264, 286, 287, 295, 296, 297, 300, 301, 302, 303, 304, 305, 307, 327, 328, 329, 330, 336, 337, 339, 393, 409, 433, 438, 441, 444, 450, 451, 452, 454, 456, 459, 460], "whether": [62, 76, 100, 102, 103, 104, 105, 106, 107, 160, 228, 246, 258, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295, 296, 339, 346, 347, 351, 367, 368, 372, 380, 385, 396, 399, 430, 450, 451, 452, 454, 458, 459], "which": [1, 4, 7, 18, 20, 62, 106, 108, 118, 137, 138, 141, 155, 156, 157, 172, 184, 186, 188, 189, 203, 223, 227, 231, 232, 236, 243, 244, 257, 292, 307, 308, 326, 334, 341, 343, 344, 345, 363, 365, 366, 389, 408, 411, 430, 433, 434, 437, 440, 442, 444, 445, 448, 449, 450, 451, 452, 456, 457, 458], "whichev": [74, 424], "while": [31, 225, 226, 228, 229, 433, 434, 438, 444, 445, 449, 451, 452, 454, 457, 458, 459], "white": [4, 8], "who": [32, 397], "whose": [32, 173, 220, 221, 222, 227, 452], "why": 449, "wide": 445, "width": [4, 430], "wikipedia": 438, "wil": [223, 307], "wild": 443, "wilei": 443, "william": [283, 284, 293, 294, 443, 459], "windeatt": 443, "window": 430, "wipper": 443, "wirefram": [430, 444], "within": [1, 31, 32, 45, 95, 108, 134, 135, 138, 186, 188, 196, 197, 223, 232, 273, 289, 290, 292, 326, 338, 339, 340, 343, 344, 345, 346, 347, 354, 362, 365, 366, 367, 368, 375, 381, 408, 413, 414, 442, 444, 452, 458, 459], "without": [20, 181, 187, 226, 398, 439, 440, 441, 442, 448, 451, 452], "won": [71, 81, 408, 412, 415, 419, 423, 442, 449], "word": 231, "work": [4, 97, 141, 157, 282, 304, 305, 410, 433, 445, 449, 457, 459], "worst": [92, 248, 249, 253, 254, 255, 259, 260, 262, 265, 457], "would": [46, 451], "wrap": [160, 172, 174, 334, 400, 445], "wrapfunc": 216, "wrapper": [103, 175, 177, 323, 445], "write": [24, 437, 440, 442], "written": [24, 83, 185, 437, 445, 451, 459], "www": [283, 284, 293, 294, 315, 316, 441, 443], "x": [4, 7, 8, 22, 46, 68, 100, 102, 106, 122, 150, 156, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 204, 205, 207, 208, 211, 213, 215, 216, 218, 219, 220, 221, 222, 226, 232, 234, 235, 236, 237, 240, 242, 243, 245, 263, 264, 268, 269, 274, 275, 283, 284, 293, 294, 299, 304, 305, 307, 312, 313, 314, 315, 317, 318, 319, 320, 326, 327, 328, 329, 330, 331, 332, 336, 337, 339, 350, 371, 379, 406, 430, 437, 438, 443, 444, 451, 452, 457, 459, 460], "x0": [136, 220, 277, 278, 280, 326, 425], "x1": [136, 190, 277, 278, 280, 398, 400, 401, 413, 414, 415], "x2": [190, 277, 278, 280, 415], "x3": [277, 415], "x4": [412, 415], "x_": 459, "x_0": 451, "x_1": 451, "x_i": [451, 460], "x_iy_i": 451, "x_n": 451, "xifeng": 443, "xin": 62, "xlim": [268, 269, 274, 275, 283, 284, 293, 294, 299], "xmax": [32, 100, 186, 188, 189, 238, 239, 242, 267, 268, 274, 275, 299, 339, 343, 350, 355, 371, 459], "xmin": [32, 100, 186, 188, 189, 238, 239, 242, 267, 268, 274, 275, 299, 339, 343, 350, 355, 371, 459], "xnew": 227, "xout": 62, "xy": [20, 46, 222, 223, 273, 316, 406, 430, 448], "xyz": 122, "xz": [20, 46, 221, 316, 406, 430, 448], "y": [7, 8, 22, 46, 68, 100, 102, 106, 150, 156, 181, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 204, 205, 207, 208, 211, 213, 215, 216, 218, 219, 220, 221, 222, 226, 232, 234, 235, 236, 237, 240, 242, 243, 245, 263, 264, 268, 269, 274, 275, 283, 284, 293, 294, 299, 304, 305, 307, 312, 313, 314, 315, 317, 318, 327, 328, 329, 336, 337, 339, 350, 371, 379, 406, 430, 437, 438, 443, 444, 451, 452, 459], "y0": [136, 221, 277, 278, 280, 425], "y1": [136, 190, 277, 278, 280, 398, 400, 401, 413, 414, 415], "y2": [190, 277, 278, 280, 415], "y3": [277, 415], "y_": 459, "y_0": 451, "y_1": 451, "y_i": [451, 460], "y_n": 451, "yet": [48, 50, 339], "yixin": 443, "ylim": [268, 269, 274, 275, 283, 284, 293, 294, 299], "ymax": [32, 100, 186, 188, 189, 238, 239, 242, 267, 268, 274, 275, 299, 339, 343, 350, 355, 371, 459], "ymin": [32, 100, 186, 188, 189, 238, 239, 242, 267, 268, 274, 275, 299, 339, 343, 350, 355, 371, 459], "yongji": 443, "you": [1, 3, 20, 95, 442, 448], "your": [20, 448], "yutaka": 443, "yx": [150, 316], "yz": [46, 220, 223, 316, 406], "z": [7, 8, 22, 46, 68, 100, 102, 105, 106, 122, 150, 156, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 204, 205, 207, 208, 211, 213, 215, 216, 218, 219, 220, 221, 222, 226, 232, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 263, 264, 268, 269, 274, 283, 284, 293, 294, 299, 304, 305, 307, 312, 314, 318, 327, 328, 329, 336, 339, 350, 352, 379, 406, 430, 437, 438, 443, 451, 452, 459], "z0": [136, 222, 277, 278, 280, 425], "z1": [136, 190, 277, 278, 280, 398, 400, 401, 413, 414, 415], "z2": [190, 277, 278, 280, 415], "z3": [277, 415], "z_": 459, "z_0": 451, "z_1": 451, "z_i": [451, 460], "z_n": 451, "zbs03": [339, 443, 458], "zeitschrift": 443, "zero": [8, 22, 122, 223, 226, 237, 399, 459], "zhang": [414, 443], "zhou": 443, "zip": [4, 7, 8, 9], "ziti": 9, "zlim": [268, 269, 274, 283, 284, 293, 294, 299], "zmax": [32, 100, 186, 188, 189, 238, 242, 267, 268, 274, 299, 339, 343, 350, 355, 459], "zmin": [32, 100, 186, 188, 189, 238, 242, 267, 268, 274, 299, 339, 343, 350, 355, 459], "zoom": [75, 120, 179, 180, 182, 183, 184, 304], "zorin": 443, "zx": 316, "zy": 316, "zyx": 122, "\u00e7": 443, "\u00e9": 443, "\u00f6": 443, "\u00fc": 443}, "titles": ["API Reference", "Development", "Change Log", "Developer\u2019s Guide", "Curvature Analysis", "Mesh Analysis Examples", "Computation times", "Implicit Heart", "Mixed-Topology TPMS", "Pasta Shapes", "Mesh Generation Examples", "Computation times", "Examples", "Computation times", "mymesh.booleans", "mymesh.contour", "mymesh.converter", "mymesh.curvature", "mymesh.delaunay", "mymesh.demo_image", "mymesh.demo_mesh", "mymesh.image", "mymesh.implicit", "mymesh.improvement", "mymesh.mesh", "mymesh.mesh.mesh.Boundary", "mymesh.mesh.mesh.BoundaryConn", "mymesh.mesh.mesh.BoundaryNodes", "mymesh.mesh.mesh.Centroids", "mymesh.mesh.mesh.Clip", "mymesh.mesh.mesh.Contour", "mymesh.mesh.mesh.CreateBoundaryLayer", "mymesh.mesh.mesh.Crop", "mymesh.mesh.mesh.EdgeConn", "mymesh.mesh.mesh.EdgeElemConn", "mymesh.mesh.mesh.Edges", "mymesh.mesh.mesh.ElemConn", "mymesh.mesh.mesh.ElemNeighbors", "mymesh.mesh.mesh.ElemNormals", "mymesh.mesh.mesh.ElemType", "mymesh.mesh.mesh.EulerCharacteristic", "mymesh.mesh.mesh.FaceConn", "mymesh.mesh.mesh.FaceElemConn", "mymesh.mesh.mesh.Faces", "mymesh.mesh.mesh.Genus", "mymesh.mesh.mesh.MeshNodes", "mymesh.mesh.mesh.Mirror", "mymesh.mesh.mesh.ND", "mymesh.mesh.mesh.NEdge", "mymesh.mesh.mesh.NElem", "mymesh.mesh.mesh.NFace", "mymesh.mesh.mesh.NNode", "mymesh.mesh.mesh.NodeNeighbors", "mymesh.mesh.mesh.NodeNormals", "mymesh.mesh.mesh.NodeNormalsMethod", "mymesh.mesh.mesh.RenumberFacesBySet", "mymesh.mesh.mesh.RenumberNodesBySet", "mymesh.mesh.mesh.SurfConn", "mymesh.mesh.mesh.SurfElemConn", "mymesh.mesh.mesh.SurfNodeNeighbors", "mymesh.mesh.mesh.SurfNodes", "mymesh.mesh.mesh.Surface", "mymesh.mesh.mesh.Threshold", "mymesh.mesh.mesh.aabb", "mymesh.mesh.mesh.addEdges", "mymesh.mesh.mesh.addElems", "mymesh.mesh.mesh.addFaces", "mymesh.mesh.mesh.addNodes", "mymesh.mesh.mesh.bounds", "mymesh.mesh.mesh.cells", "mymesh.mesh.mesh.cleanup", "mymesh.mesh.mesh.copy", "mymesh.mesh.mesh.getCurvature", "mymesh.mesh.mesh.getQuality", "mymesh.mesh.mesh.identify_type", "mymesh.mesh.mesh.imread", "mymesh.mesh.mesh.merge", "mymesh.mesh.mesh.mesh2dmesh", "mymesh.mesh.mesh.meshio2mymesh", "mymesh.mesh.mesh.mvbb", "mymesh.mesh.mesh.mymesh2meshio", "mymesh.mesh.mesh.plot", "mymesh.mesh.mesh.points", "mymesh.mesh.mesh.read", "mymesh.mesh.mesh.removeElems", "mymesh.mesh.mesh.reset", "mymesh.mesh.mesh.to_meshio", "mymesh.mesh.mesh.to_pyvista", "mymesh.mesh.mesh.validate", "mymesh.mesh.mesh.view", "mymesh.mesh.mesh.write", "mymesh.primitives", "mymesh.quality", "mymesh.rays", "mymesh.register", "mymesh.tree", "mymesh.utils", "mymesh.visualize", "mymesh.booleans.MeshBooleans", "mymesh.booleans.SplitMesh", "mymesh.contour.Adaptive", "mymesh.contour.MarchingCubes", "mymesh.contour.MarchingCubesImage", "mymesh.contour.MarchingElements", "mymesh.contour.MarchingSquares", "mymesh.contour.MarchingSquaresImage", "mymesh.contour.MarchingTetrahedra", "mymesh.contour.MarchingTriangles", "mymesh.converter.EdgesByElement", "mymesh.converter.edge2quadratic", "mymesh.converter.edge32linear", "mymesh.converter.edges2unique", "mymesh.converter.faces2surface", "mymesh.converter.faces2unique", "mymesh.converter.hex202linear", "mymesh.converter.hex2edges", "mymesh.converter.hex2faces", "mymesh.converter.hex2quadratic", "mymesh.converter.hex2tet", "mymesh.converter.hexsubdivide", "mymesh.converter.im2voxel", "mymesh.converter.linear2quadratic", "mymesh.converter.mesh2im", "mymesh.converter.polygon2edges", "mymesh.converter.pyr132linear", "mymesh.converter.pyr2quadratic", "mymesh.converter.pyramid2edges", "mymesh.converter.pyramid2faces", "mymesh.converter.pyramid2tet", "mymesh.converter.quad2edges", "mymesh.converter.quad2quadratic", "mymesh.converter.quad2tri", "mymesh.converter.quad82linear", "mymesh.converter.quadratic2linear", "mymesh.converter.solid2edges", "mymesh.converter.solid2faces", "mymesh.converter.solid2surface", "mymesh.converter.solid2tets", "mymesh.converter.surf2dual", "mymesh.converter.surf2edges", "mymesh.converter.surf2tris", "mymesh.converter.surf2voxel", "mymesh.converter.tet102linear", "mymesh.converter.tet2edges", "mymesh.converter.tet2faces", "mymesh.converter.tet2quadratic", "mymesh.converter.tetsubdivide", "mymesh.converter.tri2edges", "mymesh.converter.tri2quadratic", "mymesh.converter.tri62linear", "mymesh.converter.voxel2im", "mymesh.converter.wdg152linear", "mymesh.converter.wdg2quadratic", "mymesh.converter.wedge2edges", "mymesh.converter.wedge2faces", "mymesh.converter.wedge2tet", "mymesh.curvature.AnalyticalCurvature", "mymesh.curvature.CubicFit", "mymesh.curvature.Curvedness", "mymesh.curvature.GaussianCurvature", "mymesh.curvature.ImageCurvature", "mymesh.curvature.MeanCurvature", "mymesh.curvature.NormCurve", "mymesh.curvature.QuadFit", "mymesh.curvature.ShapeCategory", "mymesh.curvature.ShapeIndex", "mymesh.delaunay.Alpha2d", "mymesh.delaunay.Alpha3d", "mymesh.delaunay.AlphaPeel3d", "mymesh.delaunay.AlphaShape", "mymesh.delaunay.BowyerWatson2d", "mymesh.delaunay.BowyerWatson3d", "mymesh.delaunay.ConvexHull", "mymesh.delaunay.FanTriangulation", "mymesh.delaunay.GiftWrapping", "mymesh.delaunay.SciPy", "mymesh.delaunay.Tetrahedralize", "mymesh.delaunay.Triangle", "mymesh.delaunay.Triangulate", "mymesh.image.PixelMesh", "mymesh.image.SurfaceMesh", "mymesh.image.SurfaceNodeOptimization", "mymesh.image.TetMesh", "mymesh.image.VoxelMesh", "mymesh.image.read", "mymesh.image.write", "mymesh.implicit.SurfaceMesh", "mymesh.implicit.SurfaceNodeOptimization", "mymesh.implicit.TetMesh", "mymesh.implicit.VoxelMesh", "mymesh.implicit.box", "mymesh.implicit.cylinder", "mymesh.implicit.diamond", "mymesh.implicit.diff", "mymesh.implicit.difff", "mymesh.implicit.diffs", "mymesh.implicit.grid2fun", "mymesh.implicit.grid2grad", "mymesh.implicit.gyroid", "mymesh.implicit.intersection", "mymesh.implicit.intersectionf", "mymesh.implicit.intersections", "mymesh.implicit.lidinoid", "mymesh.implicit.mesh2udf", "mymesh.implicit.mixed_topology", "mymesh.implicit.neovius", "mymesh.implicit.offset", "mymesh.implicit.plane", "mymesh.implicit.primitive", "mymesh.implicit.rMax", "mymesh.implicit.rMin", "mymesh.implicit.sphere", "mymesh.implicit.thicken", "mymesh.implicit.thickenf", "mymesh.implicit.thickens", "mymesh.implicit.torus", "mymesh.implicit.tpms", "mymesh.implicit.union", "mymesh.implicit.unionf", "mymesh.implicit.unions", "mymesh.implicit.xplane", "mymesh.implicit.yplane", "mymesh.implicit.zplane", "mymesh.improvement.Contract", "mymesh.improvement.GeoTransformSmoothing", "mymesh.improvement.LocalLaplacianSmoothing", "mymesh.improvement.NodeSpringSmoothing", "mymesh.improvement.SegmentSpringSmoothing", "mymesh.improvement.SmartLaplacianSmoothing", "mymesh.improvement.TangentialLaplacianSmoothing", "mymesh.improvement.TetFlip", "mymesh.improvement.TetImprove", "mymesh.improvement.TetSplit", "mymesh.primitives.Box", "mymesh.primitives.Circle", "mymesh.primitives.CirclePt", "mymesh.primitives.Cylinder", "mymesh.primitives.Extrude", "mymesh.primitives.Grid", "mymesh.primitives.Grid2D", "mymesh.primitives.Line", "mymesh.primitives.Multiline", "mymesh.primitives.Plane", "mymesh.primitives.Revolve", "mymesh.primitives.Sphere", "mymesh.primitives.Torus", "mymesh.quality.Area", "mymesh.quality.AspectRatio", "mymesh.quality.InverseOrthogonalQuality", "mymesh.quality.InverseOrthogonality", "mymesh.quality.MaxDihedral", "mymesh.quality.MeanRatio", "mymesh.quality.MinDihedral", "mymesh.quality.OrthogonalQuality", "mymesh.quality.Orthogonality", "mymesh.quality.Skewness", "mymesh.quality.SurfDihedralAngles", "mymesh.quality.Volume", "mymesh.quality.dihedralAngles", "mymesh.quality.equiangular_skewness", "mymesh.quality.quad_skewness", "mymesh.quality.tet_circumradius", "mymesh.quality.tet_vol_skewness", "mymesh.quality.tet_volume", "mymesh.quality.tri_area", "mymesh.quality.tri_skewness", "mymesh.rays.BoundaryBoundaryIntersection", "mymesh.rays.BoxBoxIntersection", "mymesh.rays.BoxTrianglesIntersection", "mymesh.rays.PlaneBoxIntersection", "mymesh.rays.PlaneSurfIntersection", "mymesh.rays.PlaneTriangleIntersection", "mymesh.rays.PlaneTrianglesIntersection", "mymesh.rays.PointInBoundary", "mymesh.rays.PointInBox", "mymesh.rays.PointInBox2D", "mymesh.rays.PointInSurf", "mymesh.rays.PointInTet", "mymesh.rays.PointInTri", "mymesh.rays.PointsInSurf", "mymesh.rays.PointsInTris", "mymesh.rays.PointsInVoxel", "mymesh.rays.RayBoundaryIntersection", "mymesh.rays.RayBoxIntersection", "mymesh.rays.RayBoxesIntersection", "mymesh.rays.RayOctreeIntersection", "mymesh.rays.RaySegmentIntersection", "mymesh.rays.RaySegmentsIntersection", "mymesh.rays.RaySurfIntersection", "mymesh.rays.RayTriangleIntersection", "mymesh.rays.RayTrianglesIntersection", "mymesh.rays.RaysSurfIntersection", "mymesh.rays.RaysTrianglesIntersection", "mymesh.rays.SegmentBox2DIntersection", "mymesh.rays.SegmentBoxIntersection", "mymesh.rays.SegmentSegmentIntersection", "mymesh.rays.SegmentsSegmentsIntersection", "mymesh.rays.SurfSelfIntersection", "mymesh.rays.SurfSurfIntersection", "mymesh.rays.TriangleBoxIntersection", "mymesh.rays.TriangleTriangleIntersection", "mymesh.rays.TriangleTriangleIntersectionPt", "mymesh.rays.TrianglesTrianglesIntersection", "mymesh.rays.TrianglesTrianglesIntersectionPts", "mymesh.register.AxisAlignImage", "mymesh.register.AxisAlignPoints", "mymesh.register.ICP", "mymesh.register.Image2Image", "mymesh.register.ImageOverlay", "mymesh.register.Mesh2Mesh", "mymesh.register.Point2Point", "mymesh.register.R2d", "mymesh.register.R3d", "mymesh.register.S2d", "mymesh.register.S3d", "mymesh.register.Sh2d", "mymesh.register.Sh3d", "mymesh.register.T2d", "mymesh.register.T3d", "mymesh.register.affine", "mymesh.register.affine2d", "mymesh.register.closest_point_MSE", "mymesh.register.dice", "mymesh.register.hausdorff", "mymesh.register.jaccard", "mymesh.register.mutual_information", "mymesh.register.optimize", "mymesh.register.rigid", "mymesh.register.rigid2d", "mymesh.register.rotation", "mymesh.register.rotation2d", "mymesh.register.similarity", "mymesh.register.similarity2d", "mymesh.register.symmetric_closest_point_MSE", "mymesh.register.transform_image", "mymesh.register.transform_points", "mymesh.register.translation", "mymesh.register.translation2d", "mymesh.tree.Edges2Quadtree", "mymesh.tree.Function2Octree", "mymesh.tree.Octree2Dual", "mymesh.tree.Octree2Voxel", "mymesh.tree.OctreeNode", "mymesh.tree.OctreeNode.ContainsBoxes", "mymesh.tree.OctreeNode.ContainsPts", "mymesh.tree.OctreeNode.ContainsTris", "mymesh.tree.OctreeNode.PointInNode", "mymesh.tree.OctreeNode.PointsInNode", "mymesh.tree.OctreeNode.clearData", "mymesh.tree.OctreeNode.getLevel", "mymesh.tree.OctreeNode.getLimits", "mymesh.tree.OctreeNode.getMaxDepth", "mymesh.tree.OctreeNode.getVertices", "mymesh.tree.OctreeNode.hasChildren", "mymesh.tree.OctreeNode.makeChildren", "mymesh.tree.OctreeNode.makeChildrenBoxes", "mymesh.tree.OctreeNode.makeChildrenPts", "mymesh.tree.OctreeNode.makeChildrenTris", "mymesh.tree.OctreeNode.prune", "mymesh.tree.Points2Octree", "mymesh.tree.Points2Quadtree", "mymesh.tree.Print", "mymesh.tree.Quadtree2Dual", "mymesh.tree.Quadtree2Pixel", "mymesh.tree.QuadtreeNode", "mymesh.tree.QuadtreeNode.ContainsEdges", "mymesh.tree.QuadtreeNode.ContainsPts", "mymesh.tree.QuadtreeNode.PointInNode", "mymesh.tree.QuadtreeNode.PointsInNode", "mymesh.tree.QuadtreeNode.clearData", "mymesh.tree.QuadtreeNode.getLevel", "mymesh.tree.QuadtreeNode.getLimits", "mymesh.tree.QuadtreeNode.getMaxDepth", "mymesh.tree.QuadtreeNode.getVertices", "mymesh.tree.QuadtreeNode.hasChildren", "mymesh.tree.QuadtreeNode.makeChildren", "mymesh.tree.QuadtreeNode.makeChildrenEdges", "mymesh.tree.QuadtreeNode.makeChildrenPts", "mymesh.tree.QuadtreeNode.prune", "mymesh.tree.SearchOctree", "mymesh.tree.SearchOctreeTri", "mymesh.tree.Surface2Octree", "mymesh.tree.TreeNode", "mymesh.tree.TreeNode.clearData", "mymesh.tree.TreeNode.getLevel", "mymesh.tree.TreeNode.getMaxDepth", "mymesh.tree.TreeNode.hasChildren", "mymesh.tree.TreeNode.prune", "mymesh.tree.Voxel2Octree", "mymesh.tree.getAllLeaf", "mymesh.utils.AABB", "mymesh.utils.BaryTet", "mymesh.utils.BaryTri", "mymesh.utils.BaryTris", "mymesh.utils.CalcFaceNormal", "mymesh.utils.Centroids", "mymesh.utils.CleanupDegenerateElements", "mymesh.utils.DeleteDegenerateElements", "mymesh.utils.DeleteDuplicateNodes", "mymesh.utils.DetectFeatures", "mymesh.utils.DilateVoxel", "mymesh.utils.ErodeVoxel", "mymesh.utils.ExtractRagged", "mymesh.utils.Face2NodeNormal", "mymesh.utils.MVBB", "mymesh.utils.MergeMesh", "mymesh.utils.MirrorMesh", "mymesh.utils.PadRagged", "mymesh.utils.Project2Surface", "mymesh.utils.RelabelNodes", "mymesh.utils.SortRaggedByLength", "mymesh.utils.SplitRaggedByLength", "mymesh.utils.SurfMapping", "mymesh.utils.TetMeshVol", "mymesh.utils.TriSurfVol", "mymesh.utils.ValueMapping", "mymesh.utils.getConnectedElements", "mymesh.utils.getConnectedNodes", "mymesh.utils.getElemConnectivity", "mymesh.utils.getElemNeighbors", "mymesh.utils.getNodeNeighborhood", "mymesh.utils.getNodeNeighborhoodByRadius", "mymesh.utils.getNodeNeighbors", "mymesh.utils.identify_elem", "mymesh.utils.identify_type", "mymesh.utils.makePyramidLayer", "mymesh.visualize.FaceColor", "mymesh.visualize.GetTheme", "mymesh.visualize.ParseColor", "mymesh.visualize.Subplot", "mymesh.visualize.View", "mymesh.visualize.set_vispy_backend", "User Guide", "Connectivity Representations", "Constructive Solid Geometry", "Element Types", "Getting Started", "Image-based Meshing", "Implicit Meshing", "Installation", "File Input/Output", "Using MyMesh in MATLAB", "Working with the <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">mesh</span></code> class", "References", "What is a mesh?", "MyMesh: General purpose, implicit, and image-based meshing in python", "Computation times", "mymesh.demo_image", "mymesh.demo_mesh", "Theory Guide", "Contour", "Curvature", "Delaunay Triangulation", "Edge Contraction", "2\u21923 and 3\u21922 Flips", "implicit", "Improvement", "Laplacian Smoothing", "Octree", "Rays", "Spring-based Smoothing"], "titleterms": {"": 3, "0": 2, "09": 2, "1": 2, "11": 2, "2": 454, "2024": 2, "2025": 2, "22": 2, "24": 2, "2d": [91, 433, 444], "3": 454, "33": 450, "3d": [91, 444], "On": 442, "aabb": [63, 390], "acknowledg": 445, "adapt": 100, "addedg": 64, "addelem": 65, "addfac": 66, "addnod": 67, "affin": 319, "affine2d": 320, "alpha": 2, "alpha2d": 166, "alpha3d": 167, "alphapeel3d": 168, "alphashap": 169, "an": [7, 438], "analysi": [4, 5, 12], "analyt": 451, "analyticalcurvatur": 156, "api": 0, "area": 246, "aspectratio": 247, "axisalignimag": 304, "axisalignpoint": 305, "barytet": 391, "barytri": [392, 393], "base": [21, 437, 445, 451, 460], "boolean": [14, 98, 99], "bound": 68, "boundari": [25, 459], "boundaryboundaryintersect": 266, "boundaryconn": 26, "boundarynod": 27, "bowyer": 452, "bowyerwatson2d": 170, "bowyerwatson3d": 171, "box": [190, 233, 459], "boxboxintersect": 267, "boxtrianglesintersect": 268, "calcfacenorm": 394, "calcul": [4, 17, 92, 451], "caviti": 452, "cell": 69, "centroid": [28, 395], "chang": 2, "circl": 234, "circlept": 235, "circumcircl": 452, "class": 442, "cleanup": [70, 96], "cleanupdegenerateel": 396, "cleardata": [348, 369, 383], "clip": [29, 442], "closest_point_ms": 321, "cloud": 458, "comput": [6, 11, 13, 446], "connect": [16, 96, 433], "construct": [91, 434], "containsbox": 343, "containsedg": 365, "containspt": [344, 366], "containstri": 345, "contour": [15, 30, 100, 101, 102, 103, 104, 105, 106, 107, 442, 450], "contract": [223, 453], "contribut": 3, "convent": 451, "convers": [16, 17, 95], "convert": [16, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "convexhul": 172, "copi": [71, 442], "core": 439, "creat": 7, "createboundarylay": 31, "creation": 95, "crop": 32, "csg": 434, "cube": 450, "cubic": 451, "cubicfit": 157, "curvatur": [4, 17, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 451], "curved": [158, 451], "cylind": [191, 236], "data": [442, 454], "defin": [7, 438], "definit": 458, "delaunai": [18, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 452], "deletedegenerateel": 397, "deleteduplicatenod": 398, "demand": 442, "demo_imag": [19, 447], "demo_mesh": [20, 448], "depend": 439, "detectfeatur": 399, "develop": [1, 3], "diamond": 192, "dice": 322, "diff": [193, 195], "difff": 194, "dihedralangl": 258, "dilatevoxel": 400, "distanc": 458, "do": 436, "edg": [35, 453, 454], "edge2quadrat": 109, "edge32linear": 110, "edgeconn": 33, "edgeelemconn": 34, "edges2quadtre": 338, "edges2uniqu": 111, "edgesbyel": 108, "elemconn": 36, "element": [16, 435, 454], "elemneighbor": 37, "elemnorm": 38, "elemtyp": 39, "equiangular_skew": 259, "erodevoxel": 401, "error": [4, 458], "euclidean": 458, "eulercharacterist": 40, "exampl": [5, 10, 12, 433, 445], "explicit": 434, "extractrag": 402, "extrud": 237, "face": [43, 454], "face2nodenorm": 403, "facecolor": 426, "faceconn": 41, "faceelemconn": 42, "faces2surfac": 112, "faces2uniqu": 113, "fantriangul": 173, "feat": 2, "featur": 1, "file": [21, 440], "fit": 451, "fix": 2, "flip": 454, "format": 452, "from": [95, 439, 442], "function": [0, 7, 22, 92, 438, 458], "function2octre": 339, "gaussian": 451, "gaussiancurvatur": 159, "gener": [10, 12, 21, 22, 445, 458], "genu": 44, "geometri": 434, "geotransformsmooth": 224, "get": 436, "getallleaf": 389, "getconnectedel": 416, "getconnectednod": 417, "getcurvatur": 72, "getelemconnect": 418, "getelemneighbor": 419, "getlevel": [349, 370, 384], "getlimit": [350, 371], "getmaxdepth": [351, 372, 385], "getnodeneighbor": 422, "getnodeneighborhood": 420, "getnodeneighborhoodbyradiu": 421, "getqual": 73, "getthem": 427, "getvertic": [352, 373], "giftwrap": 174, "grid": 238, "grid2d": 239, "grid2fun": 196, "grid2grad": 197, "guid": [3, 432, 449], "gyroid": 198, "haschildren": [353, 374, 386], "hausdorff": 323, "heart": 7, "helper": 92, "hex202linear": 114, "hex2edg": 115, "hex2fac": 116, "hex2quadrat": 117, "hex2tet": 118, "hexsubdivid": 119, "hull": 18, "i": [438, 444], "icp": 306, "identify_elem": 423, "identify_typ": [74, 424], "im2voxel": 120, "imag": [21, 179, 180, 181, 182, 183, 184, 185, 437, 440, 445], "image2imag": 307, "imagecurvatur": 160, "imageoverlai": 308, "implicit": [7, 22, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 434, 438, 445, 455, 458], "import": 432, "improv": [23, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 456], "imread": 75, "inclus": 459, "index": [439, 451], "initi": 452, "input": 440, "insert": 452, "insid": 93, "instal": 439, "interpret": 451, "intersect": [93, 199, 201, 459], "intersectionf": 200, "inverseorthogon": 249, "inverseorthogonalqu": 248, "io": 21, "jaccard": 324, "laplacian": 457, "lidinoid": 202, "line": [240, 444], "linear2quadrat": 121, "local": 23, "locallaplaciansmooth": 225, "locat": 452, "log": 2, "makechildren": [354, 375], "makechildrenbox": 355, "makechildrenedg": 376, "makechildrenpt": [356, 377], "makechildrentri": 357, "makepyramidlay": 425, "manipul": 96, "march": 450, "marchingcub": 101, "marchingcubesimag": 102, "marchingel": 103, "marchingsquar": 104, "marchingsquaresimag": 105, "marchingtetrahedra": 106, "marchingtriangl": 107, "matlab": 441, "maxdihedr": 250, "mean": 451, "meancurvatur": 161, "meanratio": 251, "measur": [4, 96], "merg": 76, "mergemesh": 405, "mesh": [5, 10, 12, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 96, 437, 438, 440, 442, 444, 445, 451, 458], "mesh2dmesh": 77, "mesh2im": 122, "mesh2mesh": 309, "mesh2udf": 203, "meshboolean": 98, "meshio2mymesh": 78, "meshnod": 45, "method": [24, 342, 364, 382], "metric": [92, 94, 451], "mindihedr": 252, "mirror": 46, "mirrormesh": 406, "miscellan": 96, "mix": 8, "mixed_topologi": 204, "modif": 456, "multilin": 241, "mutual_inform": 325, "mvbb": [79, 404], "mymesh": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 437, 441, 445, 447, 448], "mymesh2meshio": 80, "nd": 47, "nedg": 48, "need": 445, "nelem": 49, "neoviu": 205, "nface": 50, "nnode": 51, "node": [23, 456, 460], "nodeneighbor": 52, "nodenorm": 53, "nodenormalsmethod": 54, "nodespringsmooth": 226, "normcurv": 162, "object": 0, "octre": [95, 458], "octree2du": 340, "octree2voxel": 341, "octreenod": [342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358], "offset": 206, "oper": [14, 22], "optim": [94, 326], "option": 439, "orthogon": 254, "orthogonalqu": 253, "other": 22, "output": 440, "outsid": 93, "overview": 432, "packag": [432, 439], "padrag": 407, "parsecolor": 428, "pasta": 9, "pixelmesh": 179, "plan": 1, "planar": 444, "plane": [207, 242, 459], "planeboxintersect": 269, "planesurfintersect": 270, "planetriangleintersect": 271, "planetrianglesintersect": 272, "plot": 81, "point": [82, 452, 458, 459], "point2point": 310, "pointinboundari": 273, "pointinbox": 274, "pointinbox2d": 275, "pointinnod": [346, 367], "pointinsurf": 276, "pointintet": 277, "pointintri": 278, "points2octre": 359, "points2quadtre": 360, "pointsinnod": [347, 368], "pointsinsurf": 279, "pointsintri": 280, "pointsinvoxel": 281, "polygon2edg": 123, "primit": [91, 208, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245], "princip": 451, "print": 361, "procedur": 454, "project": 96, "project2surfac": 408, "properti": [24, 342, 364, 382, 442], "prune": [358, 378, 387], "purpos": 445, "pypi": 439, "pyr132linear": 124, "pyr2quadrat": 125, "pyramid2edg": 126, "pyramid2fac": 127, "pyramid2tet": 128, "python": [439, 445], "quad2edg": 129, "quad2quadrat": 130, "quad2tri": 131, "quad82linear": 132, "quad_skew": 260, "quadfit": 163, "quadrat": 451, "quadratic2linear": 133, "quadtre": 95, "quadtree2du": 362, "quadtree2pixel": 363, "quadtreenod": [364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378], "qualiti": [92, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265], "queri": 95, "r2d": 311, "r3d": 312, "rai": [93, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 459], "rayboundaryintersect": 282, "rayboxesintersect": 284, "rayboxintersect": 283, "rayoctreeintersect": 285, "raysegmentintersect": 286, "raysegmentsintersect": 287, "rayssurfintersect": 291, "raystrianglesintersect": 292, "raysurfintersect": 288, "raytriangleintersect": 289, "raytrianglesintersect": 290, "read": [83, 184], "reconstruct": 455, "refer": [0, 443], "regist": [94, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337], "registr": 94, "relabelnod": 409, "removeelem": 84, "renumberfacesbyset": 55, "renumbernodesbyset": 56, "reposit": [23, 456], "represent": 433, "reset": 85, "retriangul": 452, "revolv": 243, "rigid": 327, "rigid2d": 328, "rmax": 209, "rmin": 210, "roadmap": 1, "rotat": 329, "rotation2d": 330, "s2d": 313, "s3d": 314, "scipi": 175, "searchoctre": 379, "searchoctreetri": 380, "segment": 459, "segmentbox2dintersect": 293, "segmentboxintersect": 294, "segmentsegmentintersect": 295, "segmentspringsmooth": 227, "segmentssegmentsintersect": 296, "set_vispy_backend": 431, "sh2d": 315, "sh3d": 316, "shape": [9, 91, 451, 459], "shapecategori": 164, "shapeindex": 165, "similar": [94, 331], "similarity2d": 332, "skew": 255, "smart": 457, "smartlaplaciansmooth": 228, "smooth": [7, 23, 457, 460], "solid": 434, "solid2edg": 134, "solid2fac": 135, "solid2surfac": 136, "solid2tet": 137, "sortraggedbylength": 410, "sourc": 439, "sphere": [211, 244], "splitmesh": 99, "splitraggedbylength": 411, "spring": 460, "squar": 450, "start": 436, "statement": 445, "store": 442, "structur": 454, "submodul": 0, "subplot": 429, "summari": 445, "surf": 444, "surf2dual": 138, "surf2edg": 139, "surf2tri": 140, "surf2voxel": 141, "surfac": [7, 61, 96, 444, 451, 455, 458, 459], "surface2octre": 381, "surfacemesh": [180, 186], "surfacenodeoptim": [181, 187], "surfconn": 57, "surfdihedralangl": 256, "surfelemconn": 58, "surfmap": 412, "surfnod": 60, "surfnodeneighbor": 59, "surfselfintersect": 297, "surfsurfintersect": 298, "symmetric_closest_point_ms": 333, "t2d": 317, "t3d": 318, "tabl": 454, "tangenti": 457, "tangentiallaplaciansmooth": 229, "test": [93, 452, 459], "tet102linear": 142, "tet2edg": 143, "tet2fac": 144, "tet2quadrat": 145, "tet_circumradiu": 261, "tet_vol_skew": 262, "tet_volum": 263, "tetflip": 230, "tetimprov": 231, "tetmesh": [182, 188], "tetmeshvol": 413, "tetrahedr": [18, 176], "tetrahedra": 450, "tetsplit": 232, "tetsubdivid": 146, "theori": 449, "thicken": [212, 214], "thickenf": 213, "threshold": [62, 442], "time": [6, 11, 13, 446], "tip": 441, "to_meshio": 86, "to_pyvista": 87, "topolog": 456, "topologi": [8, 23], "toru": [215, 245], "tpm": [8, 216], "transform": 94, "transform_imag": 334, "transform_point": 335, "translat": 336, "translation2d": 337, "tree": [95, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "treenod": [382, 383, 384, 385, 386, 387], "tri2edg": 147, "tri2quadrat": 148, "tri62linear": 149, "tri_area": 264, "tri_skew": 265, "triangl": [177, 459], "triangleboxintersect": 299, "trianglestrianglesintersect": 302, "trianglestrianglesintersectionpt": 303, "triangletriangleintersect": 300, "triangletriangleintersectionpt": 301, "triangul": [18, 178, 452], "trisurfvol": 414, "type": [16, 435, 444], "union": [217, 219], "unionf": 218, "unpack": 442, "unreleas": 2, "updat": 3, "us": 441, "user": 432, "util": [22, 95, 96, 97, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425], "valid": 88, "valuemap": 415, "version": 3, "view": [89, 430], "visual": [94, 97, 426, 427, 428, 429, 430, 431], "vol": 444, "volum": [257, 444], "voxel": [444, 458], "voxel2im": 150, "voxel2octre": 388, "voxelmesh": [183, 189], "want": 436, "watson": 452, "wdg152linear": 151, "wdg2quadrat": 152, "wedge2edg": 153, "wedge2fac": 154, "wedge2tet": 155, "what": [436, 438, 444], "work": 442, "write": [90, 185], "xplane": 220, "you": 436, "yplane": 221, "zplane": 222}})