Search.setIndex({"alltitles": {"2D Example": [[306, "d-example"]], "2D Planar Meshes": [[316, "d-planar-meshes"]], "2D to 3D Constructions": [[79, "d-to-3d-constructions"]], "2\u21923 and 3\u21922 Flips": [[323, null]], "3D Surfaces": [[316, "d-surfaces"]], "API Reference": [[0, null]], "Acknowledgements": [[317, "acknowledgements"]], "Analytical Curvature": [[321, "analytical-curvature"]], "Bowyer-Watson": [[322, "bowyer-watson"]], "Bowyer-Watson: Initialization": [[322, "bowyer-watson-initialization"]], "Bowyer-Watson: Point Insertion": [[322, "bowyer-watson-point-insertion"]], "Calculating Curvature": [[321, "calculating-curvature"]], "Cavity Formation": [[322, "cavity-formation"]], "Circumcircle Test": [[322, "circumcircle-test"]], "Clip()": [[314, "clip"]], "Computation times": [[4, null], [9, null], [11, null], [318, null]], "Connectivity Representations": [[306, null]], "Connectivity conversion": [[14, "connectivity-conversion"]], "Constructive Solid Geometry": [[307, null]], "Contour": [[320, null]], "Contour()": [[314, "contour"]], "Contouring": [[13, "contouring"]], "Conventions": [[321, "conventions"]], "Conversion From Octree": [[78, "conversion-from-octree"]], "Convex Hull": [[16, "convex-hull"]], "Core dependencies": [[311, "core-dependencies"]], "Creating a Surface": [[5, "creating-a-surface"]], "Cubic Surface Fitting": [[321, "cubic-surface-fitting"]], "Curvature": [[321, null]], "Curvature Analysis": [[2, null]], "Curvature Calculation": [[15, "curvature-calculation"]], "Curvature Conversion": [[15, "curvature-conversion"]], "Curvature Metrics": [[321, "curvature-metrics"]], "Curvature calculation": [[2, "curvature-calculation"]], "Curvedness": [[321, "curvedness"]], "Data Structure": [[323, "data-structure"]], "Defining an implicit function": [[5, "defining-an-implicit-function"]], "Defining implicit functions": [[310, "defining-implicit-functions"]], "Delaunay Triangulation": [[322, null]], "Dependencies": [[311, "dependencies"]], "Development": [[1, null]], "Edge Table": [[323, "id3"]], "Element Table": [[323, "id1"]], "Element Types": [[308, null]], "Element type conversion": [[14, "element-type-conversion"]], "Error Measurement": [[2, "error-measurement"]], "Euclidean Distance Error": [[326, "euclidean-distance-error"]], "Examples": [[10, null]], "Explicit CSG": [[307, "explicit-csg"]], "Face Table": [[323, "id2"]], "File IO": [[17, "file-io"]], "File Input/Output": [[312, null]], "Flipping Procedure": [[323, "flipping-procedure"]], "From meshes to meshes": [[314, "from-meshes-to-meshes"]], "Gaussian Curvature": [[321, "gaussian-curvature"]], "Generating Octrees": [[326, "generating-octrees"]], "Image files": [[312, "image-files"]], "Image-based Mesh Generation": [[17, "image-based-mesh-generation"]], "Image-based Meshing": [[309, null]], "Images in MyMesh": [[309, "images-in-mymesh"]], "Implicit CSG": [[307, "implicit-csg"]], "Implicit Function Octrees": [[326, "implicit-function-octrees"]], "Implicit Function Operators": [[18, "implicit-function-operators"]], "Implicit Functions": [[18, "implicit-functions"]], "Implicit Heart": [[5, null]], "Implicit Meshing": [[310, null]], "Importing MyMesh": [[305, "importing-mymesh"]], "Improvement": [[325, null]], "Inside/Outside Tests": [[81, "inside-outside-tests"]], "Installation": [[311, null]], "Installing from source:": [[311, "installing-from-source"]], "Interpretation": [[321, "interpretation"]], "Intersection Tests": [[81, "intersection-tests"]], "Line Meshes (Type='line')": [[316, "line-meshes-type-line"]], "Local mesh topology": [[19, "local-mesh-topology"]], "Marching Cubes": [[320, "marching-cubes"]], "Marching Cubes 33": [[320, "marching-cubes-33"]], "Marching Squares": [[320, "marching-squares"]], "Marching Tetrahedra": [[320, "marching-tetrahedra"]], "Mean Curvature": [[321, "mean-curvature"]], "Mesh Analysis Examples": [[3, null], [10, "mesh-analysis-examples"]], "Mesh Clean Up": [[82, "mesh-clean-up"]], "Mesh Connectivity": [[82, "mesh-connectivity"]], "Mesh Generation": [[18, "mesh-generation"]], "Mesh Generation Examples": [[8, null], [10, "mesh-generation-examples"]], "Mesh Manipulations": [[82, "mesh-manipulations"]], "Mesh Measurements": [[82, "mesh-measurements"]], "Mesh Types": [[316, "mesh-types"]], "Mesh files": [[312, "mesh-files"]], "Mesh smoothing/node repositioning": [[19, "mesh-smoothing-node-repositioning"]], "Mesh type conversion": [[14, "mesh-type-conversion"]], "Mesh-Based Curvature": [[321, "mesh-based-curvature"]], "Meshing Implicit Functions": [[310, "meshing-implicit-functions"]], "Methods": [[20, "methods"]], "Miscellaneous": [[82, "miscellaneous"]], "Mixed-Topology TPMS": [[6, null]], "MyMesh: General purpose, implicit, and image-based meshing in python": [[317, null]], "Node Repositioning": [[325, "node-repositioning"]], "Node Spring-based": [[328, "node-spring-based"]], "Objects": [[0, "objects"]], "Octree": [[326, null]], "Octree Creation": [[78, "octree-creation"]], "Octree Definition": [[326, "octree-definition"]], "Octree Querying": [[78, "octree-querying"]], "Octree Utilities": [[78, "octree-utilities"]], "On-demand properties": [[314, "on-demand-properties"]], "Operations": [[12, "operations"]], "Optional dependencies": [[311, "optional-dependencies"]], "Other Implicit Mesh Utilities": [[18, "other-implicit-mesh-utilities"]], "Package Overview": [[305, "package-overview"]], "Pasta Shapes": [[7, null]], "Plane-Box Intersection": [[327, "plane-box-intersection"]], "Plane-Shape Intersection Tests": [[327, "plane-shape-intersection-tests"]], "Plane-Triangle Intersection": [[327, "plane-triangle-intersection"]], "Point Cloud Octrees": [[326, "point-cloud-octrees"]], "Point Inclusion Tests": [[327, "point-inclusion-tests"]], "Point Location": [[322, "point-location"]], "Point in Boundary": [[327, "point-in-boundary"]], "Point in Surface": [[327, "point-in-surface"]], "Principal Curvatures": [[321, "principal-curvatures"]], "Properties": [[20, "properties"]], "Python Package Index (PyPI)": [[311, "python-package-index-pypi"]], "Quadratic Surface Fitting": [[321, "quadratic-surface-fitting"]], "Quality Calculation Helper Functions": [[80, "quality-calculation-helper-functions"]], "Quality Metrics": [[80, "quality-metrics"]], "Ray-Box Intersection": [[327, "ray-box-intersection"]], "Ray-Segment Intersection": [[327, "ray-segment-intersection"]], "Ray-Shape Intersection Tests": [[327, "ray-shape-intersection-tests"]], "Ray-Triangle Intersection": [[327, "ray-triangle-intersection"]], "Rays": [[327, null]], "References": [[315, null]], "Retriangulation": [[322, "retriangulation"]], "Roadmap & Planned features": [[1, "roadmap-planned-features"]], "Segment-Segment Intersection": [[327, "segment-segment-intersection"]], "Shape Index": [[321, "shape-index"]], "Shape-Shape Intersection Tests": [[327, "shape-shape-intersection-tests"]], "Shapes": [[79, "shapes"]], "Smoothing": [[5, "smoothing"]], "Spring-based Smoothing": [[328, null]], "Statement of need": [[317, "statement-of-need"]], "Submodules": [[0, "submodules"]], "Summary": [[317, "summary"]], "Surface Mesh Octrees": [[326, "surface-mesh-octrees"]], "Surface Meshes (Type='surf')": [[316, "surface-meshes-type-surf"]], "Surface Projection": [[82, "surface-projection"]], "Surface Reconstruction": [[324, "surface-reconstruction"]], "Tetrahedralization": [[16, "tetrahedralization"]], "Theory Guide": [[319, null]], "Threshold()": [[314, "threshold"]], "Tips for using MyMesh in MATLAB": [[313, "tips-for-using-mymesh-in-matlab"]], "Topological Modifications": [[325, "topological-modifications"]], "Triangle-Box Intersection": [[327, "triangle-box-intersection"]], "Triangle-Triangle Intersection": [[327, "triangle-triangle-intersection"]], "Triangulation": [[16, "triangulation"]], "Unpacking": [[314, "unpacking"]], "User Guide": [[305, null]], "Using MyMesh in MATLAB": [[313, null]], "Visualization": [[83, "visualization"]], "Visualization Utilities": [[83, "visualization-utilities"]], "Volume Meshes (Type='vol')": [[316, "volume-meshes-type-vol"]], "Voxel Meshes": [[316, "voxel-meshes"]], "Voxel Octrees": [[326, "voxel-octrees"]], "What is a mesh?": [[316, null]], "What is an implicit function?": [[310, "what-is-an-implicit-function"]], "Working with the mesh class": [[314, null]], "copy()": [[314, "copy"]], "implicit": [[324, null]], "mymesh.booleans": [[12, null]], "mymesh.booleans.MeshBooleans": [[84, null]], "mymesh.booleans.SplitMesh": [[85, null]], "mymesh.contour": [[13, null]], "mymesh.contour.Adaptive": [[86, null]], "mymesh.contour.MarchingCubes": [[87, null]], "mymesh.contour.MarchingCubesImage": [[88, null]], "mymesh.contour.MarchingSquares": [[89, null]], "mymesh.contour.MarchingSquaresImage": [[90, null]], "mymesh.contour.MarchingTetrahedra": [[91, null]], "mymesh.converter": [[14, null]], "mymesh.converter.EdgesByElement": [[92, null]], "mymesh.converter.edges2unique": [[93, null]], "mymesh.converter.faces2surface": [[94, null]], "mymesh.converter.faces2unique": [[95, null]], "mymesh.converter.hex2edges": [[96, null]], "mymesh.converter.hex2faces": [[97, null]], "mymesh.converter.hex2tet": [[98, null]], "mymesh.converter.hexsubdivide": [[99, null]], "mymesh.converter.im2voxel": [[100, null]], "mymesh.converter.polygon2edges": [[101, null]], "mymesh.converter.pyramid2edges": [[102, null]], "mymesh.converter.pyramid2faces": [[103, null]], "mymesh.converter.pyramid2tet": [[104, null]], "mymesh.converter.quad2edges": [[105, null]], "mymesh.converter.quad2tri": [[106, null]], "mymesh.converter.solid2edges": [[107, null]], "mymesh.converter.solid2faces": [[108, null]], "mymesh.converter.solid2surface": [[109, null]], "mymesh.converter.solid2tets": [[110, null]], "mymesh.converter.surf2dual": [[111, null]], "mymesh.converter.surf2edges": [[112, null]], "mymesh.converter.surf2tris": [[113, null]], "mymesh.converter.surf2voxel": [[114, null]], "mymesh.converter.tet102tet4": [[115, null]], "mymesh.converter.tet2edges": [[116, null]], "mymesh.converter.tet2faces": [[117, null]], "mymesh.converter.tet42tet10": [[118, null]], "mymesh.converter.tri2edges": [[119, null]], "mymesh.converter.voxel2im": [[120, null]], "mymesh.converter.wedge2edges": [[121, null]], "mymesh.converter.wedge2faces": [[122, null]], "mymesh.converter.wedge2tet": [[123, null]], "mymesh.curvature": [[15, null]], "mymesh.curvature.AnalyticalCurvature": [[124, null]], "mymesh.curvature.CubicFit": [[125, null]], "mymesh.curvature.Curvedness": [[126, null]], "mymesh.curvature.GaussianCurvature": [[127, null]], "mymesh.curvature.ImageCurvature": [[128, null]], "mymesh.curvature.MeanCurvature": [[129, null]], "mymesh.curvature.NormCurve": [[130, null]], "mymesh.curvature.QuadFit": [[131, null]], "mymesh.curvature.ShapeCategory": [[132, null]], "mymesh.curvature.ShapeIndex": [[133, null]], "mymesh.delaunay": [[16, null]], "mymesh.delaunay.BowyerWatson2d": [[134, null]], "mymesh.delaunay.BowyerWatson3d": [[135, null]], "mymesh.delaunay.ConvexHull": [[136, null]], "mymesh.delaunay.ConvexHullFanTriangulation": [[137, null]], "mymesh.delaunay.ConvexHull_GiftWrapping": [[138, null]], "mymesh.delaunay.SciPy": [[139, null]], "mymesh.delaunay.Triangle": [[140, null]], "mymesh.delaunay.TriangleSplittingTriangulation": [[141, null]], "mymesh.delaunay.Triangulate": [[142, null]], "mymesh.image": [[17, null]], "mymesh.image.SurfaceMesh": [[143, null]], "mymesh.image.SurfaceNodeOptimization": [[144, null]], "mymesh.image.TetMesh": [[145, null]], "mymesh.image.VoxelMesh": [[146, null]], "mymesh.image.read": [[147, null]], "mymesh.image.write": [[148, null]], "mymesh.implicit": [[18, null]], "mymesh.implicit.SurfaceMesh": [[149, null]], "mymesh.implicit.SurfaceNodeOptimization": [[150, null]], "mymesh.implicit.TetMesh": [[151, null]], "mymesh.implicit.VoxelMesh": [[152, null]], "mymesh.implicit.box": [[153, null]], "mymesh.implicit.cylinder": [[154, null]], "mymesh.implicit.diamond": [[155, null]], "mymesh.implicit.diff": [[156, null]], "mymesh.implicit.difff": [[157, null]], "mymesh.implicit.diffs": [[158, null]], "mymesh.implicit.grid2fun": [[159, null]], "mymesh.implicit.grid2grad": [[160, null]], "mymesh.implicit.gyroid": [[161, null]], "mymesh.implicit.intersection": [[162, null]], "mymesh.implicit.intersectionf": [[163, null]], "mymesh.implicit.intersections": [[164, null]], "mymesh.implicit.lidinoid": [[165, null]], "mymesh.implicit.mesh2sdf": [[166, null]], "mymesh.implicit.mesh2udf": [[167, null]], "mymesh.implicit.neovius": [[168, null]], "mymesh.implicit.offset": [[169, null]], "mymesh.implicit.primitive": [[170, null]], "mymesh.implicit.rMax": [[171, null]], "mymesh.implicit.rMin": [[172, null]], "mymesh.implicit.sphere": [[173, null]], "mymesh.implicit.thicken": [[174, null]], "mymesh.implicit.thickenf": [[175, null]], "mymesh.implicit.thickens": [[176, null]], "mymesh.implicit.torus": [[177, null]], "mymesh.implicit.union": [[178, null]], "mymesh.implicit.unionf": [[179, null]], "mymesh.implicit.unions": [[180, null]], "mymesh.implicit.xplane": [[181, null]], "mymesh.implicit.yplane": [[182, null]], "mymesh.implicit.zplane": [[183, null]], "mymesh.improvement": [[19, null]], "mymesh.improvement.GeoTransformSmoothing": [[184, null]], "mymesh.improvement.LocalLaplacianSmoothing": [[185, null]], "mymesh.improvement.NodeSpringSmoothing": [[186, null]], "mymesh.improvement.SegmentSpringSmoothing": [[187, null]], "mymesh.improvement.SmartLaplacianSmoothing": [[188, null]], "mymesh.improvement.TangentialLaplacianSmoothing": [[189, null]], "mymesh.improvement.TetContract": [[190, null]], "mymesh.improvement.TetFlip": [[191, null]], "mymesh.improvement.TetImprove": [[192, null]], "mymesh.improvement.TetSplit": [[193, null]], "mymesh.mesh": [[20, null]], "mymesh.mesh.mesh.BoundaryConn": [[21, null]], "mymesh.mesh.mesh.BoundaryNodes": [[22, null]], "mymesh.mesh.mesh.Centroids": [[23, null]], "mymesh.mesh.mesh.Clip": [[24, null]], "mymesh.mesh.mesh.Contour": [[25, null]], "mymesh.mesh.mesh.CreateBoundaryLayer": [[26, null]], "mymesh.mesh.mesh.Crop": [[27, null]], "mymesh.mesh.mesh.EdgeConn": [[28, null]], "mymesh.mesh.mesh.EdgeElemConn": [[29, null]], "mymesh.mesh.mesh.Edges": [[30, null]], "mymesh.mesh.mesh.ElemConn": [[31, null]], "mymesh.mesh.mesh.ElemNeighbors": [[32, null]], "mymesh.mesh.mesh.ElemNormals": [[33, null]], "mymesh.mesh.mesh.EulerCharacteristic": [[34, null]], "mymesh.mesh.mesh.FaceConn": [[35, null]], "mymesh.mesh.mesh.FaceElemConn": [[36, null]], "mymesh.mesh.mesh.Faces": [[37, null]], "mymesh.mesh.mesh.Genus": [[38, null]], "mymesh.mesh.mesh.Mirror": [[39, null]], "mymesh.mesh.mesh.ND": [[40, null]], "mymesh.mesh.mesh.NEdge": [[41, null]], "mymesh.mesh.mesh.NElem": [[42, null]], "mymesh.mesh.mesh.NFace": [[43, null]], "mymesh.mesh.mesh.NNode": [[44, null]], "mymesh.mesh.mesh.NodeNeighbors": [[45, null]], "mymesh.mesh.mesh.NodeNormals": [[46, null]], "mymesh.mesh.mesh.NodeNormalsMethod": [[47, null]], "mymesh.mesh.mesh.RenumberFacesBySet": [[48, null]], "mymesh.mesh.mesh.RenumberNodesBySet": [[49, null]], "mymesh.mesh.mesh.SurfConn": [[50, null]], "mymesh.mesh.mesh.SurfElemConn": [[51, null]], "mymesh.mesh.mesh.SurfNodeNeighbors": [[52, null]], "mymesh.mesh.mesh.SurfNodes": [[53, null]], "mymesh.mesh.mesh.Surface": [[54, null]], "mymesh.mesh.mesh.Threshold": [[55, null]], "mymesh.mesh.mesh.addEdges": [[56, null]], "mymesh.mesh.mesh.addElems": [[57, null]], "mymesh.mesh.mesh.addFaces": [[58, null]], "mymesh.mesh.mesh.addNodes": [[59, null]], "mymesh.mesh.mesh.cells": [[60, null]], "mymesh.mesh.mesh.cleanup": [[61, null]], "mymesh.mesh.mesh.copy": [[62, null]], "mymesh.mesh.mesh.getCurvature": [[63, null]], "mymesh.mesh.mesh.getQuality": [[64, null]], "mymesh.mesh.mesh.identify_type": [[65, null]], "mymesh.mesh.mesh.imread": [[66, null]], "mymesh.mesh.mesh.merge": [[67, null]], "mymesh.mesh.mesh.meshio2mymesh": [[68, null]], "mymesh.mesh.mesh.mymesh2meshio": [[69, null]], "mymesh.mesh.mesh.plot": [[70, null]], "mymesh.mesh.mesh.points": [[71, null]], "mymesh.mesh.mesh.read": [[72, null]], "mymesh.mesh.mesh.removeElems": [[73, null]], "mymesh.mesh.mesh.reset": [[74, null]], "mymesh.mesh.mesh.validate": [[75, null]], "mymesh.mesh.mesh.view": [[76, null]], "mymesh.mesh.mesh.write": [[77, null]], "mymesh.octree": [[78, null]], "mymesh.octree.Function2Octree": [[194, null]], "mymesh.octree.Octree2Dual": [[195, null]], "mymesh.octree.Octree2Voxel": [[196, null]], "mymesh.octree.Points2Octree": [[197, null]], "mymesh.octree.Print": [[198, null]], "mymesh.octree.SearchOctree": [[199, null]], "mymesh.octree.SearchOctreeTri": [[200, null]], "mymesh.octree.Surface2Octree": [[201, null]], "mymesh.octree.Voxel2Octree": [[202, null]], "mymesh.octree.getAllLeaf": [[203, null]], "mymesh.primitives": [[79, null]], "mymesh.primitives.Box": [[204, null]], "mymesh.primitives.Circle": [[205, null]], "mymesh.primitives.CirclePt": [[206, null]], "mymesh.primitives.Cylinder": [[207, null]], "mymesh.primitives.Extrude": [[208, null]], "mymesh.primitives.Grid": [[209, null]], "mymesh.primitives.Grid2D": [[210, null]], "mymesh.primitives.Line": [[211, null]], "mymesh.primitives.Plane": [[212, null]], "mymesh.primitives.Revolve": [[213, null]], "mymesh.primitives.Sphere": [[214, null]], "mymesh.primitives.Torus": [[215, null]], "mymesh.quality": [[80, null]], "mymesh.quality.Area": [[216, null]], "mymesh.quality.AspectRatio": [[217, null]], "mymesh.quality.InverseOrthogonalQuality": [[218, null]], "mymesh.quality.InverseOrthogonality": [[219, null]], "mymesh.quality.MaxDihedral": [[220, null]], "mymesh.quality.MeanRatio": [[221, null]], "mymesh.quality.MinDihedral": [[222, null]], "mymesh.quality.OrthogonalQuality": [[223, null]], "mymesh.quality.Orthogonality": [[224, null]], "mymesh.quality.Skewness": [[225, null]], "mymesh.quality.SurfDihedralAngles": [[226, null]], "mymesh.quality.Volume": [[227, null]], "mymesh.quality.dihedralAngles": [[228, null]], "mymesh.quality.equiangular_skewness": [[229, null]], "mymesh.quality.quad_skewness": [[230, null]], "mymesh.quality.tet_vol_skewness": [[231, null]], "mymesh.quality.tri_skewness": [[232, null]], "mymesh.rays": [[81, null]], "mymesh.rays.BoundaryBoundaryIntersection": [[233, null]], "mymesh.rays.BoxTrianglesIntersection": [[234, null]], "mymesh.rays.PlaneBoxIntersection": [[235, null]], "mymesh.rays.PlaneSurfIntersection": [[236, null]], "mymesh.rays.PlaneTriangleIntersection": [[237, null]], "mymesh.rays.PlaneTrianglesIntersection": [[238, null]], "mymesh.rays.PointInBoundary": [[239, null]], "mymesh.rays.PointInBox": [[240, null]], "mymesh.rays.PointInSurf": [[241, null]], "mymesh.rays.PointInTri": [[242, null]], "mymesh.rays.PointsInSurf": [[243, null]], "mymesh.rays.PointsInTris": [[244, null]], "mymesh.rays.PointsInVoxel": [[245, null]], "mymesh.rays.RayBoxIntersection": [[246, null]], "mymesh.rays.RayBoxesIntersection": [[247, null]], "mymesh.rays.RayOctreeIntersection": [[248, null]], "mymesh.rays.RaySegmentIntersection": [[249, null]], "mymesh.rays.RaySegmentsIntersection": [[250, null]], "mymesh.rays.RaySurfIntersection": [[251, null]], "mymesh.rays.RayTriangleIntersection": [[252, null]], "mymesh.rays.RayTrianglesIntersection": [[253, null]], "mymesh.rays.RaysSurfIntersection": [[254, null]], "mymesh.rays.RaysTrianglesIntersection": [[255, null]], "mymesh.rays.SegmentSegmentIntersection": [[256, null]], "mymesh.rays.SegmentsSegmentsIntersection": [[257, null]], "mymesh.rays.SurfSelfIntersection": [[258, null]], "mymesh.rays.SurfSurfIntersection": [[259, null]], "mymesh.rays.TriangleBoxIntersection": [[260, null]], "mymesh.rays.TriangleTriangleIntersection": [[261, null]], "mymesh.rays.TriangleTriangleIntersectionPt": [[262, null]], "mymesh.rays.TrianglesTrianglesIntersection": [[263, null]], "mymesh.rays.TrianglesTrianglesIntersectionPts": [[264, null]], "mymesh.utils": [[82, null]], "mymesh.utils.AABB": [[265, null]], "mymesh.utils.BaryTet": [[266, null]], "mymesh.utils.BaryTri": [[267, null]], "mymesh.utils.BaryTris": [[268, null]], "mymesh.utils.CalcFaceNormal": [[269, null]], "mymesh.utils.Centroids": [[270, null]], "mymesh.utils.CleanupDegenerateElements": [[271, null]], "mymesh.utils.DeleteDegenerateElements": [[272, null]], "mymesh.utils.DeleteDuplicateNodes": [[273, null]], "mymesh.utils.DetectFeatures": [[274, null]], "mymesh.utils.DilateVoxel": [[275, null]], "mymesh.utils.ErodeVoxel": [[276, null]], "mymesh.utils.ExtractRagged": [[277, null]], "mymesh.utils.Face2NodeNormal": [[278, null]], "mymesh.utils.MVBB": [[279, null]], "mymesh.utils.MergeMesh": [[280, null]], "mymesh.utils.MirrorMesh": [[281, null]], "mymesh.utils.PadRagged": [[282, null]], "mymesh.utils.Project2Surface": [[283, null]], "mymesh.utils.RelabelNodes": [[284, null]], "mymesh.utils.SortRaggedByLength": [[285, null]], "mymesh.utils.SplitRaggedByLength": [[286, null]], "mymesh.utils.SurfMapping": [[287, null]], "mymesh.utils.TetMeshVol": [[288, null]], "mymesh.utils.TriSurfVol": [[289, null]], "mymesh.utils.ValueMapping": [[290, null]], "mymesh.utils.getConnectedElements": [[291, null]], "mymesh.utils.getConnectedNodes": [[292, null]], "mymesh.utils.getElemConnectivity": [[293, null]], "mymesh.utils.getElemNeighbors": [[294, null]], "mymesh.utils.getNodeNeighborhood": [[295, null]], "mymesh.utils.getNodeNeighborhoodByRadius": [[296, null]], "mymesh.utils.getNodeNeighbors": [[297, null]], "mymesh.utils.identify_type": [[298, null]], "mymesh.utils.makePyramidLayer": [[299, null]], "mymesh.visualize": [[83, null]], "mymesh.visualize.FaceColor": [[300, null]], "mymesh.visualize.GetTheme": [[301, null]], "mymesh.visualize.ParseColor": [[302, null]], "mymesh.visualize.View": [[303, null]], "mymesh.visualize.set_vispy_backend": [[304, null]]}, "docnames": ["api", "dev", "examples/MeshAnalysis/demo_curvature", "examples/MeshAnalysis/index", "examples/MeshAnalysis/sg_execution_times", "examples/MeshGeneration/demo_heart", "examples/MeshGeneration/demo_mixed-top", "examples/MeshGeneration/demo_pasta", "examples/MeshGeneration/index", "examples/MeshGeneration/sg_execution_times", "examples/index", "examples/sg_execution_times", "generated/mymesh.booleans", "generated/mymesh.contour", "generated/mymesh.converter", "generated/mymesh.curvature", "generated/mymesh.delaunay", "generated/mymesh.image", "generated/mymesh.implicit", "generated/mymesh.improvement", "generated/mymesh.mesh", "generated/mymesh.mesh.mesh.BoundaryConn", "generated/mymesh.mesh.mesh.BoundaryNodes", "generated/mymesh.mesh.mesh.Centroids", "generated/mymesh.mesh.mesh.Clip", "generated/mymesh.mesh.mesh.Contour", "generated/mymesh.mesh.mesh.CreateBoundaryLayer", "generated/mymesh.mesh.mesh.Crop", "generated/mymesh.mesh.mesh.EdgeConn", "generated/mymesh.mesh.mesh.EdgeElemConn", "generated/mymesh.mesh.mesh.Edges", "generated/mymesh.mesh.mesh.ElemConn", "generated/mymesh.mesh.mesh.ElemNeighbors", "generated/mymesh.mesh.mesh.ElemNormals", "generated/mymesh.mesh.mesh.EulerCharacteristic", "generated/mymesh.mesh.mesh.FaceConn", "generated/mymesh.mesh.mesh.FaceElemConn", "generated/mymesh.mesh.mesh.Faces", "generated/mymesh.mesh.mesh.Genus", "generated/mymesh.mesh.mesh.Mirror", "generated/mymesh.mesh.mesh.ND", "generated/mymesh.mesh.mesh.NEdge", "generated/mymesh.mesh.mesh.NElem", "generated/mymesh.mesh.mesh.NFace", "generated/mymesh.mesh.mesh.NNode", "generated/mymesh.mesh.mesh.NodeNeighbors", "generated/mymesh.mesh.mesh.NodeNormals", "generated/mymesh.mesh.mesh.NodeNormalsMethod", "generated/mymesh.mesh.mesh.RenumberFacesBySet", "generated/mymesh.mesh.mesh.RenumberNodesBySet", "generated/mymesh.mesh.mesh.SurfConn", "generated/mymesh.mesh.mesh.SurfElemConn", "generated/mymesh.mesh.mesh.SurfNodeNeighbors", "generated/mymesh.mesh.mesh.SurfNodes", "generated/mymesh.mesh.mesh.Surface", "generated/mymesh.mesh.mesh.Threshold", "generated/mymesh.mesh.mesh.addEdges", "generated/mymesh.mesh.mesh.addElems", "generated/mymesh.mesh.mesh.addFaces", "generated/mymesh.mesh.mesh.addNodes", "generated/mymesh.mesh.mesh.cells", "generated/mymesh.mesh.mesh.cleanup", "generated/mymesh.mesh.mesh.copy", "generated/mymesh.mesh.mesh.getCurvature", "generated/mymesh.mesh.mesh.getQuality", "generated/mymesh.mesh.mesh.identify_type", "generated/mymesh.mesh.mesh.imread", "generated/mymesh.mesh.mesh.merge", "generated/mymesh.mesh.mesh.meshio2mymesh", "generated/mymesh.mesh.mesh.mymesh2meshio", "generated/mymesh.mesh.mesh.plot", "generated/mymesh.mesh.mesh.points", "generated/mymesh.mesh.mesh.read", "generated/mymesh.mesh.mesh.removeElems", "generated/mymesh.mesh.mesh.reset", "generated/mymesh.mesh.mesh.validate", "generated/mymesh.mesh.mesh.view", "generated/mymesh.mesh.mesh.write", "generated/mymesh.octree", "generated/mymesh.primitives", "generated/mymesh.quality", "generated/mymesh.rays", "generated/mymesh.utils", "generated/mymesh.visualize", "generated/submodules/mymesh.booleans.MeshBooleans", "generated/submodules/mymesh.booleans.SplitMesh", "generated/submodules/mymesh.contour.Adaptive", "generated/submodules/mymesh.contour.MarchingCubes", "generated/submodules/mymesh.contour.MarchingCubesImage", "generated/submodules/mymesh.contour.MarchingSquares", "generated/submodules/mymesh.contour.MarchingSquaresImage", "generated/submodules/mymesh.contour.MarchingTetrahedra", "generated/submodules/mymesh.converter.EdgesByElement", "generated/submodules/mymesh.converter.edges2unique", "generated/submodules/mymesh.converter.faces2surface", "generated/submodules/mymesh.converter.faces2unique", "generated/submodules/mymesh.converter.hex2edges", "generated/submodules/mymesh.converter.hex2faces", "generated/submodules/mymesh.converter.hex2tet", "generated/submodules/mymesh.converter.hexsubdivide", "generated/submodules/mymesh.converter.im2voxel", "generated/submodules/mymesh.converter.polygon2edges", "generated/submodules/mymesh.converter.pyramid2edges", "generated/submodules/mymesh.converter.pyramid2faces", "generated/submodules/mymesh.converter.pyramid2tet", "generated/submodules/mymesh.converter.quad2edges", "generated/submodules/mymesh.converter.quad2tri", "generated/submodules/mymesh.converter.solid2edges", "generated/submodules/mymesh.converter.solid2faces", "generated/submodules/mymesh.converter.solid2surface", "generated/submodules/mymesh.converter.solid2tets", "generated/submodules/mymesh.converter.surf2dual", "generated/submodules/mymesh.converter.surf2edges", "generated/submodules/mymesh.converter.surf2tris", "generated/submodules/mymesh.converter.surf2voxel", "generated/submodules/mymesh.converter.tet102tet4", "generated/submodules/mymesh.converter.tet2edges", "generated/submodules/mymesh.converter.tet2faces", "generated/submodules/mymesh.converter.tet42tet10", "generated/submodules/mymesh.converter.tri2edges", "generated/submodules/mymesh.converter.voxel2im", "generated/submodules/mymesh.converter.wedge2edges", "generated/submodules/mymesh.converter.wedge2faces", "generated/submodules/mymesh.converter.wedge2tet", "generated/submodules/mymesh.curvature.AnalyticalCurvature", "generated/submodules/mymesh.curvature.CubicFit", "generated/submodules/mymesh.curvature.Curvedness", "generated/submodules/mymesh.curvature.GaussianCurvature", "generated/submodules/mymesh.curvature.ImageCurvature", "generated/submodules/mymesh.curvature.MeanCurvature", "generated/submodules/mymesh.curvature.NormCurve", "generated/submodules/mymesh.curvature.QuadFit", "generated/submodules/mymesh.curvature.ShapeCategory", "generated/submodules/mymesh.curvature.ShapeIndex", "generated/submodules/mymesh.delaunay.BowyerWatson2d", "generated/submodules/mymesh.delaunay.BowyerWatson3d", "generated/submodules/mymesh.delaunay.ConvexHull", "generated/submodules/mymesh.delaunay.ConvexHullFanTriangulation", "generated/submodules/mymesh.delaunay.ConvexHull_GiftWrapping", "generated/submodules/mymesh.delaunay.SciPy", "generated/submodules/mymesh.delaunay.Triangle", "generated/submodules/mymesh.delaunay.TriangleSplittingTriangulation", "generated/submodules/mymesh.delaunay.Triangulate", "generated/submodules/mymesh.image.SurfaceMesh", "generated/submodules/mymesh.image.SurfaceNodeOptimization", "generated/submodules/mymesh.image.TetMesh", "generated/submodules/mymesh.image.VoxelMesh", "generated/submodules/mymesh.image.read", "generated/submodules/mymesh.image.write", "generated/submodules/mymesh.implicit.SurfaceMesh", "generated/submodules/mymesh.implicit.SurfaceNodeOptimization", "generated/submodules/mymesh.implicit.TetMesh", "generated/submodules/mymesh.implicit.VoxelMesh", "generated/submodules/mymesh.implicit.box", "generated/submodules/mymesh.implicit.cylinder", "generated/submodules/mymesh.implicit.diamond", "generated/submodules/mymesh.implicit.diff", "generated/submodules/mymesh.implicit.difff", "generated/submodules/mymesh.implicit.diffs", "generated/submodules/mymesh.implicit.grid2fun", "generated/submodules/mymesh.implicit.grid2grad", "generated/submodules/mymesh.implicit.gyroid", "generated/submodules/mymesh.implicit.intersection", "generated/submodules/mymesh.implicit.intersectionf", "generated/submodules/mymesh.implicit.intersections", "generated/submodules/mymesh.implicit.lidinoid", "generated/submodules/mymesh.implicit.mesh2sdf", "generated/submodules/mymesh.implicit.mesh2udf", "generated/submodules/mymesh.implicit.neovius", "generated/submodules/mymesh.implicit.offset", "generated/submodules/mymesh.implicit.primitive", "generated/submodules/mymesh.implicit.rMax", "generated/submodules/mymesh.implicit.rMin", "generated/submodules/mymesh.implicit.sphere", "generated/submodules/mymesh.implicit.thicken", "generated/submodules/mymesh.implicit.thickenf", "generated/submodules/mymesh.implicit.thickens", "generated/submodules/mymesh.implicit.torus", "generated/submodules/mymesh.implicit.union", "generated/submodules/mymesh.implicit.unionf", "generated/submodules/mymesh.implicit.unions", "generated/submodules/mymesh.implicit.xplane", "generated/submodules/mymesh.implicit.yplane", "generated/submodules/mymesh.implicit.zplane", "generated/submodules/mymesh.improvement.GeoTransformSmoothing", "generated/submodules/mymesh.improvement.LocalLaplacianSmoothing", "generated/submodules/mymesh.improvement.NodeSpringSmoothing", "generated/submodules/mymesh.improvement.SegmentSpringSmoothing", "generated/submodules/mymesh.improvement.SmartLaplacianSmoothing", "generated/submodules/mymesh.improvement.TangentialLaplacianSmoothing", "generated/submodules/mymesh.improvement.TetContract", "generated/submodules/mymesh.improvement.TetFlip", "generated/submodules/mymesh.improvement.TetImprove", "generated/submodules/mymesh.improvement.TetSplit", "generated/submodules/mymesh.octree.Function2Octree", "generated/submodules/mymesh.octree.Octree2Dual", "generated/submodules/mymesh.octree.Octree2Voxel", "generated/submodules/mymesh.octree.Points2Octree", "generated/submodules/mymesh.octree.Print", "generated/submodules/mymesh.octree.SearchOctree", "generated/submodules/mymesh.octree.SearchOctreeTri", "generated/submodules/mymesh.octree.Surface2Octree", "generated/submodules/mymesh.octree.Voxel2Octree", "generated/submodules/mymesh.octree.getAllLeaf", "generated/submodules/mymesh.primitives.Box", "generated/submodules/mymesh.primitives.Circle", "generated/submodules/mymesh.primitives.CirclePt", "generated/submodules/mymesh.primitives.Cylinder", "generated/submodules/mymesh.primitives.Extrude", "generated/submodules/mymesh.primitives.Grid", "generated/submodules/mymesh.primitives.Grid2D", "generated/submodules/mymesh.primitives.Line", "generated/submodules/mymesh.primitives.Plane", "generated/submodules/mymesh.primitives.Revolve", "generated/submodules/mymesh.primitives.Sphere", "generated/submodules/mymesh.primitives.Torus", "generated/submodules/mymesh.quality.Area", "generated/submodules/mymesh.quality.AspectRatio", "generated/submodules/mymesh.quality.InverseOrthogonalQuality", "generated/submodules/mymesh.quality.InverseOrthogonality", "generated/submodules/mymesh.quality.MaxDihedral", "generated/submodules/mymesh.quality.MeanRatio", "generated/submodules/mymesh.quality.MinDihedral", "generated/submodules/mymesh.quality.OrthogonalQuality", "generated/submodules/mymesh.quality.Orthogonality", "generated/submodules/mymesh.quality.Skewness", "generated/submodules/mymesh.quality.SurfDihedralAngles", "generated/submodules/mymesh.quality.Volume", "generated/submodules/mymesh.quality.dihedralAngles", "generated/submodules/mymesh.quality.equiangular_skewness", "generated/submodules/mymesh.quality.quad_skewness", "generated/submodules/mymesh.quality.tet_vol_skewness", "generated/submodules/mymesh.quality.tri_skewness", "generated/submodules/mymesh.rays.BoundaryBoundaryIntersection", "generated/submodules/mymesh.rays.BoxTrianglesIntersection", "generated/submodules/mymesh.rays.PlaneBoxIntersection", "generated/submodules/mymesh.rays.PlaneSurfIntersection", "generated/submodules/mymesh.rays.PlaneTriangleIntersection", "generated/submodules/mymesh.rays.PlaneTrianglesIntersection", "generated/submodules/mymesh.rays.PointInBoundary", "generated/submodules/mymesh.rays.PointInBox", "generated/submodules/mymesh.rays.PointInSurf", "generated/submodules/mymesh.rays.PointInTri", "generated/submodules/mymesh.rays.PointsInSurf", "generated/submodules/mymesh.rays.PointsInTris", "generated/submodules/mymesh.rays.PointsInVoxel", "generated/submodules/mymesh.rays.RayBoxIntersection", "generated/submodules/mymesh.rays.RayBoxesIntersection", "generated/submodules/mymesh.rays.RayOctreeIntersection", "generated/submodules/mymesh.rays.RaySegmentIntersection", "generated/submodules/mymesh.rays.RaySegmentsIntersection", "generated/submodules/mymesh.rays.RaySurfIntersection", "generated/submodules/mymesh.rays.RayTriangleIntersection", "generated/submodules/mymesh.rays.RayTrianglesIntersection", "generated/submodules/mymesh.rays.RaysSurfIntersection", "generated/submodules/mymesh.rays.RaysTrianglesIntersection", "generated/submodules/mymesh.rays.SegmentSegmentIntersection", "generated/submodules/mymesh.rays.SegmentsSegmentsIntersection", "generated/submodules/mymesh.rays.SurfSelfIntersection", "generated/submodules/mymesh.rays.SurfSurfIntersection", "generated/submodules/mymesh.rays.TriangleBoxIntersection", "generated/submodules/mymesh.rays.TriangleTriangleIntersection", "generated/submodules/mymesh.rays.TriangleTriangleIntersectionPt", "generated/submodules/mymesh.rays.TrianglesTrianglesIntersection", "generated/submodules/mymesh.rays.TrianglesTrianglesIntersectionPts", "generated/submodules/mymesh.utils.AABB", "generated/submodules/mymesh.utils.BaryTet", "generated/submodules/mymesh.utils.BaryTri", "generated/submodules/mymesh.utils.BaryTris", "generated/submodules/mymesh.utils.CalcFaceNormal", "generated/submodules/mymesh.utils.Centroids", "generated/submodules/mymesh.utils.CleanupDegenerateElements", "generated/submodules/mymesh.utils.DeleteDegenerateElements", "generated/submodules/mymesh.utils.DeleteDuplicateNodes", "generated/submodules/mymesh.utils.DetectFeatures", "generated/submodules/mymesh.utils.DilateVoxel", "generated/submodules/mymesh.utils.ErodeVoxel", "generated/submodules/mymesh.utils.ExtractRagged", "generated/submodules/mymesh.utils.Face2NodeNormal", "generated/submodules/mymesh.utils.MVBB", "generated/submodules/mymesh.utils.MergeMesh", "generated/submodules/mymesh.utils.MirrorMesh", "generated/submodules/mymesh.utils.PadRagged", "generated/submodules/mymesh.utils.Project2Surface", "generated/submodules/mymesh.utils.RelabelNodes", "generated/submodules/mymesh.utils.SortRaggedByLength", "generated/submodules/mymesh.utils.SplitRaggedByLength", "generated/submodules/mymesh.utils.SurfMapping", "generated/submodules/mymesh.utils.TetMeshVol", "generated/submodules/mymesh.utils.TriSurfVol", "generated/submodules/mymesh.utils.ValueMapping", "generated/submodules/mymesh.utils.getConnectedElements", "generated/submodules/mymesh.utils.getConnectedNodes", "generated/submodules/mymesh.utils.getElemConnectivity", "generated/submodules/mymesh.utils.getElemNeighbors", "generated/submodules/mymesh.utils.getNodeNeighborhood", "generated/submodules/mymesh.utils.getNodeNeighborhoodByRadius", "generated/submodules/mymesh.utils.getNodeNeighbors", "generated/submodules/mymesh.utils.identify_type", "generated/submodules/mymesh.utils.makePyramidLayer", "generated/submodules/mymesh.visualize.FaceColor", "generated/submodules/mymesh.visualize.GetTheme", "generated/submodules/mymesh.visualize.ParseColor", "generated/submodules/mymesh.visualize.View", "generated/submodules/mymesh.visualize.set_vispy_backend", "guide", "guide/connectivity", "guide/csg", "guide/elem_types", "guide/image_meshing", "guide/implicit_meshing", "guide/installation", "guide/io", "guide/matlab", "guide/mesh_class", "guide/ref", "guide/what_mesh", "index", "sg_execution_times", "theory", "theory/contour", "theory/curvature", "theory/delaunay", "theory/flips23", "theory/implicit", "theory/improvement", "theory/octree", "theory/rays", "theory/springsmooth"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["api.rst", "dev.rst", "examples/MeshAnalysis/demo_curvature.rst", "examples/MeshAnalysis/index.rst", "examples/MeshAnalysis/sg_execution_times.rst", "examples/MeshGeneration/demo_heart.rst", "examples/MeshGeneration/demo_mixed-top.rst", "examples/MeshGeneration/demo_pasta.rst", "examples/MeshGeneration/index.rst", "examples/MeshGeneration/sg_execution_times.rst", "examples/index.rst", "examples/sg_execution_times.rst", "generated/mymesh.booleans.rst", "generated/mymesh.contour.rst", "generated/mymesh.converter.rst", "generated/mymesh.curvature.rst", "generated/mymesh.delaunay.rst", "generated/mymesh.image.rst", "generated/mymesh.implicit.rst", "generated/mymesh.improvement.rst", "generated/mymesh.mesh.rst", "generated/mymesh.mesh.mesh.BoundaryConn.rst", "generated/mymesh.mesh.mesh.BoundaryNodes.rst", "generated/mymesh.mesh.mesh.Centroids.rst", "generated/mymesh.mesh.mesh.Clip.rst", "generated/mymesh.mesh.mesh.Contour.rst", "generated/mymesh.mesh.mesh.CreateBoundaryLayer.rst", "generated/mymesh.mesh.mesh.Crop.rst", "generated/mymesh.mesh.mesh.EdgeConn.rst", "generated/mymesh.mesh.mesh.EdgeElemConn.rst", "generated/mymesh.mesh.mesh.Edges.rst", "generated/mymesh.mesh.mesh.ElemConn.rst", "generated/mymesh.mesh.mesh.ElemNeighbors.rst", "generated/mymesh.mesh.mesh.ElemNormals.rst", "generated/mymesh.mesh.mesh.EulerCharacteristic.rst", "generated/mymesh.mesh.mesh.FaceConn.rst", "generated/mymesh.mesh.mesh.FaceElemConn.rst", "generated/mymesh.mesh.mesh.Faces.rst", "generated/mymesh.mesh.mesh.Genus.rst", "generated/mymesh.mesh.mesh.Mirror.rst", "generated/mymesh.mesh.mesh.ND.rst", "generated/mymesh.mesh.mesh.NEdge.rst", "generated/mymesh.mesh.mesh.NElem.rst", "generated/mymesh.mesh.mesh.NFace.rst", "generated/mymesh.mesh.mesh.NNode.rst", "generated/mymesh.mesh.mesh.NodeNeighbors.rst", "generated/mymesh.mesh.mesh.NodeNormals.rst", "generated/mymesh.mesh.mesh.NodeNormalsMethod.rst", "generated/mymesh.mesh.mesh.RenumberFacesBySet.rst", "generated/mymesh.mesh.mesh.RenumberNodesBySet.rst", "generated/mymesh.mesh.mesh.SurfConn.rst", "generated/mymesh.mesh.mesh.SurfElemConn.rst", "generated/mymesh.mesh.mesh.SurfNodeNeighbors.rst", "generated/mymesh.mesh.mesh.SurfNodes.rst", "generated/mymesh.mesh.mesh.Surface.rst", "generated/mymesh.mesh.mesh.Threshold.rst", "generated/mymesh.mesh.mesh.addEdges.rst", "generated/mymesh.mesh.mesh.addElems.rst", "generated/mymesh.mesh.mesh.addFaces.rst", "generated/mymesh.mesh.mesh.addNodes.rst", "generated/mymesh.mesh.mesh.cells.rst", "generated/mymesh.mesh.mesh.cleanup.rst", "generated/mymesh.mesh.mesh.copy.rst", "generated/mymesh.mesh.mesh.getCurvature.rst", "generated/mymesh.mesh.mesh.getQuality.rst", "generated/mymesh.mesh.mesh.identify_type.rst", "generated/mymesh.mesh.mesh.imread.rst", "generated/mymesh.mesh.mesh.merge.rst", "generated/mymesh.mesh.mesh.meshio2mymesh.rst", "generated/mymesh.mesh.mesh.mymesh2meshio.rst", "generated/mymesh.mesh.mesh.plot.rst", "generated/mymesh.mesh.mesh.points.rst", "generated/mymesh.mesh.mesh.read.rst", "generated/mymesh.mesh.mesh.removeElems.rst", "generated/mymesh.mesh.mesh.reset.rst", "generated/mymesh.mesh.mesh.validate.rst", "generated/mymesh.mesh.mesh.view.rst", "generated/mymesh.mesh.mesh.write.rst", "generated/mymesh.octree.rst", "generated/mymesh.primitives.rst", "generated/mymesh.quality.rst", "generated/mymesh.rays.rst", "generated/mymesh.utils.rst", "generated/mymesh.visualize.rst", "generated/submodules/mymesh.booleans.MeshBooleans.rst", "generated/submodules/mymesh.booleans.SplitMesh.rst", "generated/submodules/mymesh.contour.Adaptive.rst", "generated/submodules/mymesh.contour.MarchingCubes.rst", "generated/submodules/mymesh.contour.MarchingCubesImage.rst", "generated/submodules/mymesh.contour.MarchingSquares.rst", "generated/submodules/mymesh.contour.MarchingSquaresImage.rst", "generated/submodules/mymesh.contour.MarchingTetrahedra.rst", "generated/submodules/mymesh.converter.EdgesByElement.rst", "generated/submodules/mymesh.converter.edges2unique.rst", "generated/submodules/mymesh.converter.faces2surface.rst", "generated/submodules/mymesh.converter.faces2unique.rst", "generated/submodules/mymesh.converter.hex2edges.rst", "generated/submodules/mymesh.converter.hex2faces.rst", "generated/submodules/mymesh.converter.hex2tet.rst", "generated/submodules/mymesh.converter.hexsubdivide.rst", "generated/submodules/mymesh.converter.im2voxel.rst", "generated/submodules/mymesh.converter.polygon2edges.rst", "generated/submodules/mymesh.converter.pyramid2edges.rst", "generated/submodules/mymesh.converter.pyramid2faces.rst", "generated/submodules/mymesh.converter.pyramid2tet.rst", "generated/submodules/mymesh.converter.quad2edges.rst", "generated/submodules/mymesh.converter.quad2tri.rst", "generated/submodules/mymesh.converter.solid2edges.rst", "generated/submodules/mymesh.converter.solid2faces.rst", "generated/submodules/mymesh.converter.solid2surface.rst", "generated/submodules/mymesh.converter.solid2tets.rst", "generated/submodules/mymesh.converter.surf2dual.rst", "generated/submodules/mymesh.converter.surf2edges.rst", "generated/submodules/mymesh.converter.surf2tris.rst", "generated/submodules/mymesh.converter.surf2voxel.rst", "generated/submodules/mymesh.converter.tet102tet4.rst", "generated/submodules/mymesh.converter.tet2edges.rst", "generated/submodules/mymesh.converter.tet2faces.rst", "generated/submodules/mymesh.converter.tet42tet10.rst", "generated/submodules/mymesh.converter.tri2edges.rst", "generated/submodules/mymesh.converter.voxel2im.rst", "generated/submodules/mymesh.converter.wedge2edges.rst", "generated/submodules/mymesh.converter.wedge2faces.rst", "generated/submodules/mymesh.converter.wedge2tet.rst", "generated/submodules/mymesh.curvature.AnalyticalCurvature.rst", "generated/submodules/mymesh.curvature.CubicFit.rst", "generated/submodules/mymesh.curvature.Curvedness.rst", "generated/submodules/mymesh.curvature.GaussianCurvature.rst", "generated/submodules/mymesh.curvature.ImageCurvature.rst", "generated/submodules/mymesh.curvature.MeanCurvature.rst", "generated/submodules/mymesh.curvature.NormCurve.rst", "generated/submodules/mymesh.curvature.QuadFit.rst", "generated/submodules/mymesh.curvature.ShapeCategory.rst", "generated/submodules/mymesh.curvature.ShapeIndex.rst", "generated/submodules/mymesh.delaunay.BowyerWatson2d.rst", "generated/submodules/mymesh.delaunay.BowyerWatson3d.rst", "generated/submodules/mymesh.delaunay.ConvexHull.rst", "generated/submodules/mymesh.delaunay.ConvexHullFanTriangulation.rst", "generated/submodules/mymesh.delaunay.ConvexHull_GiftWrapping.rst", "generated/submodules/mymesh.delaunay.SciPy.rst", "generated/submodules/mymesh.delaunay.Triangle.rst", "generated/submodules/mymesh.delaunay.TriangleSplittingTriangulation.rst", "generated/submodules/mymesh.delaunay.Triangulate.rst", "generated/submodules/mymesh.image.SurfaceMesh.rst", "generated/submodules/mymesh.image.SurfaceNodeOptimization.rst", "generated/submodules/mymesh.image.TetMesh.rst", "generated/submodules/mymesh.image.VoxelMesh.rst", "generated/submodules/mymesh.image.read.rst", "generated/submodules/mymesh.image.write.rst", "generated/submodules/mymesh.implicit.SurfaceMesh.rst", "generated/submodules/mymesh.implicit.SurfaceNodeOptimization.rst", "generated/submodules/mymesh.implicit.TetMesh.rst", "generated/submodules/mymesh.implicit.VoxelMesh.rst", "generated/submodules/mymesh.implicit.box.rst", "generated/submodules/mymesh.implicit.cylinder.rst", "generated/submodules/mymesh.implicit.diamond.rst", "generated/submodules/mymesh.implicit.diff.rst", "generated/submodules/mymesh.implicit.difff.rst", "generated/submodules/mymesh.implicit.diffs.rst", "generated/submodules/mymesh.implicit.grid2fun.rst", "generated/submodules/mymesh.implicit.grid2grad.rst", "generated/submodules/mymesh.implicit.gyroid.rst", "generated/submodules/mymesh.implicit.intersection.rst", "generated/submodules/mymesh.implicit.intersectionf.rst", "generated/submodules/mymesh.implicit.intersections.rst", "generated/submodules/mymesh.implicit.lidinoid.rst", "generated/submodules/mymesh.implicit.mesh2sdf.rst", "generated/submodules/mymesh.implicit.mesh2udf.rst", "generated/submodules/mymesh.implicit.neovius.rst", "generated/submodules/mymesh.implicit.offset.rst", "generated/submodules/mymesh.implicit.primitive.rst", "generated/submodules/mymesh.implicit.rMax.rst", "generated/submodules/mymesh.implicit.rMin.rst", "generated/submodules/mymesh.implicit.sphere.rst", "generated/submodules/mymesh.implicit.thicken.rst", "generated/submodules/mymesh.implicit.thickenf.rst", "generated/submodules/mymesh.implicit.thickens.rst", "generated/submodules/mymesh.implicit.torus.rst", "generated/submodules/mymesh.implicit.union.rst", "generated/submodules/mymesh.implicit.unionf.rst", "generated/submodules/mymesh.implicit.unions.rst", "generated/submodules/mymesh.implicit.xplane.rst", "generated/submodules/mymesh.implicit.yplane.rst", "generated/submodules/mymesh.implicit.zplane.rst", "generated/submodules/mymesh.improvement.GeoTransformSmoothing.rst", "generated/submodules/mymesh.improvement.LocalLaplacianSmoothing.rst", "generated/submodules/mymesh.improvement.NodeSpringSmoothing.rst", "generated/submodules/mymesh.improvement.SegmentSpringSmoothing.rst", "generated/submodules/mymesh.improvement.SmartLaplacianSmoothing.rst", "generated/submodules/mymesh.improvement.TangentialLaplacianSmoothing.rst", "generated/submodules/mymesh.improvement.TetContract.rst", "generated/submodules/mymesh.improvement.TetFlip.rst", "generated/submodules/mymesh.improvement.TetImprove.rst", "generated/submodules/mymesh.improvement.TetSplit.rst", "generated/submodules/mymesh.octree.Function2Octree.rst", "generated/submodules/mymesh.octree.Octree2Dual.rst", "generated/submodules/mymesh.octree.Octree2Voxel.rst", "generated/submodules/mymesh.octree.Points2Octree.rst", "generated/submodules/mymesh.octree.Print.rst", "generated/submodules/mymesh.octree.SearchOctree.rst", "generated/submodules/mymesh.octree.SearchOctreeTri.rst", "generated/submodules/mymesh.octree.Surface2Octree.rst", "generated/submodules/mymesh.octree.Voxel2Octree.rst", "generated/submodules/mymesh.octree.getAllLeaf.rst", "generated/submodules/mymesh.primitives.Box.rst", "generated/submodules/mymesh.primitives.Circle.rst", "generated/submodules/mymesh.primitives.CirclePt.rst", "generated/submodules/mymesh.primitives.Cylinder.rst", "generated/submodules/mymesh.primitives.Extrude.rst", "generated/submodules/mymesh.primitives.Grid.rst", "generated/submodules/mymesh.primitives.Grid2D.rst", "generated/submodules/mymesh.primitives.Line.rst", "generated/submodules/mymesh.primitives.Plane.rst", "generated/submodules/mymesh.primitives.Revolve.rst", "generated/submodules/mymesh.primitives.Sphere.rst", "generated/submodules/mymesh.primitives.Torus.rst", "generated/submodules/mymesh.quality.Area.rst", "generated/submodules/mymesh.quality.AspectRatio.rst", "generated/submodules/mymesh.quality.InverseOrthogonalQuality.rst", "generated/submodules/mymesh.quality.InverseOrthogonality.rst", "generated/submodules/mymesh.quality.MaxDihedral.rst", "generated/submodules/mymesh.quality.MeanRatio.rst", "generated/submodules/mymesh.quality.MinDihedral.rst", "generated/submodules/mymesh.quality.OrthogonalQuality.rst", "generated/submodules/mymesh.quality.Orthogonality.rst", "generated/submodules/mymesh.quality.Skewness.rst", "generated/submodules/mymesh.quality.SurfDihedralAngles.rst", "generated/submodules/mymesh.quality.Volume.rst", "generated/submodules/mymesh.quality.dihedralAngles.rst", "generated/submodules/mymesh.quality.equiangular_skewness.rst", "generated/submodules/mymesh.quality.quad_skewness.rst", "generated/submodules/mymesh.quality.tet_vol_skewness.rst", "generated/submodules/mymesh.quality.tri_skewness.rst", "generated/submodules/mymesh.rays.BoundaryBoundaryIntersection.rst", "generated/submodules/mymesh.rays.BoxTrianglesIntersection.rst", "generated/submodules/mymesh.rays.PlaneBoxIntersection.rst", "generated/submodules/mymesh.rays.PlaneSurfIntersection.rst", "generated/submodules/mymesh.rays.PlaneTriangleIntersection.rst", "generated/submodules/mymesh.rays.PlaneTrianglesIntersection.rst", "generated/submodules/mymesh.rays.PointInBoundary.rst", "generated/submodules/mymesh.rays.PointInBox.rst", "generated/submodules/mymesh.rays.PointInSurf.rst", "generated/submodules/mymesh.rays.PointInTri.rst", "generated/submodules/mymesh.rays.PointsInSurf.rst", "generated/submodules/mymesh.rays.PointsInTris.rst", "generated/submodules/mymesh.rays.PointsInVoxel.rst", "generated/submodules/mymesh.rays.RayBoxIntersection.rst", "generated/submodules/mymesh.rays.RayBoxesIntersection.rst", "generated/submodules/mymesh.rays.RayOctreeIntersection.rst", "generated/submodules/mymesh.rays.RaySegmentIntersection.rst", "generated/submodules/mymesh.rays.RaySegmentsIntersection.rst", "generated/submodules/mymesh.rays.RaySurfIntersection.rst", "generated/submodules/mymesh.rays.RayTriangleIntersection.rst", "generated/submodules/mymesh.rays.RayTrianglesIntersection.rst", "generated/submodules/mymesh.rays.RaysSurfIntersection.rst", "generated/submodules/mymesh.rays.RaysTrianglesIntersection.rst", "generated/submodules/mymesh.rays.SegmentSegmentIntersection.rst", "generated/submodules/mymesh.rays.SegmentsSegmentsIntersection.rst", "generated/submodules/mymesh.rays.SurfSelfIntersection.rst", "generated/submodules/mymesh.rays.SurfSurfIntersection.rst", "generated/submodules/mymesh.rays.TriangleBoxIntersection.rst", "generated/submodules/mymesh.rays.TriangleTriangleIntersection.rst", "generated/submodules/mymesh.rays.TriangleTriangleIntersectionPt.rst", "generated/submodules/mymesh.rays.TrianglesTrianglesIntersection.rst", "generated/submodules/mymesh.rays.TrianglesTrianglesIntersectionPts.rst", "generated/submodules/mymesh.utils.AABB.rst", "generated/submodules/mymesh.utils.BaryTet.rst", "generated/submodules/mymesh.utils.BaryTri.rst", "generated/submodules/mymesh.utils.BaryTris.rst", "generated/submodules/mymesh.utils.CalcFaceNormal.rst", "generated/submodules/mymesh.utils.Centroids.rst", "generated/submodules/mymesh.utils.CleanupDegenerateElements.rst", "generated/submodules/mymesh.utils.DeleteDegenerateElements.rst", "generated/submodules/mymesh.utils.DeleteDuplicateNodes.rst", "generated/submodules/mymesh.utils.DetectFeatures.rst", "generated/submodules/mymesh.utils.DilateVoxel.rst", "generated/submodules/mymesh.utils.ErodeVoxel.rst", "generated/submodules/mymesh.utils.ExtractRagged.rst", "generated/submodules/mymesh.utils.Face2NodeNormal.rst", "generated/submodules/mymesh.utils.MVBB.rst", "generated/submodules/mymesh.utils.MergeMesh.rst", "generated/submodules/mymesh.utils.MirrorMesh.rst", "generated/submodules/mymesh.utils.PadRagged.rst", "generated/submodules/mymesh.utils.Project2Surface.rst", "generated/submodules/mymesh.utils.RelabelNodes.rst", "generated/submodules/mymesh.utils.SortRaggedByLength.rst", "generated/submodules/mymesh.utils.SplitRaggedByLength.rst", "generated/submodules/mymesh.utils.SurfMapping.rst", "generated/submodules/mymesh.utils.TetMeshVol.rst", "generated/submodules/mymesh.utils.TriSurfVol.rst", "generated/submodules/mymesh.utils.ValueMapping.rst", "generated/submodules/mymesh.utils.getConnectedElements.rst", "generated/submodules/mymesh.utils.getConnectedNodes.rst", "generated/submodules/mymesh.utils.getElemConnectivity.rst", "generated/submodules/mymesh.utils.getElemNeighbors.rst", "generated/submodules/mymesh.utils.getNodeNeighborhood.rst", "generated/submodules/mymesh.utils.getNodeNeighborhoodByRadius.rst", "generated/submodules/mymesh.utils.getNodeNeighbors.rst", "generated/submodules/mymesh.utils.identify_type.rst", "generated/submodules/mymesh.utils.makePyramidLayer.rst", "generated/submodules/mymesh.visualize.FaceColor.rst", "generated/submodules/mymesh.visualize.GetTheme.rst", "generated/submodules/mymesh.visualize.ParseColor.rst", "generated/submodules/mymesh.visualize.View.rst", "generated/submodules/mymesh.visualize.set_vispy_backend.rst", "guide.rst", "guide/connectivity.rst", "guide/csg.rst", "guide/elem_types.rst", "guide/image_meshing.rst", "guide/implicit_meshing.rst", "guide/installation.rst", "guide/io.rst", "guide/matlab.rst", "guide/mesh_class.rst", "guide/ref.rst", "guide/what_mesh.rst", "index.rst", "sg_execution_times.rst", "theory.rst", "theory/contour.rst", "theory/curvature.rst", "theory/delaunay.rst", "theory/flips23.rst", "theory/implicit.rst", "theory/improvement.rst", "theory/octree.rst", "theory/rays.rst", "theory/springsmooth.rst"], "indexentries": {"aabb() (in module mymesh.utils)": [[265, "mymesh.utils.AABB", false]], "adaptive() (in module mymesh.contour)": [[86, "mymesh.contour.Adaptive", false]], "addedges() (mymesh.mesh.mesh method)": [[56, "mymesh.mesh.mesh.addEdges", false]], "addelems() (mymesh.mesh.mesh method)": [[57, "mymesh.mesh.mesh.addElems", false]], "addfaces() (mymesh.mesh.mesh method)": [[58, "mymesh.mesh.mesh.addFaces", false]], "addnodes() (mymesh.mesh.mesh method)": [[59, "mymesh.mesh.mesh.addNodes", false]], "analyticalcurvature() (in module mymesh.curvature)": [[124, "mymesh.curvature.AnalyticalCurvature", false]], "area() (in module mymesh.quality)": [[216, "mymesh.quality.Area", false]], "aspectratio() (in module mymesh.quality)": [[217, "mymesh.quality.AspectRatio", false]], "barytet() (in module mymesh.utils)": [[266, "mymesh.utils.BaryTet", false]], "barytri() (in module mymesh.utils)": [[267, "mymesh.utils.BaryTri", false]], "barytris() (in module mymesh.utils)": [[268, "mymesh.utils.BaryTris", false]], "boundaryboundaryintersection() (in module mymesh.rays)": [[233, "mymesh.rays.BoundaryBoundaryIntersection", false]], "boundaryconn (mymesh.mesh.mesh property)": [[21, "mymesh.mesh.mesh.BoundaryConn", false]], "boundarynodes (mymesh.mesh.mesh property)": [[22, "mymesh.mesh.mesh.BoundaryNodes", false]], "bowyerwatson2d() (in module mymesh.delaunay)": [[134, "mymesh.delaunay.BowyerWatson2d", false]], "bowyerwatson3d() (in module mymesh.delaunay)": [[135, "mymesh.delaunay.BowyerWatson3d", false]], "box() (in module mymesh.implicit)": [[153, "mymesh.implicit.box", false]], "box() (in module mymesh.primitives)": [[204, "mymesh.primitives.Box", false]], "boxtrianglesintersection() (in module mymesh.rays)": [[234, "mymesh.rays.BoxTrianglesIntersection", false]], "calcfacenormal() (in module mymesh.utils)": [[269, "mymesh.utils.CalcFaceNormal", false]], "cells (mymesh.mesh.mesh property)": [[60, "mymesh.mesh.mesh.cells", false]], "centroids (mymesh.mesh.mesh property)": [[23, "mymesh.mesh.mesh.Centroids", false]], "centroids() (in module mymesh.utils)": [[270, "mymesh.utils.Centroids", false]], "circle() (in module mymesh.primitives)": [[205, "mymesh.primitives.Circle", false]], "circlept() (in module mymesh.primitives)": [[206, "mymesh.primitives.CirclePt", false]], "cleanup() (mymesh.mesh.mesh method)": [[61, "mymesh.mesh.mesh.cleanup", false]], "cleanupdegenerateelements() (in module mymesh.utils)": [[271, "mymesh.utils.CleanupDegenerateElements", false]], "clip() (mymesh.mesh.mesh method)": [[24, "mymesh.mesh.mesh.Clip", false]], "contour() (mymesh.mesh.mesh method)": [[25, "mymesh.mesh.mesh.Contour", false]], "convexhull() (in module mymesh.delaunay)": [[136, "mymesh.delaunay.ConvexHull", false]], "convexhull_giftwrapping() (in module mymesh.delaunay)": [[138, "mymesh.delaunay.ConvexHull_GiftWrapping", false]], "convexhullfantriangulation() (in module mymesh.delaunay)": [[137, "mymesh.delaunay.ConvexHullFanTriangulation", false]], "copy() (mymesh.mesh.mesh method)": [[62, "mymesh.mesh.mesh.copy", false]], "createboundarylayer() (mymesh.mesh.mesh method)": [[26, "mymesh.mesh.mesh.CreateBoundaryLayer", false]], "crop() (mymesh.mesh.mesh method)": [[27, "mymesh.mesh.mesh.Crop", false]], "cubicfit() (in module mymesh.curvature)": [[125, "mymesh.curvature.CubicFit", false]], "curvedness() (in module mymesh.curvature)": [[126, "mymesh.curvature.Curvedness", false]], "cylinder() (in module mymesh.implicit)": [[154, "mymesh.implicit.cylinder", false]], "cylinder() (in module mymesh.primitives)": [[207, "mymesh.primitives.Cylinder", false]], "deletedegenerateelements() (in module mymesh.utils)": [[272, "mymesh.utils.DeleteDegenerateElements", false]], "deleteduplicatenodes() (in module mymesh.utils)": [[273, "mymesh.utils.DeleteDuplicateNodes", false]], "detectfeatures() (in module mymesh.utils)": [[274, "mymesh.utils.DetectFeatures", false]], "diamond() (in module mymesh.implicit)": [[155, "mymesh.implicit.diamond", false]], "diff() (in module mymesh.implicit)": [[156, "mymesh.implicit.diff", false]], "difff() (in module mymesh.implicit)": [[157, "mymesh.implicit.difff", false]], "diffs() (in module mymesh.implicit)": [[158, "mymesh.implicit.diffs", false]], "dihedralangles() (in module mymesh.quality)": [[228, "mymesh.quality.dihedralAngles", false]], "dilatevoxel() (in module mymesh.utils)": [[275, "mymesh.utils.DilateVoxel", false]], "edgeconn (mymesh.mesh.mesh property)": [[28, "mymesh.mesh.mesh.EdgeConn", false]], "edgeelemconn (mymesh.mesh.mesh property)": [[29, "mymesh.mesh.mesh.EdgeElemConn", false]], "edges (mymesh.mesh.mesh property)": [[30, "mymesh.mesh.mesh.Edges", false]], "edges2unique() (in module mymesh.converter)": [[93, "mymesh.converter.edges2unique", false]], "edgesbyelement() (in module mymesh.converter)": [[92, "mymesh.converter.EdgesByElement", false]], "edgesets (mymesh.mesh attribute)": [[20, "mymesh.mesh.EdgeSets", false]], "elemconn (mymesh.mesh.mesh property)": [[31, "mymesh.mesh.mesh.ElemConn", false]], "elemdata (mymesh.mesh attribute)": [[20, "mymesh.mesh.ElemData", false]], "elemneighbors (mymesh.mesh.mesh property)": [[32, "mymesh.mesh.mesh.ElemNeighbors", false]], "elemnormals (mymesh.mesh.mesh property)": [[33, "mymesh.mesh.mesh.ElemNormals", false]], "elemsets (mymesh.mesh attribute)": [[20, "mymesh.mesh.ElemSets", false]], "equiangular_skewness() (in module mymesh.quality)": [[229, "mymesh.quality.equiangular_skewness", false]], "erodevoxel() (in module mymesh.utils)": [[276, "mymesh.utils.ErodeVoxel", false]], "eulercharacteristic (mymesh.mesh.mesh property)": [[34, "mymesh.mesh.mesh.EulerCharacteristic", false]], "extractragged() (in module mymesh.utils)": [[277, "mymesh.utils.ExtractRagged", false]], "extrude() (in module mymesh.primitives)": [[208, "mymesh.primitives.Extrude", false]], "face2nodenormal() (in module mymesh.utils)": [[278, "mymesh.utils.Face2NodeNormal", false]], "facecolor() (in module mymesh.visualize)": [[300, "mymesh.visualize.FaceColor", false]], "faceconn (mymesh.mesh.mesh property)": [[35, "mymesh.mesh.mesh.FaceConn", false]], "faceelemconn (mymesh.mesh.mesh property)": [[36, "mymesh.mesh.mesh.FaceElemConn", false]], "faces (mymesh.mesh.mesh property)": [[37, "mymesh.mesh.mesh.Faces", false]], "faces2surface() (in module mymesh.converter)": [[94, "mymesh.converter.faces2surface", false]], "faces2unique() (in module mymesh.converter)": [[95, "mymesh.converter.faces2unique", false]], "facesets (mymesh.mesh attribute)": [[20, "mymesh.mesh.FaceSets", false]], "function2octree() (in module mymesh.octree)": [[194, "mymesh.octree.Function2Octree", false]], "gaussiancurvature() (in module mymesh.curvature)": [[127, "mymesh.curvature.GaussianCurvature", false]], "genus (mymesh.mesh.mesh property)": [[38, "mymesh.mesh.mesh.Genus", false]], "geotransformsmoothing() (in module mymesh.improvement)": [[184, "mymesh.improvement.GeoTransformSmoothing", false]], "getallleaf() (in module mymesh.octree)": [[203, "mymesh.octree.getAllLeaf", false]], "getconnectedelements() (in module mymesh.utils)": [[291, "mymesh.utils.getConnectedElements", false]], "getconnectednodes() (in module mymesh.utils)": [[292, "mymesh.utils.getConnectedNodes", false]], "getcurvature() (mymesh.mesh.mesh method)": [[63, "mymesh.mesh.mesh.getCurvature", false]], "getelemconnectivity() (in module mymesh.utils)": [[293, "mymesh.utils.getElemConnectivity", false]], "getelemneighbors() (in module mymesh.utils)": [[294, "mymesh.utils.getElemNeighbors", false]], "getnodeneighborhood() (in module mymesh.utils)": [[295, "mymesh.utils.getNodeNeighborhood", false]], "getnodeneighborhoodbyradius() (in module mymesh.utils)": [[296, "mymesh.utils.getNodeNeighborhoodByRadius", false]], "getnodeneighbors() (in module mymesh.utils)": [[297, "mymesh.utils.getNodeNeighbors", false]], "getquality() (mymesh.mesh.mesh method)": [[64, "mymesh.mesh.mesh.getQuality", false]], "gettheme() (in module mymesh.visualize)": [[301, "mymesh.visualize.GetTheme", false]], "grid() (in module mymesh.primitives)": [[209, "mymesh.primitives.Grid", false]], "grid2d() (in module mymesh.primitives)": [[210, "mymesh.primitives.Grid2D", false]], "grid2fun() (in module mymesh.implicit)": [[159, "mymesh.implicit.grid2fun", false]], "grid2grad() (in module mymesh.implicit)": [[160, "mymesh.implicit.grid2grad", false]], "gyroid() (in module mymesh.implicit)": [[161, "mymesh.implicit.gyroid", false]], "hex2edges() (in module mymesh.converter)": [[96, "mymesh.converter.hex2edges", false]], "hex2faces() (in module mymesh.converter)": [[97, "mymesh.converter.hex2faces", false]], "hex2tet() (in module mymesh.converter)": [[98, "mymesh.converter.hex2tet", false]], "hexsubdivide() (in module mymesh.converter)": [[99, "mymesh.converter.hexsubdivide", false]], "identify_type() (in module mymesh.utils)": [[298, "mymesh.utils.identify_type", false]], "identify_type() (mymesh.mesh.mesh method)": [[65, "mymesh.mesh.mesh.identify_type", false]], "im2voxel() (in module mymesh.converter)": [[100, "mymesh.converter.im2voxel", false]], "imagecurvature() (in module mymesh.curvature)": [[128, "mymesh.curvature.ImageCurvature", false]], "imread() (mymesh.mesh.mesh method)": [[66, "mymesh.mesh.mesh.imread", false]], "intersection() (in module mymesh.implicit)": [[162, "mymesh.implicit.intersection", false]], "intersectionf() (in module mymesh.implicit)": [[163, "mymesh.implicit.intersectionf", false]], "intersections() (in module mymesh.implicit)": [[164, "mymesh.implicit.intersections", false]], "inverseorthogonality() (in module mymesh.quality)": [[219, "mymesh.quality.InverseOrthogonality", false]], "inverseorthogonalquality() (in module mymesh.quality)": [[218, "mymesh.quality.InverseOrthogonalQuality", false]], "lidinoid() (in module mymesh.implicit)": [[165, "mymesh.implicit.lidinoid", false]], "line() (in module mymesh.primitives)": [[211, "mymesh.primitives.Line", false]], "locallaplaciansmoothing() (in module mymesh.improvement)": [[185, "mymesh.improvement.LocalLaplacianSmoothing", false]], "makepyramidlayer() (in module mymesh.utils)": [[299, "mymesh.utils.makePyramidLayer", false]], "marchingcubes() (in module mymesh.contour)": [[87, "mymesh.contour.MarchingCubes", false]], "marchingcubesimage() (in module mymesh.contour)": [[88, "mymesh.contour.MarchingCubesImage", false]], "marchingsquares() (in module mymesh.contour)": [[89, "mymesh.contour.MarchingSquares", false]], "marchingsquaresimage() (in module mymesh.contour)": [[90, "mymesh.contour.MarchingSquaresImage", false]], "marchingtetrahedra() (in module mymesh.contour)": [[91, "mymesh.contour.MarchingTetrahedra", false]], "maxdihedral() (in module mymesh.quality)": [[220, "mymesh.quality.MaxDihedral", false]], "meancurvature() (in module mymesh.curvature)": [[129, "mymesh.curvature.MeanCurvature", false]], "meanratio() (in module mymesh.quality)": [[221, "mymesh.quality.MeanRatio", false]], "merge() (mymesh.mesh.mesh method)": [[67, "mymesh.mesh.mesh.merge", false]], "mergemesh() (in module mymesh.utils)": [[280, "mymesh.utils.MergeMesh", false]], "mesh (class in mymesh)": [[20, "mymesh.mesh", false]], "mesh2sdf() (in module mymesh.implicit)": [[166, "mymesh.implicit.mesh2sdf", false]], "mesh2udf() (in module mymesh.implicit)": [[167, "mymesh.implicit.mesh2udf", false]], "meshbooleans() (in module mymesh.booleans)": [[84, "mymesh.booleans.MeshBooleans", false]], "meshio2mymesh() (mymesh.mesh.mesh method)": [[68, "mymesh.mesh.mesh.meshio2mymesh", false]], "mindihedral() (in module mymesh.quality)": [[222, "mymesh.quality.MinDihedral", false]], "mirror() (mymesh.mesh.mesh method)": [[39, "mymesh.mesh.mesh.Mirror", false]], "mirrormesh() (in module mymesh.utils)": [[281, "mymesh.utils.MirrorMesh", false]], "module": [[0, "module-mymesh", false], [12, "module-mymesh.booleans", false], [13, "module-mymesh.contour", false], [14, "module-mymesh.converter", false], [15, "module-mymesh.curvature", false], [16, "module-mymesh.delaunay", false], [17, "module-mymesh.image", false], [18, "module-mymesh.implicit", false], [19, "module-mymesh.improvement", false], [78, "module-mymesh.octree", false], [79, "module-mymesh.primitives", false], [80, "module-mymesh.quality", false], [81, "module-mymesh.rays", false], [82, "module-mymesh.utils", false], [83, "module-mymesh.visualize", false]], "mvbb() (in module mymesh.utils)": [[279, "mymesh.utils.MVBB", false]], "mymesh": [[0, "module-mymesh", false]], "mymesh.booleans": [[12, "module-mymesh.booleans", false]], "mymesh.contour": [[13, "module-mymesh.contour", false]], "mymesh.converter": [[14, "module-mymesh.converter", false]], "mymesh.curvature": [[15, "module-mymesh.curvature", false]], "mymesh.delaunay": [[16, "module-mymesh.delaunay", false]], "mymesh.image": [[17, "module-mymesh.image", false]], "mymesh.implicit": [[18, "module-mymesh.implicit", false]], "mymesh.improvement": [[19, "module-mymesh.improvement", false]], "mymesh.octree": [[78, "module-mymesh.octree", false]], "mymesh.primitives": [[79, "module-mymesh.primitives", false]], "mymesh.quality": [[80, "module-mymesh.quality", false]], "mymesh.rays": [[81, "module-mymesh.rays", false]], "mymesh.utils": [[82, "module-mymesh.utils", false]], "mymesh.visualize": [[83, "module-mymesh.visualize", false]], "mymesh2meshio() (mymesh.mesh.mesh method)": [[69, "mymesh.mesh.mesh.mymesh2meshio", false]], "nd (mymesh.mesh.mesh property)": [[40, "mymesh.mesh.mesh.ND", false]], "nedge (mymesh.mesh.mesh property)": [[41, "mymesh.mesh.mesh.NEdge", false]], "nelem (mymesh.mesh.mesh property)": [[42, "mymesh.mesh.mesh.NElem", false]], "neovius() (in module mymesh.implicit)": [[168, "mymesh.implicit.neovius", false]], "nface (mymesh.mesh.mesh property)": [[43, "mymesh.mesh.mesh.NFace", false]], "nnode (mymesh.mesh.mesh property)": [[44, "mymesh.mesh.mesh.NNode", false]], "nodedata (mymesh.mesh attribute)": [[20, "mymesh.mesh.NodeData", false]], "nodeneighbors (mymesh.mesh.mesh property)": [[45, "mymesh.mesh.mesh.NodeNeighbors", false]], "nodenormals (mymesh.mesh.mesh property)": [[46, "mymesh.mesh.mesh.NodeNormals", false]], "nodenormalsmethod (mymesh.mesh.mesh property)": [[47, "mymesh.mesh.mesh.NodeNormalsMethod", false]], "nodesets (mymesh.mesh attribute)": [[20, "mymesh.mesh.NodeSets", false]], "nodespringsmoothing() (in module mymesh.improvement)": [[186, "mymesh.improvement.NodeSpringSmoothing", false]], "normcurve() (in module mymesh.curvature)": [[130, "mymesh.curvature.NormCurve", false]], "octree2dual() (in module mymesh.octree)": [[195, "mymesh.octree.Octree2Dual", false]], "octree2voxel() (in module mymesh.octree)": [[196, "mymesh.octree.Octree2Voxel", false]], "offset() (in module mymesh.implicit)": [[169, "mymesh.implicit.offset", false]], "orthogonality() (in module mymesh.quality)": [[224, "mymesh.quality.Orthogonality", false]], "orthogonalquality() (in module mymesh.quality)": [[223, "mymesh.quality.OrthogonalQuality", false]], "padragged() (in module mymesh.utils)": [[282, "mymesh.utils.PadRagged", false]], "parsecolor() (in module mymesh.visualize)": [[302, "mymesh.visualize.ParseColor", false]], "plane() (in module mymesh.primitives)": [[212, "mymesh.primitives.Plane", false]], "planeboxintersection() (in module mymesh.rays)": [[235, "mymesh.rays.PlaneBoxIntersection", false]], "planesurfintersection() (in module mymesh.rays)": [[236, "mymesh.rays.PlaneSurfIntersection", false]], "planetriangleintersection() (in module mymesh.rays)": [[237, "mymesh.rays.PlaneTriangleIntersection", false]], "planetrianglesintersection() (in module mymesh.rays)": [[238, "mymesh.rays.PlaneTrianglesIntersection", false]], "plot() (mymesh.mesh.mesh method)": [[70, "mymesh.mesh.mesh.plot", false]], "pointinboundary() (in module mymesh.rays)": [[239, "mymesh.rays.PointInBoundary", false]], "pointinbox() (in module mymesh.rays)": [[240, "mymesh.rays.PointInBox", false]], "pointinsurf() (in module mymesh.rays)": [[241, "mymesh.rays.PointInSurf", false]], "pointintri() (in module mymesh.rays)": [[242, "mymesh.rays.PointInTri", false]], "points (mymesh.mesh.mesh property)": [[71, "mymesh.mesh.mesh.points", false]], "points2octree() (in module mymesh.octree)": [[197, "mymesh.octree.Points2Octree", false]], "pointsinsurf() (in module mymesh.rays)": [[243, "mymesh.rays.PointsInSurf", false]], "pointsintris() (in module mymesh.rays)": [[244, "mymesh.rays.PointsInTris", false]], "pointsinvoxel() (in module mymesh.rays)": [[245, "mymesh.rays.PointsInVoxel", false]], "polygon2edges() (in module mymesh.converter)": [[101, "mymesh.converter.polygon2edges", false]], "primitive() (in module mymesh.implicit)": [[170, "mymesh.implicit.primitive", false]], "print() (in module mymesh.octree)": [[198, "mymesh.octree.Print", false]], "project2surface() (in module mymesh.utils)": [[283, "mymesh.utils.Project2Surface", false]], "pyramid2edges() (in module mymesh.converter)": [[102, "mymesh.converter.pyramid2edges", false]], "pyramid2faces() (in module mymesh.converter)": [[103, "mymesh.converter.pyramid2faces", false]], "pyramid2tet() (in module mymesh.converter)": [[104, "mymesh.converter.pyramid2tet", false]], "quad2edges() (in module mymesh.converter)": [[105, "mymesh.converter.quad2edges", false]], "quad2tri() (in module mymesh.converter)": [[106, "mymesh.converter.quad2tri", false]], "quad_skewness() (in module mymesh.quality)": [[230, "mymesh.quality.quad_skewness", false]], "quadfit() (in module mymesh.curvature)": [[131, "mymesh.curvature.QuadFit", false]], "rayboxesintersection() (in module mymesh.rays)": [[247, "mymesh.rays.RayBoxesIntersection", false]], "rayboxintersection() (in module mymesh.rays)": [[246, "mymesh.rays.RayBoxIntersection", false]], "rayoctreeintersection() (in module mymesh.rays)": [[248, "mymesh.rays.RayOctreeIntersection", false]], "raysegmentintersection() (in module mymesh.rays)": [[249, "mymesh.rays.RaySegmentIntersection", false]], "raysegmentsintersection() (in module mymesh.rays)": [[250, "mymesh.rays.RaySegmentsIntersection", false]], "rayssurfintersection() (in module mymesh.rays)": [[254, "mymesh.rays.RaysSurfIntersection", false]], "raystrianglesintersection() (in module mymesh.rays)": [[255, "mymesh.rays.RaysTrianglesIntersection", false]], "raysurfintersection() (in module mymesh.rays)": [[251, "mymesh.rays.RaySurfIntersection", false]], "raytriangleintersection() (in module mymesh.rays)": [[252, "mymesh.rays.RayTriangleIntersection", false]], "raytrianglesintersection() (in module mymesh.rays)": [[253, "mymesh.rays.RayTrianglesIntersection", false]], "read() (in module mymesh.image)": [[147, "mymesh.image.read", false]], "read() (mymesh.mesh.mesh method)": [[72, "mymesh.mesh.mesh.read", false]], "relabelnodes() (in module mymesh.utils)": [[284, "mymesh.utils.RelabelNodes", false]], "removeelems() (mymesh.mesh.mesh method)": [[73, "mymesh.mesh.mesh.removeElems", false]], "renumberfacesbyset() (mymesh.mesh.mesh method)": [[48, "mymesh.mesh.mesh.RenumberFacesBySet", false]], "renumbernodesbyset() (mymesh.mesh.mesh method)": [[49, "mymesh.mesh.mesh.RenumberNodesBySet", false]], "reset() (mymesh.mesh.mesh method)": [[74, "mymesh.mesh.mesh.reset", false]], "revolve() (in module mymesh.primitives)": [[213, "mymesh.primitives.Revolve", false]], "rmax() (in module mymesh.implicit)": [[171, "mymesh.implicit.rMax", false]], "rmin() (in module mymesh.implicit)": [[172, "mymesh.implicit.rMin", false]], "scipy() (in module mymesh.delaunay)": [[139, "mymesh.delaunay.SciPy", false]], "searchoctree() (in module mymesh.octree)": [[199, "mymesh.octree.SearchOctree", false]], "searchoctreetri() (in module mymesh.octree)": [[200, "mymesh.octree.SearchOctreeTri", false]], "segmentsegmentintersection() (in module mymesh.rays)": [[256, "mymesh.rays.SegmentSegmentIntersection", false]], "segmentspringsmoothing() (in module mymesh.improvement)": [[187, "mymesh.improvement.SegmentSpringSmoothing", false]], "segmentssegmentsintersection() (in module mymesh.rays)": [[257, "mymesh.rays.SegmentsSegmentsIntersection", false]], "set_vispy_backend() (in module mymesh.visualize)": [[304, "mymesh.visualize.set_vispy_backend", false]], "shapecategory() (in module mymesh.curvature)": [[132, "mymesh.curvature.ShapeCategory", false]], "shapeindex() (in module mymesh.curvature)": [[133, "mymesh.curvature.ShapeIndex", false]], "skewness() (in module mymesh.quality)": [[225, "mymesh.quality.Skewness", false]], "smartlaplaciansmoothing() (in module mymesh.improvement)": [[188, "mymesh.improvement.SmartLaplacianSmoothing", false]], "solid2edges() (in module mymesh.converter)": [[107, "mymesh.converter.solid2edges", false]], "solid2faces() (in module mymesh.converter)": [[108, "mymesh.converter.solid2faces", false]], "solid2surface() (in module mymesh.converter)": [[109, "mymesh.converter.solid2surface", false]], "solid2tets() (in module mymesh.converter)": [[110, "mymesh.converter.solid2tets", false]], "sortraggedbylength() (in module mymesh.utils)": [[285, "mymesh.utils.SortRaggedByLength", false]], "sphere() (in module mymesh.implicit)": [[173, "mymesh.implicit.sphere", false]], "sphere() (in module mymesh.primitives)": [[214, "mymesh.primitives.Sphere", false]], "splitmesh() (in module mymesh.booleans)": [[85, "mymesh.booleans.SplitMesh", false]], "splitraggedbylength() (in module mymesh.utils)": [[286, "mymesh.utils.SplitRaggedByLength", false]], "surf2dual() (in module mymesh.converter)": [[111, "mymesh.converter.surf2dual", false]], "surf2edges() (in module mymesh.converter)": [[112, "mymesh.converter.surf2edges", false]], "surf2tris() (in module mymesh.converter)": [[113, "mymesh.converter.surf2tris", false]], "surf2voxel() (in module mymesh.converter)": [[114, "mymesh.converter.surf2voxel", false]], "surface (mymesh.mesh.mesh property)": [[54, "mymesh.mesh.mesh.Surface", false]], "surface2octree() (in module mymesh.octree)": [[201, "mymesh.octree.Surface2Octree", false]], "surfacemesh() (in module mymesh.image)": [[143, "mymesh.image.SurfaceMesh", false]], "surfacemesh() (in module mymesh.implicit)": [[149, "mymesh.implicit.SurfaceMesh", false]], "surfacenodeoptimization() (in module mymesh.image)": [[144, "mymesh.image.SurfaceNodeOptimization", false]], "surfacenodeoptimization() (in module mymesh.implicit)": [[150, "mymesh.implicit.SurfaceNodeOptimization", false]], "surfconn (mymesh.mesh.mesh property)": [[50, "mymesh.mesh.mesh.SurfConn", false]], "surfdihedralangles() (in module mymesh.quality)": [[226, "mymesh.quality.SurfDihedralAngles", false]], "surfelemconn (mymesh.mesh.mesh property)": [[51, "mymesh.mesh.mesh.SurfElemConn", false]], "surfmapping() (in module mymesh.utils)": [[287, "mymesh.utils.SurfMapping", false]], "surfnodeneighbors (mymesh.mesh.mesh property)": [[52, "mymesh.mesh.mesh.SurfNodeNeighbors", false]], "surfnodes (mymesh.mesh.mesh property)": [[53, "mymesh.mesh.mesh.SurfNodes", false]], "surfselfintersection() (in module mymesh.rays)": [[258, "mymesh.rays.SurfSelfIntersection", false]], "surfsurfintersection() (in module mymesh.rays)": [[259, "mymesh.rays.SurfSurfIntersection", false]], "tangentiallaplaciansmoothing() (in module mymesh.improvement)": [[189, "mymesh.improvement.TangentialLaplacianSmoothing", false]], "tet102tet4() (in module mymesh.converter)": [[115, "mymesh.converter.tet102tet4", false]], "tet2edges() (in module mymesh.converter)": [[116, "mymesh.converter.tet2edges", false]], "tet2faces() (in module mymesh.converter)": [[117, "mymesh.converter.tet2faces", false]], "tet42tet10() (in module mymesh.converter)": [[118, "mymesh.converter.tet42tet10", false]], "tet_vol_skewness() (in module mymesh.quality)": [[231, "mymesh.quality.tet_vol_skewness", false]], "tetcontract() (in module mymesh.improvement)": [[190, "mymesh.improvement.TetContract", false]], "tetflip() (in module mymesh.improvement)": [[191, "mymesh.improvement.TetFlip", false]], "tetimprove() (in module mymesh.improvement)": [[192, "mymesh.improvement.TetImprove", false]], "tetmesh() (in module mymesh.image)": [[145, "mymesh.image.TetMesh", false]], "tetmesh() (in module mymesh.implicit)": [[151, "mymesh.implicit.TetMesh", false]], "tetmeshvol() (in module mymesh.utils)": [[288, "mymesh.utils.TetMeshVol", false]], "tetsplit() (in module mymesh.improvement)": [[193, "mymesh.improvement.TetSplit", false]], "thicken() (in module mymesh.implicit)": [[174, "mymesh.implicit.thicken", false]], "thickenf() (in module mymesh.implicit)": [[175, "mymesh.implicit.thickenf", false]], "thickens() (in module mymesh.implicit)": [[176, "mymesh.implicit.thickens", false]], "threshold() (mymesh.mesh.mesh method)": [[55, "mymesh.mesh.mesh.Threshold", false]], "torus() (in module mymesh.implicit)": [[177, "mymesh.implicit.torus", false]], "torus() (in module mymesh.primitives)": [[215, "mymesh.primitives.Torus", false]], "tri2edges() (in module mymesh.converter)": [[119, "mymesh.converter.tri2edges", false]], "tri_skewness() (in module mymesh.quality)": [[232, "mymesh.quality.tri_skewness", false]], "triangle() (in module mymesh.delaunay)": [[140, "mymesh.delaunay.Triangle", false]], "triangleboxintersection() (in module mymesh.rays)": [[260, "mymesh.rays.TriangleBoxIntersection", false]], "trianglesplittingtriangulation() (in module mymesh.delaunay)": [[141, "mymesh.delaunay.TriangleSplittingTriangulation", false]], "trianglestrianglesintersection() (in module mymesh.rays)": [[263, "mymesh.rays.TrianglesTrianglesIntersection", false]], "trianglestrianglesintersectionpts() (in module mymesh.rays)": [[264, "mymesh.rays.TrianglesTrianglesIntersectionPts", false]], "triangletriangleintersection() (in module mymesh.rays)": [[261, "mymesh.rays.TriangleTriangleIntersection", false]], "triangletriangleintersectionpt() (in module mymesh.rays)": [[262, "mymesh.rays.TriangleTriangleIntersectionPt", false]], "triangulate() (in module mymesh.delaunay)": [[142, "mymesh.delaunay.Triangulate", false]], "trisurfvol() (in module mymesh.utils)": [[289, "mymesh.utils.TriSurfVol", false]], "union() (in module mymesh.implicit)": [[178, "mymesh.implicit.union", false]], "unionf() (in module mymesh.implicit)": [[179, "mymesh.implicit.unionf", false]], "unions() (in module mymesh.implicit)": [[180, "mymesh.implicit.unions", false]], "validate() (mymesh.mesh.mesh method)": [[75, "mymesh.mesh.mesh.validate", false]], "valuemapping() (in module mymesh.utils)": [[290, "mymesh.utils.ValueMapping", false]], "view() (in module mymesh.visualize)": [[303, "mymesh.visualize.View", false]], "view() (mymesh.mesh.mesh method)": [[76, "mymesh.mesh.mesh.view", false]], "volume() (in module mymesh.quality)": [[227, "mymesh.quality.Volume", false]], "voxel2im() (in module mymesh.converter)": [[120, "mymesh.converter.voxel2im", false]], "voxel2octree() (in module mymesh.octree)": [[202, "mymesh.octree.Voxel2Octree", false]], "voxelmesh() (in module mymesh.image)": [[146, "mymesh.image.VoxelMesh", false]], "voxelmesh() (in module mymesh.implicit)": [[152, "mymesh.implicit.VoxelMesh", false]], "wedge2edges() (in module mymesh.converter)": [[121, "mymesh.converter.wedge2edges", false]], "wedge2faces() (in module mymesh.converter)": [[122, "mymesh.converter.wedge2faces", false]], "wedge2tet() (in module mymesh.converter)": [[123, "mymesh.converter.wedge2tet", false]], "write() (in module mymesh.image)": [[148, "mymesh.image.write", false]], "write() (mymesh.mesh.mesh method)": [[77, "mymesh.mesh.mesh.write", false]], "xplane() (in module mymesh.implicit)": [[181, "mymesh.implicit.xplane", false]], "yplane() (in module mymesh.implicit)": [[182, "mymesh.implicit.yplane", false]], "zplane() (in module mymesh.implicit)": [[183, "mymesh.implicit.zplane", false]]}, "objects": {"": [[0, 0, 0, "-", "mymesh"]], "mymesh": [[12, 0, 0, "-", "booleans"], [13, 0, 0, "-", "contour"], [14, 0, 0, "-", "converter"], [15, 0, 0, "-", "curvature"], [16, 0, 0, "-", "delaunay"], [17, 0, 0, "-", "image"], [18, 0, 0, "-", "implicit"], [19, 0, 0, "-", "improvement"], [20, 2, 1, "", "mesh"], [78, 0, 0, "-", "octree"], [79, 0, 0, "-", "primitives"], [80, 0, 0, "-", "quality"], [81, 0, 0, "-", "rays"], [82, 0, 0, "-", "utils"], [83, 0, 0, "-", "visualize"]], "mymesh.booleans": [[84, 1, 1, "", "MeshBooleans"], [85, 1, 1, "", "SplitMesh"]], "mymesh.contour": [[86, 1, 1, "", "Adaptive"], [87, 1, 1, "", "MarchingCubes"], [88, 1, 1, "", "MarchingCubesImage"], [89, 1, 1, "", "MarchingSquares"], [90, 1, 1, "", "MarchingSquaresImage"], [91, 1, 1, "", "MarchingTetrahedra"]], "mymesh.converter": [[92, 1, 1, "", "EdgesByElement"], [93, 1, 1, "", "edges2unique"], [94, 1, 1, "", "faces2surface"], [95, 1, 1, "", "faces2unique"], [96, 1, 1, "", "hex2edges"], [97, 1, 1, "", "hex2faces"], [98, 1, 1, "", "hex2tet"], [99, 1, 1, "", "hexsubdivide"], [100, 1, 1, "", "im2voxel"], [101, 1, 1, "", "polygon2edges"], [102, 1, 1, "", "pyramid2edges"], [103, 1, 1, "", "pyramid2faces"], [104, 1, 1, "", "pyramid2tet"], [105, 1, 1, "", "quad2edges"], [106, 1, 1, "", "quad2tri"], [107, 1, 1, "", "solid2edges"], [108, 1, 1, "", "solid2faces"], [109, 1, 1, "", "solid2surface"], [110, 1, 1, "", "solid2tets"], [111, 1, 1, "", "surf2dual"], [112, 1, 1, "", "surf2edges"], [113, 1, 1, "", "surf2tris"], [114, 1, 1, "", "surf2voxel"], [115, 1, 1, "", "tet102tet4"], [116, 1, 1, "", "tet2edges"], [117, 1, 1, "", "tet2faces"], [118, 1, 1, "", "tet42tet10"], [119, 1, 1, "", "tri2edges"], [120, 1, 1, "", "voxel2im"], [121, 1, 1, "", "wedge2edges"], [122, 1, 1, "", "wedge2faces"], [123, 1, 1, "", "wedge2tet"]], "mymesh.curvature": [[124, 1, 1, "", "AnalyticalCurvature"], [125, 1, 1, "", "CubicFit"], [126, 1, 1, "", "Curvedness"], [127, 1, 1, "", "GaussianCurvature"], [128, 1, 1, "", "ImageCurvature"], [129, 1, 1, "", "MeanCurvature"], [130, 1, 1, "", "NormCurve"], [131, 1, 1, "", "QuadFit"], [132, 1, 1, "", "ShapeCategory"], [133, 1, 1, "", "ShapeIndex"]], "mymesh.delaunay": [[134, 1, 1, "", "BowyerWatson2d"], [135, 1, 1, "", "BowyerWatson3d"], [136, 1, 1, "", "ConvexHull"], [137, 1, 1, "", "ConvexHullFanTriangulation"], [138, 1, 1, "", "ConvexHull_GiftWrapping"], [139, 1, 1, "", "SciPy"], [140, 1, 1, "", "Triangle"], [141, 1, 1, "", "TriangleSplittingTriangulation"], [142, 1, 1, "", "Triangulate"]], "mymesh.image": [[143, 1, 1, "", "SurfaceMesh"], [144, 1, 1, "", "SurfaceNodeOptimization"], [145, 1, 1, "", "TetMesh"], [146, 1, 1, "", "VoxelMesh"], [147, 1, 1, "", "read"], [148, 1, 1, "", "write"]], "mymesh.implicit": [[149, 1, 1, "", "SurfaceMesh"], [150, 1, 1, "", "SurfaceNodeOptimization"], [151, 1, 1, "", "TetMesh"], [152, 1, 1, "", "VoxelMesh"], [153, 1, 1, "", "box"], [154, 1, 1, "", "cylinder"], [155, 1, 1, "", "diamond"], [156, 1, 1, "", "diff"], [157, 1, 1, "", "difff"], [158, 1, 1, "", "diffs"], [159, 1, 1, "", "grid2fun"], [160, 1, 1, "", "grid2grad"], [161, 1, 1, "", "gyroid"], [162, 1, 1, "", "intersection"], [163, 1, 1, "", "intersectionf"], [164, 1, 1, "", "intersections"], [165, 1, 1, "", "lidinoid"], [166, 1, 1, "", "mesh2sdf"], [167, 1, 1, "", "mesh2udf"], [168, 1, 1, "", "neovius"], [169, 1, 1, "", "offset"], [170, 1, 1, "", "primitive"], [171, 1, 1, "", "rMax"], [172, 1, 1, "", "rMin"], [173, 1, 1, "", "sphere"], [174, 1, 1, "", "thicken"], [175, 1, 1, "", "thickenf"], [176, 1, 1, "", "thickens"], [177, 1, 1, "", "torus"], [178, 1, 1, "", "union"], [179, 1, 1, "", "unionf"], [180, 1, 1, "", "unions"], [181, 1, 1, "", "xplane"], [182, 1, 1, "", "yplane"], [183, 1, 1, "", "zplane"]], "mymesh.improvement": [[184, 1, 1, "", "GeoTransformSmoothing"], [185, 1, 1, "", "LocalLaplacianSmoothing"], [186, 1, 1, "", "NodeSpringSmoothing"], [187, 1, 1, "", "SegmentSpringSmoothing"], [188, 1, 1, "", "SmartLaplacianSmoothing"], [189, 1, 1, "", "TangentialLaplacianSmoothing"], [190, 1, 1, "", "TetContract"], [191, 1, 1, "", "TetFlip"], [192, 1, 1, "", "TetImprove"], [193, 1, 1, "", "TetSplit"]], "mymesh.mesh": [[20, 3, 1, "", "EdgeSets"], [20, 3, 1, "", "ElemData"], [20, 3, 1, "", "ElemSets"], [20, 3, 1, "", "FaceSets"], [20, 3, 1, "", "NodeData"], [20, 3, 1, "", "NodeSets"]], "mymesh.mesh.mesh": [[21, 4, 1, "", "BoundaryConn"], [22, 4, 1, "", "BoundaryNodes"], [23, 4, 1, "", "Centroids"], [24, 5, 1, "", "Clip"], [25, 5, 1, "", "Contour"], [26, 5, 1, "", "CreateBoundaryLayer"], [27, 5, 1, "", "Crop"], [28, 4, 1, "", "EdgeConn"], [29, 4, 1, "", "EdgeElemConn"], [30, 4, 1, "", "Edges"], [31, 4, 1, "", "ElemConn"], [32, 4, 1, "", "ElemNeighbors"], [33, 4, 1, "", "ElemNormals"], [34, 4, 1, "", "EulerCharacteristic"], [35, 4, 1, "", "FaceConn"], [36, 4, 1, "", "FaceElemConn"], [37, 4, 1, "", "Faces"], [38, 4, 1, "", "Genus"], [39, 5, 1, "", "Mirror"], [40, 4, 1, "", "ND"], [41, 4, 1, "", "NEdge"], [42, 4, 1, "", "NElem"], [43, 4, 1, "", "NFace"], [44, 4, 1, "", "NNode"], [45, 4, 1, "", "NodeNeighbors"], [46, 4, 1, "", "NodeNormals"], [47, 4, 1, "", "NodeNormalsMethod"], [48, 5, 1, "", "RenumberFacesBySet"], [49, 5, 1, "", "RenumberNodesBySet"], [50, 4, 1, "", "SurfConn"], [51, 4, 1, "", "SurfElemConn"], [52, 4, 1, "", "SurfNodeNeighbors"], [53, 4, 1, "", "SurfNodes"], [54, 4, 1, "", "Surface"], [55, 5, 1, "", "Threshold"], [56, 5, 1, "", "addEdges"], [57, 5, 1, "", "addElems"], [58, 5, 1, "", "addFaces"], [59, 5, 1, "", "addNodes"], [60, 4, 1, "", "cells"], [61, 5, 1, "", "cleanup"], [62, 5, 1, "", "copy"], [63, 5, 1, "", "getCurvature"], [64, 5, 1, "", "getQuality"], [65, 5, 1, "", "identify_type"], [66, 5, 1, "", "imread"], [67, 5, 1, "", "merge"], [68, 5, 1, "", "meshio2mymesh"], [69, 5, 1, "", "mymesh2meshio"], [70, 5, 1, "", "plot"], [71, 4, 1, "", "points"], [72, 5, 1, "", "read"], [73, 5, 1, "", "removeElems"], [74, 5, 1, "", "reset"], [75, 5, 1, "", "validate"], [76, 5, 1, "", "view"], [77, 5, 1, "", "write"]], "mymesh.octree": [[194, 1, 1, "", "Function2Octree"], [195, 1, 1, "", "Octree2Dual"], [196, 1, 1, "", "Octree2Voxel"], [197, 1, 1, "", "Points2Octree"], [198, 1, 1, "", "Print"], [199, 1, 1, "", "SearchOctree"], [200, 1, 1, "", "SearchOctreeTri"], [201, 1, 1, "", "Surface2Octree"], [202, 1, 1, "", "Voxel2Octree"], [203, 1, 1, "", "getAllLeaf"]], "mymesh.primitives": [[204, 1, 1, "", "Box"], [205, 1, 1, "", "Circle"], [206, 1, 1, "", "CirclePt"], [207, 1, 1, "", "Cylinder"], [208, 1, 1, "", "Extrude"], [209, 1, 1, "", "Grid"], [210, 1, 1, "", "Grid2D"], [211, 1, 1, "", "Line"], [212, 1, 1, "", "Plane"], [213, 1, 1, "", "Revolve"], [214, 1, 1, "", "Sphere"], [215, 1, 1, "", "Torus"]], "mymesh.quality": [[216, 1, 1, "", "Area"], [217, 1, 1, "", "AspectRatio"], [218, 1, 1, "", "InverseOrthogonalQuality"], [219, 1, 1, "", "InverseOrthogonality"], [220, 1, 1, "", "MaxDihedral"], [221, 1, 1, "", "MeanRatio"], [222, 1, 1, "", "MinDihedral"], [223, 1, 1, "", "OrthogonalQuality"], [224, 1, 1, "", "Orthogonality"], [225, 1, 1, "", "Skewness"], [226, 1, 1, "", "SurfDihedralAngles"], [227, 1, 1, "", "Volume"], [228, 1, 1, "", "dihedralAngles"], [229, 1, 1, "", "equiangular_skewness"], [230, 1, 1, "", "quad_skewness"], [231, 1, 1, "", "tet_vol_skewness"], [232, 1, 1, "", "tri_skewness"]], "mymesh.rays": [[233, 1, 1, "", "BoundaryBoundaryIntersection"], [234, 1, 1, "", "BoxTrianglesIntersection"], [235, 1, 1, "", "PlaneBoxIntersection"], [236, 1, 1, "", "PlaneSurfIntersection"], [237, 1, 1, "", "PlaneTriangleIntersection"], [238, 1, 1, "", "PlaneTrianglesIntersection"], [239, 1, 1, "", "PointInBoundary"], [240, 1, 1, "", "PointInBox"], [241, 1, 1, "", "PointInSurf"], [242, 1, 1, "", "PointInTri"], [243, 1, 1, "", "PointsInSurf"], [244, 1, 1, "", "PointsInTris"], [245, 1, 1, "", "PointsInVoxel"], [246, 1, 1, "", "RayBoxIntersection"], [247, 1, 1, "", "RayBoxesIntersection"], [248, 1, 1, "", "RayOctreeIntersection"], [249, 1, 1, "", "RaySegmentIntersection"], [250, 1, 1, "", "RaySegmentsIntersection"], [251, 1, 1, "", "RaySurfIntersection"], [252, 1, 1, "", "RayTriangleIntersection"], [253, 1, 1, "", "RayTrianglesIntersection"], [254, 1, 1, "", "RaysSurfIntersection"], [255, 1, 1, "", "RaysTrianglesIntersection"], [256, 1, 1, "", "SegmentSegmentIntersection"], [257, 1, 1, "", "SegmentsSegmentsIntersection"], [258, 1, 1, "", "SurfSelfIntersection"], [259, 1, 1, "", "SurfSurfIntersection"], [260, 1, 1, "", "TriangleBoxIntersection"], [261, 1, 1, "", "TriangleTriangleIntersection"], [262, 1, 1, "", "TriangleTriangleIntersectionPt"], [263, 1, 1, "", "TrianglesTrianglesIntersection"], [264, 1, 1, "", "TrianglesTrianglesIntersectionPts"]], "mymesh.utils": [[265, 1, 1, "", "AABB"], [266, 1, 1, "", "BaryTet"], [267, 1, 1, "", "BaryTri"], [268, 1, 1, "", "BaryTris"], [269, 1, 1, "", "CalcFaceNormal"], [270, 1, 1, "", "Centroids"], [271, 1, 1, "", "CleanupDegenerateElements"], [272, 1, 1, "", "DeleteDegenerateElements"], [273, 1, 1, "", "DeleteDuplicateNodes"], [274, 1, 1, "", "DetectFeatures"], [275, 1, 1, "", "DilateVoxel"], [276, 1, 1, "", "ErodeVoxel"], [277, 1, 1, "", "ExtractRagged"], [278, 1, 1, "", "Face2NodeNormal"], [279, 1, 1, "", "MVBB"], [280, 1, 1, "", "MergeMesh"], [281, 1, 1, "", "MirrorMesh"], [282, 1, 1, "", "PadRagged"], [283, 1, 1, "", "Project2Surface"], [284, 1, 1, "", "RelabelNodes"], [285, 1, 1, "", "SortRaggedByLength"], [286, 1, 1, "", "SplitRaggedByLength"], [287, 1, 1, "", "SurfMapping"], [288, 1, 1, "", "TetMeshVol"], [289, 1, 1, "", "TriSurfVol"], [290, 1, 1, "", "ValueMapping"], [291, 1, 1, "", "getConnectedElements"], [292, 1, 1, "", "getConnectedNodes"], [293, 1, 1, "", "getElemConnectivity"], [294, 1, 1, "", "getElemNeighbors"], [295, 1, 1, "", "getNodeNeighborhood"], [296, 1, 1, "", "getNodeNeighborhoodByRadius"], [297, 1, 1, "", "getNodeNeighbors"], [298, 1, 1, "", "identify_type"], [299, 1, 1, "", "makePyramidLayer"]], "mymesh.visualize": [[300, 1, 1, "", "FaceColor"], [301, 1, 1, "", "GetTheme"], [302, 1, 1, "", "ParseColor"], [303, 1, 1, "", "View"], [304, 1, 1, "", "set_vispy_backend"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "method", "Python method"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:property", "5": "py:method"}, "terms": {"": [5, 16, 55, 86, 111, 128, 140, 142, 155, 156, 161, 162, 165, 168, 169, 170, 174, 178, 192, 193, 200, 246, 247, 252, 262, 264, 274, 305, 308, 312, 313, 316, 317, 321, 322, 323, 326, 327], "0": [2, 4, 5, 6, 7, 9, 11, 18, 24, 39, 66, 80, 86, 87, 88, 89, 90, 91, 98, 100, 104, 120, 123, 132, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 161, 165, 168, 170, 171, 172, 173, 177, 181, 182, 183, 184, 185, 186, 187, 194, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 218, 219, 223, 224, 225, 229, 230, 231, 232, 233, 238, 239, 241, 243, 249, 250, 252, 253, 255, 256, 257, 261, 262, 263, 264, 272, 273, 274, 285, 286, 303, 305, 306, 307, 308, 309, 310, 313, 314, 315, 318, 320, 321, 322, 327, 328], "00": [4, 9, 11, 318], "000": 11, "00012": 315, "001": 272, "002": 315, "0020": 138, "005": 315, "00529": 315, "00843": 315, "01": [4, 194, 315, 318], "0181": 315, "01880": 315, "019": 315, "0190": 138, "02": 274, "024": 315, "0262": 315, "027": 315, "03": 274, "03581": 315, "0363": 315, "04": [6, 9, 318], "05": [5, 9, 143, 149, 150, 151, 152, 153, 155, 161, 165, 168, 170, 204, 209, 210, 307, 310, 315, 318], "06": [252, 315], "08": [84, 142, 239, 241, 243], "08451039": 241, "08831v2": 135, "09": 315, "1": [2, 4, 5, 6, 7, 24, 25, 26, 39, 63, 66, 80, 86, 88, 90, 91, 98, 100, 104, 120, 123, 128, 132, 138, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 161, 165, 168, 170, 173, 177, 181, 182, 183, 185, 186, 187, 192, 194, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 219, 223, 224, 225, 229, 230, 231, 232, 246, 247, 252, 273, 274, 276, 277, 280, 282, 285, 286, 287, 290, 299, 302, 303, 305, 306, 307, 308, 309, 310, 313, 314, 315, 320, 321, 322, 323, 327, 328], "10": [2, 9, 26, 61, 65, 84, 91, 115, 118, 138, 185, 189, 190, 197, 205, 206, 207, 214, 215, 234, 246, 247, 252, 253, 255, 260, 261, 262, 263, 264, 285, 286, 298, 315, 320, 327], "100": [188, 208], "1002": 315, "1007": [26, 315], "1016": [138, 315], "10487472": [261, 262, 263, 264, 315], "10487487": 315, "1056": 315, "1080": [261, 262, 263, 264, 315], "10867651": [261, 262, 263, 264, 315], "1093": 315, "1097": 315, "11": 320, "1111": 315, "1145": [84, 234, 246, 247, 252, 253, 255, 260, 315], "1148": 315, "115": 315, "1198555": [234, 246, 247, 252, 253, 255, 260, 315], "1198746": [252, 253, 255, 315], "1198747": [234, 260, 315], "1198748": [246, 247, 315], "1199149": 241, "12": [85, 91, 242, 244, 272, 273, 307, 315, 318, 320], "123811": 315, "126": 315, "13": 320, "131": 315, "13th": 315, "14": [7, 67, 233, 236, 238, 251, 253, 254, 255, 258, 259, 261, 262, 263, 264, 273, 320], "144": 315, "1467": 315, "14th": 315, "15": 320, "150": 315, "15904": [84, 315], "15922": [84, 315], "16": 320, "160": 315, "161": 315, "162": 315, "163": 315, "1641": 315, "1652": 315, "166": 315, "167": 315, "169": 315, "170": 315, "172": 315, "179": 272, "18": [26, 138, 193, 315], "180": 272, "1805": 135, "182": 315, "19": 315, "1908": 315, "195": 315, "1973": 138, "1981": 315, "1986": 315, "1987": 315, "199": 315, "1991": 315, "1992": [126, 132, 133, 315], "1994": 315, "1995": 315, "1996": 315, "1997": [261, 262, 263, 264, 315], "1998": 315, "1d": [149, 151, 152, 316], "1e": [61, 67, 84, 85, 91, 142, 150, 185, 186, 188, 189, 233, 236, 238, 239, 241, 242, 243, 244, 251, 252, 253, 254, 255, 258, 259, 261, 262, 263, 264, 272, 273], "1to14": 123, "1to2": 104, "1to20": 104, "1to24": [98, 104], "1to2c": 104, "1to3": 123, "1to36": 123, "1to3c": 123, "1to4": 104, "1to5": 98, "1to6": 98, "2": [2, 5, 7, 38, 86, 88, 91, 104, 106, 120, 123, 132, 138, 139, 142, 147, 149, 151, 171, 172, 174, 175, 184, 185, 191, 193, 194, 205, 206, 207, 208, 213, 214, 215, 234, 247, 249, 250, 256, 257, 260, 261, 262, 263, 264, 273, 274, 280, 285, 286, 287, 290, 298, 299, 306, 307, 308, 309, 310, 315, 320, 321, 322, 325, 327], "20": [186, 205, 206, 207, 214, 215, 307, 315, 317], "2000": [187, 315], "20000330": 315, "2001": [289, 315], "2002": [26, 315], "2003": 315, "2004": [125, 130, 131, 315], "2005": [124, 128, 234, 246, 247, 252, 253, 255, 260, 315], "2008": 315, "2009": 315, "201": 315, "2010": 315, "2015": 315, "2016": 315, "2018": 315, "2020": 315, "2024": 315, "2025": 317, "203": 315, "21": [138, 315], "22": 315, "220": 315, "222": 315, "23": 315, "24": 315, "25": [6, 7, 177, 190, 192, 215, 261, 262, 263, 264, 274, 307, 315], "256": 320, "2629697": 315, "286": 315, "291": 315, "2d": [20, 90, 107, 109, 120, 134, 138, 148, 154, 208, 212, 213, 239, 247, 255, 282, 289, 305, 308, 309, 315], "2exi": 321, "2fxy": 321, "2x_ii": 321, "2x_iy_i": 321, "2y": 321, "2y_0": 321, "2y_1": 321, "2y_i": 321, "2y_n": 321, "3": [5, 9, 65, 91, 104, 107, 119, 123, 132, 138, 139, 142, 148, 177, 185, 186, 191, 193, 234, 237, 238, 239, 240, 241, 243, 245, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 263, 264, 268, 271, 272, 273, 285, 286, 298, 306, 307, 308, 309, 310, 315, 320, 321, 322, 325, 327], "30": [261, 262, 263, 264, 315], "3197517": 315, "32": [187, 315], "3201353": 315, "324": 315, "33": [86, 87, 88, 143, 149, 315], "336156": 315, "338193": 315, "338200": 315, "3386569": 315, "3392385": 315, "349": 315, "35": 2, "36": 7, "368": 315, "37": 315, "37401": 315, "37422": 315, "376": 315, "39": 315, "3c647": 315, "3d": [18, 66, 88, 98, 100, 104, 109, 110, 120, 123, 128, 135, 147, 148, 149, 151, 173, 177, 199, 208, 209, 213, 234, 235, 239, 240, 241, 243, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 258, 260, 289, 305, 308, 309, 315], "3dx": 321, "3e3": 315, "3gy": 321, "3x3": 200, "3x_i": 321, "3y_i": 321, "4": [2, 5, 7, 104, 105, 106, 107, 115, 116, 117, 118, 123, 132, 148, 185, 190, 191, 193, 271, 273, 285, 286, 297, 306, 307, 308, 309, 315, 318, 320], "407": 315, "412": 315, "43": 315, "45": 315, "46": 315, "47645033": 241, "5": [5, 6, 7, 65, 66, 86, 100, 102, 103, 104, 107, 123, 132, 143, 145, 146, 147, 149, 150, 151, 190, 192, 194, 201, 211, 214, 273, 285, 286, 298, 306, 308, 313, 314, 320, 321, 323], "50": 215, "50040": 315, "55": [7, 246, 247, 315], "557": 315, "564": 315, "569": 2, "58": 315, "6": [65, 86, 107, 121, 122, 123, 132, 149, 151, 152, 185, 187, 188, 189, 194, 252, 285, 286, 298, 306, 308, 315, 320, 323, 327], "60": [246, 247, 315], "608": [5, 9, 318], "63": 315, "632": 315, "640": [7, 9, 318], "647": [187, 315], "658": 315, "66": [26, 315], "668": [187, 315], "688": [6, 9, 318], "7": [7, 86, 91, 132, 285, 286, 308, 315, 320], "73": 138, "75": 252, "7721": 315, "781606": 315, "781653": 315, "7823": 315, "7830": 315, "79": [26, 315], "8": [6, 65, 84, 96, 97, 98, 99, 107, 132, 239, 241, 243, 285, 286, 298, 308, 315, 320, 326], "80": 5, "82": 272, "83": 315, "8659": 315, "8856": 315, "9": [5, 7, 153, 225, 285, 286, 306, 307, 310, 315, 320], "90020": 138, "90076": 315, "92": 315, "928": 318, "936": 9, "966131": 315, "966134": 315, "992": [2, 4, 318], "A": [11, 26, 65, 98, 104, 118, 123, 126, 132, 133, 138, 216, 234, 246, 247, 287, 298, 307, 309, 314, 315, 316, 317, 320, 321, 322, 323], "As": [317, 322, 323], "At": [39, 195], "By": [6, 27, 39, 47, 74, 86, 87, 88, 89, 90, 91, 94, 128, 149, 150, 151, 185, 186, 188, 189, 207, 208, 209, 210, 211, 212, 213, 214, 239, 249, 250, 256, 257, 271, 303, 308, 321], "For": [2, 28, 29, 31, 32, 33, 34, 35, 36, 38, 45, 83, 88, 89, 90, 91, 98, 104, 107, 108, 123, 144, 147, 148, 149, 150, 151, 155, 161, 165, 168, 169, 170, 174, 175, 185, 186, 188, 189, 207, 213, 216, 217, 218, 219, 223, 224, 225, 227, 239, 241, 243, 252, 253, 255, 268, 271, 275, 290, 291, 292, 294, 303, 307, 309, 310, 313, 314, 320, 321, 323, 326, 327, 328], "If": [1, 20, 24, 25, 26, 27, 39, 41, 43, 47, 50, 55, 64, 66, 70, 74, 75, 77, 87, 88, 89, 90, 91, 93, 94, 95, 100, 107, 108, 110, 111, 113, 128, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 181, 182, 183, 185, 186, 187, 188, 189, 190, 192, 193, 194, 196, 199, 201, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 231, 233, 243, 249, 250, 252, 256, 257, 258, 259, 261, 262, 263, 264, 271, 280, 287, 290, 291, 292, 294, 299, 303, 304, 307, 313, 322, 327], "In": [65, 130, 131, 252, 253, 255, 277, 282, 285, 286, 290, 298, 303, 306, 307, 310, 316, 317, 321, 322], "It": [26, 107, 188, 310, 317, 321, 322, 323, 326], "No": [87, 88, 89, 90, 91], "Not": [98, 104, 123, 294], "On": [138, 315], "One": [314, 320], "Or": 305, "Such": 6, "That": 238, "The": [2, 5, 18, 20, 26, 39, 62, 85, 86, 88, 90, 93, 95, 98, 99, 107, 108, 110, 111, 114, 123, 137, 146, 149, 150, 151, 152, 160, 174, 175, 177, 187, 190, 193, 194, 197, 201, 207, 214, 215, 268, 271, 273, 275, 276, 278, 281, 286, 287, 291, 292, 299, 304, 306, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 326, 327], "There": [46, 107, 305, 313, 314, 317, 323], "These": [7, 111, 255, 285, 286, 305, 307, 316, 320, 322], "To": [2, 6, 34, 140, 207, 299, 311, 314, 317, 322, 323, 327], "Will": [107, 234, 241, 243, 260, 283, 287, 290], "With": [255, 285], "_": [2, 313, 321], "_ax": 70, "_description_": [184, 194, 255, 303], "_i": [321, 328], "_j": 328, "_mesh": [68, 69], "_type_": [184, 194, 255, 303], "a1": 307, "a2": 307, "a3": 307, "a_i": [321, 322], "a_x": 322, "ab": [65, 228, 298, 315], "abil": [143, 145, 146, 149, 151, 152, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215], "abl": [157, 163, 175, 179], "about": [111, 177, 215, 281], "abov": [18, 152, 181, 182, 183, 193, 225, 320, 323], "absenc": 308, "academ": [1, 315], "acceler": [241, 243, 251, 254, 255], "accept": 310, "access": [77, 285, 314, 317], "accomplish": 321, "accord": [284, 316], "accordingli": 280, "accur": [2, 6, 323], "achiev": [186, 307, 314, 328], "acm": [84, 234, 246, 247, 252, 253, 255, 260, 315], "across": [1, 39, 322], "activ": [20, 323], "actual": [174, 175], "ad": [98, 104, 110, 123, 187, 190, 193, 313, 322, 323], "adapt": [193, 194, 315], "add": [107, 146, 186, 187, 322], "addit": [2, 91, 93, 95, 149, 151, 152, 285, 294, 316, 320, 321, 323], "addition": [75, 311, 312, 314], "adjac": [32, 45, 87, 88, 89, 90, 91, 185, 188, 189, 226, 261, 262, 263, 264, 274, 285, 297, 320, 322], "admiss": 327, "adopt": [310, 321], "adrian": [315, 322], "advanc": 307, "advantag": [314, 321], "after": [185, 188, 189, 190, 192, 193, 327], "ag073671": 317, "against": 326, "agatho": 315, "ahead": 322, "ai": 224, "aid": 315, "aim": [307, 317, 319], "akenin": [234, 260, 315], "al": [193, 327], "alec": 315, "alexand": 315, "algorithm": [16, 87, 88, 89, 90, 91, 134, 135, 138, 142, 195, 235, 246, 247, 252, 253, 255, 305, 315, 317, 319, 320, 322, 327], "alia": [60, 71], "alias": [54, 314], "align": [98, 104, 110, 123, 207, 235, 246, 247, 265, 279, 321, 327], "all": [6, 27, 55, 64, 65, 66, 74, 83, 90, 91, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 110, 113, 114, 116, 117, 119, 121, 122, 123, 128, 149, 151, 152, 185, 186, 188, 189, 190, 198, 203, 217, 219, 223, 224, 286, 287, 290, 298, 305, 306, 309, 311, 313, 314, 317, 318, 321, 322, 323, 327], "all_nod": 55, "allevi": 307, "allow": [1, 144, 149, 188, 303, 308, 317, 321, 322, 326, 328], "alohner08": [278, 315], "alon": 321, "along": [24, 26, 85, 87, 88, 89, 90, 91, 147, 181, 182, 183, 207, 213, 214, 283, 307, 314, 320, 327], "alpha": [2, 171, 172, 266, 267, 268, 283, 287, 302, 303], "alpha_0": 322, "alreadi": 50, "also": [5, 6, 15, 107, 211, 213, 261, 262, 263, 264, 284, 309, 317, 320, 322, 323, 328], "alter": [144, 150], "altern": [65, 114, 298, 304, 305, 322], "alwai": [285, 319], "am": 107, "ambigu": [65, 298, 308, 320], "amd": 315, "american": 315, "ami": 315, "amoller05": [234, 260, 315], "among": 322, "amount": [169, 208, 285, 313], "an": [18, 20, 25, 55, 66, 75, 76, 77, 86, 87, 89, 91, 100, 112, 114, 120, 124, 139, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 156, 157, 158, 159, 160, 162, 163, 164, 167, 174, 175, 178, 179, 180, 186, 187, 190, 192, 193, 194, 195, 196, 197, 201, 202, 207, 214, 217, 234, 235, 237, 238, 241, 243, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 260, 261, 262, 263, 264, 271, 272, 274, 278, 283, 287, 290, 294, 295, 296, 303, 304, 306, 308, 311, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 326, 327, 328], "analog": 316, "analogi": [186, 187, 315], "analysi": [4, 305, 306, 316, 317, 318], "analyt": 2, "analyticalcurvatur": 2, "analyz": [3, 10, 317], "andr": 317, "andrea": 315, "angl": [47, 190, 192, 213, 220, 222, 224, 225, 226, 228, 272, 274, 278], "anglestep": 213, "angletol": 272, "ani": [1, 7, 26, 27, 55, 65, 72, 75, 112, 114, 144, 150, 152, 159, 160, 190, 227, 237, 238, 294, 298, 307, 310, 312, 314, 317, 322, 326], "anisotrop": 209, "annual": 315, "anoth": [185, 188, 189, 195, 239, 273, 287, 290, 306, 307, 320], "ansi": [218, 219, 223, 224], "anyth": 321, "apart": [186, 273], "api": [317, 319], "appear": [65, 280, 298], "append": 99, "appli": [88, 90, 186, 187, 315, 328], "applic": [77, 307, 315, 317], "approach": [6, 65, 194, 283, 287, 290, 298, 307, 320, 322], "appropri": [75, 77, 307, 313, 317], "approxim": [6, 86, 130, 143, 145, 149, 150, 151, 155, 161, 165, 168, 170, 204, 211, 315, 320], "ar": [2, 5, 6, 16, 18, 19, 27, 34, 39, 46, 54, 55, 64, 65, 74, 75, 87, 88, 89, 90, 91, 97, 99, 103, 107, 110, 111, 114, 115, 117, 122, 125, 128, 130, 131, 142, 144, 146, 147, 148, 149, 150, 151, 152, 156, 157, 158, 162, 163, 164, 178, 179, 180, 185, 186, 188, 189, 190, 193, 194, 201, 211, 237, 238, 243, 245, 251, 252, 253, 254, 258, 269, 271, 273, 278, 285, 286, 287, 294, 297, 298, 303, 305, 306, 307, 308, 309, 310, 311, 314, 316, 317, 319, 320, 321, 322, 323, 326, 327, 328], "arang": 208, "arbitrari": [315, 327], "arbitrarili": [65, 298], "arcco": [2, 228], "arctan": 321, "area": 225, "aren": [65, 94, 111, 186, 298, 323], "arg": [149, 151, 152, 194], "argument": [5, 70, 74, 76, 124, 149, 151, 152, 159, 160, 192, 239], "ariella": 317, "aris": [2, 316], "around": [275, 295, 296, 321], "arrai": [2, 20, 22, 53, 66, 70, 86, 87, 88, 89, 90, 93, 95, 100, 104, 110, 113, 120, 123, 125, 128, 130, 131, 134, 135, 139, 140, 143, 144, 145, 146, 147, 148, 149, 151, 152, 185, 186, 190, 193, 194, 195, 201, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 234, 235, 237, 238, 241, 246, 247, 252, 253, 255, 258, 260, 261, 262, 263, 264, 268, 271, 273, 277, 282, 283, 303, 307, 309, 310, 323], "array_lik": [20, 24, 25, 27, 55, 70, 86, 87, 89, 91, 99, 104, 106, 111, 114, 115, 118, 120, 123, 128, 134, 135, 139, 140, 142, 143, 145, 146, 148, 149, 150, 151, 152, 154, 166, 167, 173, 177, 185, 186, 188, 189, 190, 192, 193, 194, 197, 199, 200, 201, 202, 205, 206, 207, 208, 211, 213, 214, 215, 216, 220, 222, 226, 227, 228, 231, 233, 234, 235, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 268, 271, 279, 284, 286, 293, 297, 303], "articl": 315, "artifici": 315, "arxiv": [135, 315], "ascii": 77, "aspect": [64, 217], "aspectratio": [64, 80], "assert": 75, "assess": [194, 320, 326], "assign": [186, 187, 299], "associ": [20, 120, 280, 290, 306, 326], "assum": [87, 88, 89, 90, 91, 107, 115, 147, 156, 157, 158, 162, 163, 164, 178, 179, 180, 188, 239, 269, 275, 276, 297, 299, 308, 309, 310], "assumpt": 321, "attempt": [65, 148, 190, 298, 304], "attribut": [20, 314], "aubri": 315, "aug": 315, "auger": 317, "author": 319, "auto": [92, 107, 112, 193, 227, 271, 297], "automat": [20, 216], "avail": [6, 64, 185, 186, 188, 189, 303, 304, 310, 319], "averag": [100, 188, 193, 278, 321, 322], "avoid": [65, 187, 298, 305, 314], "awai": 322, "ax": [2, 70, 88, 120, 147, 207, 214, 321, 327], "ax1": [2, 307], "ax2": [2, 307], "ax3": [2, 307], "ax4": 2, "axi": [6, 7, 70, 147, 177, 181, 182, 183, 205, 206, 207, 208, 213, 214, 215, 235, 246, 247, 258, 265, 327], "axial_resolut": 207, "b": [171, 172, 234, 237, 238, 252, 253, 255, 260, 261, 262, 263, 264, 307, 315, 321, 322, 323, 327], "b978": 315, "b_i": 321, "b_x": 322, "b_y": 322, "back": [110, 113], "backend": 304, "background": [128, 149, 151, 274, 307], "bajaj": 315, "balanc": 314, "bar": [2, 327, 328], "bari": [266, 267], "barrier": 291, "barrierelem": 291, "barriernod": 292, "barru": [246, 247, 315], "baryarea": [242, 244], "barycentr": [266, 267, 268, 283, 287, 290, 322, 327], "barytri": 322, "base": [1, 2, 25, 26, 40, 66, 86, 100, 124, 125, 128, 130, 131, 139, 144, 150, 194, 195, 207, 278, 289, 303, 307, 310, 312, 314, 315, 316, 320, 325, 326, 327], "basic": [16, 322], "bd02": [26, 315], "becaus": 6, "becom": [190, 328], "been": [2, 41, 43, 110, 111, 190, 276, 313, 320, 322], "befor": 190, "begin": [321, 322, 327], "behavior": 114, "behind": [319, 322], "being": [19, 55, 190, 217, 218, 219, 223, 224, 225, 229, 230, 231, 232, 252, 253, 255, 283, 306, 307, 310, 313, 317, 321, 322, 326], "below": [152, 190, 306, 320], "belyaev": [150, 315], "ben": 315, "bend": 321, "benjamin": 315, "bent": 321, "bernd": 315, "best": [2, 80, 96, 97, 101, 102, 103, 105, 116, 117, 119, 121, 122, 218, 219, 223, 224, 225, 229, 230, 231, 232], "beta": [266, 267, 268, 283, 287], "beta_0": 322, "better": [130, 131, 290, 313], "between": [1, 6, 85, 87, 88, 89, 90, 91, 93, 94, 95, 98, 104, 110, 123, 187, 190, 193, 194, 195, 211, 213, 220, 222, 224, 226, 228, 233, 234, 235, 237, 238, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 264, 268, 274, 306, 307, 308, 319, 326, 327, 328], "bf01313411": 315, "bfb0014497": 315, "bgcolor": [2, 5, 6, 7, 86, 143, 149, 151, 152, 153, 154, 155, 161, 165, 168, 170, 173, 177, 185, 204, 205, 207, 208, 209, 210, 211, 214, 215, 274, 303, 307, 314], "bicub": [88, 90], "bidirect": [252, 253, 254, 255, 327], "big": [321, 322], "biggest": 321, "bilinear": [87, 88, 89, 90], "binari": [77, 320], "bioinformat": 315, "biomechan": [1, 315, 317], "bit": 5, "blackbox": 319, "blake": 317, "blo00": [186, 315, 328], "blo94": [91, 315, 320], "block": 314, "blom": [187, 315, 328], "bloomenth": [315, 320], "blue": 306, "bmatrix": [321, 327], "board": 1, "bolun": 315, "bone": [315, 321], "bong": 315, "bool": [20, 26, 27, 39, 55, 64, 67, 70, 77, 87, 88, 89, 90, 91, 93, 94, 95, 107, 108, 110, 113, 128, 144, 146, 149, 150, 151, 185, 186, 187, 188, 189, 190, 192, 193, 198, 200, 207, 209, 210, 212, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 233, 234, 235, 237, 238, 239, 240, 241, 243, 245, 246, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 273, 279, 280, 285, 286, 287, 290, 303], "boolean": [156, 157, 158, 162, 163, 164, 178, 179, 180, 247, 307, 317], "boston": 317, "both": [2, 19, 55, 65, 150, 174, 175, 187, 196, 252, 253, 254, 255, 298, 303, 316, 317, 321, 322, 323, 326, 327, 328], "bottasso": [26, 315], "boubekeur": 315, "bound": [5, 6, 24, 27, 55, 70, 86, 149, 151, 152, 153, 159, 160, 194, 204, 209, 210, 212, 234, 235, 246, 247, 260, 265, 279, 303, 322, 326, 327], "boundai": 233, "boundari": [5, 21, 22, 25, 26, 87, 88, 89, 90, 128, 152, 193, 200, 233, 239, 245, 315, 316, 320, 322], "boundaryconn": 239, "boundaryconn1": 233, "boundaryconn2": 233, "bow81": [134, 315, 322], "bowyer": [134, 135, 142, 315], "bowyerwatson": 142, "bowyerwatson2d": 322, "bowyerwatson3d": 322, "box": [24, 86, 209, 210, 234, 235, 240, 246, 247, 260, 265, 279, 307, 310, 315, 326], "boxcent": [234, 260], "branch": 326, "break": 54, "bridg": 319, "bright": [128, 321], "brightobject": 128, "brute": [283, 287, 290], "bu": [7, 315], "bucati": 7, "build": [128, 317, 322], "built": [6, 310, 311], "bx": 321, "bx_0y_0": 321, "bx_1y_1": 321, "bx_ny_n": 321, "bxy": 321, "c": [26, 192, 234, 237, 238, 252, 253, 255, 260, 261, 262, 263, 264, 289, 315, 321, 322, 323, 327], "c_i": 321, "c_x": 322, "c_y": 322, "cach": [74, 314], "cag": 315, "cagd": 315, "calcfacenorm": [125, 130, 131, 226], "calcul": [33, 38, 47, 111, 124, 125, 126, 127, 128, 129, 130, 131, 133, 150, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 243, 265, 269, 270, 278, 279, 288, 289, 307, 314, 322, 327], "call": [294, 314], "callabl": [157, 163, 175, 179, 193], "came": 92, "can": [2, 5, 6, 7, 20, 26, 46, 64, 70, 83, 88, 89, 90, 91, 111, 114, 125, 128, 130, 131, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 159, 160, 190, 192, 193, 199, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 251, 254, 255, 268, 273, 283, 285, 287, 290, 291, 292, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 316, 317, 320, 321, 322, 323, 326, 327, 328], "candid": 323, "cannot": 291, "cap": [132, 207, 321], "capabl": [1, 10, 16, 86, 305], "captur": 321, "care": [320, 326], "carefulli": 305, "cartesian": 39, "case": [65, 98, 110, 123, 147, 261, 262, 263, 264, 290, 298, 306, 311, 316, 320, 321, 322], "cast": [81, 239, 241, 243, 277], "categor": 132, "categori": 132, "caus": [252, 313], "ccw": 111, "cdot": 327, "cell": [69, 187, 314], "cellcent": 187, "center": [7, 24, 98, 104, 123, 154, 173, 177, 185, 187, 188, 189, 205, 206, 207, 208, 213, 214, 215, 234, 260, 310, 320, 321, 322], "centric": [266, 267], "centrod": 187, "centroid": [27, 86, 99, 111, 114, 152, 166, 195, 224, 313, 314, 326], "certain": 148, "cgal": 317, "chalmer": 315, "chanc": [65, 298], "chandrajit": 315, "chang": [47, 54, 62, 194, 271, 320, 322, 323, 328], "channel": 309, "charact": 192, "characterist": [34, 38], "charl": 315, "che95": [87, 88, 315, 320], "check": [75, 252, 253, 254, 255, 271, 322, 323, 326, 327], "chen": 289, "chernyaev": [315, 320], "chi": [34, 38], "child": [98, 104, 110, 123, 326], "children": 326, "choic": [186, 239, 241, 243, 322, 326], "choos": [252, 253, 255, 320], "chosen": [86, 303, 304, 307, 314], "ci": 224, "circl": [206, 207, 215], "circular": [177, 207, 214, 215], "circumfer": [205, 206, 207], "circumferenti": [205, 206, 214, 215], "citat": 319, "cite": 322, "class": [20, 78, 148, 305, 306, 312, 321], "classic": 307, "classif": 321, "classifi": [65, 91, 274, 298], "cleaner": 307, "cleanup": [27, 55, 67, 88, 89, 90, 91, 190, 280], "cleanup_tol": 91, "clear": [47, 74, 308, 317], "clim": [70, 303], "cline": [315, 320], "clockwis": [97, 103, 111, 117, 122, 137, 269, 322], "clone": 311, "close": [2, 91, 112, 114, 128, 207, 238, 239, 241, 243, 252, 253, 255, 261, 262, 263, 264, 307, 316, 327], "cma": 315, "cmu": 315, "cnm": 315, "co": [155, 161, 165, 168, 170, 315], "coarsen": [66, 100, 143, 145, 146, 147, 190], "code": [2, 5, 6, 7, 303, 314, 317], "collaps": 190, "collect": [305, 306, 316], "color": [2, 5, 7, 274, 300, 302, 303, 307, 317], "color_convert": [300, 303], "colorscal": 70, "colorspaci": [303, 311], "column": 139, "column_stack": 208, "com": [313, 315], "combin": [6, 149, 255, 307, 310, 315, 320], "come": [218, 219, 223, 224, 314], "comjnl": 315, "command": 313, "common": [312, 321, 323], "commonli": [6, 314, 316, 321], "commun": [315, 317], "commut": 39, "compar": [2, 268], "comparison": 268, "compat": [6, 149, 313], "compil": 317, "complement": 321, "complet": 278, "complex": [7, 307, 310, 319, 323, 326], "compo": 316, "compon": [40, 321, 327], "comprehens": 317, "compris": 306, "comput": [1, 26, 46, 47, 91, 138, 146, 188, 234, 260, 291, 292, 307, 315, 316, 322, 327], "computation": 307, "concav": 321, "concern": 307, "conclud": 327, "concurr": 322, "condens": 315, "condit": [55, 310, 327], "confer": 315, "configur": 323, "confirm": 75, "conflict": 305, "connect": [5, 20, 21, 28, 29, 31, 32, 35, 36, 45, 50, 51, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 130, 131, 134, 135, 137, 139, 140, 144, 150, 159, 160, 187, 188, 195, 196, 201, 202, 208, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 229, 230, 231, 232, 233, 239, 241, 243, 245, 251, 254, 258, 259, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 281, 283, 284, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 308, 314, 316, 320, 321, 322, 323, 328], "connet": 91, "consid": [18, 25, 91, 128, 143, 145, 146, 149, 151, 152, 238, 249, 250, 252, 253, 255, 256, 257, 294, 310, 316, 321], "consider": [187, 315], "consist": [16, 104, 144, 150, 275, 276, 283, 299, 306, 316, 320, 321, 322, 327], "constant": [88, 90], "constitut": [6, 272, 294], "constrain": [1, 140, 311], "constraint": [140, 142], "construct": [7, 114, 205, 206, 251, 254, 255, 306, 315, 320, 321, 322, 326], "contain": [2, 20, 26, 65, 66, 70, 84, 92, 93, 95, 107, 143, 145, 146, 148, 149, 151, 152, 187, 195, 196, 197, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 227, 271, 273, 275, 276, 283, 287, 288, 289, 290, 291, 292, 297, 298, 299, 306, 309, 316, 317, 322, 323, 326, 327], "continu": [1, 6, 98, 104, 110, 123, 156, 157, 158, 162, 163, 164, 178, 179, 180, 326], "contour": [128, 143, 149, 307, 315], "contract": [190, 192, 193], "contractit": 192, "contribut": [125, 130, 131, 317], "control": [6, 303, 328], "conveni": [314, 321], "convent": [18, 310, 316], "converg": [185, 186, 188, 189, 191], "convers": [66, 251, 254, 303, 317], "convert": [66, 68, 69, 83, 91, 128, 150, 159, 160, 195, 196, 208, 213, 227, 271, 273, 277, 297, 303, 306, 312, 314, 316], "convex": [137, 138, 316, 321, 323], "convolut": 144, "coolwarm": [2, 274], "coordin": [20, 24, 40, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 138, 139, 140, 142, 149, 151, 152, 153, 154, 155, 159, 160, 161, 165, 168, 170, 173, 177, 181, 182, 183, 187, 193, 194, 195, 196, 197, 199, 200, 201, 202, 206, 207, 208, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 314, 316, 321, 322, 323, 327, 328], "copi": [27, 39, 55, 144, 150, 188, 281], "coplanar": [206, 322, 327], "core": 314, "corner": [90, 99, 185, 186, 188, 189, 190, 265, 274, 279, 320, 321], "correct": [128, 315, 320], "correspond": [64, 74, 87, 88, 89, 94, 109, 110, 113, 120, 143, 145, 146, 147, 174, 175, 181, 182, 183, 188, 192, 194, 201, 207, 283, 287, 290, 306, 309, 321, 326, 327], "cosalpha": 2, "cosin": 224, "cost": [91, 146], "could": [1, 114, 152, 205, 206, 207, 208, 213, 214, 215, 316, 320, 323, 327], "count": [34, 261, 262, 263, 264, 327], "counter": [97, 103, 111, 117, 122, 269, 322], "counterclockwis": [137, 138], "cours": [208, 234, 246, 247, 252, 253, 255, 260, 315, 323], "cover": 299, "creat": [1, 7, 20, 55, 62, 64, 65, 91, 114, 144, 150, 188, 190, 251, 254, 275, 281, 283, 287, 290, 298, 307, 313, 314, 320, 322, 326], "creation": 326, "criteria": [188, 201, 326], "crop": [39, 55, 66, 100], "cross": [154, 207, 214, 215, 322, 327], "csg": 310, "ct": [317, 321], "cube": [2, 86, 87, 88, 143, 149, 307, 315, 326], "cubic": [88, 90, 100, 125, 143, 149, 209, 275, 299, 315, 316], "cubicfit": [2, 130, 131, 321], "cuda": 1, "cup": [132, 321], "cupi": 1, "current": [16, 25, 26, 67, 185, 188, 189, 195, 272, 275, 290, 294, 317, 326], "curv": [124, 128, 315], "curvatur": [3, 4, 6, 10, 315, 317, 318], "curved": 63, "custom": 314, "cut": [24, 314], "cv2": 311, "cw": 111, "cy": 321, "cylind": [214, 215, 321], "cylindr": [154, 207, 321], "d": [1, 6, 26, 155, 193, 234, 237, 238, 252, 253, 255, 260, 261, 262, 263, 264, 307, 315, 317, 321, 323, 327], "daniel": 315, "dark": 128, "darker": 128, "data": [20, 55, 66, 69, 78, 88, 90, 100, 120, 128, 146, 147, 148, 196, 201, 241, 243, 248, 277, 280, 287, 303, 306, 307, 309, 315, 317, 322, 326], "date": 317, "david": [315, 322], "de": 315, "deal": 314, "dec": 315, "decid": [190, 303], "decompos": [98, 104, 110, 113, 123, 320], "decomposit": [98, 104, 123], "decreas": 188, "def": [5, 310], "default": [18, 20, 24, 25, 26, 27, 39, 47, 55, 64, 66, 67, 70, 74, 77, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 104, 107, 108, 110, 111, 113, 114, 123, 128, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 233, 234, 238, 239, 241, 243, 245, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 294, 297, 299, 303, 304, 308, 310], "defect": 307, "defin": [25, 30, 37, 79, 87, 88, 89, 90, 91, 115, 166, 167, 281, 287, 290, 306, 314, 316, 321, 322, 327], "definit": [218, 219, 223, 224, 314], "deform": [186, 328], "defualt": 290, "deg": 64, "degener": [65, 88, 89, 90, 195, 271, 272, 298], "degre": [64, 190, 192, 272, 274], "delaunai": [1, 311, 315], "delaunau": 315, "delet": [271, 272, 280, 322], "deleteduplicatenod": [91, 271], "delta": 266, "delval": 277, "demand": 307, "demo": 317, "demo_curvatur": [2, 4, 318], "demo_heart": [5, 9, 318], "demo_mix": [6, 9, 318], "demo_pasta": [7, 9, 318], "demonstr": 7, "deni": 315, "denot": [87, 88, 89, 90, 91, 213, 303], "depend": [1, 6, 110, 174, 175, 271, 307, 317, 321], "depict": 323, "depth": [86, 194, 197, 201, 326], "describ": [18, 86, 149, 150, 151, 152, 193, 194, 321, 322], "descript": 317, "design": [6, 308, 315, 317], "destruct": [144, 150], "det": [322, 327], "detail": [46, 47, 93, 95, 297, 307, 310, 312, 317], "detect": [107, 144, 150, 194, 234, 235, 237, 238, 246, 247, 249, 250, 252, 253, 255, 256, 257, 260], "detectfeatur": [185, 186, 188, 189, 190, 192], "determin": [20, 41, 43, 55, 64, 67, 88, 89, 90, 91, 98, 110, 114, 123, 128, 152, 188, 190, 194, 196, 216, 224, 228, 238, 239, 241, 243, 245, 252, 253, 254, 255, 261, 262, 263, 264, 272, 273, 274, 278, 285, 293, 294, 297, 303, 320, 322, 326, 327], "detomi": [26, 315], "deuteranomali": 303, "dev": 317, "develop": [16, 83, 317, 322], "deviat": [2, 128, 144, 209, 210, 212], "diagon": 320, "diamond": 6, "dicom": [66, 100, 148, 309, 311], "dict": [64, 149, 151, 152, 184, 185, 186, 188, 189, 192, 322], "dictionari": [20, 64, 149, 151, 152, 323], "diff": 307, "diff_fun": 157, "diff_sym": [158, 164], "diff_val": 156, "differ": [8, 10, 20, 84, 86, 107, 112, 144, 150, 156, 157, 158, 164, 192, 237, 238, 271, 303, 306, 307, 310, 316, 317, 321, 327], "differen": [190, 193], "differenti": [86, 150, 155, 156, 157, 158, 161, 162, 163, 164, 165, 168, 170, 178, 179, 180], "difff": 307, "difficult": [307, 317, 322], "dihedr": [64, 220, 222, 226, 228, 274], "dimens": [40, 139, 142, 309, 310], "dimension": [87, 89, 142, 309, 315, 316, 322, 326], "dimetr": 303, "dimitri": 315, "direct": [2, 86, 111, 149, 151, 152, 174, 175, 181, 182, 183, 194, 207, 208, 209, 234, 235, 246, 247, 252, 253, 254, 255, 260, 307, 315, 317, 321, 327], "direction": [128, 321], "directli": [2, 91, 96, 97, 98, 101, 102, 103, 104, 105, 116, 117, 119, 121, 122, 123, 143, 145, 146, 149, 151, 152, 188, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 305, 307, 309, 314, 317, 321, 322], "directori": [66, 100, 147, 148, 309, 311], "dirichlet": 315, "disadvantag": 321, "discard": [66, 100], "discuss": [319, 321, 322], "displac": [186, 187], "displai": [70, 190, 192, 193, 303], "distanc": [149, 151, 166, 167, 169, 174, 175, 177, 193, 194, 208, 215, 238, 251, 254, 273, 283, 287, 290, 315, 322, 327, 328], "distort": [144, 150], "distribut": [5, 328], "divid": [201, 217, 321, 326], "divis": 315, "dl": [84, 315], "do": [188, 190, 314, 317], "document": 317, "doesn": [26, 27, 112, 188, 190, 322, 326], "doi": [26, 84, 138, 234, 246, 247, 252, 253, 255, 260, 261, 262, 263, 264, 315], "domain": 316, "dome": 132, "domin": [207, 213, 214], "don": [39, 75, 249, 250, 251, 254, 256, 257, 322], "done": [5, 305, 307], "doorn": [126, 132, 133, 315], "doubl": 55, "down": 309, "download": [2, 5, 6, 7, 311], "dramat": 1, "drawn": 322, "driven": 317, "dtype": [148, 277], "dual": [86, 111, 195, 315], "dualconn": [111, 195], "dualcoord": [111, 195], "dualgrid_method": 86, "due": [143, 145, 146, 149, 151, 152, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 322], "duplic": [67, 88, 89, 90, 108, 273, 280], "dure": [144, 150, 185, 186, 188, 189], "dx": [315, 321], "dx_0": 321, "dx_1": 321, "dx_n": 321, "dxnew": 187, "dynam": 315, "e": [2, 34, 87, 89, 93, 94, 95, 98, 104, 107, 108, 110, 120, 123, 147, 148, 190, 193, 195, 207, 213, 225, 234, 237, 238, 240, 252, 253, 255, 260, 261, 262, 263, 264, 306, 307, 309, 311, 313, 315, 316, 317, 321, 322, 323, 327], "e0": 107, "e1": 107, "e10": 107, "e2": 107, "e3": 107, "e4": 107, "e5": 107, "e6": 107, "e7": 107, "e8": 107, "e9": 107, "e_": 327, "e_1": 327, "e_2": 327, "each": [20, 28, 29, 30, 31, 32, 35, 36, 37, 40, 45, 86, 87, 89, 90, 91, 94, 100, 106, 107, 108, 110, 111, 113, 118, 124, 125, 128, 130, 131, 149, 151, 152, 159, 160, 166, 167, 185, 187, 188, 189, 192, 193, 194, 197, 201, 209, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 234, 238, 245, 247, 251, 253, 254, 255, 258, 263, 264, 273, 275, 276, 278, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 306, 308, 309, 314, 316, 320, 321, 322, 323, 326, 327], "earliest": 320, "easi": [314, 317], "easili": [6, 314, 323], "ebcb8b": 7, "ecosystem": 314, "ederror": [86, 194, 326], "edg": [20, 28, 29, 34, 41, 87, 88, 89, 90, 91, 92, 93, 96, 98, 99, 101, 102, 104, 105, 107, 110, 112, 116, 118, 119, 121, 123, 128, 140, 142, 144, 150, 185, 186, 188, 189, 190, 192, 193, 205, 206, 207, 214, 215, 217, 261, 262, 263, 264, 271, 274, 291, 294, 303, 306, 307, 308, 316, 320, 322, 327], "edgeconn": [107, 306, 323], "edgeedg": [261, 262, 263, 264], "edgeelem": 107, "edgeelemconn": [306, 323], "edgemod": [88, 90], "edges2uniqu": 306, "edgeset": [20, 56], "edu": [7, 315], "educ": 319, "effici": [19, 65, 155, 161, 165, 168, 170, 246, 247, 252, 253, 255, 289, 298, 307, 311, 314, 315, 320, 322, 323, 326, 327], "effort": 307, "egregium": 321, "eigenvalu": 321, "eight": 326, "either": [25, 55, 65, 86, 87, 88, 89, 90, 91, 120, 128, 137, 144, 147, 149, 150, 157, 163, 175, 179, 190, 193, 204, 208, 209, 210, 212, 213, 215, 225, 268, 271, 273, 298, 303, 306, 316, 317, 320], "elbow": 7, "elemconn": [111, 187, 278, 293, 294, 306], "elemdata": [20, 25, 55, 64, 66, 146, 190, 192, 193, 303], "element": [5, 6, 20, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 42, 51, 55, 64, 65, 66, 69, 70, 75, 80, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 117, 119, 120, 121, 122, 123, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159, 184, 186, 187, 188, 190, 192, 193, 194, 195, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 241, 243, 246, 251, 254, 258, 259, 260, 269, 270, 271, 272, 273, 274, 275, 276, 278, 281, 283, 284, 287, 290, 291, 293, 294, 297, 298, 299, 303, 306, 307, 309, 314, 315, 316, 317, 320, 321, 322, 326], "elementedg": 92, "elemet": 122, "elemid": [73, 110, 113, 283], "elemneighbor": [226, 291, 294, 306], "elemnorm": [226, 239, 241, 243, 269, 278], "elemregion": 291, "elemset": [20, 57], "elemtyp": [91, 92, 107, 112, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 227, 274, 297, 307], "elia": 315, "elimin": [5, 326], "elis": [315, 317], "ellipsoid": 214, "ellipt": [207, 214, 321], "elsewher": 310, "embed": 321, "emploi": 319, "empti": [26, 65, 75, 196, 198, 249, 250, 256, 257, 298, 326], "enabl": [1, 155, 161, 165, 168, 170, 326], "encod": 326, "encount": 2, "end": [2, 5, 6, 7, 207, 249, 250, 256, 257, 321, 322, 327], "endpoint": 249, "endpt_inclus": [249, 250, 256, 257], "energi": 315, "enforc": [209, 210, 212], "engin": [26, 315], "enhanc": [1, 311], "enough": [321, 322], "ensur": [140, 258, 320, 322, 323, 327], "entir": 26, "entiti": 306, "entri": [20, 25, 55, 64, 74, 88, 93, 95, 107, 143, 145, 146, 190, 192, 193, 277, 303, 320, 323], "environ": [83, 313], "ep": [65, 85, 194, 233, 236, 238, 239, 241, 242, 243, 244, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 298], "epsilon": 327, "equal": [2, 25, 143, 145, 146, 149, 151, 152, 187, 190, 193, 209, 210, 212, 268, 272, 274, 285, 286, 303, 321, 326], "equat": [187, 321], "equiangular": [225, 229], "equilater": [225, 231], "equilibrium": [186, 328], "equival": [55, 115, 307, 314], "error": [75, 86, 125, 128, 130, 131, 194, 290, 307, 311, 320], "especi": 307, "essenti": [322, 326], "establish": [311, 314], "estim": 321, "et": [193, 327], "eta": 184, "etc": [207, 271, 303, 313], "euclidian": 194, "euler": [34, 38], "ev": 315, "evalu": [64, 86, 91, 124, 128, 144, 149, 151, 152, 155, 159, 160, 161, 165, 166, 167, 168, 170, 181, 182, 183, 193, 194, 307, 313, 317, 320, 326], "even": [26, 252, 303, 327], "evenli": [5, 144, 150, 328], "everi": [187, 322, 323, 326], "ex": [107, 109, 226, 271, 273, 275, 276, 288, 289, 290, 299, 321], "ex_0": 321, "ex_1": 321, "ex_n": 321, "exact": [86, 326], "exact_h": [209, 210, 212], "exactli": [200, 209, 210, 212, 237, 238, 245, 249, 250, 256, 257, 261, 262, 263, 264, 273, 322, 326], "examin": 321, "exampl": [2, 4, 5, 6, 7, 9, 11, 39, 86, 91, 98, 104, 123, 142, 143, 146, 149, 151, 152, 153, 154, 155, 161, 165, 168, 170, 173, 177, 185, 204, 205, 207, 208, 211, 214, 215, 252, 253, 255, 273, 274, 285, 286, 309, 310, 312, 313, 314, 317, 318, 320, 321, 323, 326, 327], "example_func": 310, "except": [285, 317], "exclud": 249, "exclus": 55, "exculd": [283, 287, 290], "execut": [4, 9, 11, 313, 318], "executionmod": 313, "exist": [26, 55, 75, 114, 147, 274, 307, 316, 317, 320, 322, 326], "expand": 322, "expans": 1, "expect": 83, "expens": 152, "experiment": 83, "explain": [195, 317], "explan": 319, "explicitli": [65, 298], "explor": 1, "expos": [107, 112, 144, 150, 316], "express": [155, 161, 165, 168, 170], "extend": [317, 320, 322], "extens": [77, 148, 309, 317], "exterior": [87, 88, 89, 90, 91], "extern": [317, 328], "extract": [13, 25, 87, 89, 91, 96, 97, 101, 102, 103, 105, 108, 109, 112, 116, 117, 119, 121, 122, 289, 317, 320], "extrud": [7, 207, 212], "extrus": 208, "ezproxi": 315, "f": [6, 18, 34, 86, 149, 151, 152, 155, 161, 165, 168, 170, 175, 187, 192, 193, 194, 234, 237, 238, 252, 253, 255, 260, 261, 262, 263, 264, 310, 315, 321, 328], "f1": [157, 163, 179], "f2": [157, 163, 179], "face": [20, 26, 34, 35, 36, 43, 93, 94, 95, 97, 98, 99, 103, 104, 107, 108, 117, 122, 123, 187, 220, 222, 224, 226, 269, 274, 278, 284, 294, 303, 306], "face2nodenorm": [46, 47, 125, 130, 131], "face2uniqu": 108, "face_alpha": [300, 303], "facecent": 187, "faceconn": [108, 306, 323], "faceelem": 108, "faceelemconn": [306, 323], "faces2surfac": 108, "faces2uniqu": 306, "faceset": [20, 26, 58], "facet": 315, "facilit": 323, "factor": [26, 66, 100, 143, 145, 146, 147, 181, 182, 183, 187], "fail": [75, 287], "fall": [320, 327], "fals": [2, 27, 39, 55, 63, 66, 70, 87, 88, 89, 90, 91, 93, 94, 95, 100, 107, 108, 109, 110, 113, 128, 141, 144, 146, 149, 150, 185, 186, 187, 188, 189, 191, 193, 198, 209, 210, 212, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 233, 234, 235, 237, 238, 239, 241, 243, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 271, 272, 273, 279, 285, 286, 287, 290, 303, 307, 314], "famou": 320, "fan": 137, "far": [193, 322], "faraj": [193, 315], "fast": [234, 252, 253, 255, 260, 261, 262, 263, 264, 315], "faster": [252, 253, 255], "featur": [83, 144, 150, 185, 186, 188, 189, 190, 192, 193, 274, 289, 307, 314, 315, 317, 321, 323, 326], "featureangl": [190, 192], "feb": [315, 317], "fi": 224, "field": [166, 167, 193, 201, 315, 320], "fig": [2, 70, 307], "fig1": [2, 307], "fig2": [2, 307], "fig3": [2, 307], "fig4": 2, "figsiz": 307, "figur": 70, "file": [4, 9, 11, 20, 66, 72, 77, 100, 143, 144, 145, 146, 147, 148, 309, 311, 317, 318], "filenam": [77, 148], "filetyp": [77, 148, 312], "fill": [89, 90, 114, 282, 320], "fill_valu": 159, "fillval": 282, "final": [142, 205, 206, 207, 213, 214, 215, 327], "find": [1, 85, 187, 322, 323, 327], "finfo": [65, 298], "finit": [86, 138, 150, 307, 316], "finite_diff_step": 150, "first": [2, 39, 65, 85, 99, 115, 139, 147, 156, 162, 178, 190, 211, 228, 233, 250, 256, 257, 259, 261, 262, 266, 267, 268, 271, 280, 285, 291, 292, 298, 306, 307, 309, 313, 314, 323, 326, 327], "fit": [125, 131], "fix": [26, 185, 186, 187, 188, 189, 190], "fixedg": [144, 150], "fixednod": [26, 144, 150, 185, 186, 188, 189, 190], "fixednot": 187, "fixfeatur": [185, 186, 188, 189], "fixsurf": [185, 186, 188, 189], "flat": [206, 303], "fld979": 315, "flexibl": 308, "flip": [87, 88, 89, 90, 91, 191, 192, 252, 325], "flippabl": 323, "float": [25, 26, 39, 55, 65, 66, 67, 85, 86, 88, 90, 91, 100, 114, 126, 127, 128, 129, 133, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 173, 177, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 201, 204, 205, 207, 208, 209, 210, 211, 212, 213, 233, 238, 239, 241, 243, 251, 252, 253, 254, 255, 258, 259, 261, 262, 263, 264, 266, 267, 268, 272, 273, 274, 281, 283, 287, 288, 289, 290, 296, 298, 299, 303, 307], "flow": [144, 150], "fluid": [187, 315], "focu": [310, 317], "focus": 317, "follow": [137, 193, 208, 213, 280, 287, 303, 305, 306, 310, 314, 320, 321, 322, 327], "forc": [186, 187, 283, 287, 290, 328], "foreground": [128, 321], "form": [86, 137, 138, 149, 151, 152, 194, 195, 253, 255, 310, 316, 322, 323, 327], "format": [20, 27, 86, 147, 149, 151, 152, 187, 194, 198, 234, 237, 238, 252, 253, 255, 260, 261, 262, 263, 264, 268, 309, 312], "former": 74, "formula": [124, 128, 315], "forum": 315, "forward": [307, 326], "found": [74, 199, 307, 322], "four": [107, 210, 320, 322, 327], "fourier": [6, 315], "fourth": 266, "frac": [321, 327, 328], "fractur": 317, "frad": 160, "frame": 321, "fre97": [188, 315], "freder": 315, "free": 186, "freenod": 150, "freitag": 315, "fring": 317, "from": [1, 2, 4, 5, 6, 7, 9, 11, 13, 34, 38, 76, 87, 89, 91, 92, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 144, 150, 177, 186, 187, 190, 193, 196, 197, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 218, 219, 223, 224, 225, 226, 229, 230, 231, 232, 233, 238, 252, 259, 269, 271, 272, 273, 276, 277, 280, 285, 286, 287, 290, 305, 306, 307, 309, 310, 312, 315, 316, 317, 318, 320, 321, 322, 323, 326], "ftb16": [193, 315], "ftetwild": 307, "full": [2, 5, 6, 7, 70, 76, 83, 128, 213, 227, 306, 314, 315, 316, 326], "fulli": [194, 291, 292], "fulltext": 315, "fun": 159, "func": [66, 86, 91, 124, 149, 150, 151, 152, 153, 154, 155, 161, 165, 168, 170, 173, 177, 181, 182, 183, 194, 307, 310], "func1": 307, "func2": 307, "function": [2, 6, 13, 19, 65, 86, 91, 107, 111, 124, 143, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 188, 193, 194, 228, 239, 241, 243, 271, 298, 307, 308, 309, 311, 312, 313, 314, 317, 320, 321], "function2octre": [86, 326], "fund": 317, "fundament": 315, "further": [16, 194, 317, 326], "furthest": 322, "fusilli": 7, "futur": 16, "fval": [169, 174], "fval1": [156, 162, 178], "fval2": [156, 162, 178], "fx_0y_0": 321, "fx_1y_1": 321, "fx_ny_n": 321, "fxy": 321, "fy": 321, "g": [2, 38, 87, 89, 147, 148, 190, 193, 207, 234, 237, 238, 240, 252, 253, 255, 260, 261, 262, 263, 264, 306, 307, 309, 313, 315, 316, 317, 321], "galleri": [2, 5, 6, 7, 10, 318], "gamma": [266, 267, 268, 283, 287], "gamma_0": 322, "gao": 315, "gap": 319, "gauss": 321, "gaussian": [63, 124, 127, 128, 144], "gaussian_filt": [128, 144], "gaussian_sigma": [66, 100, 128, 144], "gaussiancurvatur": 321, "gem": 315, "gener": [2, 5, 6, 7, 26, 65, 70, 76, 79, 86, 87, 88, 89, 90, 91, 98, 104, 110, 113, 114, 123, 130, 131, 137, 142, 143, 145, 146, 149, 151, 152, 166, 167, 193, 194, 196, 197, 201, 202, 204, 207, 209, 210, 211, 212, 214, 215, 241, 243, 246, 247, 251, 252, 253, 254, 255, 258, 275, 278, 283, 287, 290, 298, 299, 305, 307, 309, 310, 312, 314, 315], "genu": 310, "geometr": [98, 110, 123, 184, 315, 321, 322], "geometri": [86, 149, 151, 152, 194, 208, 273, 274, 310, 315, 316], "geq": 327, "get": [47, 90, 144, 208, 213, 227, 294, 317], "get_arrai": 307, "get_imag": 307, "getelemconnect": 111, "getelemneighbor": 291, "getnodeneighbor": [125, 130, 131, 291, 292, 294, 314], "getthem": 303, "gi04": [125, 130, 131, 315, 321], "gift": 138, "giftwrap": 136, "github": 311, "give": [120, 249, 295, 296, 321, 327], "given": [39, 66, 100, 142, 147, 148, 199, 207, 258, 275, 303], "gmbh": 315, "gmsh": 317, "go": [2, 5, 6, 7, 187, 314], "goal": 314, "gol05": [124, 128, 315, 321], "goldfeath": [125, 130, 131, 315, 321], "goldman": [124, 128, 315, 321], "gomiti": 7, "gpu": 1, "grad": [86, 194], "gradient": [86, 128, 144, 150, 160, 326], "grant": 317, "graphic": [261, 262, 263, 264, 307, 315, 316], "grayscal": [88, 90, 128, 303], "greater": [66, 87, 88, 89, 90, 91, 100, 143, 145, 146, 147, 193, 272, 283, 287, 290, 321], "grid": [86, 87, 89, 91, 98, 120, 128, 151, 159, 160, 166, 167, 204, 210, 212, 274, 307, 314, 315, 316, 320], "grid2d": 89, "grid2fun": 128, "grit": 315, "group": [92, 286, 291, 292], "growth": 317, "guarante": 104, "guid": [1, 15, 194, 317], "gutierrez": 317, "gy": 321, "gy_0": 321, "gy_1": 321, "gy_n": 321, "gyroid": [6, 143, 149, 151, 152, 274], "h": [5, 6, 88, 90, 114, 143, 144, 145, 146, 149, 150, 151, 152, 190, 192, 193, 204, 209, 210, 211, 212, 234, 237, 238, 252, 253, 255, 260, 261, 262, 263, 264, 315, 321], "h_node": 193, "ha": [5, 40, 65, 75, 91, 107, 108, 111, 252, 253, 255, 271, 275, 298, 305, 312, 313, 317, 320, 322, 323, 327], "ha01": [315, 327], "half": [207, 214, 306, 322, 323], "halt": 194, "handl": [5, 65, 86, 88, 90, 128, 157, 163, 175, 179, 255, 298, 308, 322], "hang": 315, "harvei": 315, "hash": 323, "hasn": 111, "hat": [321, 327], "have": [1, 2, 27, 85, 91, 110, 190, 226, 234, 238, 247, 253, 255, 263, 264, 268, 271, 272, 276, 305, 306, 309, 314, 320, 321, 322], "haven": [41, 43], "health": 317, "heap": 190, "hear": 1, "heart": [8, 9, 10, 318], "heavili": 1, "height": [207, 299], "held": [26, 185, 186, 187, 188, 189, 190], "help": 319, "here": [307, 319, 321, 322, 323], "hex": [104, 107, 207, 209, 214, 271, 303], "hexahedr": [87, 96, 97, 98, 195, 196, 208, 209, 213, 218, 225, 245, 275, 276, 299, 316, 317], "hexahedra": [87, 99, 195, 316], "hexahedron": [65, 298, 308], "hexconn": 98, "hexcoord": 98, "hi": 193, "hide": 303, "hierarch": 326, "high": [2, 307, 315], "higher": [188, 326], "highli": [125, 130, 131], "highlight": [10, 317], "hip": 317, "hner": 315, "hol10": [195, 315], "hold": [70, 144, 150, 186], "holder": 317, "holmlid": 315, "home": 2, "hormann": 315, "how": [2, 7, 40, 88, 90, 271, 317, 319, 321, 322, 327], "howev": [26, 54, 128, 142, 190, 307, 308, 320, 322], "hsw": [307, 315], "html": [313, 315], "http": [26, 84, 135, 138, 140, 234, 246, 247, 252, 253, 255, 260, 261, 262, 263, 264, 313, 315], "hu": 315, "hugh": 315, "hull": [137, 138, 141], "hx": [88, 100, 143, 145, 146], "hy": [88, 100, 143, 145, 146], "hyperbol": 321, "hz": [88, 100, 143, 145, 146], "hzg": [193, 315], "i": [1, 2, 6, 18, 20, 25, 26, 30, 34, 37, 38, 39, 40, 50, 55, 65, 66, 70, 74, 75, 83, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 107, 108, 110, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 128, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 158, 162, 163, 164, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 193, 194, 195, 197, 200, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 223, 224, 225, 228, 234, 235, 237, 238, 239, 240, 241, 243, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 268, 271, 273, 274, 275, 276, 277, 278, 281, 283, 284, 285, 286, 287, 290, 291, 292, 294, 297, 298, 299, 303, 306, 307, 308, 309, 311, 312, 313, 314, 317, 319, 320, 321, 322, 323, 326, 327, 328], "id": [20, 22, 26, 53, 91, 94, 109, 110, 113, 201, 226, 233, 259, 271, 283, 284, 287], "idea": 319, "ident": [307, 314], "identif": [138, 307], "identifi": [5, 65, 67, 94, 185, 186, 188, 189, 190, 192, 193, 233, 248, 251, 254, 258, 259, 274, 291, 292, 298, 322, 323], "identify_typ": [20, 107, 216, 271], "idx": [93, 95, 271, 273, 285, 286], "ignor": [139, 142, 151], "ij": 328, "im2voxel": [66, 128], "imag": [1, 2, 13, 66, 88, 90, 100, 120, 128, 303, 307, 311, 315, 316, 320, 321], "img": [66, 100, 143, 144, 145, 146, 147], "img_data": 303, "impath": 148, "imperfect": 307, "implement": [16, 25, 86, 194, 195, 294, 317, 319, 322], "implicit": [1, 2, 6, 8, 9, 10, 13, 86, 91, 124, 128, 143, 145, 146, 194, 274, 314, 315, 318, 320, 321], "implicitli": 310, "import": [2, 5, 6, 7, 83, 128, 252, 312, 313, 319, 321, 322], "improv": [1, 5, 16, 26, 283, 287, 290, 307, 317], "imshow": 307, "inaccur": 321, "inact": 323, "incircl": 322, "inclu": [261, 262, 263, 264], "includ": [6, 196, 198, 200, 245, 278, 285, 291, 295, 309, 310, 312, 315, 316, 317, 320, 321, 326], "includecollinear": [136, 138], "inclus": [55, 200, 240, 242, 244, 245, 322], "inconsequenti": 327, "increment": 322, "independ": [62, 321, 322], "index": [26, 63, 107, 108, 268, 283, 284, 306, 320], "indic": [25, 30, 37, 55, 93, 95, 107, 108, 110, 113, 132, 133, 137, 138, 140, 142, 149, 151, 190, 192, 209, 251, 253, 254, 258, 271, 273, 285, 286, 287, 294, 306, 308, 316, 322], "individu": 1, "inf": [283, 287, 290], "infer": [271, 308, 323], "infinit": [322, 327], "influenc": [34, 62], "info": [28, 29, 31, 32, 35, 36, 45], "inform": [2, 20, 138, 190, 192, 317, 321, 323], "infti": 80, "inher": [193, 321], "initi": [91, 185, 187, 188, 189, 208, 213, 307, 317], "inner": 20, "inp": [72, 312], "inplac": [27, 39, 55, 144, 150, 188], "input": [5, 27, 39, 84, 86, 87, 88, 89, 90, 91, 98, 104, 115, 123, 144, 147, 148, 149, 156, 157, 158, 163, 175, 179, 188, 193, 208, 213, 227, 271, 277, 279, 282, 309, 310, 314], "insid": [18, 25, 55, 87, 88, 89, 90, 91, 114, 143, 144, 145, 146, 149, 151, 152, 156, 157, 158, 162, 163, 164, 178, 179, 180, 195, 239, 240, 241, 243, 245, 310, 320, 321, 322, 327], "inspir": [193, 317, 320], "instal": [140, 313], "instanc": [27, 39, 314], "instead": [143, 145, 146, 148, 149, 151, 152, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 278, 327], "institut": [315, 317], "instruct": 311, "int": [25, 26, 55, 66, 86, 87, 88, 89, 90, 91, 100, 128, 143, 144, 145, 146, 147, 150, 181, 182, 183, 185, 186, 188, 189, 190, 192, 194, 197, 201, 205, 206, 207, 208, 211, 213, 214, 215, 249, 250, 256, 257, 276, 277, 282, 287, 290, 295, 303], "int16": 148, "integ": [143, 145, 146, 149, 151, 152, 205, 206], "intellig": 315, "intend": [307, 317, 319], "intens": [66, 100], "interact": [76, 303, 315], "interc": 321, "interesect": 258, "interest": [6, 321, 326], "interfac": [16, 85, 140, 142, 188, 190, 192, 193, 307, 313, 317], "interfer": 322, "interior": [87, 88, 89, 90, 91, 112, 185, 186, 188, 189, 190, 316, 322], "intermedi": 314, "intern": [144, 150, 187, 228, 315], "interpol": [1, 2, 66, 87, 88, 89, 90, 91, 100, 143, 144, 145, 146, 147, 149, 151, 159, 160, 194, 287, 320, 326], "interpret": [322, 323, 327], "interrant": [125, 130, 131, 315, 321], "intersect": [84, 85, 163, 233, 234, 235, 237, 238, 241, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 307, 310, 315, 317, 322, 326], "intersection_fun": 163, "intersection_leav": 248, "intersection_v": 162, "intersectionf": 307, "intersectionpair": 258, "intersectionpoint": [233, 258, 259], "intersectionpt": [251, 252, 253, 254, 264], "intersections1": 233, "intersections2": 233, "interv": 327, "intins": 321, "intric": 327, "introduc": [2, 307], "intuit": 321, "inv": [93, 95, 110, 113, 273, 285, 286], "invalid": [2, 98, 104, 110, 123, 322], "invari": 315, "invers": [2, 64, 144, 150, 186, 218, 219, 320], "inverseorthogon": [64, 80], "inverseorthogonalqu": [64, 80, 223], "invert": [75, 190, 323], "involv": [1, 307, 322], "iortho": 219, "iorthoq": 218, "ipynb": [2, 5, 6, 7], "irregular": 2, "irrelev": 186, "isn": [149, 328], "iso": 303, "isocontour": 89, "isolin": [89, 320], "isometr": 303, "isosurfac": [13, 18, 25, 87, 88, 89, 90, 91, 124, 143, 144, 145, 149, 150, 151, 169, 174, 194, 315, 320, 321], "isotrop": [88, 90, 202], "isovalu": [86, 89, 143, 145, 146, 149, 151, 152, 320], "iss": 315, "issu": [75, 322], "iter": [2, 144, 150, 185, 186, 188, 189, 190, 191, 192, 278, 328], "itertool": 255, "its": [20, 98, 104, 110, 123, 185, 188, 189, 283, 314, 322, 323, 326, 328], "itself": [321, 327], "j": [126, 132, 133, 187, 315, 328], "jack": 315, "jacobson": 315, "jan": 315, "jarvi": 138, "jean": 315, "jm24": [6, 315, 317], "joachim": 315, "joe": 315, "john": 315, "join": 307, "jonathan": [16, 140, 315], "jonathon": 142, "josephson": [1, 315, 317], "joshua": 317, "journal": [187, 261, 262, 263, 264, 315, 322], "jpeg": 148, "jpg": 309, "jul": 315, "jule": 315, "jupyt": [2, 5, 6, 7], "jupyter_rfb": 311, "just": [146, 205, 206], "k": [187, 246, 247, 315, 321], "k1a_smooth": 2, "k1a_spher": 2, "k1m_smooth": 2, "k1m_sphere": 2, "k2a_smooth": 2, "k2a_spher": 2, "k2m_smooth": 2, "k2m_sphere": 2, "k_": 328, "kai": 315, "kappa_": 321, "kappa_1": [2, 321], "kappa_2": [2, 321], "keep": [24, 27, 55, 74, 86, 143, 145, 146, 149, 151, 152, 186, 314], "kei": [26, 192, 317, 322, 323, 327], "keith": 315, "kept": [114, 152, 271], "kernel": 144, "keyword": [149, 151, 152], "kf": 187, "know": 322, "known": [6, 327], "koenderink": [126, 132, 133, 315], "ku": 187, "kvd92": [126, 132, 133, 315, 321], "kwarg": [70, 76, 149, 151, 152, 194], "l": [26, 194, 315], "l0overrid": 187, "lab": 317, "label": [2, 188, 190, 192, 193, 307], "laidlaw": 315, "lambda": [6, 91], "lambdifi": [155, 161, 165, 168, 170], "laplacian": [2, 5, 144, 150, 185, 186, 188, 189, 315], "larg": [146, 186, 307, 313], "larger": [188, 316, 323, 326], "largest": [185, 186, 188, 189, 322], "last": 285, "later": [26, 314], "layer": [26, 275, 276, 299, 315], "layerconn": 275, "layercoord": 275, "lc87": [87, 88, 315, 320], "lead": [307, 320, 321, 322], "leaf": [196, 199, 200, 203, 248, 326], "least": [39, 294, 321, 322], "leav": [27, 39, 203, 207, 322], "lectur": 315, "left": [321, 327], "legend": 2, "len": [2, 120, 208, 258, 285, 287, 290], "length": [20, 149, 151, 152, 187, 190, 192, 193, 217, 282, 285, 286, 303, 308], "leq": 327, "less": [18, 25, 65, 66, 87, 88, 89, 90, 91, 100, 143, 145, 146, 147, 149, 151, 152, 185, 186, 188, 189, 190, 194, 271, 274, 298, 321], "lessen": 319, "letter": 138, "level": [25, 87, 88, 89, 90, 91, 194, 195, 314, 326], "lexicograph": 309, "li": [322, 327], "lib": 315, "librari": [111, 315, 317], "lie": [2, 124, 144, 149, 150, 151, 207, 237, 238, 261, 262, 263, 264, 274, 323], "like": [98, 110, 123, 255, 317], "likewis": 323, "limit": [111, 240, 307, 317, 327], "linalg": 252, "line": [7, 20, 89, 90, 205, 206, 208, 213, 249, 250, 256, 257, 298, 303, 308, 320, 322, 327], "line_color": 303, "line_width": 303, "linear": [87, 88, 89, 90, 91, 143, 144, 145, 149, 151, 159, 160, 187, 194, 321, 326], "link": [54, 315, 322, 326], "linspac": 208, "list": [20, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 45, 64, 67, 70, 74, 76, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 137, 138, 142, 147, 149, 151, 152, 159, 160, 166, 167, 187, 194, 195, 198, 200, 201, 203, 204, 209, 210, 212, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 239, 241, 243, 245, 246, 248, 251, 254, 259, 264, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 303, 306, 313, 314], "ller": 315, "load": [66, 309, 328], "local": [144, 150, 185, 186, 188, 189, 190, 192, 279, 321], "locallaplaciansmooth": 5, "locat": [18, 184, 185, 186, 188, 189, 271, 273, 284], "lock": 314, "log": 2, "long": [6, 207, 239, 327], "longer": [27, 55, 252, 326], "longest": [187, 217], "look": 321, "lookup": 320, "loop": [252, 253, 255], "loos": 317, "lorensen": [315, 320], "lori": 315, "loss": 307, "love": 1, "low": [2, 6, 307, 321], "lower": [55, 70, 153, 190, 234, 235, 240, 246, 247, 260, 314, 326, 327], "lth86": [307, 315], "lumetr": 316, "ly": [249, 250, 256, 257], "m": [25, 27, 39, 62, 64, 66, 68, 69, 72, 83, 144, 150, 166, 167, 171, 172, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 208, 213, 254, 258, 303, 310, 312, 313, 314, 315, 328], "m1": [6, 307], "m2": [6, 307, 314], "m3": 6, "m4": 6, "macaroni": 7, "machin": [65, 298], "made": [27, 39, 316], "magnitud": [128, 321], "mai": [54, 83, 98, 104, 110, 123, 148, 149, 151, 152, 186, 190, 195, 209, 210, 212, 213, 290, 306, 307, 310, 313, 321, 323, 327], "main": [316, 320], "maintain": 1, "major": [177, 215, 307, 310], "make": [20, 209, 210, 212, 314, 317, 321], "mani": [19, 40, 65, 252, 253, 255, 298, 308, 314, 321, 327], "manifold": [241, 243, 315], "manipul": [305, 317], "manufactur": 316, "map": [1, 283, 287, 290], "mappingmatrix": [283, 287, 290], "marc": 315, "march": [2, 86, 87, 88, 89, 90, 91, 143, 149, 151, 315], "marchingcub": [143, 149, 320], "marchingcubesimag": [128, 143, 149], "marchingsquar": 320, "marchingtetrahedra": [143, 149, 320], "mark": [322, 326], "marti": 317, "masknan": 2, "mat": 279, "match": [190, 193, 277], "materi": [190, 193, 315], "mathbf": 321, "mathemat": [310, 315], "mathwork": 313, "matplotlib": [2, 70, 311], "matric": 187, "matrix": [88, 90, 120, 147, 279, 287, 290, 321, 327], "matter": [39, 156, 157, 158, 239, 241, 243, 315], "max": [63, 64, 187, 217, 218, 219, 220, 222, 223, 224, 225, 227, 327], "maxangl": 220, "maxdepth": [86, 194, 197, 201], "maxdihedr": [64, 228], "maximum": [26, 70, 86, 124, 125, 126, 127, 128, 129, 130, 131, 133, 149, 151, 152, 156, 157, 162, 163, 185, 186, 188, 189, 190, 192, 194, 197, 201, 218, 220, 321, 326], "maxit": [185, 186, 188, 189, 190], "maxprincip": [124, 125, 126, 127, 128, 129, 130, 131, 133], "mb": [4, 9, 11, 318], "mc": [86, 143, 149, 151], "mc33": [86, 143, 149], "me": 1, "mean": [2, 6, 62, 63, 64, 124, 128, 129, 188, 217, 218, 219, 220, 222, 223, 224, 225, 227, 314, 322, 323, 327], "meancurvatur": 321, "meaning": 128, "meanratio": [64, 80, 188], "measur": [6, 80, 321, 326], "mechan": 315, "mechanobiolog": [315, 317], "mechanobiologi": [1, 315, 317], "meet": [261, 262, 263, 264, 323], "mem": [4, 9, 11, 318], "memori": 323, "merg": [280, 299], "mergedconn": 280, "mergedcoord": 280, "mergedv": 280, "mergemesh": 299, "mesh": [1, 2, 5, 7, 12, 79, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 130, 131, 143, 144, 145, 146, 149, 150, 151, 152, 159, 160, 166, 167, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 239, 241, 243, 245, 251, 254, 258, 259, 268, 269, 271, 272, 273, 274, 275, 276, 280, 281, 283, 284, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 303, 305, 306, 307, 308, 311, 313, 315, 319, 322, 323, 328], "mesh2": 67, "mesh2sdf": 1, "meshanalysi": [4, 318], "meshboolean": 307, "meshgener": [9, 318], "meshio": [68, 69, 72, 77, 311, 312, 317], "meshio2mymesh": 312, "meshpi": 317, "met": [197, 201, 327], "meth": 67, "method": [2, 7, 8, 10, 16, 24, 25, 27, 46, 47, 78, 86, 87, 88, 89, 90, 91, 98, 104, 110, 123, 128, 136, 142, 143, 144, 145, 149, 150, 151, 159, 160, 166, 184, 185, 187, 188, 189, 193, 195, 225, 229, 231, 242, 244, 278, 291, 307, 312, 314, 315, 316, 320, 321, 328], "metric": [63, 64], "micro": 317, "middl": 5, "midpoint": [87, 88, 89, 90, 91, 118, 143, 145, 149, 151, 193, 320], "might": 305, "min": [63, 64, 187, 188, 191, 217, 218, 219, 220, 222, 223, 224, 225, 227, 287, 290, 327], "minangl": 222, "mind": 321, "mindepth": [86, 194], "mindihedr": [64, 228], "minim": [6, 65, 155, 161, 165, 168, 170, 298, 323], "minimum": [70, 86, 124, 125, 126, 127, 128, 129, 130, 131, 133, 149, 151, 152, 158, 164, 178, 179, 180, 188, 194, 201, 222, 224, 252, 253, 255, 279, 315, 321], "minor": [177, 215], "minprincip": [124, 125, 126, 127, 128, 129, 130, 131, 133], "minsiz": 201, "minut": [2, 5, 6, 7], "mirror": 281, "mirroredconn": 281, "mirroredcoord": 281, "mislabel": [65, 298], "mix": [8, 9, 10, 20, 91, 107, 297, 308, 317, 318, 320], "mixed_el": [91, 149], "mixed_topology1": 6, "mixed_topology2": 6, "mixed_topology3": 6, "mixed_topology4": 6, "mm": 2, "mnew": [184, 185, 186, 188, 189, 190, 192, 193], "mode": [55, 88, 90, 114, 128, 152, 196, 291, 294, 303, 313, 314], "model": [307, 315, 317], "modif": 314, "modifi": [27, 39, 55, 188, 190, 239, 307, 309, 314, 323], "modul": [1, 6, 16, 18, 305, 306, 312, 314], "mohebi": 317, "moller97": [261, 262, 263, 264, 315], "mollert05": [252, 253, 255, 315, 327], "more": [1, 2, 5, 28, 29, 31, 32, 35, 36, 45, 46, 47, 66, 83, 100, 143, 144, 145, 146, 147, 150, 190, 192, 252, 253, 255, 271, 278, 307, 310, 312, 316, 317, 319, 328], "morgan": [315, 317], "morlei": [246, 247, 315], "moscow": 315, "most": [2, 65, 111, 190, 278, 291, 292, 297, 298, 303, 306, 315, 316, 317, 319, 320, 321, 322, 326], "mostvis": 278, "mostvisible_it": 278, "mostvisible_loop": 278, "movabl": 150, "move": [2, 144, 149, 150, 151, 185, 186, 188, 189, 193, 291, 314, 322], "movement": [185, 186, 188, 189], "mt": [86, 143, 149], "much": [2, 252, 253, 255, 307, 327], "multi": [290, 309, 315], "multichannel": [147, 148, 309], "multipl": [6, 39, 67, 93, 107, 190, 192, 234, 252, 253, 255, 290, 306, 310, 314, 320], "must": [26, 39, 55, 66, 85, 91, 99, 100, 114, 140, 142, 143, 144, 145, 146, 147, 149, 151, 184, 186, 187, 190, 193, 201, 207, 255, 271, 309, 313, 320, 322, 327], "mx3": [134, 135, 139, 140], "my": 1, "mymesh": [1, 2, 5, 6, 7, 10, 307, 308, 310, 311, 312, 314, 316, 319, 322], "mymesh2meshio": [83, 312], "m\u00f6ller": [234, 252, 253, 255, 260, 261, 262, 263, 264, 327], "n": [7, 11, 99, 107, 139, 142, 181, 182, 183, 186, 211, 234, 238, 243, 245, 247, 250, 253, 255, 257, 258, 263, 264, 268, 295, 315, 321, 322, 327], "n0": 107, "n1": [107, 109], "n2": [107, 109], "n3": 109, "n4": 109, "n5": 109, "n_i": 328, "name": [20, 26, 74, 77, 148, 303, 304, 305, 309, 316], "nan": [46, 250, 257, 258], "nation": 317, "natur": [319, 322, 326], "ndarrai": [66, 86, 87, 88, 89, 90, 91, 93, 95, 98, 99, 100, 104, 110, 113, 114, 115, 118, 120, 123, 124, 125, 128, 130, 131, 134, 135, 137, 138, 139, 140, 143, 144, 145, 146, 147, 155, 156, 161, 162, 165, 168, 169, 170, 174, 178, 180, 186, 195, 196, 200, 212, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 238, 247, 249, 250, 251, 252, 253, 254, 256, 257, 258, 263, 264, 265, 267, 271, 273, 277, 279, 282, 283, 285, 286, 303], "ndimag": [66, 100, 128, 143, 144, 145, 146, 147], "nearbi": 190, "necessari": [26, 128, 194, 322, 327, 328], "necessarili": [104, 110], "need": [111, 187, 252, 253, 255, 290, 307, 311, 313, 314, 319, 320, 322, 323, 326], "neg": [25, 143, 145, 146, 149, 151, 152, 156, 157, 158, 162, 163, 164, 178, 179, 180, 181, 182, 183, 207, 321, 322], "neglect": 115, "neighbor": [5, 32, 45, 52, 98, 104, 110, 123, 125, 130, 131, 185, 187, 188, 189, 224, 226, 291, 292, 294, 295, 296, 297, 306, 322, 323, 328], "neighborhood": [190, 295, 296, 321], "neilesh": 317, "neither": 211, "nelem": [65, 190, 192, 193, 298], "nesper": 315, "net": 328, "network": [26, 328], "never": 323, "nevertheless": 6, "new": [7, 87, 88, 89, 90, 91, 98, 99, 104, 106, 110, 113, 118, 123, 184, 185, 186, 188, 189, 190, 193, 271, 273, 275, 284, 285, 307, 314, 320, 322], "newconn": [87, 88, 89, 90, 99, 271, 273, 284], "newcoord": [87, 88, 89, 90, 98, 99, 104, 123, 273, 284], "newedg": 56, "newfac": 58, "newid": 284, "newli": 322, "newnodeconn": 57, "newnodecoord": 59, "newvalu": 91, "next": [99, 194, 322, 326], "nface": 300, "ni": 228, "nine": 132, "nj": 228, "nlayer": [26, 276], "nnode": 274, "nodal": [6, 25, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 125, 130, 131, 137, 159, 160, 187, 195, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 229, 230, 231, 232, 269, 270, 272, 273, 274, 275, 276, 278, 280, 281, 283, 284, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 315], "node": [2, 5, 20, 21, 22, 26, 27, 30, 31, 34, 37, 40, 44, 45, 46, 47, 50, 51, 52, 53, 55, 65, 66, 67, 69, 75, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 134, 135, 139, 140, 142, 144, 146, 150, 152, 159, 160, 166, 167, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 233, 239, 241, 243, 245, 248, 251, 254, 258, 259, 266, 267, 271, 273, 274, 275, 276, 278, 280, 283, 284, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 303, 306, 308, 314, 316, 320, 321, 322, 323, 326], "nodeconn": [2, 20, 50, 54, 60, 65, 75, 86, 87, 89, 91, 92, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 116, 117, 119, 121, 122, 123, 134, 135, 137, 139, 140, 143, 145, 146, 149, 151, 152, 187, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 232, 268, 270, 271, 272, 273, 276, 278, 281, 284, 288, 291, 292, 293, 294, 295, 296, 297, 298, 306, 314, 316], "nodeconn1": 280, "nodeconn2": 280, "nodecoord": [2, 20, 54, 71, 75, 86, 87, 89, 91, 92, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 128, 130, 131, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 149, 151, 152, 187, 201, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 232, 236, 239, 241, 243, 251, 254, 258, 268, 269, 270, 271, 272, 273, 274, 276, 278, 281, 283, 284, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 306, 307, 314, 316], "nodecoords1": [233, 259, 280, 287, 290], "nodecoords2": [233, 259, 280, 287, 290], "nodedata": [20, 25, 55, 66, 100, 146, 152, 303, 307], "nodeneighbor": [2, 125, 130, 131, 187, 292, 297, 306, 313, 314], "nodeneighborhood": [125, 295, 296], "nodenorm": [2, 111, 125, 130, 131, 278], "nodenormalsmethod": 46, "noderegion": 292, "nodeset": [20, 59], "nodespringsmooth": [144, 150, 328], "nodev": [160, 166, 167, 280], "nodevals1": [280, 290], "nodevals2": [280, 290], "nodevalu": [87, 89, 91], "non": [46, 65, 75, 108, 142, 186, 187, 190, 193, 209, 210, 212, 278, 298, 306, 320, 321, 322, 323], "nondelaunai": 142, "none": [20, 24, 25, 26, 39, 55, 56, 57, 58, 59, 64, 66, 70, 74, 86, 100, 111, 114, 128, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 159, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 199, 201, 205, 206, 207, 208, 211, 213, 214, 215, 216, 231, 234, 239, 241, 243, 251, 254, 258, 260, 277, 281, 283, 284, 287, 290, 291, 292, 294, 299, 300, 303], "nonetyp": [24, 26, 64, 74, 150, 186, 192, 199, 243, 251, 254, 303], "nor": 211, "nord": 317, "norm": [211, 252], "normal": [24, 33, 46, 47, 111, 125, 130, 131, 144, 150, 181, 182, 183, 212, 224, 226, 228, 234, 235, 236, 237, 238, 239, 241, 243, 260, 269, 278, 283, 314, 315, 321, 323, 327], "notabl": 317, "note": [39, 64, 98, 104, 110, 111, 123, 156, 157, 158, 204, 211, 214, 275, 287, 290, 294, 307, 315, 322, 323], "notebook": [2, 5, 6, 7], "notion": 321, "notrim": 152, "noura": 315, "novel": 315, "now": 321, "np": [2, 6, 7, 46, 65, 66, 86, 87, 88, 89, 90, 91, 93, 95, 98, 99, 100, 104, 110, 113, 114, 115, 118, 120, 123, 124, 125, 128, 130, 131, 134, 135, 137, 138, 139, 140, 143, 144, 145, 146, 147, 155, 156, 161, 162, 165, 168, 169, 170, 174, 178, 180, 185, 186, 195, 196, 200, 208, 212, 213, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 241, 243, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 267, 271, 273, 274, 277, 279, 282, 283, 285, 286, 287, 290, 298, 303], "npt": [287, 290], "nring": [63, 295], "numba": 311, "number": [20, 26, 34, 40, 41, 42, 43, 44, 99, 107, 115, 144, 150, 185, 186, 188, 189, 190, 192, 193, 205, 206, 207, 211, 214, 215, 225, 268, 271, 276, 286, 287, 290, 295, 303, 306, 308, 311, 314, 322, 327, 328], "numer": [187, 315], "numpi": [1, 2, 6, 7, 87, 88, 89, 90, 93, 95, 100, 147, 148, 149, 151, 152, 155, 161, 165, 168, 170, 194, 252, 277, 282, 303, 309, 310, 311], "nvidia": 1, "nx2": [20, 134], "nx3": [20, 125, 130, 131, 134, 135, 186, 197, 201, 251, 254, 265, 279], "nx3x3": 268, "nx4": 283, "o": [311, 315, 327], "o_x": 327, "ob01": [144, 150, 315], "obj": 312, "object": [54, 64, 65, 66, 68, 69, 72, 84, 86, 128, 143, 144, 145, 146, 149, 150, 151, 152, 166, 167, 184, 185, 186, 188, 189, 194, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 289, 298, 303, 307, 310, 312, 313, 314, 315, 317, 321], "obp03": [189, 315], "observ": 6, "obtain": [86, 88, 89, 93, 94, 95, 111, 125, 130, 131, 144, 150, 156, 157, 158, 162, 163, 164, 178, 179, 180, 268, 294, 306, 307, 309, 310, 316, 320, 321, 327], "occur": [114, 128, 149, 327], "octre": [86, 114, 241, 243, 248, 251, 254, 255, 258, 283, 287, 290, 307], "octree2du": 86, "octree_ep": 86, "octree_strategi": 86, "octreenod": [114, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 241, 243, 248, 251, 254, 258, 283, 287, 290], "odd": 327, "off": 323, "offer": [307, 310, 314], "offset": [174, 175, 213], "offset_v": 169, "often": [190, 193, 307, 320, 328], "ohtak": [150, 315], "old": [273, 284], "om": 309, "omit": 311, "onc": [271, 304, 313, 322], "one": [24, 39, 54, 62, 93, 95, 98, 104, 107, 108, 110, 123, 144, 185, 187, 188, 189, 197, 201, 234, 249, 250, 251, 252, 253, 254, 255, 256, 257, 287, 290, 294, 306, 314, 317, 320, 321, 322, 326], "ongo": 317, "onli": [24, 93, 95, 107, 108, 128, 139, 144, 147, 150, 185, 186, 187, 188, 189, 190, 193, 195, 196, 197, 201, 207, 211, 214, 215, 239, 241, 243, 252, 253, 254, 255, 271, 272, 276, 287, 290, 294, 303, 304, 306, 309, 311, 321, 322, 323, 326, 327], "onlinelibrari": 315, "onto": [2, 283, 322, 327], "opac": 303, "opaqu": 303, "open": [207, 316, 321], "opencv": [309, 311], "oper": [20, 54, 147, 156, 157, 158, 190, 192, 273, 285, 306, 307, 310, 314, 317, 319, 320], "opposit": [25, 143, 145, 146, 149, 151, 152, 252, 310, 320, 321, 322], "optim": [6, 26, 111, 144, 150, 217, 315, 317], "optimizetet": 26, "option": [1, 20, 24, 25, 26, 27, 39, 47, 55, 64, 66, 67, 70, 74, 75, 76, 77, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 100, 104, 107, 108, 110, 111, 113, 114, 123, 128, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 231, 233, 234, 238, 239, 241, 243, 245, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 294, 297, 299, 303, 304], "optionalperpendicular": 214, "order": [39, 66, 97, 99, 100, 103, 111, 117, 120, 122, 137, 138, 143, 145, 146, 147, 156, 157, 158, 192, 271, 273, 285, 286, 309, 315, 316, 320, 321, 322, 323, 327], "org": [26, 84, 135, 138, 140, 234, 246, 247, 252, 253, 255, 260, 261, 262, 263, 264, 315], "organ": 305, "orient": [98, 104, 110, 123, 177, 212, 249, 303, 306, 321, 322], "origin": [1, 27, 39, 62, 87, 88, 91, 93, 95, 99, 109, 110, 113, 144, 150, 190, 193, 271, 273, 285, 286, 314, 317, 319, 327], "ortho": 224, "orthogon": [64, 80, 218, 219, 223], "orthogonalqu": [64, 80], "orthopaed": 1, "orthoq": 223, "other": [20, 54, 62, 74, 104, 111, 144, 150, 174, 175, 190, 207, 227, 249, 250, 256, 257, 258, 271, 282, 305, 307, 310, 313, 314, 317, 321, 322, 323, 327], "otherwis": [26, 27, 39, 55, 88, 91, 188, 190, 193, 196, 207, 208, 209, 210, 212, 213, 234, 235, 237, 238, 239, 241, 243, 246, 247, 252, 260, 261, 263, 264, 309, 322, 327], "oup": 315, "out": [55, 76, 277, 282, 285, 286], "outer": [316, 323], "outofprocess": 313, "output": [27, 39, 76, 114, 156, 157, 158, 162, 163, 164, 178, 179, 180, 277, 285, 286], "outsid": [18, 55, 97, 103, 117, 122, 239, 241, 243, 269, 310, 320, 321, 327], "outward": [321, 322], "over": [190, 208, 323], "overal": 322, "overdetermin": 321, "overhead": [65, 298, 313], "overlap": [234, 260, 275, 315], "overrid": [148, 187], "overridden": [143, 149], "overview": 317, "p": [6, 170, 171, 172, 246, 247, 322, 327], "p1": 327, "p_": 322, "p_1": 327, "p_2": 327, "p_i": 322, "p_x": 322, "p_y": 322, "packag": [312, 314, 317], "pad": [88, 90, 128, 258, 277, 282], "page": 315, "pair": [228, 250, 257, 258, 263, 264, 323], "pairwis": [255, 268], "pan": 303, "panozzo": 315, "paper": [322, 327], "paraboloid": 322, "parallel": [39, 239], "parallelepip": 327, "param": 272, "paramet": [6, 20, 24, 25, 26, 27, 39, 55, 64, 66, 67, 68, 70, 72, 74, 77, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 303, 304, 321, 327], "parametr": 327, "parent": [98, 104, 110, 123, 326], "parentid": 91, "pariti": 327, "parsecolor": 303, "part": [107, 108, 322], "partial": [26, 195, 321], "particular": [317, 321], "particularli": [6, 307, 317], "partit": [320, 326], "pasko": 315, "pass": [55, 76, 149, 151, 152, 190, 192, 271, 309, 317, 326], "past": 291, "pasta": [8, 9, 10, 318], "path": [72, 143, 144, 145, 146, 147, 148, 311, 322], "pdf": [84, 135, 315], "peel": 276, "peelconn": 276, "peelcoord": 276, "peeledconn": 276, "peeledcoord": 276, "penn": 7, "per": [66, 100, 143, 145, 146, 147, 306, 321], "perform": [1, 2, 5, 26, 64, 66, 87, 88, 89, 90, 91, 144, 147, 150, 151, 152, 185, 186, 188, 189, 190, 192, 278, 303, 306, 307, 323, 326, 327], "pergamon": 315, "perhap": 326, "period": [6, 155, 161, 165, 168, 170], "permit": 190, "perpendicular": [205, 206, 207], "peter": 315, "ph": 317, "phi_resolut": [214, 215], "physic": 315, "physik": 315, "pi": [7, 208, 213, 321], "pillow": 311, "pip": [140, 311], "pixel": [88, 90, 316], "place": [27, 39, 85, 86, 87, 88, 89, 90, 91, 118, 143, 144, 145, 149, 150, 151, 185, 186, 188, 189, 193, 195, 273, 320, 322], "placement": [2, 144, 150], "plan": 16, "planar": [65, 298], "plane": [24, 39, 120, 138, 144, 150, 181, 182, 183, 189, 205, 206, 207, 235, 237, 238, 239, 281, 303, 314, 316, 321], "pleas": 7, "plot": [2, 5, 6, 7, 76, 83, 86, 143, 149, 151, 152, 153, 154, 155, 161, 165, 168, 170, 173, 177, 185, 204, 205, 207, 208, 209, 210, 211, 214, 215, 274, 303, 307, 314], "plt": [2, 307], "pm": 321, "pmatrix": 322, "png": [148, 309], "point": [6, 24, 39, 110, 113, 128, 132, 134, 135, 137, 138, 140, 144, 149, 151, 159, 160, 166, 167, 197, 199, 205, 206, 207, 211, 212, 213, 214, 215, 233, 235, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 279, 283, 287, 290, 307, 310, 314, 315, 316, 320, 321], "pointinboundari": 327, "pointinsurf": 327, "points2octre": 326, "pole": 215, "polygon": [101, 107, 111, 315, 316, 322], "polyhedr": 315, "polyhedra": 316, "polyhedron": 323, "polytop": 315, "poor": 307, "popular": [322, 326], "posit": [25, 87, 88, 89, 90, 91, 120, 143, 144, 145, 146, 149, 150, 151, 152, 185, 186, 188, 189, 287, 321, 322, 327], "possibl": [65, 149, 151, 190, 192, 298, 320, 323], "possibli": 1, "potenti": [65, 275, 298, 323], "power": 317, "pp": 187, "practic": [96, 97, 101, 102, 103, 105, 116, 117, 119, 121, 122, 322], "pre": [79, 322], "preced": [74, 211], "precis": [65, 298], "precomput": [241, 243, 283, 287, 290], "predominantli": [205, 206], "prefer": 304, "prefix": [148, 313], "prescrib": [169, 186], "present": [107, 142, 190, 298, 303], "preserv": [190, 192, 193], "prevent": [34, 186], "previous": [47, 185, 188, 189, 251, 254, 322], "primal": 315, "primari": [20, 98, 110, 123], "primarili": [189, 228, 306, 307, 316], "primit": [6, 7, 87, 89, 91, 98, 274, 305, 307, 313, 314], "princip": [2, 63, 124, 125, 126, 127, 128, 129, 130, 131, 133, 315], "print": [20, 64, 217, 218, 219, 220, 222, 223, 224, 225, 227, 252, 287, 290], "priorit": 190, "problem": 315, "problemat": 307, "proce": 327, "procedur": [26, 315, 322], "proceed": 315, "process": [138, 190, 307, 322, 326], "produc": [25, 207, 214, 290, 307, 309, 314], "product": 327, "progress": [190, 192, 193, 319], "project": [1, 140, 283, 287, 290, 317, 322, 327], "proper": [111, 309], "properli": [114, 323, 326], "properti": [21, 22, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 60, 71, 74, 98, 110, 123, 313, 321], "propos": [194, 195, 320], "protanomali": 303, "provid": [1, 20, 55, 74, 91, 111, 114, 124, 128, 130, 131, 139, 142, 151, 186, 187, 188, 190, 193, 208, 209, 211, 231, 234, 243, 260, 280, 283, 287, 290, 291, 292, 312, 317, 319, 322], "pt": [24, 199, 212, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 266, 267, 268], "pt1": 211, "pt2": 211, "public": 315, "publish": [317, 322], "pure": [96, 97, 99, 102, 103, 105, 116, 117, 119, 121, 122, 184, 205, 206, 207, 208, 213, 214, 268, 317], "purpos": [227, 311, 316, 319], "pv": 83, "pvmesh": 83, "py": [2, 4, 5, 6, 7, 9, 313, 318], "pydicom": [309, 311], "pyenv": 313, "pyglet": 304, "pymesh": 317, "pypi": 140, "pyplot": 2, "pyramid": [65, 102, 103, 104, 107, 195, 213, 218, 225, 298, 299, 308], "pyramidconn": [104, 299], "pyramidcoord": [104, 299], "pyramidheight": 299, "python": [2, 5, 6, 7, 140, 309, 313, 323], "pyvista": [83, 317], "qef": [194, 326], "qhull": 16, "qingnan": 315, "quad": [104, 106, 107, 149, 204, 207, 210, 212, 213, 214, 215, 230, 271, 297, 308, 316], "quadfit": 321, "quadrat": [91, 131, 151, 194, 308, 326], "quadrilater": [65, 89, 91, 97, 103, 105, 106, 107, 122, 204, 205, 206, 208, 210, 212, 215, 230, 298, 308, 320], "quak": 315, "qual": 64, "qualiti": [2, 5, 19, 64, 98, 110, 123, 188, 190, 192, 307, 311, 315, 317, 321, 323], "qualityfunc": 188, "qualitymetr": 191, "qualitys": 193, "qualitythreshold": 184, "queri": 323, "question": 1, "queue": 322, "quick": 314, "quit": 307, "r": [138, 144, 150, 156, 157, 158, 162, 163, 164, 177, 178, 179, 180, 215, 246, 247, 307, 310, 315, 327], "r1": 207, "r2": 207, "r_0": 327, "r_1": 327, "r_2": 327, "r_x": 327, "r_y": 327, "r_z": 327, "radial": [205, 206, 207, 214, 215], "radial_resolut": [205, 206, 207, 214, 215], "radian": [64, 208, 213], "radii": 207, "radiu": [2, 154, 173, 177, 205, 207, 214, 215, 296, 310, 322], "rag": [277, 282, 285, 286, 306], "rai": [307, 315, 326], "rainald": 315, "rais": [75, 311], "rand": [241, 243], "random": [65, 239, 241, 243, 287, 290, 298], "randomli": 322, "rang": [149, 151, 218, 219, 223, 224, 225, 229, 230, 231, 232, 303, 321], "rare": [65, 298], "rather": [24, 77, 96, 97, 98, 101, 102, 103, 104, 105, 116, 117, 119, 121, 122, 123, 144, 146, 150, 195, 306, 307, 317, 320, 322, 323, 326], "ratio": [64, 217], "rayboxesintersect": 327, "rayboxintersect": 327, "raysegmentintersect": 327, "raysegmentsintersect": 327, "rayssurfintersect": 255, "raystrianglesintersect": [252, 253, 327], "raytriangleintersect": [253, 255, 327], "raytrianglesintersect": [252, 255, 327], "re": [55, 273, 285, 286, 321, 322], "reach": [323, 326, 327], "read": [309, 312], "readabl": [72, 278, 317], "reader": 309, "real": [155, 161, 165, 168, 170], "reason": [6, 323], "recalcul": [187, 314, 323], "receiv": 46, "recogniz": 321, "recommend": [190, 193], "reconnect": 273, "reconstruct": 1, "record": 315, "recov": [285, 286], "rectangular": [204, 209, 210, 258, 282, 306, 316], "rectilinear": [87, 89, 120], "red": [5, 306], "redistribut": [2, 144, 150, 186], "reduc": [93, 95, 144, 150, 188, 190, 271, 320], "redund": 323, "refer": [27, 33, 39, 62, 75, 91, 99, 190, 193, 195, 303, 314, 317, 319, 321], "referenc": [34, 306, 314], "refin": [194, 201, 326], "reflect": 39, "regardless": [149, 307, 321, 327], "region": [89, 190, 192, 193, 291, 292, 326], "regist": 1, "registr": 1, "regulargridinterpol": 144, "rel": [149, 151, 266, 267, 268, 287], "relabel": 284, "relat": [16, 78, 93, 95], "relev": [207, 214, 215, 294, 308, 322, 323], "reli": [307, 321, 326, 327], "relianc": 317, "remain": [6, 115, 273], "remesh": 315, "remov": [27, 55, 86, 88, 89, 90, 108, 143, 145, 146, 149, 150, 151, 152, 190, 193, 271, 273, 276, 277, 322, 323], "renumb": [190, 273, 280], "reorder": [285, 286], "repeat": [192, 307, 322, 326], "replac": 311, "report": 64, "reposit": [144, 150, 185, 188, 189, 328], "repositori": 311, "repres": [100, 235, 306, 310, 316, 323, 326], "represent": [6, 28, 29, 31, 32, 35, 36, 45, 54, 201, 202, 283, 287, 289, 290, 307, 323, 326], "request": 1, "requir": [91, 285, 294, 307, 311, 313, 321, 323], "resampl": [66, 100, 143, 145, 146, 147], "research": [1, 317], "resolut": [66, 100, 307, 315, 326], "resolv": 320, "respect": [88, 207, 215, 320, 321], "result": [2, 6, 85, 91, 98, 104, 110, 111, 123, 130, 131, 186, 205, 206, 209, 210, 212, 307, 321], "retriev": [199, 200, 203], "return": [5, 24, 25, 27, 39, 62, 64, 65, 66, 68, 69, 70, 72, 76, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 303, 304, 307, 309, 310, 314], "return_anchor": [87, 89], "return_count": 93, "return_edgeconn": 107, "return_edgeelem": 107, "return_faceconn": 108, "return_faceelem": 108, "return_fig": [2, 70, 307], "return_gradi": [66, 100], "return_hul": 141, "return_id": [94, 110, 113], "return_idx": [93, 95, 271, 273, 285, 286], "return_imag": 303, "return_intersect": [249, 250, 256, 257], "return_inv": [93, 95, 110, 113, 273, 285, 286], "return_kf": 187, "return_mappingmatrix": 290, "return_matrix": 279, "return_nodedata": [66, 100, 146], "return_nodevalu": 91, "return_octre": [287, 290], "return_parentid": 91, "return_pt": [233, 258, 259], "return_separ": 285, "return_surfelem": 109, "revers": [273, 285], "revolut": [213, 215], "revolv": 7, "rfboutputcontext": [2, 5, 6, 7], "rgb": [147, 148, 309], "rgba": [148, 303, 309], "rho": 184, "richard": 315, "ridg": [5, 132], "right": [303, 321, 327], "ring": [295, 321], "risk": [144, 150], "rmax": [156, 157, 158, 162, 163, 164], "rmin": [178, 179, 180], "rmsd": 2, "rmsd_k1a_smooth": 2, "rmsd_k1a_spher": 2, "rmsd_k1m_smooth": 2, "rmsd_k1m_sphere": 2, "robust": [19, 246, 247, 315], "romain": 315, "ron": [124, 128, 315], "root": [2, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 248, 311, 326], "rotat": [208, 213, 215, 279, 303, 320], "row": [20, 273, 285, 286, 287, 306], "rrner": 315, "rule": [314, 327], "run": [2, 5, 6, 7, 27, 55, 143, 145, 146, 149, 151, 152, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 311, 313], "runner": 2, "runtimewarn": 2, "russia": 315, "rut": 132, "s003660200006": [26, 315], "s00371": 315, "s0925": 315, "s1": [250, 256, 257], "s10237": 315, "s2": [250, 256, 257], "saddl": [132, 321], "same": [20, 27, 39, 50, 74, 99, 104, 123, 150, 185, 188, 189, 239, 271, 273, 305, 306, 314, 320, 322, 323, 326, 327], "sampl": [65, 86, 124, 213, 214, 287, 290, 298, 309, 315, 326], "satisfi": 310, "save": 148, "scaffold": [315, 317], "scalar": [2, 20, 25, 55, 70, 86, 143, 145, 146, 149, 151, 152, 155, 156, 157, 161, 162, 163, 165, 168, 169, 170, 174, 175, 178, 179, 180, 193, 207, 208, 213, 214, 215, 274, 290, 300, 301, 303, 310, 314, 327], "scalar_prefer": [55, 303], "scale": [66, 100, 132, 143, 145, 146, 147, 181, 182, 183, 187, 315, 321], "scalefactor": [66, 100, 143, 145, 146, 147, 309], "scaleord": [66, 100, 143, 145, 146, 147], "scan": [317, 321], "scenario": [65, 298], "scf": 192, "schaefer": 315, "schedul": 192, "scheme": 115, "schneider": 315, "schnere": 315, "schwald": 315, "schwarz": [6, 155, 170], "scienc": 315, "scipi": [16, 66, 100, 128, 142, 143, 144, 145, 146, 147, 187, 311], "scott": 315, "scratch": 317, "script": [2, 5, 6, 7], "se": 315, "search": [199, 200, 326], "second": [2, 5, 6, 7, 67, 85, 99, 156, 162, 178, 193, 211, 228, 233, 250, 256, 257, 258, 259, 261, 262, 266, 267, 268, 307, 323], "section": [154, 207, 214, 215, 285, 319, 327], "see": [2, 15, 26, 28, 29, 31, 32, 35, 36, 45, 46, 47, 66, 67, 70, 76, 86, 91, 92, 93, 95, 100, 128, 143, 144, 145, 146, 147, 149, 150, 190, 192, 251, 252, 253, 254, 255, 297, 303, 306, 310, 312, 313, 314, 320, 321, 322, 323, 326, 327, 328], "seem": 313, "seen": 6, "segment": [89, 211, 249, 250, 256, 257, 320], "segmentsegmentintersect": 327, "segmentssegmentsintersect": 327, "select": [143, 149, 303, 304, 322], "self": [258, 327], "semicolon": 313, "sensit": [125, 130, 131], "sep": 315, "separ": [147, 190, 193, 285, 292, 314, 320], "sequenti": [185, 188, 189], "seri": [6, 315, 316], "serv": 319, "set": [6, 20, 26, 46, 47, 65, 87, 88, 89, 90, 91, 93, 95, 114, 128, 134, 135, 138, 144, 149, 150, 151, 156, 162, 178, 185, 186, 187, 188, 189, 190, 197, 238, 247, 250, 253, 255, 257, 263, 264, 265, 268, 275, 279, 285, 291, 292, 297, 298, 299, 303, 304, 307, 313, 314, 316, 322, 326], "set_axis_off": 307, "set_titl": [2, 307], "set_xtick": 2, "set_xticklabel": 2, "set_ylabel": 2, "set_ylim": 2, "set_yscal": 2, "seven": 321, "sever": [6, 16, 46, 305, 306, 307, 310, 311, 314, 316, 320, 323, 326], "shade": 303, "shadi": 317, "shape": [8, 9, 10, 63, 99, 132, 133, 234, 238, 239, 240, 241, 243, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 263, 264, 268, 307, 315, 316, 318, 322], "shapeindex": [132, 321], "share": [93, 94, 95, 107, 261, 262, 263, 264, 294, 306, 323], "sharp": [307, 315], "she96": [315, 317], "shewchuk": [16, 140, 142, 315], "shi": 317, "shift": [7, 213], "shirlei": [246, 247, 315], "shortcom": 320, "shorter": 190, "shortest": [187, 217], "shoud": [66, 100], "should": [20, 26, 65, 66, 86, 88, 98, 100, 104, 106, 123, 124, 137, 142, 143, 145, 146, 149, 150, 151, 152, 157, 163, 175, 179, 194, 226, 230, 232, 234, 238, 239, 245, 246, 247, 251, 252, 253, 254, 255, 263, 264, 268, 278, 283, 287, 290, 298, 303, 305, 310, 317, 322], "shouldn": [239, 241, 243], "show": [2, 70, 303, 306, 307, 319], "show_edg": [2, 86, 185, 204, 205, 207, 208, 209, 210, 211, 214, 215, 303, 314], "show_empti": 198, "show_fac": 303, "shown": [303, 322, 323], "shrinkag": [144, 150], "si": 315, "si15": [315, 317], "sici": 315, "side": [24, 108, 149, 151, 152, 237, 238, 323, 327], "siggraph": [234, 246, 247, 252, 253, 255, 260, 315], "sigma_max": 184, "sigma_min": 184, "sign": [25, 143, 145, 146, 149, 151, 152, 166, 167, 169, 174, 175, 194, 321, 322, 327], "signific": [2, 146, 313], "significantli": [252, 253, 255, 283, 287, 290], "similar": 320, "similarli": [314, 323, 327], "simpl": [278, 307], "simplex": 91, "simplexmethod": 225, "simpli": [218, 271, 290, 322], "simul": [1, 303, 316], "simultan": [144, 150, 185, 188, 189], "sin": [155, 161, 165, 168, 170, 208], "sinc": [1, 307, 314, 320, 326, 328], "singl": [7, 55, 88, 90, 91, 98, 104, 123, 126, 127, 129, 133, 143, 145, 146, 147, 148, 149, 151, 152, 255, 268, 291, 292, 309, 323, 326], "situat": 320, "six": [27, 204, 209, 212], "size": [5, 6, 66, 88, 90, 100, 114, 128, 143, 144, 145, 146, 150, 190, 192, 193, 194, 201, 204, 208, 209, 210, 211, 212, 213, 225, 291, 292, 299, 326], "skelet": 317, "skew": [64, 80, 125, 130, 131, 191, 218, 229, 230, 231, 232], "slice": [147, 285, 309], "slice0": 147, "slightli": [209, 210, 212, 252, 253, 255], "sliver": 225, "slow": 152, "slower": [278, 307], "small": [85, 150, 233, 238, 239, 241, 243, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 285, 311, 327, 328], "smaller": [201, 326], "smart": 188, "smartlaplaciansmooth": 192, "smooth": [2, 144, 150, 184, 185, 186, 188, 189, 192, 303, 315, 325], "smooth_kwarg": 192, "smoother": 192, "smoothspher": 2, "snap": [149, 151], "snap2surf": [149, 151], "snapgrid2surf": [149, 151], "so": [39, 54, 99, 128, 147, 156, 157, 158, 188, 190, 314, 320, 322, 323, 326, 327], "societi": 315, "softwar": [314, 315, 317], "sohn": 315, "solid": [107, 108, 303, 315], "solid2edg": [92, 93, 96, 101, 102, 105, 112, 116, 119, 121, 297, 306], "solid2fac": [94, 95, 97, 103, 117, 122, 306], "solid2tet": [91, 98, 104, 123], "solv": [187, 321, 322, 327, 328], "some": [20, 54, 65, 74, 190, 195, 207, 214, 215, 298, 307, 317, 319, 321], "soo": 315, "sophist": 1, "sort": [111, 190, 273, 285, 286, 291, 292, 323], "sourc": [2, 5, 6, 7, 20, 24, 25, 26, 27, 39, 48, 49, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304], "sp": [155, 161, 165, 168, 170], "space": [6, 316, 326], "span": 194, "spars": [187, 196], "spatial": [40, 139, 142, 326], "spec": 315, "specfi": 25, "special": [316, 322], "specif": [6, 7, 148, 306, 308, 311, 314, 317, 319], "specifi": [24, 26, 27, 39, 64, 65, 74, 86, 88, 90, 92, 100, 107, 128, 142, 143, 145, 146, 148, 149, 151, 152, 154, 159, 160, 169, 185, 186, 187, 188, 189, 192, 193, 194, 200, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 227, 245, 249, 250, 251, 254, 256, 257, 271, 276, 277, 282, 287, 296, 298, 303, 326], "speed": [283, 287, 290], "spent": 307, "sphere": [2, 86, 91, 215, 305, 307, 310, 314, 321], "spheric": [132, 321], "sphinx": [2, 5, 6, 7, 10], "split": [85, 104, 106, 142, 192, 193, 286, 307, 320], "splitfeatur": 63, "spread": 186, "spring": [26, 144, 150, 186, 187, 315, 316, 325], "springer": 315, "spuriou": 321, "sqrt": [2, 321], "squar": [2, 89, 90, 210, 212, 321], "src": 2, "stabl": 83, "stack": [66, 100, 148, 309], "standard": [65, 128, 144, 298, 316, 323], "star": 322, "start": [7, 26, 246, 247, 249, 252, 253, 255, 285, 317, 322, 326], "state": [64, 320], "static": 70, "statist": [287, 290], "statu": 323, "step": [192, 208, 213, 307, 322], "steve": 315, "stiff": [26, 186, 187, 328], "stiffnessfactor": [26, 187], "still": [19, 83, 215], "stl": [72, 312], "storag": [252, 253, 255, 315], "store": [20, 64, 120, 146, 147, 152, 190, 193, 309, 314, 323], "str": [20, 25, 26, 27, 55, 64, 65, 66, 72, 74, 77, 86, 87, 88, 89, 90, 91, 92, 98, 100, 104, 107, 111, 114, 123, 128, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 166, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 225, 227, 241, 243, 251, 254, 258, 271, 278, 283, 287, 290, 291, 294, 297, 298, 303, 304], "straight": [7, 211, 307, 326], "strategi": [86, 194, 326], "stretch": 321, "strict": 272, "strictli": [26, 186, 209, 210, 212, 230, 232, 251, 254, 328], "string": [25, 55, 74, 147, 190, 192, 193, 290, 303], "strive": 317, "structur": [78, 114, 194, 195, 197, 202, 241, 243, 248, 251, 254, 273, 283, 287, 290, 306, 315, 317, 322, 326], "sub": [99, 227, 316], "subdivid": [26, 99, 197, 326], "subdivis": [86, 194], "subject": 6, "sublist": 285, "submit": 7, "submodul": 305, "subplot": [2, 307], "subsequ": 314, "subseri": 315, "substitut": 1, "suffer": 307, "suffici": [91, 238, 239, 241, 243, 252, 253, 255, 261, 262, 263, 264, 327, 328], "suit": 64, "suitabl": [107, 297], "sum": [2, 6, 227], "sum_": 328, "super": 322, "suppli": [201, 294, 317], "support": [1, 20, 72, 107, 111, 148, 287, 290, 312, 313, 317], "suppress": 313, "sure": [313, 322, 326], "surf": [20, 25, 26, 65, 75, 86, 91, 107, 205, 206, 207, 208, 213, 214, 215, 216, 271, 297, 298, 314], "surf1": [84, 85], "surf1intersect": 259, "surf2": [84, 85], "surf2intersect": 259, "surf2octre": 258, "surf2tri": [251, 254], "surf2voxel": 314, "surfac": [1, 2, 6, 18, 20, 21, 22, 26, 33, 34, 38, 46, 47, 50, 51, 52, 53, 65, 84, 85, 86, 91, 94, 107, 108, 109, 111, 112, 113, 114, 124, 125, 128, 130, 131, 143, 144, 149, 150, 151, 152, 153, 154, 155, 161, 165, 168, 170, 173, 174, 175, 177, 185, 186, 188, 189, 190, 201, 204, 205, 206, 207, 208, 213, 214, 215, 216, 226, 233, 239, 241, 243, 251, 254, 258, 259, 269, 271, 274, 283, 287, 289, 290, 294, 298, 299, 303, 307, 308, 310, 315, 317, 320], "surface2edg": 107, "surface2octre": [241, 243, 251, 254, 283, 287, 290, 326], "surfacemesh": [2, 5, 153, 154, 155, 161, 165, 168, 170, 173, 177, 307, 310], "surfacenodeoptim": 2, "surfconn": [26, 33, 54, 94, 109, 111, 114, 125, 130, 131, 201, 236, 241, 243, 251, 254, 258, 269, 274, 283, 289], "surfconn1": [259, 287, 290], "surfconn2": [259, 287, 290], "surfcoord": 114, "sw05": [86, 194, 195, 315, 326], "sweep": 7, "sydnei": 317, "symbol": [86, 124, 155, 158, 161, 164, 165, 168, 170, 180], "symfun": 176, "symfun1": [158, 164, 180], "symfun2": [158, 164, 180], "symmetr": [156, 157, 158, 307], "sympi": [124, 150, 155, 158, 161, 164, 165, 168, 170, 180, 307, 311], "symposium": 315, "system": [83, 128, 279, 321, 326, 328], "t": [26, 27, 39, 41, 43, 62, 65, 70, 75, 94, 111, 112, 149, 174, 175, 176, 186, 188, 190, 234, 239, 241, 243, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 283, 287, 289, 290, 294, 298, 314, 319, 321, 322, 323, 326, 327, 328], "t_": 327, "t_i": 327, "t_j": 322, "t_p": 322, "tabl": [306, 320, 322], "take": [6, 74, 159, 160, 193, 211, 314, 322], "taken": [55, 107, 108, 193, 320, 326], "tami": 315, "tandfonlin": 315, "tangent": [144, 150, 189], "tangenti": [2, 144, 150, 188, 189], "tangentialsurfac": 188, "target": [188, 190, 191, 192, 193], "task": 317, "taubin": 5, "td": 327, "techniqu": 315, "teeth": 317, "temporarili": 227, "term": [287, 290, 314, 323, 327], "termin": [185, 186, 188, 189, 322, 326], "teseo": 315, "tessel": 315, "test": [111, 234, 237, 238, 239, 240, 241, 243, 245, 248, 251, 254, 255, 260, 261, 262, 263, 264, 315, 320, 326], "tet": [91, 107, 110, 145, 151, 207, 208, 209, 213, 214, 227, 271, 274, 297, 323], "tet10nodeconn": 115, "tet4nodeconn": [115, 118], "tetconn": [98, 104, 110, 123], "tetconn1to14": 123, "tetconn1to2": 104, "tetconn1to24": 98, "tetconn1to3": 123, "tetconn1to36": 123, "tetconn1to4": 104, "tetconn1to5": 98, "tetconn1to6": 98, "tetcontract": 192, "tetcoord": 110, "tetcoords1to14": 123, "tetcoords1to2": 104, "tetcoords1to24": 98, "tetcoords1to3": 123, "tetcoords1to36": 123, "tetcoords1to4": 104, "tetcoords1to5": 98, "tetcoords1to6": 98, "tetflip": 192, "tetgen": [315, 317], "tetmesh": [6, 274, 307, 310], "tetnodeconn": 91, "tetnodecoord": 91, "tetopt": 26, "tetradehdr": 115, "tetradehedr": 115, "tetrahedr": [26, 65, 91, 98, 104, 107, 110, 115, 116, 117, 118, 123, 135, 145, 151, 184, 190, 192, 193, 207, 208, 209, 213, 214, 218, 225, 231, 266, 288, 298, 307, 308, 315, 317, 322, 323], "tetrahedra": [86, 91, 98, 104, 110, 123, 143, 149, 151, 207, 213, 214, 231, 307, 308, 316, 323], "tetrahedron": [266, 308, 322], "tetraher": 1, "tetsplit": 192, "th": [315, 328], "tha": 322, "than": [18, 25, 65, 66, 74, 77, 87, 88, 89, 90, 91, 96, 97, 98, 100, 101, 102, 103, 104, 105, 116, 117, 119, 121, 122, 123, 128, 143, 144, 145, 146, 147, 149, 150, 151, 152, 185, 186, 188, 189, 190, 193, 194, 195, 201, 227, 252, 253, 255, 271, 272, 274, 283, 287, 290, 298, 306, 307, 317, 320, 321, 322, 323, 326], "thei": [6, 41, 43, 55, 88, 92, 111, 144, 150, 243, 273, 285, 286, 291, 305, 306, 308, 314, 316, 320, 321, 323, 326], "them": [85, 207, 311, 314, 322, 326], "theme": [301, 303, 317], "theorema": 321, "theoret": 2, "theori": [1, 15, 315, 317, 322], "therefor": 321, "theta_resolut": [205, 206, 207, 214, 215], "thi": [1, 5, 6, 7, 16, 18, 20, 24, 25, 26, 27, 40, 50, 54, 55, 64, 65, 75, 85, 86, 89, 91, 98, 104, 110, 111, 112, 120, 123, 125, 128, 130, 131, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 161, 165, 168, 169, 170, 174, 175, 177, 186, 192, 193, 194, 195, 201, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 218, 219, 223, 224, 228, 239, 241, 243, 246, 247, 251, 252, 253, 254, 255, 261, 262, 263, 264, 268, 271, 275, 290, 298, 303, 305, 307, 308, 310, 313, 314, 317, 319, 320, 321, 322, 323, 326, 327, 328], "thick": [26, 174, 175], "thick_fun": 175, "thicken": 175, "thickenf": [6, 274], "thieri": 315, "thing": 314, "third": [139, 142, 266, 267, 268], "thoroughli": 322, "those": [74, 272, 280, 314, 322, 323, 326, 327], "though": [6, 252, 307], "thousand": 326, "three": [5, 88, 120, 124, 143, 145, 146, 149, 151, 152, 153, 154, 157, 158, 163, 164, 173, 175, 177, 179, 180, 181, 182, 183, 193, 200, 209, 213, 214, 215, 226, 237, 252, 260, 261, 262, 283, 306, 309, 310, 314, 316, 321, 322, 323, 326, 327], "threhsold": 55, "threshold": [25, 66, 86, 87, 88, 89, 90, 91, 100, 143, 144, 145, 146, 149, 150, 151, 152, 194, 274, 307, 316, 320, 321], "threshold_dir": [143, 145], "threshold_direct": [25, 66, 100, 143, 145, 146, 149, 151, 152, 307, 314], "thrich": 315, "through": [24, 86, 88, 149, 151, 152, 190, 271, 306, 307, 312, 320, 323], "throughout": [310, 317], "thu": [98, 104, 110, 115, 123, 144, 150, 190, 321], "thurrnerwuthrich98": [278, 315], "tiff": [66, 100, 148, 309], "tifffil": 309, "tight_layout": 307, "tim": [1, 317], "time": [2, 5, 6, 7, 185, 188, 189, 190, 192, 252, 253, 255, 314, 322, 327], "times3": 327, "timothi": 315, "tissu": [315, 317], "todo": [107, 272, 290, 294], "togeth": [67, 280, 307], "toj": 7, "tol": [61, 67, 84, 142, 272, 273, 283, 287, 290], "toler": [67, 84, 85, 86, 91, 185, 186, 188, 189, 233, 249, 250, 251, 254, 256, 257, 258, 259, 272, 273, 283, 287, 290], "toma": 315, "too": 128, "tool": [13, 14, 15, 17, 18, 261, 262, 263, 264, 315, 317], "toolbox": 317, "top": [6, 9, 318], "topolog": [34, 38, 315, 320], "topologi": [8, 9, 10, 318, 323], "toru": [310, 313], "total": [2, 4, 5, 6, 7, 9, 11, 26, 214, 215, 216, 318], "touch": 322, "toward": [144, 150, 321, 322], "tpm": [8, 9, 10, 155, 161, 165, 168, 170, 318], "tpmss": 6, "trace": 307, "trade": 323, "transact": 315, "transfer": [20, 91], "transform": [184, 315], "transit": 195, "transpar": 303, "travers": [322, 323, 326], "treat": [88, 107, 144, 147, 150, 322, 328], "tree": 326, "tri": [106, 107, 113, 149, 200, 204, 205, 206, 207, 208, 210, 212, 213, 214, 215, 234, 238, 242, 244, 253, 255, 268, 271, 307, 316], "tri1": [261, 262, 263, 264], "tri2": [261, 262, 263, 264], "triangl": [2, 16, 65, 89, 90, 91, 113, 125, 130, 131, 137, 139, 142, 200, 201, 207, 214, 215, 232, 234, 237, 238, 251, 252, 253, 254, 255, 260, 261, 262, 263, 264, 267, 268, 269, 271, 272, 298, 308, 311, 315, 317, 320, 322, 326], "triangleboxintersect": 234, "triangluar": 290, "triangul": [1, 125, 130, 131, 134, 135, 137, 139, 140, 143, 149, 315, 320], "triangular": [26, 65, 85, 89, 90, 103, 106, 107, 113, 117, 119, 122, 201, 204, 205, 206, 207, 208, 210, 212, 213, 214, 215, 225, 226, 232, 239, 241, 243, 251, 254, 258, 268, 269, 287, 289, 290, 298, 306, 317], "triconn": [106, 113], "tricoord": [113, 237, 252, 260], "trimesh": 317, "trimetr": [303, 307, 314], "trinorm": [234, 260], "tripl": 327, "tripli": [6, 155, 161, 165, 168, 170], "tritanomali": 303, "trough": 132, "true": [2, 20, 26, 27, 39, 55, 64, 67, 70, 77, 86, 87, 88, 89, 90, 91, 93, 94, 95, 107, 108, 110, 113, 128, 136, 138, 144, 148, 149, 150, 151, 155, 161, 165, 168, 170, 185, 186, 187, 188, 189, 190, 192, 193, 200, 204, 205, 207, 208, 209, 210, 211, 212, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 227, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 273, 280, 285, 286, 287, 290, 303, 307], "truli": 6, "trumbor": [252, 253, 255, 315, 327], "tube": [177, 215], "tupl": [55, 70, 86, 88, 90, 100, 143, 145, 146, 147, 148, 149, 151, 152, 187, 194, 209, 235, 246, 303, 309], "twin": 322, "twist": 208, "twist_cent": 208, "two": [2, 55, 70, 84, 85, 87, 89, 90, 91, 94, 95, 139, 142, 156, 157, 158, 162, 163, 164, 178, 179, 180, 193, 207, 211, 233, 235, 246, 249, 250, 256, 257, 259, 261, 262, 263, 264, 271, 273, 274, 280, 285, 306, 307, 309, 321, 322, 323, 326], "twt": 315, "type": [20, 24, 25, 27, 39, 62, 64, 65, 66, 68, 69, 72, 75, 76, 84, 86, 91, 92, 94, 96, 97, 101, 102, 103, 105, 106, 107, 109, 112, 116, 117, 119, 120, 121, 122, 126, 127, 129, 132, 133, 134, 135, 137, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 252, 255, 260, 261, 262, 263, 265, 269, 270, 271, 272, 275, 277, 278, 282, 283, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 303, 304, 306, 307, 309, 312, 314, 317, 326], "typic": [2, 98, 104, 110, 123], "u": [285, 286, 307, 327], "uedg": 93, "ufac": 95, "ultim": 327, "un": 323, "unalt": [27, 39], "unambigu": [65, 298, 323], "unattach": 34, "unchang": [98, 104, 115, 123, 273, 277, 309, 321], "unclos": [107, 112, 114, 307], "underbrac": 321, "undergon": 111, "understand": [317, 319], "unexpect": 114, "unidirect": 327, "uniform": [2, 20, 91, 151, 193, 275, 299, 316], "union": [84, 91, 179, 307, 310, 317], "union_fun": 179, "union_sym": 180, "union_v": 178, "unionf": [86, 307], "uniqu": [34, 93, 95, 271, 286, 320, 322], "unit": [2, 125, 128, 130, 131, 144, 239, 246, 247, 252, 253, 255, 278, 310, 321, 328], "unitless": 321, "univers": 317, "unknown": 321, "unless": 297, "unload": 187, "unnecessari": 314, "unpack": [143, 145, 146, 149, 151, 152, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215], "unsign": 167, "until": [185, 186, 188, 189, 190, 197, 201, 326, 328], "unus": 190, "up": [20, 65, 298, 303, 309, 316], "updat": [64, 187, 271, 273, 323], "upon": 317, "upper": [55, 70, 153, 209, 210, 212, 234, 235, 240, 246, 247, 260, 327], "url": 315, "us": [1, 6, 7, 16, 18, 20, 24, 25, 26, 34, 38, 46, 55, 66, 70, 86, 88, 89, 90, 91, 96, 97, 98, 101, 102, 103, 104, 105, 107, 108, 110, 111, 114, 116, 117, 119, 121, 122, 123, 128, 140, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 170, 178, 179, 180, 185, 186, 188, 189, 190, 192, 193, 194, 195, 208, 211, 225, 228, 229, 231, 238, 239, 241, 243, 249, 251, 252, 253, 254, 255, 261, 262, 263, 264, 271, 273, 274, 278, 282, 283, 285, 286, 287, 290, 291, 299, 303, 305, 306, 307, 309, 310, 311, 312, 314, 316, 317, 319, 320, 321, 322, 323, 326, 327, 328], "usag": 323, "user": [311, 314, 317, 319], "util": [2, 77, 91, 98, 110, 111, 123, 125, 128, 130, 131, 226, 255, 307, 309, 311, 312, 314, 323], "uv_1": 327, "v": [34, 86, 149, 151, 152, 194, 227, 231, 288, 289, 322, 327], "v_0": 327, "v_1": 327, "v_2": 327, "val": [120, 159], "valid": [239, 241, 243, 272, 317, 322, 323], "valu": [2, 18, 25, 26, 55, 70, 84, 87, 88, 89, 90, 91, 120, 126, 127, 128, 129, 133, 143, 145, 146, 149, 151, 152, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 169, 174, 175, 178, 179, 180, 187, 194, 238, 239, 241, 243, 252, 253, 255, 261, 262, 263, 264, 272, 273, 277, 282, 283, 287, 290, 291, 292, 303, 307, 314, 320, 321, 323, 327], "van": [126, 132, 133, 315], "vari": [6, 209, 210, 212, 306], "variabl": [157, 158, 163, 164, 175, 179, 180, 282, 305, 310, 327], "varieti": [77, 306, 309, 312, 316, 317, 320], "variou": [82, 312, 314, 317, 323, 326], "vartzioti": 315, "vast": 307, "vdot": 321, "vector": [1, 5, 20, 24, 33, 46, 47, 86, 111, 125, 130, 131, 144, 150, 154, 155, 157, 161, 163, 165, 168, 170, 175, 179, 193, 212, 213, 224, 226, 228, 234, 235, 237, 238, 239, 241, 243, 246, 247, 248, 249, 251, 252, 253, 254, 255, 260, 263, 264, 269, 278, 283, 315, 321, 323, 327], "vector_func": [155, 161, 165, 168, 170], "vectoriz": 310, "verbos": [2, 20, 64, 148, 190, 191, 192, 193, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 287, 290], "veri": [317, 327], "verifi": [75, 290, 317, 323], "versa": 326, "version": [2, 77, 91, 234, 255, 278, 313, 317, 323], "vertebr": 317, "vertex": [34, 315, 322, 323, 327], "vertexvalu": 88, "vertic": [34, 86, 88, 90, 115, 143, 144, 145, 149, 150, 151, 194, 195, 200, 234, 237, 238, 252, 253, 255, 260, 261, 262, 263, 264, 266, 267, 268, 320, 322, 326, 327], "via": [2, 140, 144], "viabl": 190, "vice": 326, "victoria": 315, "view": [70, 97, 103, 117, 122, 185, 269, 307, 314, 321], "visibl": [278, 322], "vision": [303, 315], "vispi": [303, 304, 311], "visual": [70, 76, 307, 311, 315], "vivian": 317, "vo": 316, "vol": [20, 25, 65, 75, 86, 91, 107, 207, 214, 215, 216, 271, 298, 307], "volum": [5, 20, 33, 34, 38, 64, 65, 75, 86, 91, 98, 109, 110, 112, 123, 144, 150, 189, 208, 213, 216, 225, 231, 271, 279, 288, 289, 298, 308, 310, 315, 317, 320, 322, 323, 327], "volumetr": [207, 214, 215, 307, 316], "von": 315, "voronoi": 315, "voxel": [66, 88, 100, 114, 120, 128, 143, 144, 145, 146, 147, 152, 159, 160, 166, 167, 196, 202, 245, 275, 276, 299, 314], "voxel2octre": 326, "voxelconn": [100, 114, 120, 159, 160, 196, 202, 245, 275, 299], "voxelcoord": [100, 114, 120, 159, 160, 196, 202, 245, 275, 299], "voxeldata": 100, "voxelmesh": [309, 310], "voxelnodeconn": [87, 314], "voxelnodecoord": [87, 314], "voxels": [66, 100, 128, 144], "vsn91": [6, 315], "vtk": [72, 317], "vtu": [72, 312], "vv_2": 327, "vws09": [184, 315], "w": [6, 7, 86, 143, 149, 151, 152, 153, 154, 155, 161, 165, 168, 170, 173, 177, 185, 204, 205, 207, 208, 209, 210, 211, 214, 215, 274, 307, 314, 315, 321], "wa": [1, 190, 304, 314, 317, 322], "wai": [104, 123, 125, 130, 131, 305, 307, 310, 322, 327], "walk": 322, "wang": 315, "warn": 75, "warren": 315, "wat81": [134, 315, 322], "watertight": 320, "watson": [134, 135, 142, 315], "wbms05": [246, 247, 315, 327], "we": [317, 321], "websit": 195, "wedg": [65, 91, 104, 107, 121, 122, 123, 208, 213, 218, 225, 298, 308, 320], "wedgeconn": 123, "wedgecoord": 123, "weight": [6, 278], "weights1": 6, "weights2": 6, "weights3": 6, "weights4": 6, "weingarten": 321, "well": [16, 111, 149, 151, 225, 311, 314, 317, 319], "were": [190, 193], "what": [110, 209, 210, 212, 272, 294, 307, 320], "when": [20, 65, 97, 103, 117, 122, 181, 182, 183, 185, 186, 188, 189, 190, 249, 252, 253, 255, 269, 273, 298, 306, 307, 308, 313, 319, 321, 322, 326], "where": [2, 18, 20, 115, 149, 151, 152, 186, 193, 194, 209, 210, 212, 249, 250, 256, 257, 258, 261, 262, 263, 264, 268, 284, 306, 310, 313, 316, 320, 321, 322, 323, 327, 328], "whether": [55, 67, 86, 88, 89, 90, 91, 128, 188, 194, 200, 216, 228, 239, 240, 241, 243, 245, 249, 250, 251, 252, 253, 254, 255, 256, 257, 271, 274, 303, 320, 321, 322, 323, 326, 327], "which": [1, 2, 5, 16, 55, 91, 92, 98, 110, 111, 114, 123, 124, 147, 149, 151, 152, 166, 167, 187, 190, 192, 193, 196, 203, 207, 213, 214, 227, 255, 283, 286, 303, 306, 307, 309, 312, 316, 317, 319, 320, 321, 322, 326], "whichev": [65, 298], "while": [26, 185, 186, 188, 189, 306, 307, 310, 316, 317, 319, 321, 322, 323, 326, 327], "white": [2, 5, 6], "who": [27, 272], "whose": [27, 181, 182, 183, 187, 322], "why": 319, "wide": 317, "width": [2, 303], "wikipedia": 310, "wil": 190, "wild": 315, "wilei": 315, "william": [246, 247, 315, 327], "window": 303, "wipper": 315, "wirefram": [303, 316], "within": [1, 26, 27, 92, 107, 111, 149, 151, 159, 160, 190, 193, 194, 195, 201, 252, 253, 255, 283, 288, 289, 316, 322, 326, 327], "without": [144, 150, 186, 273, 311, 313, 314, 321, 322], "won": [62, 70, 283, 287, 290, 294, 314, 319], "word": 192, "work": [2, 83, 114, 285, 306, 317, 319, 327], "worst": [80, 218, 219, 223, 224, 225, 229, 230, 231, 232], "would": [39, 321], "wrap": [83, 128, 138, 275, 317], "wrapper": [139, 140, 317], "write": [20, 309, 312], "written": [20, 72, 148, 309, 317, 321, 327], "www": [246, 247, 313, 315], "x": [5, 6, 18, 39, 86, 88, 91, 120, 124, 147, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 168, 170, 173, 175, 177, 179, 180, 181, 182, 183, 186, 193, 194, 199, 205, 206, 207, 208, 211, 212, 213, 215, 234, 235, 240, 246, 247, 260, 281, 303, 309, 310, 315, 316, 321, 322, 327, 328], "x0": [109, 181, 299], "x1": [109, 153, 273, 275, 276, 288, 289, 290], "x2": [153, 290], "x3": 290, "x4": [287, 290], "x_": 327, "x_0": 321, "x_1": 321, "x_i": [321, 328], "x_iy_i": 321, "x_n": 321, "xifeng": 315, "xin": 55, "xlim": [234, 235, 240, 246, 247, 260], "xmax": [27, 86, 149, 151, 152, 194, 204, 209, 210, 212, 234, 240, 260, 327], "xmin": [27, 86, 149, 151, 152, 194, 204, 209, 210, 212, 234, 240, 260, 327], "xnew": 187, "xout": 55, "xy": [39, 183, 185, 239, 281, 303], "xz": [39, 182, 281, 303], "y": [5, 6, 18, 39, 86, 88, 91, 120, 124, 147, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 168, 170, 173, 175, 177, 179, 180, 181, 182, 183, 186, 193, 194, 199, 205, 206, 207, 208, 211, 212, 213, 215, 234, 235, 240, 246, 247, 260, 281, 303, 309, 310, 315, 316, 321, 322, 327], "y0": [109, 182, 299], "y1": [109, 153, 273, 275, 276, 288, 289, 290], "y2": [153, 290], "y3": 290, "y_": 327, "y_0": 321, "y_1": 321, "y_i": [321, 328], "y_n": 321, "yet": [41, 43, 194], "yixin": 315, "ylim": [234, 235, 240, 246, 247, 260], "ymax": [27, 86, 149, 151, 152, 194, 204, 209, 210, 212, 234, 240, 260, 327], "ymin": [27, 86, 149, 151, 152, 194, 204, 209, 210, 212, 234, 240, 260, 327], "yongji": 315, "you": [1, 314], "yutaka": 315, "yx": 120, "yz": [39, 181, 281], "z": [5, 6, 18, 39, 86, 88, 90, 91, 120, 124, 144, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 168, 170, 173, 175, 177, 179, 180, 181, 182, 183, 186, 193, 194, 199, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 234, 235, 240, 246, 247, 260, 281, 303, 309, 310, 315, 321, 322, 327], "z0": [109, 183, 299], "z1": [109, 153, 273, 275, 276, 288, 289, 290], "z2": [153, 290], "z3": 290, "z_": 327, "z_0": 321, "z_1": 321, "z_i": [321, 328], "z_n": 321, "zbs03": [194, 315, 326], "zeitschrift": 315, "zero": [6, 18, 186, 208, 274, 327], "zhang": [289, 315], "zhou": 315, "zip": [2, 5, 6, 7], "ziti": 7, "zlim": [234, 235, 240, 246, 247, 260], "zmax": [27, 86, 149, 151, 152, 194, 204, 209, 212, 234, 240, 260, 327], "zmin": [27, 86, 149, 151, 152, 194, 204, 209, 212, 234, 240, 260, 327], "zoom": [66, 100, 143, 145, 146, 147], "zorin": 315, "\u00f6": 315, "\u00fc": 315}, "titles": ["API Reference", "Development", "Curvature Analysis", "Mesh Analysis Examples", "Computation times", "Implicit Heart", "Mixed-Topology TPMS", "Pasta Shapes", "Mesh Generation Examples", "Computation times", "Examples", "Computation times", "mymesh.booleans", "mymesh.contour", "mymesh.converter", "mymesh.curvature", "mymesh.delaunay", "mymesh.image", "mymesh.implicit", "mymesh.improvement", "mymesh.mesh", "mymesh.mesh.mesh.BoundaryConn", "mymesh.mesh.mesh.BoundaryNodes", "mymesh.mesh.mesh.Centroids", "mymesh.mesh.mesh.Clip", "mymesh.mesh.mesh.Contour", "mymesh.mesh.mesh.CreateBoundaryLayer", "mymesh.mesh.mesh.Crop", "mymesh.mesh.mesh.EdgeConn", "mymesh.mesh.mesh.EdgeElemConn", "mymesh.mesh.mesh.Edges", "mymesh.mesh.mesh.ElemConn", "mymesh.mesh.mesh.ElemNeighbors", "mymesh.mesh.mesh.ElemNormals", "mymesh.mesh.mesh.EulerCharacteristic", "mymesh.mesh.mesh.FaceConn", "mymesh.mesh.mesh.FaceElemConn", "mymesh.mesh.mesh.Faces", "mymesh.mesh.mesh.Genus", "mymesh.mesh.mesh.Mirror", "mymesh.mesh.mesh.ND", "mymesh.mesh.mesh.NEdge", "mymesh.mesh.mesh.NElem", "mymesh.mesh.mesh.NFace", "mymesh.mesh.mesh.NNode", "mymesh.mesh.mesh.NodeNeighbors", "mymesh.mesh.mesh.NodeNormals", "mymesh.mesh.mesh.NodeNormalsMethod", "mymesh.mesh.mesh.RenumberFacesBySet", "mymesh.mesh.mesh.RenumberNodesBySet", "mymesh.mesh.mesh.SurfConn", "mymesh.mesh.mesh.SurfElemConn", "mymesh.mesh.mesh.SurfNodeNeighbors", "mymesh.mesh.mesh.SurfNodes", "mymesh.mesh.mesh.Surface", "mymesh.mesh.mesh.Threshold", "mymesh.mesh.mesh.addEdges", "mymesh.mesh.mesh.addElems", "mymesh.mesh.mesh.addFaces", "mymesh.mesh.mesh.addNodes", "mymesh.mesh.mesh.cells", "mymesh.mesh.mesh.cleanup", "mymesh.mesh.mesh.copy", "mymesh.mesh.mesh.getCurvature", "mymesh.mesh.mesh.getQuality", "mymesh.mesh.mesh.identify_type", "mymesh.mesh.mesh.imread", "mymesh.mesh.mesh.merge", "mymesh.mesh.mesh.meshio2mymesh", "mymesh.mesh.mesh.mymesh2meshio", "mymesh.mesh.mesh.plot", "mymesh.mesh.mesh.points", "mymesh.mesh.mesh.read", "mymesh.mesh.mesh.removeElems", "mymesh.mesh.mesh.reset", "mymesh.mesh.mesh.validate", "mymesh.mesh.mesh.view", "mymesh.mesh.mesh.write", "mymesh.octree", "mymesh.primitives", "mymesh.quality", "mymesh.rays", "mymesh.utils", "mymesh.visualize", "mymesh.booleans.MeshBooleans", "mymesh.booleans.SplitMesh", "mymesh.contour.Adaptive", "mymesh.contour.MarchingCubes", "mymesh.contour.MarchingCubesImage", "mymesh.contour.MarchingSquares", "mymesh.contour.MarchingSquaresImage", "mymesh.contour.MarchingTetrahedra", "mymesh.converter.EdgesByElement", "mymesh.converter.edges2unique", "mymesh.converter.faces2surface", "mymesh.converter.faces2unique", "mymesh.converter.hex2edges", "mymesh.converter.hex2faces", "mymesh.converter.hex2tet", "mymesh.converter.hexsubdivide", "mymesh.converter.im2voxel", "mymesh.converter.polygon2edges", "mymesh.converter.pyramid2edges", "mymesh.converter.pyramid2faces", "mymesh.converter.pyramid2tet", "mymesh.converter.quad2edges", "mymesh.converter.quad2tri", "mymesh.converter.solid2edges", "mymesh.converter.solid2faces", "mymesh.converter.solid2surface", "mymesh.converter.solid2tets", "mymesh.converter.surf2dual", "mymesh.converter.surf2edges", "mymesh.converter.surf2tris", "mymesh.converter.surf2voxel", "mymesh.converter.tet102tet4", "mymesh.converter.tet2edges", "mymesh.converter.tet2faces", "mymesh.converter.tet42tet10", "mymesh.converter.tri2edges", "mymesh.converter.voxel2im", "mymesh.converter.wedge2edges", "mymesh.converter.wedge2faces", "mymesh.converter.wedge2tet", "mymesh.curvature.AnalyticalCurvature", "mymesh.curvature.CubicFit", "mymesh.curvature.Curvedness", "mymesh.curvature.GaussianCurvature", "mymesh.curvature.ImageCurvature", "mymesh.curvature.MeanCurvature", "mymesh.curvature.NormCurve", "mymesh.curvature.QuadFit", "mymesh.curvature.ShapeCategory", "mymesh.curvature.ShapeIndex", "mymesh.delaunay.BowyerWatson2d", "mymesh.delaunay.BowyerWatson3d", "mymesh.delaunay.ConvexHull", "mymesh.delaunay.ConvexHullFanTriangulation", "mymesh.delaunay.ConvexHull_GiftWrapping", "mymesh.delaunay.SciPy", "mymesh.delaunay.Triangle", "mymesh.delaunay.TriangleSplittingTriangulation", "mymesh.delaunay.Triangulate", "mymesh.image.SurfaceMesh", "mymesh.image.SurfaceNodeOptimization", "mymesh.image.TetMesh", "mymesh.image.VoxelMesh", "mymesh.image.read", "mymesh.image.write", "mymesh.implicit.SurfaceMesh", "mymesh.implicit.SurfaceNodeOptimization", "mymesh.implicit.TetMesh", "mymesh.implicit.VoxelMesh", "mymesh.implicit.box", "mymesh.implicit.cylinder", "mymesh.implicit.diamond", "mymesh.implicit.diff", "mymesh.implicit.difff", "mymesh.implicit.diffs", "mymesh.implicit.grid2fun", "mymesh.implicit.grid2grad", "mymesh.implicit.gyroid", "mymesh.implicit.intersection", "mymesh.implicit.intersectionf", "mymesh.implicit.intersections", "mymesh.implicit.lidinoid", "mymesh.implicit.mesh2sdf", "mymesh.implicit.mesh2udf", "mymesh.implicit.neovius", "mymesh.implicit.offset", "mymesh.implicit.primitive", "mymesh.implicit.rMax", "mymesh.implicit.rMin", "mymesh.implicit.sphere", "mymesh.implicit.thicken", "mymesh.implicit.thickenf", "mymesh.implicit.thickens", "mymesh.implicit.torus", "mymesh.implicit.union", "mymesh.implicit.unionf", "mymesh.implicit.unions", "mymesh.implicit.xplane", "mymesh.implicit.yplane", "mymesh.implicit.zplane", "mymesh.improvement.GeoTransformSmoothing", "mymesh.improvement.LocalLaplacianSmoothing", "mymesh.improvement.NodeSpringSmoothing", "mymesh.improvement.SegmentSpringSmoothing", "mymesh.improvement.SmartLaplacianSmoothing", "mymesh.improvement.TangentialLaplacianSmoothing", "mymesh.improvement.TetContract", "mymesh.improvement.TetFlip", "mymesh.improvement.TetImprove", "mymesh.improvement.TetSplit", "mymesh.octree.Function2Octree", "mymesh.octree.Octree2Dual", "mymesh.octree.Octree2Voxel", "mymesh.octree.Points2Octree", "mymesh.octree.Print", "mymesh.octree.SearchOctree", "mymesh.octree.SearchOctreeTri", "mymesh.octree.Surface2Octree", "mymesh.octree.Voxel2Octree", "mymesh.octree.getAllLeaf", "mymesh.primitives.Box", "mymesh.primitives.Circle", "mymesh.primitives.CirclePt", "mymesh.primitives.Cylinder", "mymesh.primitives.Extrude", "mymesh.primitives.Grid", "mymesh.primitives.Grid2D", "mymesh.primitives.Line", "mymesh.primitives.Plane", "mymesh.primitives.Revolve", "mymesh.primitives.Sphere", "mymesh.primitives.Torus", "mymesh.quality.Area", "mymesh.quality.AspectRatio", "mymesh.quality.InverseOrthogonalQuality", "mymesh.quality.InverseOrthogonality", "mymesh.quality.MaxDihedral", "mymesh.quality.MeanRatio", "mymesh.quality.MinDihedral", "mymesh.quality.OrthogonalQuality", "mymesh.quality.Orthogonality", "mymesh.quality.Skewness", "mymesh.quality.SurfDihedralAngles", "mymesh.quality.Volume", "mymesh.quality.dihedralAngles", "mymesh.quality.equiangular_skewness", "mymesh.quality.quad_skewness", "mymesh.quality.tet_vol_skewness", "mymesh.quality.tri_skewness", "mymesh.rays.BoundaryBoundaryIntersection", "mymesh.rays.BoxTrianglesIntersection", "mymesh.rays.PlaneBoxIntersection", "mymesh.rays.PlaneSurfIntersection", "mymesh.rays.PlaneTriangleIntersection", "mymesh.rays.PlaneTrianglesIntersection", "mymesh.rays.PointInBoundary", "mymesh.rays.PointInBox", "mymesh.rays.PointInSurf", "mymesh.rays.PointInTri", "mymesh.rays.PointsInSurf", "mymesh.rays.PointsInTris", "mymesh.rays.PointsInVoxel", "mymesh.rays.RayBoxIntersection", "mymesh.rays.RayBoxesIntersection", "mymesh.rays.RayOctreeIntersection", "mymesh.rays.RaySegmentIntersection", "mymesh.rays.RaySegmentsIntersection", "mymesh.rays.RaySurfIntersection", "mymesh.rays.RayTriangleIntersection", "mymesh.rays.RayTrianglesIntersection", "mymesh.rays.RaysSurfIntersection", "mymesh.rays.RaysTrianglesIntersection", "mymesh.rays.SegmentSegmentIntersection", "mymesh.rays.SegmentsSegmentsIntersection", "mymesh.rays.SurfSelfIntersection", "mymesh.rays.SurfSurfIntersection", "mymesh.rays.TriangleBoxIntersection", "mymesh.rays.TriangleTriangleIntersection", "mymesh.rays.TriangleTriangleIntersectionPt", "mymesh.rays.TrianglesTrianglesIntersection", "mymesh.rays.TrianglesTrianglesIntersectionPts", "mymesh.utils.AABB", "mymesh.utils.BaryTet", "mymesh.utils.BaryTri", "mymesh.utils.BaryTris", "mymesh.utils.CalcFaceNormal", "mymesh.utils.Centroids", "mymesh.utils.CleanupDegenerateElements", "mymesh.utils.DeleteDegenerateElements", "mymesh.utils.DeleteDuplicateNodes", "mymesh.utils.DetectFeatures", "mymesh.utils.DilateVoxel", "mymesh.utils.ErodeVoxel", "mymesh.utils.ExtractRagged", "mymesh.utils.Face2NodeNormal", "mymesh.utils.MVBB", "mymesh.utils.MergeMesh", "mymesh.utils.MirrorMesh", "mymesh.utils.PadRagged", "mymesh.utils.Project2Surface", "mymesh.utils.RelabelNodes", "mymesh.utils.SortRaggedByLength", "mymesh.utils.SplitRaggedByLength", "mymesh.utils.SurfMapping", "mymesh.utils.TetMeshVol", "mymesh.utils.TriSurfVol", "mymesh.utils.ValueMapping", "mymesh.utils.getConnectedElements", "mymesh.utils.getConnectedNodes", "mymesh.utils.getElemConnectivity", "mymesh.utils.getElemNeighbors", "mymesh.utils.getNodeNeighborhood", "mymesh.utils.getNodeNeighborhoodByRadius", "mymesh.utils.getNodeNeighbors", "mymesh.utils.identify_type", "mymesh.utils.makePyramidLayer", "mymesh.visualize.FaceColor", "mymesh.visualize.GetTheme", "mymesh.visualize.ParseColor", "mymesh.visualize.View", "mymesh.visualize.set_vispy_backend", "User Guide", "Connectivity Representations", "Constructive Solid Geometry", "Element Types", "Image-based Meshing", "Implicit Meshing", "Installation", "File Input/Output", "Using MyMesh in MATLAB", "Working with the <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">mesh</span></code> class", "References", "What is a mesh?", "MyMesh: General purpose, implicit, and image-based meshing in python", "Computation times", "Theory Guide", "Contour", "Curvature", "Delaunay Triangulation", "2\u21923 and 3\u21922 Flips", "implicit", "Improvement", "Octree", "Rays", "Spring-based Smoothing"], "titleterms": {"2": 323, "2d": [79, 306, 316], "3": 323, "33": 320, "3d": [79, 316], "On": 314, "aabb": 265, "acknowledg": 317, "adapt": 86, "addedg": 56, "addelem": 57, "addfac": 58, "addnod": 59, "an": [5, 310], "analysi": [2, 3, 10], "analyt": 321, "analyticalcurvatur": 124, "api": 0, "area": 216, "aspectratio": 217, "barytet": 266, "barytri": [267, 268], "base": [17, 309, 317, 321, 328], "boolean": [12, 84, 85], "boundari": 327, "boundaryboundaryintersect": 233, "boundaryconn": 21, "boundarynod": 22, "bowyer": 322, "bowyerwatson2d": 134, "bowyerwatson3d": 135, "box": [153, 204, 327], "boxtrianglesintersect": 234, "calcfacenorm": 269, "calcul": [2, 15, 80, 321], "caviti": 322, "cell": 60, "centroid": [23, 270], "circl": 205, "circlept": 206, "circumcircl": 322, "class": 314, "clean": 82, "cleanup": 61, "cleanupdegenerateel": 271, "clip": [24, 314], "cloud": 326, "comput": [4, 9, 11, 318], "connect": [14, 82, 306], "construct": [79, 307], "contour": [13, 25, 86, 87, 88, 89, 90, 91, 314, 320], "convent": 321, "convers": [14, 15, 78], "convert": [14, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123], "convex": 16, "convexhul": 136, "convexhull_giftwrap": 138, "convexhullfantriangul": 137, "copi": [62, 314], "core": 311, "creat": 5, "createboundarylay": 26, "creation": 78, "crop": 27, "csg": 307, "cube": 320, "cubic": 321, "cubicfit": 125, "curvatur": [2, 15, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 321], "curved": [126, 321], "cylind": [154, 207], "data": 323, "defin": [5, 310], "definit": 326, "delaunai": [16, 134, 135, 136, 137, 138, 139, 140, 141, 142, 322], "deletedegenerateel": 272, "deleteduplicatenod": 273, "demand": 314, "depend": 311, "detectfeatur": 274, "develop": 1, "diamond": 155, "diff": [156, 158], "difff": 157, "dihedralangl": 228, "dilatevoxel": 275, "distanc": 326, "edg": [30, 323], "edgeconn": 28, "edgeelemconn": 29, "edges2uniqu": 93, "edgesbyel": 92, "elemconn": 31, "element": [14, 308, 323], "elemneighbor": 32, "elemnorm": 33, "equiangular_skew": 229, "erodevoxel": 276, "error": [2, 326], "euclidean": 326, "eulercharacterist": 34, "exampl": [3, 8, 10, 306], "explicit": 307, "extractrag": 277, "extrud": 208, "face": [37, 323], "face2nodenorm": 278, "facecolor": 300, "faceconn": 35, "faceelemconn": 36, "faces2surfac": 94, "faces2uniqu": 95, "featur": 1, "file": [17, 312], "fit": 321, "flip": 323, "format": 322, "from": [78, 311, 314], "function": [5, 18, 80, 310, 326], "function2octre": 194, "gaussian": 321, "gaussiancurvatur": 127, "gener": [8, 10, 17, 18, 317, 326], "genu": 38, "geometri": 307, "geotransformsmooth": 184, "getallleaf": 203, "getconnectedel": 291, "getconnectednod": 292, "getcurvatur": 63, "getelemconnect": 293, "getelemneighbor": 294, "getnodeneighbor": 297, "getnodeneighborhood": 295, "getnodeneighborhoodbyradiu": 296, "getqual": 64, "getthem": 301, "grid": 209, "grid2d": 210, "grid2fun": 159, "grid2grad": 160, "guid": [305, 319], "gyroid": 161, "heart": 5, "helper": 80, "hex2edg": 96, "hex2fac": 97, "hex2tet": 98, "hexsubdivid": 99, "hull": 16, "i": [310, 316], "identify_typ": [65, 298], "im2voxel": 100, "imag": [17, 143, 144, 145, 146, 147, 148, 309, 312, 317], "imagecurvatur": 128, "implicit": [5, 18, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 307, 310, 317, 324, 326], "import": 305, "improv": [19, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 325], "imread": 66, "inclus": 327, "index": [311, 321], "initi": 322, "input": 312, "insert": 322, "insid": 81, "instal": 311, "interpret": 321, "intersect": [81, 162, 164, 327], "intersectionf": 163, "inverseorthogon": 219, "inverseorthogonalqu": 218, "io": 17, "lidinoid": 165, "line": [211, 316], "local": 19, "locallaplaciansmooth": 185, "locat": 322, "makepyramidlay": 299, "manipul": 82, "march": 320, "marchingcub": 87, "marchingcubesimag": 88, "marchingsquar": 89, "marchingsquaresimag": 90, "marchingtetrahedra": 91, "matlab": 313, "maxdihedr": 220, "mean": 321, "meancurvatur": 129, "meanratio": 221, "measur": [2, 82], "merg": 67, "mergemesh": 280, "mesh": [3, 8, 10, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 309, 310, 312, 314, 316, 317, 321, 326], "mesh2sdf": 166, "mesh2udf": 167, "meshboolean": 84, "meshio2mymesh": 68, "method": 20, "metric": [80, 321], "mindihedr": 222, "mirror": 39, "mirrormesh": 281, "miscellan": 82, "mix": 6, "modif": 325, "mvbb": 279, "mymesh": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 309, 313, 317], "mymesh2meshio": 69, "nd": 40, "nedg": 41, "need": 317, "nelem": 42, "neoviu": 168, "nface": 43, "nnode": 44, "node": [19, 325, 328], "nodeneighbor": 45, "nodenorm": 46, "nodenormalsmethod": 47, "nodespringsmooth": 186, "normcurv": 130, "object": 0, "octre": [78, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 326], "octree2du": 195, "octree2voxel": 196, "offset": 169, "oper": [12, 18], "option": 311, "orthogon": 224, "orthogonalqu": 223, "other": 18, "output": 312, "outsid": 81, "overview": 305, "packag": [305, 311], "padrag": 282, "parsecolor": 302, "pasta": 7, "plan": 1, "planar": 316, "plane": [212, 327], "planeboxintersect": 235, "planesurfintersect": 236, "planetriangleintersect": 237, "planetrianglesintersect": 238, "plot": 70, "point": [71, 322, 326, 327], "pointinboundari": 239, "pointinbox": 240, "pointinsurf": 241, "pointintri": 242, "points2octre": 197, "pointsinsurf": 243, "pointsintri": 244, "pointsinvoxel": 245, "polygon2edg": 101, "primit": [79, 170, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215], "princip": 321, "print": 198, "procedur": 323, "project": 82, "project2surfac": 283, "properti": [20, 314], "purpos": 317, "pypi": 311, "pyramid2edg": 102, "pyramid2fac": 103, "pyramid2tet": 104, "python": [311, 317], "quad2edg": 105, "quad2tri": 106, "quad_skew": 230, "quadfit": 131, "quadrat": 321, "qualiti": [80, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232], "queri": 78, "rai": [81, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 327], "rayboxesintersect": 247, "rayboxintersect": 246, "rayoctreeintersect": 248, "raysegmentintersect": 249, "raysegmentsintersect": 250, "rayssurfintersect": 254, "raystrianglesintersect": 255, "raysurfintersect": 251, "raytriangleintersect": 252, "raytrianglesintersect": 253, "read": [72, 147], "reconstruct": 324, "refer": [0, 315], "relabelnod": 284, "removeelem": 73, "renumberfacesbyset": 48, "renumbernodesbyset": 49, "reposit": [19, 325], "represent": 306, "reset": 74, "retriangul": 322, "revolv": 213, "rmax": 171, "rmin": 172, "roadmap": 1, "scipi": 139, "searchoctre": 199, "searchoctreetri": 200, "segment": 327, "segmentsegmentintersect": 256, "segmentspringsmooth": 187, "segmentssegmentsintersect": 257, "set_vispy_backend": 304, "shape": [7, 79, 321, 327], "shapecategori": 132, "shapeindex": 133, "skew": 225, "smartlaplaciansmooth": 188, "smooth": [5, 19, 328], "solid": 307, "solid2edg": 107, "solid2fac": 108, "solid2surfac": 109, "solid2tet": 110, "sortraggedbylength": 285, "sourc": 311, "sphere": [173, 214], "splitmesh": 85, "splitraggedbylength": 286, "spring": 328, "squar": 320, "statement": 317, "structur": 323, "submodul": 0, "summari": 317, "surf": 316, "surf2dual": 111, "surf2edg": 112, "surf2tri": 113, "surf2voxel": 114, "surfac": [5, 54, 82, 316, 321, 324, 326, 327], "surface2octre": 201, "surfacemesh": [143, 149], "surfacenodeoptim": [144, 150], "surfconn": 50, "surfdihedralangl": 226, "surfelemconn": 51, "surfmap": 287, "surfnod": 53, "surfnodeneighbor": 52, "surfselfintersect": 258, "surfsurfintersect": 259, "tabl": 323, "tangentiallaplaciansmooth": 189, "test": [81, 322, 327], "tet102tet4": 115, "tet2edg": 116, "tet2fac": 117, "tet42tet10": 118, "tet_vol_skew": 231, "tetcontract": 190, "tetflip": 191, "tetimprov": 192, "tetmesh": [145, 151], "tetmeshvol": 288, "tetrahedr": 16, "tetrahedra": 320, "tetsplit": 193, "theori": 319, "thicken": [174, 176], "thickenf": 175, "threshold": [55, 314], "time": [4, 9, 11, 318], "tip": 313, "topolog": 325, "topologi": [6, 19], "toru": [177, 215], "tpm": 6, "tri2edg": 119, "tri_skew": 232, "triangl": [140, 327], "triangleboxintersect": 260, "trianglesplittingtriangul": 141, "trianglestrianglesintersect": 263, "trianglestrianglesintersectionpt": 264, "triangletriangleintersect": 261, "triangletriangleintersectionpt": 262, "triangul": [16, 142, 322], "trisurfvol": 289, "type": [14, 308, 316], "union": [178, 180], "unionf": 179, "unpack": 314, "up": 82, "us": 313, "user": 305, "util": [18, 78, 82, 83, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299], "valid": 75, "valuemap": 290, "view": [76, 303], "visual": [83, 300, 301, 302, 303, 304], "vol": 316, "volum": [227, 316], "voxel": [316, 326], "voxel2im": 120, "voxel2octre": 202, "voxelmesh": [146, 152], "watson": 322, "wedge2edg": 121, "wedge2fac": 122, "wedge2tet": 123, "what": [310, 316], "work": 314, "write": [77, 148], "xplane": 181, "yplane": 182, "zplane": 183}})