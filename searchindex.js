Search.setIndex({"alltitles": {"2D Example": [[301, "d-example"]], "2D Planar Meshes": [[310, "d-planar-meshes"]], "2D to 3D Constructions": [[77, "d-to-3d-constructions"]], "2\u21923 and 3\u21922 Flips": [[317, null]], "3D Surfaces": [[310, "d-surfaces"]], "API Reference": [[0, null]], "Acknowledgements": [[311, "acknowledgements"]], "Analytical Curvature": [[315, "analytical-curvature"]], "Bowyer-Watson": [[316, "bowyer-watson"]], "Bowyer-Watson: Initialization": [[316, "bowyer-watson-initialization"]], "Bowyer-Watson: Point Insertion": [[316, "bowyer-watson-point-insertion"]], "Calculating Curvature": [[315, "calculating-curvature"]], "Cavity Formation": [[316, "cavity-formation"]], "Circumcircle Test": [[316, "circumcircle-test"]], "Clip()": [[308, "clip"]], "Computation times": [[4, null], [9, null], [11, null], [312, null]], "Connectivity Representations": [[301, null]], "Connectivity conversion": [[14, "connectivity-conversion"]], "Constructive Solid Geometry": [[302, null]], "Contour": [[314, null]], "Contour()": [[308, "contour"]], "Contouring": [[13, "contouring"]], "Conventions": [[315, "conventions"]], "Conversion From Octree": [[76, "conversion-from-octree"]], "Convex Hull": [[16, "convex-hull"]], "Core dependencies": [[306, "core-dependencies"]], "Creating a Surface": [[5, "creating-a-surface"]], "Cubic Surface Fitting": [[315, "cubic-surface-fitting"]], "Curvature": [[315, null]], "Curvature Analysis": [[2, null]], "Curvature Calculation": [[15, "curvature-calculation"]], "Curvature Conversion": [[15, "curvature-conversion"]], "Curvature Metrics": [[315, "curvature-metrics"]], "Curvature calculation": [[2, "curvature-calculation"]], "Curvedness": [[315, "curvedness"]], "Data Structure": [[317, "data-structure"]], "Defining an implicit function": [[5, "defining-an-implicit-function"]], "Defining implicit functions": [[305, "defining-implicit-functions"]], "Delaunay Triangulation": [[316, null]], "Dependencies": [[306, "dependencies"]], "Development": [[1, null]], "Edge Table": [[317, "id3"]], "Element Table": [[317, "id1"]], "Element Types": [[303, null]], "Element type conversion": [[14, "element-type-conversion"]], "Error Measurement": [[2, "error-measurement"]], "Euclidean Distance Error": [[319, "euclidean-distance-error"]], "Examples": [[10, null]], "Explicit CSG": [[302, "explicit-csg"]], "Face Table": [[317, "id2"]], "File IO": [[17, "file-io"]], "File Input/Output": [[307, null]], "Flipping Procedure": [[317, "flipping-procedure"]], "From meshes to meshes": [[308, "from-meshes-to-meshes"]], "Gaussian Curvature": [[315, "gaussian-curvature"]], "Generating Octrees": [[319, "generating-octrees"]], "Image files": [[307, "image-files"]], "Image-based Mesh Generation": [[17, "image-based-mesh-generation"]], "Image-based Meshing": [[304, null]], "Images in MyMesh": [[304, "images-in-mymesh"]], "Implicit CSG": [[302, "implicit-csg"]], "Implicit Function Octrees": [[319, "implicit-function-octrees"]], "Implicit Function Operators": [[18, "implicit-function-operators"]], "Implicit Functions": [[18, "implicit-functions"]], "Implicit Heart": [[5, null]], "Implicit Meshing": [[305, null]], "Importing MyMesh": [[300, "importing-mymesh"]], "Improvement": [[318, null]], "Inside/Outside Tests": [[79, "inside-outside-tests"]], "Installation": [[306, null]], "Installing from source:": [[306, "installing-from-source"]], "Interpretation": [[315, "interpretation"]], "Intersection Tests": [[79, "intersection-tests"]], "Line Meshes (Type='line')": [[310, "line-meshes-type-line"]], "Local mesh topology": [[19, "local-mesh-topology"]], "Marching Cubes": [[314, "marching-cubes"]], "Marching Cubes 33": [[314, "marching-cubes-33"]], "Marching Squares": [[314, "marching-squares"]], "Marching Tetrahedra": [[314, "marching-tetrahedra"]], "Mean Curvature": [[315, "mean-curvature"]], "Mesh Analysis Examples": [[3, null], [10, "mesh-analysis-examples"]], "Mesh Clean Up": [[80, "mesh-clean-up"]], "Mesh Connectivity": [[80, "mesh-connectivity"]], "Mesh Generation": [[18, "mesh-generation"]], "Mesh Generation Examples": [[8, null], [10, "mesh-generation-examples"]], "Mesh Manipulations": [[80, "mesh-manipulations"]], "Mesh Measurements": [[80, "mesh-measurements"]], "Mesh Types": [[310, "mesh-types"]], "Mesh files": [[307, "mesh-files"]], "Mesh smoothing/node repositioning": [[19, "mesh-smoothing-node-repositioning"]], "Mesh type conversion": [[14, "mesh-type-conversion"]], "Mesh-Based Curvature": [[315, "mesh-based-curvature"]], "Meshing Implicit Functions": [[305, "meshing-implicit-functions"]], "Methods": [[20, "methods"]], "Miscellaneous": [[80, "miscellaneous"]], "Mixed-Topology TPMS": [[6, null]], "MyMesh: General purpose, implicit, and image-based meshing in python": [[311, null]], "Node Repositioning": [[318, "node-repositioning"]], "Node Spring-based": [[321, "node-spring-based"]], "Objects": [[0, "objects"]], "Octree": [[319, null]], "Octree Creation": [[76, "octree-creation"]], "Octree Definition": [[319, "octree-definition"]], "Octree Querying": [[76, "octree-querying"]], "Octree Utilities": [[76, "octree-utilities"]], "On-demand properties": [[308, "on-demand-properties"]], "Operations": [[12, "operations"]], "Optional dependencies": [[306, "optional-dependencies"]], "Other Implicit Mesh Utilities": [[18, "other-implicit-mesh-utilities"]], "Package Overview": [[300, "package-overview"]], "Pasta Shapes": [[7, null]], "Plane-Box Intersection": [[320, "plane-box-intersection"]], "Plane-Shape Intersection Tests": [[320, "plane-shape-intersection-tests"]], "Plane-Triangle Intersection": [[320, "plane-triangle-intersection"]], "Point Cloud Octrees": [[319, "point-cloud-octrees"]], "Point Inclusion Tests": [[320, "point-inclusion-tests"]], "Point Location": [[316, "point-location"]], "Point in Surface": [[320, "point-in-surface"]], "Principal Curvatures": [[315, "principal-curvatures"]], "Properties": [[20, "properties"]], "Python Package Index (PyPI)": [[306, "python-package-index-pypi"]], "Quadratic Surface Fitting": [[315, "quadratic-surface-fitting"]], "Quality Calculation Helper Functions": [[78, "quality-calculation-helper-functions"]], "Quality Metrics": [[78, "quality-metrics"]], "Ray-Box Intersection": [[320, "ray-box-intersection"]], "Ray-Segment Intersection": [[320, "ray-segment-intersection"]], "Ray-Shape Intersection Tests": [[320, "ray-shape-intersection-tests"]], "Ray-Triangle Intersection": [[320, "ray-triangle-intersection"]], "Rays": [[320, null]], "References": [[309, null]], "Retriangulation": [[316, "retriangulation"]], "Roadmap & Planned features": [[1, "roadmap-planned-features"]], "Segment-Segment Intersection": [[320, "segment-segment-intersection"]], "Shape Index": [[315, "shape-index"]], "Shape-Shape Intersection Tests": [[320, "shape-shape-intersection-tests"]], "Shapes": [[77, "shapes"]], "Smoothing": [[5, "smoothing"]], "Spring-based Smoothing": [[321, null]], "Statement of need": [[311, "statement-of-need"]], "Submodules": [[0, "submodules"]], "Summary": [[311, "summary"]], "Surface Mesh Octrees": [[319, "surface-mesh-octrees"]], "Surface Meshes (Type='surf')": [[310, "surface-meshes-type-surf"]], "Surface Projection": [[80, "surface-projection"]], "Tetrahedralization": [[16, "tetrahedralization"]], "Theory Guide": [[313, null]], "Threshold()": [[308, "threshold"]], "Topological Modifications": [[318, "topological-modifications"]], "Triangle-Box Intersection": [[320, "triangle-box-intersection"]], "Triangle-Triangle Intersection": [[320, "triangle-triangle-intersection"]], "Triangulation": [[16, "triangulation"]], "Unpacking": [[308, "unpacking"]], "User Guide": [[300, null]], "Visualization": [[81, "visualization"]], "Visualization Utilities": [[81, "visualization-utilities"]], "Volume Meshes (Type='vol')": [[310, "volume-meshes-type-vol"]], "Voxel Meshes": [[310, "voxel-meshes"]], "Voxel Octrees": [[319, "voxel-octrees"]], "What is a mesh?": [[310, null]], "What is an implicit function?": [[305, "what-is-an-implicit-function"]], "Working with the mesh class": [[308, null]], "copy()": [[308, "copy"]], "mymesh.booleans": [[12, null]], "mymesh.booleans.MeshBooleans": [[82, null]], "mymesh.booleans.SplitMesh": [[83, null]], "mymesh.contour": [[13, null]], "mymesh.contour.Adaptive": [[84, null]], "mymesh.contour.MarchingCubes": [[85, null]], "mymesh.contour.MarchingCubesImage": [[86, null]], "mymesh.contour.MarchingSquares": [[87, null]], "mymesh.contour.MarchingSquaresImage": [[88, null]], "mymesh.contour.MarchingTetrahedra": [[89, null]], "mymesh.converter": [[14, null]], "mymesh.converter.EdgesByElement": [[90, null]], "mymesh.converter.edges2unique": [[91, null]], "mymesh.converter.faces2surface": [[92, null]], "mymesh.converter.faces2unique": [[93, null]], "mymesh.converter.hex2edges": [[94, null]], "mymesh.converter.hex2faces": [[95, null]], "mymesh.converter.hex2tet": [[96, null]], "mymesh.converter.im2voxel": [[97, null]], "mymesh.converter.polygon2edges": [[98, null]], "mymesh.converter.pyramid2edges": [[99, null]], "mymesh.converter.pyramid2faces": [[100, null]], "mymesh.converter.pyramid2tet": [[101, null]], "mymesh.converter.quad2edges": [[102, null]], "mymesh.converter.quad2tri": [[103, null]], "mymesh.converter.solid2edges": [[104, null]], "mymesh.converter.solid2faces": [[105, null]], "mymesh.converter.solid2surface": [[106, null]], "mymesh.converter.solid2tets": [[107, null]], "mymesh.converter.surf2dual": [[108, null]], "mymesh.converter.surf2edges": [[109, null]], "mymesh.converter.surf2tris": [[110, null]], "mymesh.converter.surf2voxel": [[111, null]], "mymesh.converter.tet102tet4": [[112, null]], "mymesh.converter.tet2edges": [[113, null]], "mymesh.converter.tet2faces": [[114, null]], "mymesh.converter.tet42tet10": [[115, null]], "mymesh.converter.tri2edges": [[116, null]], "mymesh.converter.voxel2im": [[117, null]], "mymesh.converter.wedge2edges": [[118, null]], "mymesh.converter.wedge2faces": [[119, null]], "mymesh.converter.wedge2tet": [[120, null]], "mymesh.curvature": [[15, null]], "mymesh.curvature.AnalyticalCurvature": [[121, null]], "mymesh.curvature.CubicFit": [[122, null]], "mymesh.curvature.Curvedness": [[123, null]], "mymesh.curvature.GaussianCurvature": [[124, null]], "mymesh.curvature.ImageCurvature": [[125, null]], "mymesh.curvature.MeanCurvature": [[126, null]], "mymesh.curvature.NormCurve": [[127, null]], "mymesh.curvature.QuadFit": [[128, null]], "mymesh.curvature.ShapeCategory": [[129, null]], "mymesh.curvature.ShapeIndex": [[130, null]], "mymesh.delaunay": [[16, null]], "mymesh.delaunay.BowyerWatson2d": [[131, null]], "mymesh.delaunay.BowyerWatson3d": [[132, null]], "mymesh.delaunay.ConvexHull": [[133, null]], "mymesh.delaunay.ConvexHullFanTriangulation": [[134, null]], "mymesh.delaunay.ConvexHull_GiftWrapping": [[135, null]], "mymesh.delaunay.SciPy": [[136, null]], "mymesh.delaunay.Triangle": [[137, null]], "mymesh.delaunay.TriangleSplittingTriangulation": [[138, null]], "mymesh.delaunay.Triangulate": [[139, null]], "mymesh.image": [[17, null]], "mymesh.image.SurfaceMesh": [[140, null]], "mymesh.image.SurfaceNodeOptimization": [[141, null]], "mymesh.image.TetMesh": [[142, null]], "mymesh.image.VoxelMesh": [[143, null]], "mymesh.image.read": [[144, null]], "mymesh.image.write": [[145, null]], "mymesh.implicit": [[18, null]], "mymesh.implicit.SurfaceMesh": [[146, null]], "mymesh.implicit.SurfaceNodeOptimization": [[147, null]], "mymesh.implicit.TetMesh": [[148, null]], "mymesh.implicit.VoxelMesh": [[149, null]], "mymesh.implicit.box": [[150, null]], "mymesh.implicit.cylinder": [[151, null]], "mymesh.implicit.diamond": [[152, null]], "mymesh.implicit.diff": [[153, null]], "mymesh.implicit.difff": [[154, null]], "mymesh.implicit.diffs": [[155, null]], "mymesh.implicit.grid2fun": [[156, null]], "mymesh.implicit.grid2grad": [[157, null]], "mymesh.implicit.gyroid": [[158, null]], "mymesh.implicit.intersection": [[159, null]], "mymesh.implicit.intersectionf": [[160, null]], "mymesh.implicit.intersections": [[161, null]], "mymesh.implicit.lidinoid": [[162, null]], "mymesh.implicit.mesh2sdf": [[163, null]], "mymesh.implicit.mesh2udf": [[164, null]], "mymesh.implicit.neovius": [[165, null]], "mymesh.implicit.offset": [[166, null]], "mymesh.implicit.primitive": [[167, null]], "mymesh.implicit.rMax": [[168, null]], "mymesh.implicit.rMin": [[169, null]], "mymesh.implicit.sphere": [[170, null]], "mymesh.implicit.thicken": [[171, null]], "mymesh.implicit.thickenf": [[172, null]], "mymesh.implicit.thickens": [[173, null]], "mymesh.implicit.torus": [[174, null]], "mymesh.implicit.union": [[175, null]], "mymesh.implicit.unionf": [[176, null]], "mymesh.implicit.unions": [[177, null]], "mymesh.implicit.xplane": [[178, null]], "mymesh.implicit.yplane": [[179, null]], "mymesh.implicit.zplane": [[180, null]], "mymesh.improvement": [[19, null]], "mymesh.improvement.GeoTransformSmoothing": [[181, null]], "mymesh.improvement.GlobalLaplacianSmoothing": [[182, null]], "mymesh.improvement.LocalLaplacianSmoothing": [[183, null]], "mymesh.improvement.NodeSpringSmoothing": [[184, null]], "mymesh.improvement.SegmentSpringSmoothing": [[185, null]], "mymesh.improvement.SmartLaplacianSmoothing": [[186, null]], "mymesh.improvement.TangentialLaplacianSmoothing": [[187, null]], "mymesh.improvement.TetContract": [[188, null]], "mymesh.improvement.TetFlip": [[189, null]], "mymesh.improvement.TetImprove": [[190, null]], "mymesh.improvement.TetSplit": [[191, null]], "mymesh.mesh": [[20, null]], "mymesh.mesh.mesh.BoundaryConn": [[21, null]], "mymesh.mesh.mesh.BoundaryNodes": [[22, null]], "mymesh.mesh.mesh.Centroids": [[23, null]], "mymesh.mesh.mesh.Clip": [[24, null]], "mymesh.mesh.mesh.Contour": [[25, null]], "mymesh.mesh.mesh.CreateBoundaryLayer": [[26, null]], "mymesh.mesh.mesh.EdgeConn": [[27, null]], "mymesh.mesh.mesh.EdgeElemConn": [[28, null]], "mymesh.mesh.mesh.Edges": [[29, null]], "mymesh.mesh.mesh.ElemConn": [[30, null]], "mymesh.mesh.mesh.ElemNeighbors": [[31, null]], "mymesh.mesh.mesh.ElemNormals": [[32, null]], "mymesh.mesh.mesh.EulerCharacteristic": [[33, null]], "mymesh.mesh.mesh.FaceConn": [[34, null]], "mymesh.mesh.mesh.FaceElemConn": [[35, null]], "mymesh.mesh.mesh.Faces": [[36, null]], "mymesh.mesh.mesh.Genus": [[37, null]], "mymesh.mesh.mesh.ND": [[38, null]], "mymesh.mesh.mesh.NEdge": [[39, null]], "mymesh.mesh.mesh.NElem": [[40, null]], "mymesh.mesh.mesh.NFace": [[41, null]], "mymesh.mesh.mesh.NNode": [[42, null]], "mymesh.mesh.mesh.NodeNeighbors": [[43, null]], "mymesh.mesh.mesh.NodeNormals": [[44, null]], "mymesh.mesh.mesh.NodeNormalsMethod": [[45, null]], "mymesh.mesh.mesh.RenumberFacesBySet": [[46, null]], "mymesh.mesh.mesh.RenumberNodesBySet": [[47, null]], "mymesh.mesh.mesh.SurfConn": [[48, null]], "mymesh.mesh.mesh.SurfElemConn": [[49, null]], "mymesh.mesh.mesh.SurfNodeNeighbors": [[50, null]], "mymesh.mesh.mesh.SurfNodes": [[51, null]], "mymesh.mesh.mesh.Surface": [[52, null]], "mymesh.mesh.mesh.Threshold": [[53, null]], "mymesh.mesh.mesh.addEdges": [[54, null]], "mymesh.mesh.mesh.addElems": [[55, null]], "mymesh.mesh.mesh.addFaces": [[56, null]], "mymesh.mesh.mesh.addNodes": [[57, null]], "mymesh.mesh.mesh.cells": [[58, null]], "mymesh.mesh.mesh.cleanup": [[59, null]], "mymesh.mesh.mesh.copy": [[60, null]], "mymesh.mesh.mesh.getCurvature": [[61, null]], "mymesh.mesh.mesh.getQuality": [[62, null]], "mymesh.mesh.mesh.identify_type": [[63, null]], "mymesh.mesh.mesh.imread": [[64, null]], "mymesh.mesh.mesh.merge": [[65, null]], "mymesh.mesh.mesh.meshio2mymesh": [[66, null]], "mymesh.mesh.mesh.mymesh2meshio": [[67, null]], "mymesh.mesh.mesh.plot": [[68, null]], "mymesh.mesh.mesh.points": [[69, null]], "mymesh.mesh.mesh.read": [[70, null]], "mymesh.mesh.mesh.removeElems": [[71, null]], "mymesh.mesh.mesh.reset": [[72, null]], "mymesh.mesh.mesh.validate": [[73, null]], "mymesh.mesh.mesh.view": [[74, null]], "mymesh.mesh.mesh.write": [[75, null]], "mymesh.octree": [[76, null]], "mymesh.octree.Function2Octree": [[192, null]], "mymesh.octree.Octree2Dual": [[193, null]], "mymesh.octree.Octree2Voxel": [[194, null]], "mymesh.octree.Points2Octree": [[195, null]], "mymesh.octree.Print": [[196, null]], "mymesh.octree.SearchOctree": [[197, null]], "mymesh.octree.SearchOctreeTri": [[198, null]], "mymesh.octree.Surface2Octree": [[199, null]], "mymesh.octree.Voxel2Octree": [[200, null]], "mymesh.octree.getAllLeaf": [[201, null]], "mymesh.primitives": [[77, null]], "mymesh.primitives.Box": [[202, null]], "mymesh.primitives.Circle": [[203, null]], "mymesh.primitives.CirclePt": [[204, null]], "mymesh.primitives.Cylinder": [[205, null]], "mymesh.primitives.Extrude": [[206, null]], "mymesh.primitives.Grid": [[207, null]], "mymesh.primitives.Grid2D": [[208, null]], "mymesh.primitives.Line": [[209, null]], "mymesh.primitives.Plane": [[210, null]], "mymesh.primitives.Revolve": [[211, null]], "mymesh.primitives.Sphere": [[212, null]], "mymesh.primitives.Torus": [[213, null]], "mymesh.quality": [[78, null]], "mymesh.quality.Area": [[214, null]], "mymesh.quality.AspectRatio": [[215, null]], "mymesh.quality.InverseOrthogonalQuality": [[216, null]], "mymesh.quality.InverseOrthogonality": [[217, null]], "mymesh.quality.MaxDihedral": [[218, null]], "mymesh.quality.MeanRatio": [[219, null]], "mymesh.quality.MinDihedral": [[220, null]], "mymesh.quality.OrthogonalQuality": [[221, null]], "mymesh.quality.Orthogonality": [[222, null]], "mymesh.quality.Skewness": [[223, null]], "mymesh.quality.SurfDihedralAngles": [[224, null]], "mymesh.quality.Volume": [[225, null]], "mymesh.quality.dihedralAngles": [[226, null]], "mymesh.quality.equiangular_skewness": [[227, null]], "mymesh.quality.quad_skewness": [[228, null]], "mymesh.quality.tet_vol_skewness": [[229, null]], "mymesh.quality.tri_skewness": [[230, null]], "mymesh.rays": [[79, null]], "mymesh.rays.BoxTrianglesIntersection": [[231, null]], "mymesh.rays.PlaneBoxIntersection": [[232, null]], "mymesh.rays.PlaneSurfIntersection": [[233, null]], "mymesh.rays.PlaneTriangleIntersection": [[234, null]], "mymesh.rays.PlaneTrianglesIntersection": [[235, null]], "mymesh.rays.PointInBox": [[236, null]], "mymesh.rays.PointInSurf": [[237, null]], "mymesh.rays.PointInTri": [[238, null]], "mymesh.rays.PointsInSurf": [[239, null]], "mymesh.rays.PointsInTris": [[240, null]], "mymesh.rays.PointsInVoxel": [[241, null]], "mymesh.rays.RayBoxIntersection": [[242, null]], "mymesh.rays.RayBoxesIntersection": [[243, null]], "mymesh.rays.RayOctreeIntersection": [[244, null]], "mymesh.rays.RaySegmentsIntersection": [[245, null]], "mymesh.rays.RaySurfIntersection": [[246, null]], "mymesh.rays.RayTriangleIntersection": [[247, null]], "mymesh.rays.RayTrianglesIntersection": [[248, null]], "mymesh.rays.RaysSurfIntersection": [[249, null]], "mymesh.rays.RaysTrianglesIntersection": [[250, null]], "mymesh.rays.SegmentSegmentIntersection": [[251, null]], "mymesh.rays.SegmentsSegmentsIntersection": [[252, null]], "mymesh.rays.SurfSelfIntersection": [[253, null]], "mymesh.rays.SurfSurfIntersection": [[254, null]], "mymesh.rays.TriangleBoxIntersection": [[255, null]], "mymesh.rays.TriangleTriangleIntersection": [[256, null]], "mymesh.rays.TriangleTriangleIntersectionPt": [[257, null]], "mymesh.rays.TrianglesTrianglesIntersection": [[258, null]], "mymesh.rays.TrianglesTrianglesIntersectionPts": [[259, null]], "mymesh.utils": [[80, null]], "mymesh.utils.AABB": [[260, null]], "mymesh.utils.BaryTet": [[261, null]], "mymesh.utils.BaryTri": [[262, null]], "mymesh.utils.BaryTris": [[263, null]], "mymesh.utils.CalcFaceNormal": [[264, null]], "mymesh.utils.Centroids": [[265, null]], "mymesh.utils.CleanupDegenerateElements": [[266, null]], "mymesh.utils.DeleteDegenerateElements": [[267, null]], "mymesh.utils.DeleteDuplicateNodes": [[268, null]], "mymesh.utils.DetectFeatures": [[269, null]], "mymesh.utils.DilateVoxel": [[270, null]], "mymesh.utils.ErodeVoxel": [[271, null]], "mymesh.utils.ExtractRagged": [[272, null]], "mymesh.utils.Face2NodeNormal": [[273, null]], "mymesh.utils.MVBB": [[274, null]], "mymesh.utils.MergeMesh": [[275, null]], "mymesh.utils.MirrorMesh": [[276, null]], "mymesh.utils.PadRagged": [[277, null]], "mymesh.utils.Project2Surface": [[278, null]], "mymesh.utils.RelabelNodes": [[279, null]], "mymesh.utils.SortRaggedByLength": [[280, null]], "mymesh.utils.SplitRaggedByLength": [[281, null]], "mymesh.utils.SurfMapping": [[282, null]], "mymesh.utils.TetMeshVol": [[283, null]], "mymesh.utils.TriSurfVol": [[284, null]], "mymesh.utils.ValueMapping": [[285, null]], "mymesh.utils.getConnectedElements": [[286, null]], "mymesh.utils.getConnectedNodes": [[287, null]], "mymesh.utils.getElemConnectivity": [[288, null]], "mymesh.utils.getElemNeighbors": [[289, null]], "mymesh.utils.getNodeNeighborhood": [[290, null]], "mymesh.utils.getNodeNeighborhoodByRadius": [[291, null]], "mymesh.utils.getNodeNeighbors": [[292, null]], "mymesh.utils.identify_type": [[293, null]], "mymesh.utils.makePyramidLayer": [[294, null]], "mymesh.visualize": [[81, null]], "mymesh.visualize.FaceColor": [[295, null]], "mymesh.visualize.GetTheme": [[296, null]], "mymesh.visualize.ParseColor": [[297, null]], "mymesh.visualize.View": [[298, null]], "mymesh.visualize.set_vispy_backend": [[299, null]]}, "docnames": ["api", "dev", "examples/MeshAnalysis/demo_curvature", "examples/MeshAnalysis/index", "examples/MeshAnalysis/sg_execution_times", "examples/MeshGeneration/demo_heart", "examples/MeshGeneration/demo_mixed-top", "examples/MeshGeneration/demo_pasta", "examples/MeshGeneration/index", "examples/MeshGeneration/sg_execution_times", "examples/index", "examples/sg_execution_times", "generated/mymesh.booleans", "generated/mymesh.contour", "generated/mymesh.converter", "generated/mymesh.curvature", "generated/mymesh.delaunay", "generated/mymesh.image", "generated/mymesh.implicit", "generated/mymesh.improvement", "generated/mymesh.mesh", "generated/mymesh.mesh.mesh.BoundaryConn", "generated/mymesh.mesh.mesh.BoundaryNodes", "generated/mymesh.mesh.mesh.Centroids", "generated/mymesh.mesh.mesh.Clip", "generated/mymesh.mesh.mesh.Contour", "generated/mymesh.mesh.mesh.CreateBoundaryLayer", "generated/mymesh.mesh.mesh.EdgeConn", "generated/mymesh.mesh.mesh.EdgeElemConn", "generated/mymesh.mesh.mesh.Edges", "generated/mymesh.mesh.mesh.ElemConn", "generated/mymesh.mesh.mesh.ElemNeighbors", "generated/mymesh.mesh.mesh.ElemNormals", "generated/mymesh.mesh.mesh.EulerCharacteristic", "generated/mymesh.mesh.mesh.FaceConn", "generated/mymesh.mesh.mesh.FaceElemConn", "generated/mymesh.mesh.mesh.Faces", "generated/mymesh.mesh.mesh.Genus", "generated/mymesh.mesh.mesh.ND", "generated/mymesh.mesh.mesh.NEdge", "generated/mymesh.mesh.mesh.NElem", "generated/mymesh.mesh.mesh.NFace", "generated/mymesh.mesh.mesh.NNode", "generated/mymesh.mesh.mesh.NodeNeighbors", "generated/mymesh.mesh.mesh.NodeNormals", "generated/mymesh.mesh.mesh.NodeNormalsMethod", "generated/mymesh.mesh.mesh.RenumberFacesBySet", "generated/mymesh.mesh.mesh.RenumberNodesBySet", "generated/mymesh.mesh.mesh.SurfConn", "generated/mymesh.mesh.mesh.SurfElemConn", "generated/mymesh.mesh.mesh.SurfNodeNeighbors", "generated/mymesh.mesh.mesh.SurfNodes", "generated/mymesh.mesh.mesh.Surface", "generated/mymesh.mesh.mesh.Threshold", "generated/mymesh.mesh.mesh.addEdges", "generated/mymesh.mesh.mesh.addElems", "generated/mymesh.mesh.mesh.addFaces", "generated/mymesh.mesh.mesh.addNodes", "generated/mymesh.mesh.mesh.cells", "generated/mymesh.mesh.mesh.cleanup", "generated/mymesh.mesh.mesh.copy", "generated/mymesh.mesh.mesh.getCurvature", "generated/mymesh.mesh.mesh.getQuality", "generated/mymesh.mesh.mesh.identify_type", "generated/mymesh.mesh.mesh.imread", "generated/mymesh.mesh.mesh.merge", "generated/mymesh.mesh.mesh.meshio2mymesh", "generated/mymesh.mesh.mesh.mymesh2meshio", "generated/mymesh.mesh.mesh.plot", "generated/mymesh.mesh.mesh.points", "generated/mymesh.mesh.mesh.read", "generated/mymesh.mesh.mesh.removeElems", "generated/mymesh.mesh.mesh.reset", "generated/mymesh.mesh.mesh.validate", "generated/mymesh.mesh.mesh.view", "generated/mymesh.mesh.mesh.write", "generated/mymesh.octree", "generated/mymesh.primitives", "generated/mymesh.quality", "generated/mymesh.rays", "generated/mymesh.utils", "generated/mymesh.visualize", "generated/submodules/mymesh.booleans.MeshBooleans", "generated/submodules/mymesh.booleans.SplitMesh", "generated/submodules/mymesh.contour.Adaptive", "generated/submodules/mymesh.contour.MarchingCubes", "generated/submodules/mymesh.contour.MarchingCubesImage", "generated/submodules/mymesh.contour.MarchingSquares", "generated/submodules/mymesh.contour.MarchingSquaresImage", "generated/submodules/mymesh.contour.MarchingTetrahedra", "generated/submodules/mymesh.converter.EdgesByElement", "generated/submodules/mymesh.converter.edges2unique", "generated/submodules/mymesh.converter.faces2surface", "generated/submodules/mymesh.converter.faces2unique", "generated/submodules/mymesh.converter.hex2edges", "generated/submodules/mymesh.converter.hex2faces", "generated/submodules/mymesh.converter.hex2tet", "generated/submodules/mymesh.converter.im2voxel", "generated/submodules/mymesh.converter.polygon2edges", "generated/submodules/mymesh.converter.pyramid2edges", "generated/submodules/mymesh.converter.pyramid2faces", "generated/submodules/mymesh.converter.pyramid2tet", "generated/submodules/mymesh.converter.quad2edges", "generated/submodules/mymesh.converter.quad2tri", "generated/submodules/mymesh.converter.solid2edges", "generated/submodules/mymesh.converter.solid2faces", "generated/submodules/mymesh.converter.solid2surface", "generated/submodules/mymesh.converter.solid2tets", "generated/submodules/mymesh.converter.surf2dual", "generated/submodules/mymesh.converter.surf2edges", "generated/submodules/mymesh.converter.surf2tris", "generated/submodules/mymesh.converter.surf2voxel", "generated/submodules/mymesh.converter.tet102tet4", "generated/submodules/mymesh.converter.tet2edges", "generated/submodules/mymesh.converter.tet2faces", "generated/submodules/mymesh.converter.tet42tet10", "generated/submodules/mymesh.converter.tri2edges", "generated/submodules/mymesh.converter.voxel2im", "generated/submodules/mymesh.converter.wedge2edges", "generated/submodules/mymesh.converter.wedge2faces", "generated/submodules/mymesh.converter.wedge2tet", "generated/submodules/mymesh.curvature.AnalyticalCurvature", "generated/submodules/mymesh.curvature.CubicFit", "generated/submodules/mymesh.curvature.Curvedness", "generated/submodules/mymesh.curvature.GaussianCurvature", "generated/submodules/mymesh.curvature.ImageCurvature", "generated/submodules/mymesh.curvature.MeanCurvature", "generated/submodules/mymesh.curvature.NormCurve", "generated/submodules/mymesh.curvature.QuadFit", "generated/submodules/mymesh.curvature.ShapeCategory", "generated/submodules/mymesh.curvature.ShapeIndex", "generated/submodules/mymesh.delaunay.BowyerWatson2d", "generated/submodules/mymesh.delaunay.BowyerWatson3d", "generated/submodules/mymesh.delaunay.ConvexHull", "generated/submodules/mymesh.delaunay.ConvexHullFanTriangulation", "generated/submodules/mymesh.delaunay.ConvexHull_GiftWrapping", "generated/submodules/mymesh.delaunay.SciPy", "generated/submodules/mymesh.delaunay.Triangle", "generated/submodules/mymesh.delaunay.TriangleSplittingTriangulation", "generated/submodules/mymesh.delaunay.Triangulate", "generated/submodules/mymesh.image.SurfaceMesh", "generated/submodules/mymesh.image.SurfaceNodeOptimization", "generated/submodules/mymesh.image.TetMesh", "generated/submodules/mymesh.image.VoxelMesh", "generated/submodules/mymesh.image.read", "generated/submodules/mymesh.image.write", "generated/submodules/mymesh.implicit.SurfaceMesh", "generated/submodules/mymesh.implicit.SurfaceNodeOptimization", "generated/submodules/mymesh.implicit.TetMesh", "generated/submodules/mymesh.implicit.VoxelMesh", "generated/submodules/mymesh.implicit.box", "generated/submodules/mymesh.implicit.cylinder", "generated/submodules/mymesh.implicit.diamond", "generated/submodules/mymesh.implicit.diff", "generated/submodules/mymesh.implicit.difff", "generated/submodules/mymesh.implicit.diffs", "generated/submodules/mymesh.implicit.grid2fun", "generated/submodules/mymesh.implicit.grid2grad", "generated/submodules/mymesh.implicit.gyroid", "generated/submodules/mymesh.implicit.intersection", "generated/submodules/mymesh.implicit.intersectionf", "generated/submodules/mymesh.implicit.intersections", "generated/submodules/mymesh.implicit.lidinoid", "generated/submodules/mymesh.implicit.mesh2sdf", "generated/submodules/mymesh.implicit.mesh2udf", "generated/submodules/mymesh.implicit.neovius", "generated/submodules/mymesh.implicit.offset", "generated/submodules/mymesh.implicit.primitive", "generated/submodules/mymesh.implicit.rMax", "generated/submodules/mymesh.implicit.rMin", "generated/submodules/mymesh.implicit.sphere", "generated/submodules/mymesh.implicit.thicken", "generated/submodules/mymesh.implicit.thickenf", "generated/submodules/mymesh.implicit.thickens", "generated/submodules/mymesh.implicit.torus", "generated/submodules/mymesh.implicit.union", "generated/submodules/mymesh.implicit.unionf", "generated/submodules/mymesh.implicit.unions", "generated/submodules/mymesh.implicit.xplane", "generated/submodules/mymesh.implicit.yplane", "generated/submodules/mymesh.implicit.zplane", "generated/submodules/mymesh.improvement.GeoTransformSmoothing", "generated/submodules/mymesh.improvement.GlobalLaplacianSmoothing", "generated/submodules/mymesh.improvement.LocalLaplacianSmoothing", "generated/submodules/mymesh.improvement.NodeSpringSmoothing", "generated/submodules/mymesh.improvement.SegmentSpringSmoothing", "generated/submodules/mymesh.improvement.SmartLaplacianSmoothing", "generated/submodules/mymesh.improvement.TangentialLaplacianSmoothing", "generated/submodules/mymesh.improvement.TetContract", "generated/submodules/mymesh.improvement.TetFlip", "generated/submodules/mymesh.improvement.TetImprove", "generated/submodules/mymesh.improvement.TetSplit", "generated/submodules/mymesh.octree.Function2Octree", "generated/submodules/mymesh.octree.Octree2Dual", "generated/submodules/mymesh.octree.Octree2Voxel", "generated/submodules/mymesh.octree.Points2Octree", "generated/submodules/mymesh.octree.Print", "generated/submodules/mymesh.octree.SearchOctree", "generated/submodules/mymesh.octree.SearchOctreeTri", "generated/submodules/mymesh.octree.Surface2Octree", "generated/submodules/mymesh.octree.Voxel2Octree", "generated/submodules/mymesh.octree.getAllLeaf", "generated/submodules/mymesh.primitives.Box", "generated/submodules/mymesh.primitives.Circle", "generated/submodules/mymesh.primitives.CirclePt", "generated/submodules/mymesh.primitives.Cylinder", "generated/submodules/mymesh.primitives.Extrude", "generated/submodules/mymesh.primitives.Grid", "generated/submodules/mymesh.primitives.Grid2D", "generated/submodules/mymesh.primitives.Line", "generated/submodules/mymesh.primitives.Plane", "generated/submodules/mymesh.primitives.Revolve", "generated/submodules/mymesh.primitives.Sphere", "generated/submodules/mymesh.primitives.Torus", "generated/submodules/mymesh.quality.Area", "generated/submodules/mymesh.quality.AspectRatio", "generated/submodules/mymesh.quality.InverseOrthogonalQuality", "generated/submodules/mymesh.quality.InverseOrthogonality", "generated/submodules/mymesh.quality.MaxDihedral", "generated/submodules/mymesh.quality.MeanRatio", "generated/submodules/mymesh.quality.MinDihedral", "generated/submodules/mymesh.quality.OrthogonalQuality", "generated/submodules/mymesh.quality.Orthogonality", "generated/submodules/mymesh.quality.Skewness", "generated/submodules/mymesh.quality.SurfDihedralAngles", "generated/submodules/mymesh.quality.Volume", "generated/submodules/mymesh.quality.dihedralAngles", "generated/submodules/mymesh.quality.equiangular_skewness", "generated/submodules/mymesh.quality.quad_skewness", "generated/submodules/mymesh.quality.tet_vol_skewness", "generated/submodules/mymesh.quality.tri_skewness", "generated/submodules/mymesh.rays.BoxTrianglesIntersection", "generated/submodules/mymesh.rays.PlaneBoxIntersection", "generated/submodules/mymesh.rays.PlaneSurfIntersection", "generated/submodules/mymesh.rays.PlaneTriangleIntersection", "generated/submodules/mymesh.rays.PlaneTrianglesIntersection", "generated/submodules/mymesh.rays.PointInBox", "generated/submodules/mymesh.rays.PointInSurf", "generated/submodules/mymesh.rays.PointInTri", "generated/submodules/mymesh.rays.PointsInSurf", "generated/submodules/mymesh.rays.PointsInTris", "generated/submodules/mymesh.rays.PointsInVoxel", "generated/submodules/mymesh.rays.RayBoxIntersection", "generated/submodules/mymesh.rays.RayBoxesIntersection", "generated/submodules/mymesh.rays.RayOctreeIntersection", "generated/submodules/mymesh.rays.RaySegmentsIntersection", "generated/submodules/mymesh.rays.RaySurfIntersection", "generated/submodules/mymesh.rays.RayTriangleIntersection", "generated/submodules/mymesh.rays.RayTrianglesIntersection", "generated/submodules/mymesh.rays.RaysSurfIntersection", "generated/submodules/mymesh.rays.RaysTrianglesIntersection", "generated/submodules/mymesh.rays.SegmentSegmentIntersection", "generated/submodules/mymesh.rays.SegmentsSegmentsIntersection", "generated/submodules/mymesh.rays.SurfSelfIntersection", "generated/submodules/mymesh.rays.SurfSurfIntersection", "generated/submodules/mymesh.rays.TriangleBoxIntersection", "generated/submodules/mymesh.rays.TriangleTriangleIntersection", "generated/submodules/mymesh.rays.TriangleTriangleIntersectionPt", "generated/submodules/mymesh.rays.TrianglesTrianglesIntersection", "generated/submodules/mymesh.rays.TrianglesTrianglesIntersectionPts", "generated/submodules/mymesh.utils.AABB", "generated/submodules/mymesh.utils.BaryTet", "generated/submodules/mymesh.utils.BaryTri", "generated/submodules/mymesh.utils.BaryTris", "generated/submodules/mymesh.utils.CalcFaceNormal", "generated/submodules/mymesh.utils.Centroids", "generated/submodules/mymesh.utils.CleanupDegenerateElements", "generated/submodules/mymesh.utils.DeleteDegenerateElements", "generated/submodules/mymesh.utils.DeleteDuplicateNodes", "generated/submodules/mymesh.utils.DetectFeatures", "generated/submodules/mymesh.utils.DilateVoxel", "generated/submodules/mymesh.utils.ErodeVoxel", "generated/submodules/mymesh.utils.ExtractRagged", "generated/submodules/mymesh.utils.Face2NodeNormal", "generated/submodules/mymesh.utils.MVBB", "generated/submodules/mymesh.utils.MergeMesh", "generated/submodules/mymesh.utils.MirrorMesh", "generated/submodules/mymesh.utils.PadRagged", "generated/submodules/mymesh.utils.Project2Surface", "generated/submodules/mymesh.utils.RelabelNodes", "generated/submodules/mymesh.utils.SortRaggedByLength", "generated/submodules/mymesh.utils.SplitRaggedByLength", "generated/submodules/mymesh.utils.SurfMapping", "generated/submodules/mymesh.utils.TetMeshVol", "generated/submodules/mymesh.utils.TriSurfVol", "generated/submodules/mymesh.utils.ValueMapping", "generated/submodules/mymesh.utils.getConnectedElements", "generated/submodules/mymesh.utils.getConnectedNodes", "generated/submodules/mymesh.utils.getElemConnectivity", "generated/submodules/mymesh.utils.getElemNeighbors", "generated/submodules/mymesh.utils.getNodeNeighborhood", "generated/submodules/mymesh.utils.getNodeNeighborhoodByRadius", "generated/submodules/mymesh.utils.getNodeNeighbors", "generated/submodules/mymesh.utils.identify_type", "generated/submodules/mymesh.utils.makePyramidLayer", "generated/submodules/mymesh.visualize.FaceColor", "generated/submodules/mymesh.visualize.GetTheme", "generated/submodules/mymesh.visualize.ParseColor", "generated/submodules/mymesh.visualize.View", "generated/submodules/mymesh.visualize.set_vispy_backend", "guide", "guide/connectivity", "guide/csg", "guide/elem_types", "guide/image_meshing", "guide/implicit_meshing", "guide/installation", "guide/io", "guide/mesh_class", "guide/ref", "guide/what_mesh", "index", "sg_execution_times", "theory", "theory/contour", "theory/curvature", "theory/delaunay", "theory/flips23", "theory/improvement", "theory/octree", "theory/rays", "theory/springsmooth"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["api.rst", "dev.rst", "examples/MeshAnalysis/demo_curvature.rst", "examples/MeshAnalysis/index.rst", "examples/MeshAnalysis/sg_execution_times.rst", "examples/MeshGeneration/demo_heart.rst", "examples/MeshGeneration/demo_mixed-top.rst", "examples/MeshGeneration/demo_pasta.rst", "examples/MeshGeneration/index.rst", "examples/MeshGeneration/sg_execution_times.rst", "examples/index.rst", "examples/sg_execution_times.rst", "generated/mymesh.booleans.rst", "generated/mymesh.contour.rst", "generated/mymesh.converter.rst", "generated/mymesh.curvature.rst", "generated/mymesh.delaunay.rst", "generated/mymesh.image.rst", "generated/mymesh.implicit.rst", "generated/mymesh.improvement.rst", "generated/mymesh.mesh.rst", "generated/mymesh.mesh.mesh.BoundaryConn.rst", "generated/mymesh.mesh.mesh.BoundaryNodes.rst", "generated/mymesh.mesh.mesh.Centroids.rst", "generated/mymesh.mesh.mesh.Clip.rst", "generated/mymesh.mesh.mesh.Contour.rst", "generated/mymesh.mesh.mesh.CreateBoundaryLayer.rst", "generated/mymesh.mesh.mesh.EdgeConn.rst", "generated/mymesh.mesh.mesh.EdgeElemConn.rst", "generated/mymesh.mesh.mesh.Edges.rst", "generated/mymesh.mesh.mesh.ElemConn.rst", "generated/mymesh.mesh.mesh.ElemNeighbors.rst", "generated/mymesh.mesh.mesh.ElemNormals.rst", "generated/mymesh.mesh.mesh.EulerCharacteristic.rst", "generated/mymesh.mesh.mesh.FaceConn.rst", "generated/mymesh.mesh.mesh.FaceElemConn.rst", "generated/mymesh.mesh.mesh.Faces.rst", "generated/mymesh.mesh.mesh.Genus.rst", "generated/mymesh.mesh.mesh.ND.rst", "generated/mymesh.mesh.mesh.NEdge.rst", "generated/mymesh.mesh.mesh.NElem.rst", "generated/mymesh.mesh.mesh.NFace.rst", "generated/mymesh.mesh.mesh.NNode.rst", "generated/mymesh.mesh.mesh.NodeNeighbors.rst", "generated/mymesh.mesh.mesh.NodeNormals.rst", "generated/mymesh.mesh.mesh.NodeNormalsMethod.rst", "generated/mymesh.mesh.mesh.RenumberFacesBySet.rst", "generated/mymesh.mesh.mesh.RenumberNodesBySet.rst", "generated/mymesh.mesh.mesh.SurfConn.rst", "generated/mymesh.mesh.mesh.SurfElemConn.rst", "generated/mymesh.mesh.mesh.SurfNodeNeighbors.rst", "generated/mymesh.mesh.mesh.SurfNodes.rst", "generated/mymesh.mesh.mesh.Surface.rst", "generated/mymesh.mesh.mesh.Threshold.rst", "generated/mymesh.mesh.mesh.addEdges.rst", "generated/mymesh.mesh.mesh.addElems.rst", "generated/mymesh.mesh.mesh.addFaces.rst", "generated/mymesh.mesh.mesh.addNodes.rst", "generated/mymesh.mesh.mesh.cells.rst", "generated/mymesh.mesh.mesh.cleanup.rst", "generated/mymesh.mesh.mesh.copy.rst", "generated/mymesh.mesh.mesh.getCurvature.rst", "generated/mymesh.mesh.mesh.getQuality.rst", "generated/mymesh.mesh.mesh.identify_type.rst", "generated/mymesh.mesh.mesh.imread.rst", "generated/mymesh.mesh.mesh.merge.rst", "generated/mymesh.mesh.mesh.meshio2mymesh.rst", "generated/mymesh.mesh.mesh.mymesh2meshio.rst", "generated/mymesh.mesh.mesh.plot.rst", "generated/mymesh.mesh.mesh.points.rst", "generated/mymesh.mesh.mesh.read.rst", "generated/mymesh.mesh.mesh.removeElems.rst", "generated/mymesh.mesh.mesh.reset.rst", "generated/mymesh.mesh.mesh.validate.rst", "generated/mymesh.mesh.mesh.view.rst", "generated/mymesh.mesh.mesh.write.rst", "generated/mymesh.octree.rst", "generated/mymesh.primitives.rst", "generated/mymesh.quality.rst", "generated/mymesh.rays.rst", "generated/mymesh.utils.rst", "generated/mymesh.visualize.rst", "generated/submodules/mymesh.booleans.MeshBooleans.rst", "generated/submodules/mymesh.booleans.SplitMesh.rst", "generated/submodules/mymesh.contour.Adaptive.rst", "generated/submodules/mymesh.contour.MarchingCubes.rst", "generated/submodules/mymesh.contour.MarchingCubesImage.rst", "generated/submodules/mymesh.contour.MarchingSquares.rst", "generated/submodules/mymesh.contour.MarchingSquaresImage.rst", "generated/submodules/mymesh.contour.MarchingTetrahedra.rst", "generated/submodules/mymesh.converter.EdgesByElement.rst", "generated/submodules/mymesh.converter.edges2unique.rst", "generated/submodules/mymesh.converter.faces2surface.rst", "generated/submodules/mymesh.converter.faces2unique.rst", "generated/submodules/mymesh.converter.hex2edges.rst", "generated/submodules/mymesh.converter.hex2faces.rst", "generated/submodules/mymesh.converter.hex2tet.rst", "generated/submodules/mymesh.converter.im2voxel.rst", "generated/submodules/mymesh.converter.polygon2edges.rst", "generated/submodules/mymesh.converter.pyramid2edges.rst", "generated/submodules/mymesh.converter.pyramid2faces.rst", "generated/submodules/mymesh.converter.pyramid2tet.rst", "generated/submodules/mymesh.converter.quad2edges.rst", "generated/submodules/mymesh.converter.quad2tri.rst", "generated/submodules/mymesh.converter.solid2edges.rst", "generated/submodules/mymesh.converter.solid2faces.rst", "generated/submodules/mymesh.converter.solid2surface.rst", "generated/submodules/mymesh.converter.solid2tets.rst", "generated/submodules/mymesh.converter.surf2dual.rst", "generated/submodules/mymesh.converter.surf2edges.rst", "generated/submodules/mymesh.converter.surf2tris.rst", "generated/submodules/mymesh.converter.surf2voxel.rst", "generated/submodules/mymesh.converter.tet102tet4.rst", "generated/submodules/mymesh.converter.tet2edges.rst", "generated/submodules/mymesh.converter.tet2faces.rst", "generated/submodules/mymesh.converter.tet42tet10.rst", "generated/submodules/mymesh.converter.tri2edges.rst", "generated/submodules/mymesh.converter.voxel2im.rst", "generated/submodules/mymesh.converter.wedge2edges.rst", "generated/submodules/mymesh.converter.wedge2faces.rst", "generated/submodules/mymesh.converter.wedge2tet.rst", "generated/submodules/mymesh.curvature.AnalyticalCurvature.rst", "generated/submodules/mymesh.curvature.CubicFit.rst", "generated/submodules/mymesh.curvature.Curvedness.rst", "generated/submodules/mymesh.curvature.GaussianCurvature.rst", "generated/submodules/mymesh.curvature.ImageCurvature.rst", "generated/submodules/mymesh.curvature.MeanCurvature.rst", "generated/submodules/mymesh.curvature.NormCurve.rst", "generated/submodules/mymesh.curvature.QuadFit.rst", "generated/submodules/mymesh.curvature.ShapeCategory.rst", "generated/submodules/mymesh.curvature.ShapeIndex.rst", "generated/submodules/mymesh.delaunay.BowyerWatson2d.rst", "generated/submodules/mymesh.delaunay.BowyerWatson3d.rst", "generated/submodules/mymesh.delaunay.ConvexHull.rst", "generated/submodules/mymesh.delaunay.ConvexHullFanTriangulation.rst", "generated/submodules/mymesh.delaunay.ConvexHull_GiftWrapping.rst", "generated/submodules/mymesh.delaunay.SciPy.rst", "generated/submodules/mymesh.delaunay.Triangle.rst", "generated/submodules/mymesh.delaunay.TriangleSplittingTriangulation.rst", "generated/submodules/mymesh.delaunay.Triangulate.rst", "generated/submodules/mymesh.image.SurfaceMesh.rst", "generated/submodules/mymesh.image.SurfaceNodeOptimization.rst", "generated/submodules/mymesh.image.TetMesh.rst", "generated/submodules/mymesh.image.VoxelMesh.rst", "generated/submodules/mymesh.image.read.rst", "generated/submodules/mymesh.image.write.rst", "generated/submodules/mymesh.implicit.SurfaceMesh.rst", "generated/submodules/mymesh.implicit.SurfaceNodeOptimization.rst", "generated/submodules/mymesh.implicit.TetMesh.rst", "generated/submodules/mymesh.implicit.VoxelMesh.rst", "generated/submodules/mymesh.implicit.box.rst", "generated/submodules/mymesh.implicit.cylinder.rst", "generated/submodules/mymesh.implicit.diamond.rst", "generated/submodules/mymesh.implicit.diff.rst", "generated/submodules/mymesh.implicit.difff.rst", "generated/submodules/mymesh.implicit.diffs.rst", "generated/submodules/mymesh.implicit.grid2fun.rst", "generated/submodules/mymesh.implicit.grid2grad.rst", "generated/submodules/mymesh.implicit.gyroid.rst", "generated/submodules/mymesh.implicit.intersection.rst", "generated/submodules/mymesh.implicit.intersectionf.rst", "generated/submodules/mymesh.implicit.intersections.rst", "generated/submodules/mymesh.implicit.lidinoid.rst", "generated/submodules/mymesh.implicit.mesh2sdf.rst", "generated/submodules/mymesh.implicit.mesh2udf.rst", "generated/submodules/mymesh.implicit.neovius.rst", "generated/submodules/mymesh.implicit.offset.rst", "generated/submodules/mymesh.implicit.primitive.rst", "generated/submodules/mymesh.implicit.rMax.rst", "generated/submodules/mymesh.implicit.rMin.rst", "generated/submodules/mymesh.implicit.sphere.rst", "generated/submodules/mymesh.implicit.thicken.rst", "generated/submodules/mymesh.implicit.thickenf.rst", "generated/submodules/mymesh.implicit.thickens.rst", "generated/submodules/mymesh.implicit.torus.rst", "generated/submodules/mymesh.implicit.union.rst", "generated/submodules/mymesh.implicit.unionf.rst", "generated/submodules/mymesh.implicit.unions.rst", "generated/submodules/mymesh.implicit.xplane.rst", "generated/submodules/mymesh.implicit.yplane.rst", "generated/submodules/mymesh.implicit.zplane.rst", "generated/submodules/mymesh.improvement.GeoTransformSmoothing.rst", "generated/submodules/mymesh.improvement.GlobalLaplacianSmoothing.rst", "generated/submodules/mymesh.improvement.LocalLaplacianSmoothing.rst", "generated/submodules/mymesh.improvement.NodeSpringSmoothing.rst", "generated/submodules/mymesh.improvement.SegmentSpringSmoothing.rst", "generated/submodules/mymesh.improvement.SmartLaplacianSmoothing.rst", "generated/submodules/mymesh.improvement.TangentialLaplacianSmoothing.rst", "generated/submodules/mymesh.improvement.TetContract.rst", "generated/submodules/mymesh.improvement.TetFlip.rst", "generated/submodules/mymesh.improvement.TetImprove.rst", "generated/submodules/mymesh.improvement.TetSplit.rst", "generated/submodules/mymesh.octree.Function2Octree.rst", "generated/submodules/mymesh.octree.Octree2Dual.rst", "generated/submodules/mymesh.octree.Octree2Voxel.rst", "generated/submodules/mymesh.octree.Points2Octree.rst", "generated/submodules/mymesh.octree.Print.rst", "generated/submodules/mymesh.octree.SearchOctree.rst", "generated/submodules/mymesh.octree.SearchOctreeTri.rst", "generated/submodules/mymesh.octree.Surface2Octree.rst", "generated/submodules/mymesh.octree.Voxel2Octree.rst", "generated/submodules/mymesh.octree.getAllLeaf.rst", "generated/submodules/mymesh.primitives.Box.rst", "generated/submodules/mymesh.primitives.Circle.rst", "generated/submodules/mymesh.primitives.CirclePt.rst", "generated/submodules/mymesh.primitives.Cylinder.rst", "generated/submodules/mymesh.primitives.Extrude.rst", "generated/submodules/mymesh.primitives.Grid.rst", "generated/submodules/mymesh.primitives.Grid2D.rst", "generated/submodules/mymesh.primitives.Line.rst", "generated/submodules/mymesh.primitives.Plane.rst", "generated/submodules/mymesh.primitives.Revolve.rst", "generated/submodules/mymesh.primitives.Sphere.rst", "generated/submodules/mymesh.primitives.Torus.rst", "generated/submodules/mymesh.quality.Area.rst", "generated/submodules/mymesh.quality.AspectRatio.rst", "generated/submodules/mymesh.quality.InverseOrthogonalQuality.rst", "generated/submodules/mymesh.quality.InverseOrthogonality.rst", "generated/submodules/mymesh.quality.MaxDihedral.rst", "generated/submodules/mymesh.quality.MeanRatio.rst", "generated/submodules/mymesh.quality.MinDihedral.rst", "generated/submodules/mymesh.quality.OrthogonalQuality.rst", "generated/submodules/mymesh.quality.Orthogonality.rst", "generated/submodules/mymesh.quality.Skewness.rst", "generated/submodules/mymesh.quality.SurfDihedralAngles.rst", "generated/submodules/mymesh.quality.Volume.rst", "generated/submodules/mymesh.quality.dihedralAngles.rst", "generated/submodules/mymesh.quality.equiangular_skewness.rst", "generated/submodules/mymesh.quality.quad_skewness.rst", "generated/submodules/mymesh.quality.tet_vol_skewness.rst", "generated/submodules/mymesh.quality.tri_skewness.rst", "generated/submodules/mymesh.rays.BoxTrianglesIntersection.rst", "generated/submodules/mymesh.rays.PlaneBoxIntersection.rst", "generated/submodules/mymesh.rays.PlaneSurfIntersection.rst", "generated/submodules/mymesh.rays.PlaneTriangleIntersection.rst", "generated/submodules/mymesh.rays.PlaneTrianglesIntersection.rst", "generated/submodules/mymesh.rays.PointInBox.rst", "generated/submodules/mymesh.rays.PointInSurf.rst", "generated/submodules/mymesh.rays.PointInTri.rst", "generated/submodules/mymesh.rays.PointsInSurf.rst", "generated/submodules/mymesh.rays.PointsInTris.rst", "generated/submodules/mymesh.rays.PointsInVoxel.rst", "generated/submodules/mymesh.rays.RayBoxIntersection.rst", "generated/submodules/mymesh.rays.RayBoxesIntersection.rst", "generated/submodules/mymesh.rays.RayOctreeIntersection.rst", "generated/submodules/mymesh.rays.RaySegmentsIntersection.rst", "generated/submodules/mymesh.rays.RaySurfIntersection.rst", "generated/submodules/mymesh.rays.RayTriangleIntersection.rst", "generated/submodules/mymesh.rays.RayTrianglesIntersection.rst", "generated/submodules/mymesh.rays.RaysSurfIntersection.rst", "generated/submodules/mymesh.rays.RaysTrianglesIntersection.rst", "generated/submodules/mymesh.rays.SegmentSegmentIntersection.rst", "generated/submodules/mymesh.rays.SegmentsSegmentsIntersection.rst", "generated/submodules/mymesh.rays.SurfSelfIntersection.rst", "generated/submodules/mymesh.rays.SurfSurfIntersection.rst", "generated/submodules/mymesh.rays.TriangleBoxIntersection.rst", "generated/submodules/mymesh.rays.TriangleTriangleIntersection.rst", "generated/submodules/mymesh.rays.TriangleTriangleIntersectionPt.rst", "generated/submodules/mymesh.rays.TrianglesTrianglesIntersection.rst", "generated/submodules/mymesh.rays.TrianglesTrianglesIntersectionPts.rst", "generated/submodules/mymesh.utils.AABB.rst", "generated/submodules/mymesh.utils.BaryTet.rst", "generated/submodules/mymesh.utils.BaryTri.rst", "generated/submodules/mymesh.utils.BaryTris.rst", "generated/submodules/mymesh.utils.CalcFaceNormal.rst", "generated/submodules/mymesh.utils.Centroids.rst", "generated/submodules/mymesh.utils.CleanupDegenerateElements.rst", "generated/submodules/mymesh.utils.DeleteDegenerateElements.rst", "generated/submodules/mymesh.utils.DeleteDuplicateNodes.rst", "generated/submodules/mymesh.utils.DetectFeatures.rst", "generated/submodules/mymesh.utils.DilateVoxel.rst", "generated/submodules/mymesh.utils.ErodeVoxel.rst", "generated/submodules/mymesh.utils.ExtractRagged.rst", "generated/submodules/mymesh.utils.Face2NodeNormal.rst", "generated/submodules/mymesh.utils.MVBB.rst", "generated/submodules/mymesh.utils.MergeMesh.rst", "generated/submodules/mymesh.utils.MirrorMesh.rst", "generated/submodules/mymesh.utils.PadRagged.rst", "generated/submodules/mymesh.utils.Project2Surface.rst", "generated/submodules/mymesh.utils.RelabelNodes.rst", "generated/submodules/mymesh.utils.SortRaggedByLength.rst", "generated/submodules/mymesh.utils.SplitRaggedByLength.rst", "generated/submodules/mymesh.utils.SurfMapping.rst", "generated/submodules/mymesh.utils.TetMeshVol.rst", "generated/submodules/mymesh.utils.TriSurfVol.rst", "generated/submodules/mymesh.utils.ValueMapping.rst", "generated/submodules/mymesh.utils.getConnectedElements.rst", "generated/submodules/mymesh.utils.getConnectedNodes.rst", "generated/submodules/mymesh.utils.getElemConnectivity.rst", "generated/submodules/mymesh.utils.getElemNeighbors.rst", "generated/submodules/mymesh.utils.getNodeNeighborhood.rst", "generated/submodules/mymesh.utils.getNodeNeighborhoodByRadius.rst", "generated/submodules/mymesh.utils.getNodeNeighbors.rst", "generated/submodules/mymesh.utils.identify_type.rst", "generated/submodules/mymesh.utils.makePyramidLayer.rst", "generated/submodules/mymesh.visualize.FaceColor.rst", "generated/submodules/mymesh.visualize.GetTheme.rst", "generated/submodules/mymesh.visualize.ParseColor.rst", "generated/submodules/mymesh.visualize.View.rst", "generated/submodules/mymesh.visualize.set_vispy_backend.rst", "guide.rst", "guide/connectivity.rst", "guide/csg.rst", "guide/elem_types.rst", "guide/image_meshing.rst", "guide/implicit_meshing.rst", "guide/installation.rst", "guide/io.rst", "guide/mesh_class.rst", "guide/ref.rst", "guide/what_mesh.rst", "index.rst", "sg_execution_times.rst", "theory.rst", "theory/contour.rst", "theory/curvature.rst", "theory/delaunay.rst", "theory/flips23.rst", "theory/improvement.rst", "theory/octree.rst", "theory/rays.rst", "theory/springsmooth.rst"], "indexentries": {"aabb() (in module mymesh.utils)": [[260, "mymesh.utils.AABB", false]], "adaptive() (in module mymesh.contour)": [[84, "mymesh.contour.Adaptive", false]], "addedges() (mymesh.mesh.mesh method)": [[54, "mymesh.mesh.mesh.addEdges", false]], "addelems() (mymesh.mesh.mesh method)": [[55, "mymesh.mesh.mesh.addElems", false]], "addfaces() (mymesh.mesh.mesh method)": [[56, "mymesh.mesh.mesh.addFaces", false]], "addnodes() (mymesh.mesh.mesh method)": [[57, "mymesh.mesh.mesh.addNodes", false]], "analyticalcurvature() (in module mymesh.curvature)": [[121, "mymesh.curvature.AnalyticalCurvature", false]], "area() (in module mymesh.quality)": [[214, "mymesh.quality.Area", false]], "aspectratio() (in module mymesh.quality)": [[215, "mymesh.quality.AspectRatio", false]], "barytet() (in module mymesh.utils)": [[261, "mymesh.utils.BaryTet", false]], "barytri() (in module mymesh.utils)": [[262, "mymesh.utils.BaryTri", false]], "barytris() (in module mymesh.utils)": [[263, "mymesh.utils.BaryTris", false]], "boundaryconn (mymesh.mesh.mesh property)": [[21, "mymesh.mesh.mesh.BoundaryConn", false]], "boundarynodes (mymesh.mesh.mesh property)": [[22, "mymesh.mesh.mesh.BoundaryNodes", false]], "bowyerwatson2d() (in module mymesh.delaunay)": [[131, "mymesh.delaunay.BowyerWatson2d", false]], "bowyerwatson3d() (in module mymesh.delaunay)": [[132, "mymesh.delaunay.BowyerWatson3d", false]], "box() (in module mymesh.implicit)": [[150, "mymesh.implicit.box", false]], "box() (in module mymesh.primitives)": [[202, "mymesh.primitives.Box", false]], "boxtrianglesintersection() (in module mymesh.rays)": [[231, "mymesh.rays.BoxTrianglesIntersection", false]], "calcfacenormal() (in module mymesh.utils)": [[264, "mymesh.utils.CalcFaceNormal", false]], "cells (mymesh.mesh.mesh property)": [[58, "mymesh.mesh.mesh.cells", false]], "centroids (mymesh.mesh.mesh property)": [[23, "mymesh.mesh.mesh.Centroids", false]], "centroids() (in module mymesh.utils)": [[265, "mymesh.utils.Centroids", false]], "circle() (in module mymesh.primitives)": [[203, "mymesh.primitives.Circle", false]], "circlept() (in module mymesh.primitives)": [[204, "mymesh.primitives.CirclePt", false]], "cleanup() (mymesh.mesh.mesh method)": [[59, "mymesh.mesh.mesh.cleanup", false]], "cleanupdegenerateelements() (in module mymesh.utils)": [[266, "mymesh.utils.CleanupDegenerateElements", false]], "clip() (mymesh.mesh.mesh method)": [[24, "mymesh.mesh.mesh.Clip", false]], "contour() (mymesh.mesh.mesh method)": [[25, "mymesh.mesh.mesh.Contour", false]], "convexhull() (in module mymesh.delaunay)": [[133, "mymesh.delaunay.ConvexHull", false]], "convexhull_giftwrapping() (in module mymesh.delaunay)": [[135, "mymesh.delaunay.ConvexHull_GiftWrapping", false]], "convexhullfantriangulation() (in module mymesh.delaunay)": [[134, "mymesh.delaunay.ConvexHullFanTriangulation", false]], "copy() (mymesh.mesh.mesh method)": [[60, "mymesh.mesh.mesh.copy", false]], "createboundarylayer() (mymesh.mesh.mesh method)": [[26, "mymesh.mesh.mesh.CreateBoundaryLayer", false]], "cubicfit() (in module mymesh.curvature)": [[122, "mymesh.curvature.CubicFit", false]], "curvedness() (in module mymesh.curvature)": [[123, "mymesh.curvature.Curvedness", false]], "cylinder() (in module mymesh.implicit)": [[151, "mymesh.implicit.cylinder", false]], "cylinder() (in module mymesh.primitives)": [[205, "mymesh.primitives.Cylinder", false]], "deletedegenerateelements() (in module mymesh.utils)": [[267, "mymesh.utils.DeleteDegenerateElements", false]], "deleteduplicatenodes() (in module mymesh.utils)": [[268, "mymesh.utils.DeleteDuplicateNodes", false]], "detectfeatures() (in module mymesh.utils)": [[269, "mymesh.utils.DetectFeatures", false]], "diamond() (in module mymesh.implicit)": [[152, "mymesh.implicit.diamond", false]], "diff() (in module mymesh.implicit)": [[153, "mymesh.implicit.diff", false]], "difff() (in module mymesh.implicit)": [[154, "mymesh.implicit.difff", false]], "diffs() (in module mymesh.implicit)": [[155, "mymesh.implicit.diffs", false]], "dihedralangles() (in module mymesh.quality)": [[226, "mymesh.quality.dihedralAngles", false]], "dilatevoxel() (in module mymesh.utils)": [[270, "mymesh.utils.DilateVoxel", false]], "edgeconn (mymesh.mesh.mesh property)": [[27, "mymesh.mesh.mesh.EdgeConn", false]], "edgeelemconn (mymesh.mesh.mesh property)": [[28, "mymesh.mesh.mesh.EdgeElemConn", false]], "edges (mymesh.mesh.mesh property)": [[29, "mymesh.mesh.mesh.Edges", false]], "edges2unique() (in module mymesh.converter)": [[91, "mymesh.converter.edges2unique", false]], "edgesbyelement() (in module mymesh.converter)": [[90, "mymesh.converter.EdgesByElement", false]], "edgesets (mymesh.mesh attribute)": [[20, "mymesh.mesh.EdgeSets", false]], "elemconn (mymesh.mesh.mesh property)": [[30, "mymesh.mesh.mesh.ElemConn", false]], "elemdata (mymesh.mesh attribute)": [[20, "mymesh.mesh.ElemData", false]], "elemneighbors (mymesh.mesh.mesh property)": [[31, "mymesh.mesh.mesh.ElemNeighbors", false]], "elemnormals (mymesh.mesh.mesh property)": [[32, "mymesh.mesh.mesh.ElemNormals", false]], "elemsets (mymesh.mesh attribute)": [[20, "mymesh.mesh.ElemSets", false]], "equiangular_skewness() (in module mymesh.quality)": [[227, "mymesh.quality.equiangular_skewness", false]], "erodevoxel() (in module mymesh.utils)": [[271, "mymesh.utils.ErodeVoxel", false]], "eulercharacteristic (mymesh.mesh.mesh property)": [[33, "mymesh.mesh.mesh.EulerCharacteristic", false]], "extractragged() (in module mymesh.utils)": [[272, "mymesh.utils.ExtractRagged", false]], "extrude() (in module mymesh.primitives)": [[206, "mymesh.primitives.Extrude", false]], "face2nodenormal() (in module mymesh.utils)": [[273, "mymesh.utils.Face2NodeNormal", false]], "facecolor() (in module mymesh.visualize)": [[295, "mymesh.visualize.FaceColor", false]], "faceconn (mymesh.mesh.mesh property)": [[34, "mymesh.mesh.mesh.FaceConn", false]], "faceelemconn (mymesh.mesh.mesh property)": [[35, "mymesh.mesh.mesh.FaceElemConn", false]], "faces (mymesh.mesh.mesh property)": [[36, "mymesh.mesh.mesh.Faces", false]], "faces2surface() (in module mymesh.converter)": [[92, "mymesh.converter.faces2surface", false]], "faces2unique() (in module mymesh.converter)": [[93, "mymesh.converter.faces2unique", false]], "facesets (mymesh.mesh attribute)": [[20, "mymesh.mesh.FaceSets", false]], "function2octree() (in module mymesh.octree)": [[192, "mymesh.octree.Function2Octree", false]], "gaussiancurvature() (in module mymesh.curvature)": [[124, "mymesh.curvature.GaussianCurvature", false]], "genus (mymesh.mesh.mesh property)": [[37, "mymesh.mesh.mesh.Genus", false]], "geotransformsmoothing() (in module mymesh.improvement)": [[181, "mymesh.improvement.GeoTransformSmoothing", false]], "getallleaf() (in module mymesh.octree)": [[201, "mymesh.octree.getAllLeaf", false]], "getconnectedelements() (in module mymesh.utils)": [[286, "mymesh.utils.getConnectedElements", false]], "getconnectednodes() (in module mymesh.utils)": [[287, "mymesh.utils.getConnectedNodes", false]], "getcurvature() (mymesh.mesh.mesh method)": [[61, "mymesh.mesh.mesh.getCurvature", false]], "getelemconnectivity() (in module mymesh.utils)": [[288, "mymesh.utils.getElemConnectivity", false]], "getelemneighbors() (in module mymesh.utils)": [[289, "mymesh.utils.getElemNeighbors", false]], "getnodeneighborhood() (in module mymesh.utils)": [[290, "mymesh.utils.getNodeNeighborhood", false]], "getnodeneighborhoodbyradius() (in module mymesh.utils)": [[291, "mymesh.utils.getNodeNeighborhoodByRadius", false]], "getnodeneighbors() (in module mymesh.utils)": [[292, "mymesh.utils.getNodeNeighbors", false]], "getquality() (mymesh.mesh.mesh method)": [[62, "mymesh.mesh.mesh.getQuality", false]], "gettheme() (in module mymesh.visualize)": [[296, "mymesh.visualize.GetTheme", false]], "globallaplaciansmoothing() (in module mymesh.improvement)": [[182, "mymesh.improvement.GlobalLaplacianSmoothing", false]], "grid() (in module mymesh.primitives)": [[207, "mymesh.primitives.Grid", false]], "grid2d() (in module mymesh.primitives)": [[208, "mymesh.primitives.Grid2D", false]], "grid2fun() (in module mymesh.implicit)": [[156, "mymesh.implicit.grid2fun", false]], "grid2grad() (in module mymesh.implicit)": [[157, "mymesh.implicit.grid2grad", false]], "gyroid() (in module mymesh.implicit)": [[158, "mymesh.implicit.gyroid", false]], "hex2edges() (in module mymesh.converter)": [[94, "mymesh.converter.hex2edges", false]], "hex2faces() (in module mymesh.converter)": [[95, "mymesh.converter.hex2faces", false]], "hex2tet() (in module mymesh.converter)": [[96, "mymesh.converter.hex2tet", false]], "identify_type() (in module mymesh.utils)": [[293, "mymesh.utils.identify_type", false]], "identify_type() (mymesh.mesh.mesh method)": [[63, "mymesh.mesh.mesh.identify_type", false]], "im2voxel() (in module mymesh.converter)": [[97, "mymesh.converter.im2voxel", false]], "imagecurvature() (in module mymesh.curvature)": [[125, "mymesh.curvature.ImageCurvature", false]], "imread() (mymesh.mesh.mesh method)": [[64, "mymesh.mesh.mesh.imread", false]], "intersection() (in module mymesh.implicit)": [[159, "mymesh.implicit.intersection", false]], "intersectionf() (in module mymesh.implicit)": [[160, "mymesh.implicit.intersectionf", false]], "intersections() (in module mymesh.implicit)": [[161, "mymesh.implicit.intersections", false]], "inverseorthogonality() (in module mymesh.quality)": [[217, "mymesh.quality.InverseOrthogonality", false]], "inverseorthogonalquality() (in module mymesh.quality)": [[216, "mymesh.quality.InverseOrthogonalQuality", false]], "lidinoid() (in module mymesh.implicit)": [[162, "mymesh.implicit.lidinoid", false]], "line() (in module mymesh.primitives)": [[209, "mymesh.primitives.Line", false]], "locallaplaciansmoothing() (in module mymesh.improvement)": [[183, "mymesh.improvement.LocalLaplacianSmoothing", false]], "makepyramidlayer() (in module mymesh.utils)": [[294, "mymesh.utils.makePyramidLayer", false]], "marchingcubes() (in module mymesh.contour)": [[85, "mymesh.contour.MarchingCubes", false]], "marchingcubesimage() (in module mymesh.contour)": [[86, "mymesh.contour.MarchingCubesImage", false]], "marchingsquares() (in module mymesh.contour)": [[87, "mymesh.contour.MarchingSquares", false]], "marchingsquaresimage() (in module mymesh.contour)": [[88, "mymesh.contour.MarchingSquaresImage", false]], "marchingtetrahedra() (in module mymesh.contour)": [[89, "mymesh.contour.MarchingTetrahedra", false]], "maxdihedral() (in module mymesh.quality)": [[218, "mymesh.quality.MaxDihedral", false]], "meancurvature() (in module mymesh.curvature)": [[126, "mymesh.curvature.MeanCurvature", false]], "meanratio() (in module mymesh.quality)": [[219, "mymesh.quality.MeanRatio", false]], "merge() (mymesh.mesh.mesh method)": [[65, "mymesh.mesh.mesh.merge", false]], "mergemesh() (in module mymesh.utils)": [[275, "mymesh.utils.MergeMesh", false]], "mesh (class in mymesh)": [[20, "mymesh.mesh", false]], "mesh2sdf() (in module mymesh.implicit)": [[163, "mymesh.implicit.mesh2sdf", false]], "mesh2udf() (in module mymesh.implicit)": [[164, "mymesh.implicit.mesh2udf", false]], "meshbooleans() (in module mymesh.booleans)": [[82, "mymesh.booleans.MeshBooleans", false]], "meshio2mymesh() (mymesh.mesh.mesh method)": [[66, "mymesh.mesh.mesh.meshio2mymesh", false]], "mindihedral() (in module mymesh.quality)": [[220, "mymesh.quality.MinDihedral", false]], "mirrormesh() (in module mymesh.utils)": [[276, "mymesh.utils.MirrorMesh", false]], "module": [[0, "module-mymesh", false], [12, "module-mymesh.booleans", false], [13, "module-mymesh.contour", false], [14, "module-mymesh.converter", false], [15, "module-mymesh.curvature", false], [16, "module-mymesh.delaunay", false], [17, "module-mymesh.image", false], [18, "module-mymesh.implicit", false], [19, "module-mymesh.improvement", false], [76, "module-mymesh.octree", false], [77, "module-mymesh.primitives", false], [78, "module-mymesh.quality", false], [79, "module-mymesh.rays", false], [80, "module-mymesh.utils", false], [81, "module-mymesh.visualize", false]], "mvbb() (in module mymesh.utils)": [[274, "mymesh.utils.MVBB", false]], "mymesh": [[0, "module-mymesh", false]], "mymesh.booleans": [[12, "module-mymesh.booleans", false]], "mymesh.contour": [[13, "module-mymesh.contour", false]], "mymesh.converter": [[14, "module-mymesh.converter", false]], "mymesh.curvature": [[15, "module-mymesh.curvature", false]], "mymesh.delaunay": [[16, "module-mymesh.delaunay", false]], "mymesh.image": [[17, "module-mymesh.image", false]], "mymesh.implicit": [[18, "module-mymesh.implicit", false]], "mymesh.improvement": [[19, "module-mymesh.improvement", false]], "mymesh.octree": [[76, "module-mymesh.octree", false]], "mymesh.primitives": [[77, "module-mymesh.primitives", false]], "mymesh.quality": [[78, "module-mymesh.quality", false]], "mymesh.rays": [[79, "module-mymesh.rays", false]], "mymesh.utils": [[80, "module-mymesh.utils", false]], "mymesh.visualize": [[81, "module-mymesh.visualize", false]], "mymesh2meshio() (mymesh.mesh.mesh method)": [[67, "mymesh.mesh.mesh.mymesh2meshio", false]], "nd (mymesh.mesh.mesh property)": [[38, "mymesh.mesh.mesh.ND", false]], "nedge (mymesh.mesh.mesh property)": [[39, "mymesh.mesh.mesh.NEdge", false]], "nelem (mymesh.mesh.mesh property)": [[40, "mymesh.mesh.mesh.NElem", false]], "neovius() (in module mymesh.implicit)": [[165, "mymesh.implicit.neovius", false]], "nface (mymesh.mesh.mesh property)": [[41, "mymesh.mesh.mesh.NFace", false]], "nnode (mymesh.mesh.mesh property)": [[42, "mymesh.mesh.mesh.NNode", false]], "nodedata (mymesh.mesh attribute)": [[20, "mymesh.mesh.NodeData", false]], "nodeneighbors (mymesh.mesh.mesh property)": [[43, "mymesh.mesh.mesh.NodeNeighbors", false]], "nodenormals (mymesh.mesh.mesh property)": [[44, "mymesh.mesh.mesh.NodeNormals", false]], "nodenormalsmethod (mymesh.mesh.mesh property)": [[45, "mymesh.mesh.mesh.NodeNormalsMethod", false]], "nodesets (mymesh.mesh attribute)": [[20, "mymesh.mesh.NodeSets", false]], "nodespringsmoothing() (in module mymesh.improvement)": [[184, "mymesh.improvement.NodeSpringSmoothing", false]], "normcurve() (in module mymesh.curvature)": [[127, "mymesh.curvature.NormCurve", false]], "octree2dual() (in module mymesh.octree)": [[193, "mymesh.octree.Octree2Dual", false]], "octree2voxel() (in module mymesh.octree)": [[194, "mymesh.octree.Octree2Voxel", false]], "offset() (in module mymesh.implicit)": [[166, "mymesh.implicit.offset", false]], "orthogonality() (in module mymesh.quality)": [[222, "mymesh.quality.Orthogonality", false]], "orthogonalquality() (in module mymesh.quality)": [[221, "mymesh.quality.OrthogonalQuality", false]], "padragged() (in module mymesh.utils)": [[277, "mymesh.utils.PadRagged", false]], "parsecolor() (in module mymesh.visualize)": [[297, "mymesh.visualize.ParseColor", false]], "plane() (in module mymesh.primitives)": [[210, "mymesh.primitives.Plane", false]], "planeboxintersection() (in module mymesh.rays)": [[232, "mymesh.rays.PlaneBoxIntersection", false]], "planesurfintersection() (in module mymesh.rays)": [[233, "mymesh.rays.PlaneSurfIntersection", false]], "planetriangleintersection() (in module mymesh.rays)": [[234, "mymesh.rays.PlaneTriangleIntersection", false]], "planetrianglesintersection() (in module mymesh.rays)": [[235, "mymesh.rays.PlaneTrianglesIntersection", false]], "plot() (mymesh.mesh.mesh method)": [[68, "mymesh.mesh.mesh.plot", false]], "pointinbox() (in module mymesh.rays)": [[236, "mymesh.rays.PointInBox", false]], "pointinsurf() (in module mymesh.rays)": [[237, "mymesh.rays.PointInSurf", false]], "pointintri() (in module mymesh.rays)": [[238, "mymesh.rays.PointInTri", false]], "points (mymesh.mesh.mesh property)": [[69, "mymesh.mesh.mesh.points", false]], "points2octree() (in module mymesh.octree)": [[195, "mymesh.octree.Points2Octree", false]], "pointsinsurf() (in module mymesh.rays)": [[239, "mymesh.rays.PointsInSurf", false]], "pointsintris() (in module mymesh.rays)": [[240, "mymesh.rays.PointsInTris", false]], "pointsinvoxel() (in module mymesh.rays)": [[241, "mymesh.rays.PointsInVoxel", false]], "polygon2edges() (in module mymesh.converter)": [[98, "mymesh.converter.polygon2edges", false]], "primitive() (in module mymesh.implicit)": [[167, "mymesh.implicit.primitive", false]], "print() (in module mymesh.octree)": [[196, "mymesh.octree.Print", false]], "project2surface() (in module mymesh.utils)": [[278, "mymesh.utils.Project2Surface", false]], "pyramid2edges() (in module mymesh.converter)": [[99, "mymesh.converter.pyramid2edges", false]], "pyramid2faces() (in module mymesh.converter)": [[100, "mymesh.converter.pyramid2faces", false]], "pyramid2tet() (in module mymesh.converter)": [[101, "mymesh.converter.pyramid2tet", false]], "quad2edges() (in module mymesh.converter)": [[102, "mymesh.converter.quad2edges", false]], "quad2tri() (in module mymesh.converter)": [[103, "mymesh.converter.quad2tri", false]], "quad_skewness() (in module mymesh.quality)": [[228, "mymesh.quality.quad_skewness", false]], "quadfit() (in module mymesh.curvature)": [[128, "mymesh.curvature.QuadFit", false]], "rayboxesintersection() (in module mymesh.rays)": [[243, "mymesh.rays.RayBoxesIntersection", false]], "rayboxintersection() (in module mymesh.rays)": [[242, "mymesh.rays.RayBoxIntersection", false]], "rayoctreeintersection() (in module mymesh.rays)": [[244, "mymesh.rays.RayOctreeIntersection", false]], "raysegmentsintersection() (in module mymesh.rays)": [[245, "mymesh.rays.RaySegmentsIntersection", false]], "rayssurfintersection() (in module mymesh.rays)": [[249, "mymesh.rays.RaysSurfIntersection", false]], "raystrianglesintersection() (in module mymesh.rays)": [[250, "mymesh.rays.RaysTrianglesIntersection", false]], "raysurfintersection() (in module mymesh.rays)": [[246, "mymesh.rays.RaySurfIntersection", false]], "raytriangleintersection() (in module mymesh.rays)": [[247, "mymesh.rays.RayTriangleIntersection", false]], "raytrianglesintersection() (in module mymesh.rays)": [[248, "mymesh.rays.RayTrianglesIntersection", false]], "read() (in module mymesh.image)": [[144, "mymesh.image.read", false]], "read() (mymesh.mesh.mesh method)": [[70, "mymesh.mesh.mesh.read", false]], "relabelnodes() (in module mymesh.utils)": [[279, "mymesh.utils.RelabelNodes", false]], "removeelems() (mymesh.mesh.mesh method)": [[71, "mymesh.mesh.mesh.removeElems", false]], "renumberfacesbyset() (mymesh.mesh.mesh method)": [[46, "mymesh.mesh.mesh.RenumberFacesBySet", false]], "renumbernodesbyset() (mymesh.mesh.mesh method)": [[47, "mymesh.mesh.mesh.RenumberNodesBySet", false]], "reset() (mymesh.mesh.mesh method)": [[72, "mymesh.mesh.mesh.reset", false]], "revolve() (in module mymesh.primitives)": [[211, "mymesh.primitives.Revolve", false]], "rmax() (in module mymesh.implicit)": [[168, "mymesh.implicit.rMax", false]], "rmin() (in module mymesh.implicit)": [[169, "mymesh.implicit.rMin", false]], "scipy() (in module mymesh.delaunay)": [[136, "mymesh.delaunay.SciPy", false]], "searchoctree() (in module mymesh.octree)": [[197, "mymesh.octree.SearchOctree", false]], "searchoctreetri() (in module mymesh.octree)": [[198, "mymesh.octree.SearchOctreeTri", false]], "segmentsegmentintersection() (in module mymesh.rays)": [[251, "mymesh.rays.SegmentSegmentIntersection", false]], "segmentspringsmoothing() (in module mymesh.improvement)": [[185, "mymesh.improvement.SegmentSpringSmoothing", false]], "segmentssegmentsintersection() (in module mymesh.rays)": [[252, "mymesh.rays.SegmentsSegmentsIntersection", false]], "set_vispy_backend() (in module mymesh.visualize)": [[299, "mymesh.visualize.set_vispy_backend", false]], "shapecategory() (in module mymesh.curvature)": [[129, "mymesh.curvature.ShapeCategory", false]], "shapeindex() (in module mymesh.curvature)": [[130, "mymesh.curvature.ShapeIndex", false]], "skewness() (in module mymesh.quality)": [[223, "mymesh.quality.Skewness", false]], "smartlaplaciansmoothing() (in module mymesh.improvement)": [[186, "mymesh.improvement.SmartLaplacianSmoothing", false]], "solid2edges() (in module mymesh.converter)": [[104, "mymesh.converter.solid2edges", false]], "solid2faces() (in module mymesh.converter)": [[105, "mymesh.converter.solid2faces", false]], "solid2surface() (in module mymesh.converter)": [[106, "mymesh.converter.solid2surface", false]], "solid2tets() (in module mymesh.converter)": [[107, "mymesh.converter.solid2tets", false]], "sortraggedbylength() (in module mymesh.utils)": [[280, "mymesh.utils.SortRaggedByLength", false]], "sphere() (in module mymesh.implicit)": [[170, "mymesh.implicit.sphere", false]], "sphere() (in module mymesh.primitives)": [[212, "mymesh.primitives.Sphere", false]], "splitmesh() (in module mymesh.booleans)": [[83, "mymesh.booleans.SplitMesh", false]], "splitraggedbylength() (in module mymesh.utils)": [[281, "mymesh.utils.SplitRaggedByLength", false]], "surf2dual() (in module mymesh.converter)": [[108, "mymesh.converter.surf2dual", false]], "surf2edges() (in module mymesh.converter)": [[109, "mymesh.converter.surf2edges", false]], "surf2tris() (in module mymesh.converter)": [[110, "mymesh.converter.surf2tris", false]], "surf2voxel() (in module mymesh.converter)": [[111, "mymesh.converter.surf2voxel", false]], "surface (mymesh.mesh.mesh property)": [[52, "mymesh.mesh.mesh.Surface", false]], "surface2octree() (in module mymesh.octree)": [[199, "mymesh.octree.Surface2Octree", false]], "surfacemesh() (in module mymesh.image)": [[140, "mymesh.image.SurfaceMesh", false]], "surfacemesh() (in module mymesh.implicit)": [[146, "mymesh.implicit.SurfaceMesh", false]], "surfacenodeoptimization() (in module mymesh.image)": [[141, "mymesh.image.SurfaceNodeOptimization", false]], "surfacenodeoptimization() (in module mymesh.implicit)": [[147, "mymesh.implicit.SurfaceNodeOptimization", false]], "surfconn (mymesh.mesh.mesh property)": [[48, "mymesh.mesh.mesh.SurfConn", false]], "surfdihedralangles() (in module mymesh.quality)": [[224, "mymesh.quality.SurfDihedralAngles", false]], "surfelemconn (mymesh.mesh.mesh property)": [[49, "mymesh.mesh.mesh.SurfElemConn", false]], "surfmapping() (in module mymesh.utils)": [[282, "mymesh.utils.SurfMapping", false]], "surfnodeneighbors (mymesh.mesh.mesh property)": [[50, "mymesh.mesh.mesh.SurfNodeNeighbors", false]], "surfnodes (mymesh.mesh.mesh property)": [[51, "mymesh.mesh.mesh.SurfNodes", false]], "surfselfintersection() (in module mymesh.rays)": [[253, "mymesh.rays.SurfSelfIntersection", false]], "surfsurfintersection() (in module mymesh.rays)": [[254, "mymesh.rays.SurfSurfIntersection", false]], "tangentiallaplaciansmoothing() (in module mymesh.improvement)": [[187, "mymesh.improvement.TangentialLaplacianSmoothing", false]], "tet102tet4() (in module mymesh.converter)": [[112, "mymesh.converter.tet102tet4", false]], "tet2edges() (in module mymesh.converter)": [[113, "mymesh.converter.tet2edges", false]], "tet2faces() (in module mymesh.converter)": [[114, "mymesh.converter.tet2faces", false]], "tet42tet10() (in module mymesh.converter)": [[115, "mymesh.converter.tet42tet10", false]], "tet_vol_skewness() (in module mymesh.quality)": [[229, "mymesh.quality.tet_vol_skewness", false]], "tetcontract() (in module mymesh.improvement)": [[188, "mymesh.improvement.TetContract", false]], "tetflip() (in module mymesh.improvement)": [[189, "mymesh.improvement.TetFlip", false]], "tetimprove() (in module mymesh.improvement)": [[190, "mymesh.improvement.TetImprove", false]], "tetmesh() (in module mymesh.image)": [[142, "mymesh.image.TetMesh", false]], "tetmesh() (in module mymesh.implicit)": [[148, "mymesh.implicit.TetMesh", false]], "tetmeshvol() (in module mymesh.utils)": [[283, "mymesh.utils.TetMeshVol", false]], "tetsplit() (in module mymesh.improvement)": [[191, "mymesh.improvement.TetSplit", false]], "thicken() (in module mymesh.implicit)": [[171, "mymesh.implicit.thicken", false]], "thickenf() (in module mymesh.implicit)": [[172, "mymesh.implicit.thickenf", false]], "thickens() (in module mymesh.implicit)": [[173, "mymesh.implicit.thickens", false]], "threshold() (mymesh.mesh.mesh method)": [[53, "mymesh.mesh.mesh.Threshold", false]], "torus() (in module mymesh.implicit)": [[174, "mymesh.implicit.torus", false]], "torus() (in module mymesh.primitives)": [[213, "mymesh.primitives.Torus", false]], "tri2edges() (in module mymesh.converter)": [[116, "mymesh.converter.tri2edges", false]], "tri_skewness() (in module mymesh.quality)": [[230, "mymesh.quality.tri_skewness", false]], "triangle() (in module mymesh.delaunay)": [[137, "mymesh.delaunay.Triangle", false]], "triangleboxintersection() (in module mymesh.rays)": [[255, "mymesh.rays.TriangleBoxIntersection", false]], "trianglesplittingtriangulation() (in module mymesh.delaunay)": [[138, "mymesh.delaunay.TriangleSplittingTriangulation", false]], "trianglestrianglesintersection() (in module mymesh.rays)": [[258, "mymesh.rays.TrianglesTrianglesIntersection", false]], "trianglestrianglesintersectionpts() (in module mymesh.rays)": [[259, "mymesh.rays.TrianglesTrianglesIntersectionPts", false]], "triangletriangleintersection() (in module mymesh.rays)": [[256, "mymesh.rays.TriangleTriangleIntersection", false]], "triangletriangleintersectionpt() (in module mymesh.rays)": [[257, "mymesh.rays.TriangleTriangleIntersectionPt", false]], "triangulate() (in module mymesh.delaunay)": [[139, "mymesh.delaunay.Triangulate", false]], "trisurfvol() (in module mymesh.utils)": [[284, "mymesh.utils.TriSurfVol", false]], "union() (in module mymesh.implicit)": [[175, "mymesh.implicit.union", false]], "unionf() (in module mymesh.implicit)": [[176, "mymesh.implicit.unionf", false]], "unions() (in module mymesh.implicit)": [[177, "mymesh.implicit.unions", false]], "validate() (mymesh.mesh.mesh method)": [[73, "mymesh.mesh.mesh.validate", false]], "valuemapping() (in module mymesh.utils)": [[285, "mymesh.utils.ValueMapping", false]], "view() (in module mymesh.visualize)": [[298, "mymesh.visualize.View", false]], "view() (mymesh.mesh.mesh method)": [[74, "mymesh.mesh.mesh.view", false]], "volume() (in module mymesh.quality)": [[225, "mymesh.quality.Volume", false]], "voxel2im() (in module mymesh.converter)": [[117, "mymesh.converter.voxel2im", false]], "voxel2octree() (in module mymesh.octree)": [[200, "mymesh.octree.Voxel2Octree", false]], "voxelmesh() (in module mymesh.image)": [[143, "mymesh.image.VoxelMesh", false]], "voxelmesh() (in module mymesh.implicit)": [[149, "mymesh.implicit.VoxelMesh", false]], "wedge2edges() (in module mymesh.converter)": [[118, "mymesh.converter.wedge2edges", false]], "wedge2faces() (in module mymesh.converter)": [[119, "mymesh.converter.wedge2faces", false]], "wedge2tet() (in module mymesh.converter)": [[120, "mymesh.converter.wedge2tet", false]], "write() (in module mymesh.image)": [[145, "mymesh.image.write", false]], "write() (mymesh.mesh.mesh method)": [[75, "mymesh.mesh.mesh.write", false]], "xplane() (in module mymesh.implicit)": [[178, "mymesh.implicit.xplane", false]], "yplane() (in module mymesh.implicit)": [[179, "mymesh.implicit.yplane", false]], "zplane() (in module mymesh.implicit)": [[180, "mymesh.implicit.zplane", false]]}, "objects": {"": [[0, 0, 0, "-", "mymesh"]], "mymesh": [[12, 0, 0, "-", "booleans"], [13, 0, 0, "-", "contour"], [14, 0, 0, "-", "converter"], [15, 0, 0, "-", "curvature"], [16, 0, 0, "-", "delaunay"], [17, 0, 0, "-", "image"], [18, 0, 0, "-", "implicit"], [19, 0, 0, "-", "improvement"], [20, 2, 1, "", "mesh"], [76, 0, 0, "-", "octree"], [77, 0, 0, "-", "primitives"], [78, 0, 0, "-", "quality"], [79, 0, 0, "-", "rays"], [80, 0, 0, "-", "utils"], [81, 0, 0, "-", "visualize"]], "mymesh.booleans": [[82, 1, 1, "", "MeshBooleans"], [83, 1, 1, "", "SplitMesh"]], "mymesh.contour": [[84, 1, 1, "", "Adaptive"], [85, 1, 1, "", "MarchingCubes"], [86, 1, 1, "", "MarchingCubesImage"], [87, 1, 1, "", "MarchingSquares"], [88, 1, 1, "", "MarchingSquaresImage"], [89, 1, 1, "", "MarchingTetrahedra"]], "mymesh.converter": [[90, 1, 1, "", "EdgesByElement"], [91, 1, 1, "", "edges2unique"], [92, 1, 1, "", "faces2surface"], [93, 1, 1, "", "faces2unique"], [94, 1, 1, "", "hex2edges"], [95, 1, 1, "", "hex2faces"], [96, 1, 1, "", "hex2tet"], [97, 1, 1, "", "im2voxel"], [98, 1, 1, "", "polygon2edges"], [99, 1, 1, "", "pyramid2edges"], [100, 1, 1, "", "pyramid2faces"], [101, 1, 1, "", "pyramid2tet"], [102, 1, 1, "", "quad2edges"], [103, 1, 1, "", "quad2tri"], [104, 1, 1, "", "solid2edges"], [105, 1, 1, "", "solid2faces"], [106, 1, 1, "", "solid2surface"], [107, 1, 1, "", "solid2tets"], [108, 1, 1, "", "surf2dual"], [109, 1, 1, "", "surf2edges"], [110, 1, 1, "", "surf2tris"], [111, 1, 1, "", "surf2voxel"], [112, 1, 1, "", "tet102tet4"], [113, 1, 1, "", "tet2edges"], [114, 1, 1, "", "tet2faces"], [115, 1, 1, "", "tet42tet10"], [116, 1, 1, "", "tri2edges"], [117, 1, 1, "", "voxel2im"], [118, 1, 1, "", "wedge2edges"], [119, 1, 1, "", "wedge2faces"], [120, 1, 1, "", "wedge2tet"]], "mymesh.curvature": [[121, 1, 1, "", "AnalyticalCurvature"], [122, 1, 1, "", "CubicFit"], [123, 1, 1, "", "Curvedness"], [124, 1, 1, "", "GaussianCurvature"], [125, 1, 1, "", "ImageCurvature"], [126, 1, 1, "", "MeanCurvature"], [127, 1, 1, "", "NormCurve"], [128, 1, 1, "", "QuadFit"], [129, 1, 1, "", "ShapeCategory"], [130, 1, 1, "", "ShapeIndex"]], "mymesh.delaunay": [[131, 1, 1, "", "BowyerWatson2d"], [132, 1, 1, "", "BowyerWatson3d"], [133, 1, 1, "", "ConvexHull"], [134, 1, 1, "", "ConvexHullFanTriangulation"], [135, 1, 1, "", "ConvexHull_GiftWrapping"], [136, 1, 1, "", "SciPy"], [137, 1, 1, "", "Triangle"], [138, 1, 1, "", "TriangleSplittingTriangulation"], [139, 1, 1, "", "Triangulate"]], "mymesh.image": [[140, 1, 1, "", "SurfaceMesh"], [141, 1, 1, "", "SurfaceNodeOptimization"], [142, 1, 1, "", "TetMesh"], [143, 1, 1, "", "VoxelMesh"], [144, 1, 1, "", "read"], [145, 1, 1, "", "write"]], "mymesh.implicit": [[146, 1, 1, "", "SurfaceMesh"], [147, 1, 1, "", "SurfaceNodeOptimization"], [148, 1, 1, "", "TetMesh"], [149, 1, 1, "", "VoxelMesh"], [150, 1, 1, "", "box"], [151, 1, 1, "", "cylinder"], [152, 1, 1, "", "diamond"], [153, 1, 1, "", "diff"], [154, 1, 1, "", "difff"], [155, 1, 1, "", "diffs"], [156, 1, 1, "", "grid2fun"], [157, 1, 1, "", "grid2grad"], [158, 1, 1, "", "gyroid"], [159, 1, 1, "", "intersection"], [160, 1, 1, "", "intersectionf"], [161, 1, 1, "", "intersections"], [162, 1, 1, "", "lidinoid"], [163, 1, 1, "", "mesh2sdf"], [164, 1, 1, "", "mesh2udf"], [165, 1, 1, "", "neovius"], [166, 1, 1, "", "offset"], [167, 1, 1, "", "primitive"], [168, 1, 1, "", "rMax"], [169, 1, 1, "", "rMin"], [170, 1, 1, "", "sphere"], [171, 1, 1, "", "thicken"], [172, 1, 1, "", "thickenf"], [173, 1, 1, "", "thickens"], [174, 1, 1, "", "torus"], [175, 1, 1, "", "union"], [176, 1, 1, "", "unionf"], [177, 1, 1, "", "unions"], [178, 1, 1, "", "xplane"], [179, 1, 1, "", "yplane"], [180, 1, 1, "", "zplane"]], "mymesh.improvement": [[181, 1, 1, "", "GeoTransformSmoothing"], [182, 1, 1, "", "GlobalLaplacianSmoothing"], [183, 1, 1, "", "LocalLaplacianSmoothing"], [184, 1, 1, "", "NodeSpringSmoothing"], [185, 1, 1, "", "SegmentSpringSmoothing"], [186, 1, 1, "", "SmartLaplacianSmoothing"], [187, 1, 1, "", "TangentialLaplacianSmoothing"], [188, 1, 1, "", "TetContract"], [189, 1, 1, "", "TetFlip"], [190, 1, 1, "", "TetImprove"], [191, 1, 1, "", "TetSplit"]], "mymesh.mesh": [[20, 3, 1, "", "EdgeSets"], [20, 3, 1, "", "ElemData"], [20, 3, 1, "", "ElemSets"], [20, 3, 1, "", "FaceSets"], [20, 3, 1, "", "NodeData"], [20, 3, 1, "", "NodeSets"]], "mymesh.mesh.mesh": [[21, 4, 1, "", "BoundaryConn"], [22, 4, 1, "", "BoundaryNodes"], [23, 4, 1, "", "Centroids"], [24, 5, 1, "", "Clip"], [25, 5, 1, "", "Contour"], [26, 5, 1, "", "CreateBoundaryLayer"], [27, 4, 1, "", "EdgeConn"], [28, 4, 1, "", "EdgeElemConn"], [29, 4, 1, "", "Edges"], [30, 4, 1, "", "ElemConn"], [31, 4, 1, "", "ElemNeighbors"], [32, 4, 1, "", "ElemNormals"], [33, 4, 1, "", "EulerCharacteristic"], [34, 4, 1, "", "FaceConn"], [35, 4, 1, "", "FaceElemConn"], [36, 4, 1, "", "Faces"], [37, 4, 1, "", "Genus"], [38, 4, 1, "", "ND"], [39, 4, 1, "", "NEdge"], [40, 4, 1, "", "NElem"], [41, 4, 1, "", "NFace"], [42, 4, 1, "", "NNode"], [43, 4, 1, "", "NodeNeighbors"], [44, 4, 1, "", "NodeNormals"], [45, 4, 1, "", "NodeNormalsMethod"], [46, 5, 1, "", "RenumberFacesBySet"], [47, 5, 1, "", "RenumberNodesBySet"], [48, 4, 1, "", "SurfConn"], [49, 4, 1, "", "SurfElemConn"], [50, 4, 1, "", "SurfNodeNeighbors"], [51, 4, 1, "", "SurfNodes"], [52, 4, 1, "", "Surface"], [53, 5, 1, "", "Threshold"], [54, 5, 1, "", "addEdges"], [55, 5, 1, "", "addElems"], [56, 5, 1, "", "addFaces"], [57, 5, 1, "", "addNodes"], [58, 4, 1, "", "cells"], [59, 5, 1, "", "cleanup"], [60, 5, 1, "", "copy"], [61, 5, 1, "", "getCurvature"], [62, 5, 1, "", "getQuality"], [63, 5, 1, "", "identify_type"], [64, 5, 1, "", "imread"], [65, 5, 1, "", "merge"], [66, 5, 1, "", "meshio2mymesh"], [67, 5, 1, "", "mymesh2meshio"], [68, 5, 1, "", "plot"], [69, 4, 1, "", "points"], [70, 5, 1, "", "read"], [71, 5, 1, "", "removeElems"], [72, 5, 1, "", "reset"], [73, 5, 1, "", "validate"], [74, 5, 1, "", "view"], [75, 5, 1, "", "write"]], "mymesh.octree": [[192, 1, 1, "", "Function2Octree"], [193, 1, 1, "", "Octree2Dual"], [194, 1, 1, "", "Octree2Voxel"], [195, 1, 1, "", "Points2Octree"], [196, 1, 1, "", "Print"], [197, 1, 1, "", "SearchOctree"], [198, 1, 1, "", "SearchOctreeTri"], [199, 1, 1, "", "Surface2Octree"], [200, 1, 1, "", "Voxel2Octree"], [201, 1, 1, "", "getAllLeaf"]], "mymesh.primitives": [[202, 1, 1, "", "Box"], [203, 1, 1, "", "Circle"], [204, 1, 1, "", "CirclePt"], [205, 1, 1, "", "Cylinder"], [206, 1, 1, "", "Extrude"], [207, 1, 1, "", "Grid"], [208, 1, 1, "", "Grid2D"], [209, 1, 1, "", "Line"], [210, 1, 1, "", "Plane"], [211, 1, 1, "", "Revolve"], [212, 1, 1, "", "Sphere"], [213, 1, 1, "", "Torus"]], "mymesh.quality": [[214, 1, 1, "", "Area"], [215, 1, 1, "", "AspectRatio"], [216, 1, 1, "", "InverseOrthogonalQuality"], [217, 1, 1, "", "InverseOrthogonality"], [218, 1, 1, "", "MaxDihedral"], [219, 1, 1, "", "MeanRatio"], [220, 1, 1, "", "MinDihedral"], [221, 1, 1, "", "OrthogonalQuality"], [222, 1, 1, "", "Orthogonality"], [223, 1, 1, "", "Skewness"], [224, 1, 1, "", "SurfDihedralAngles"], [225, 1, 1, "", "Volume"], [226, 1, 1, "", "dihedralAngles"], [227, 1, 1, "", "equiangular_skewness"], [228, 1, 1, "", "quad_skewness"], [229, 1, 1, "", "tet_vol_skewness"], [230, 1, 1, "", "tri_skewness"]], "mymesh.rays": [[231, 1, 1, "", "BoxTrianglesIntersection"], [232, 1, 1, "", "PlaneBoxIntersection"], [233, 1, 1, "", "PlaneSurfIntersection"], [234, 1, 1, "", "PlaneTriangleIntersection"], [235, 1, 1, "", "PlaneTrianglesIntersection"], [236, 1, 1, "", "PointInBox"], [237, 1, 1, "", "PointInSurf"], [238, 1, 1, "", "PointInTri"], [239, 1, 1, "", "PointsInSurf"], [240, 1, 1, "", "PointsInTris"], [241, 1, 1, "", "PointsInVoxel"], [242, 1, 1, "", "RayBoxIntersection"], [243, 1, 1, "", "RayBoxesIntersection"], [244, 1, 1, "", "RayOctreeIntersection"], [245, 1, 1, "", "RaySegmentsIntersection"], [246, 1, 1, "", "RaySurfIntersection"], [247, 1, 1, "", "RayTriangleIntersection"], [248, 1, 1, "", "RayTrianglesIntersection"], [249, 1, 1, "", "RaysSurfIntersection"], [250, 1, 1, "", "RaysTrianglesIntersection"], [251, 1, 1, "", "SegmentSegmentIntersection"], [252, 1, 1, "", "SegmentsSegmentsIntersection"], [253, 1, 1, "", "SurfSelfIntersection"], [254, 1, 1, "", "SurfSurfIntersection"], [255, 1, 1, "", "TriangleBoxIntersection"], [256, 1, 1, "", "TriangleTriangleIntersection"], [257, 1, 1, "", "TriangleTriangleIntersectionPt"], [258, 1, 1, "", "TrianglesTrianglesIntersection"], [259, 1, 1, "", "TrianglesTrianglesIntersectionPts"]], "mymesh.utils": [[260, 1, 1, "", "AABB"], [261, 1, 1, "", "BaryTet"], [262, 1, 1, "", "BaryTri"], [263, 1, 1, "", "BaryTris"], [264, 1, 1, "", "CalcFaceNormal"], [265, 1, 1, "", "Centroids"], [266, 1, 1, "", "CleanupDegenerateElements"], [267, 1, 1, "", "DeleteDegenerateElements"], [268, 1, 1, "", "DeleteDuplicateNodes"], [269, 1, 1, "", "DetectFeatures"], [270, 1, 1, "", "DilateVoxel"], [271, 1, 1, "", "ErodeVoxel"], [272, 1, 1, "", "ExtractRagged"], [273, 1, 1, "", "Face2NodeNormal"], [274, 1, 1, "", "MVBB"], [275, 1, 1, "", "MergeMesh"], [276, 1, 1, "", "MirrorMesh"], [277, 1, 1, "", "PadRagged"], [278, 1, 1, "", "Project2Surface"], [279, 1, 1, "", "RelabelNodes"], [280, 1, 1, "", "SortRaggedByLength"], [281, 1, 1, "", "SplitRaggedByLength"], [282, 1, 1, "", "SurfMapping"], [283, 1, 1, "", "TetMeshVol"], [284, 1, 1, "", "TriSurfVol"], [285, 1, 1, "", "ValueMapping"], [286, 1, 1, "", "getConnectedElements"], [287, 1, 1, "", "getConnectedNodes"], [288, 1, 1, "", "getElemConnectivity"], [289, 1, 1, "", "getElemNeighbors"], [290, 1, 1, "", "getNodeNeighborhood"], [291, 1, 1, "", "getNodeNeighborhoodByRadius"], [292, 1, 1, "", "getNodeNeighbors"], [293, 1, 1, "", "identify_type"], [294, 1, 1, "", "makePyramidLayer"]], "mymesh.visualize": [[295, 1, 1, "", "FaceColor"], [296, 1, 1, "", "GetTheme"], [297, 1, 1, "", "ParseColor"], [298, 1, 1, "", "View"], [299, 1, 1, "", "set_vispy_backend"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "method", "Python method"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:property", "5": "py:method"}, "terms": {"": [5, 16, 53, 84, 108, 125, 137, 139, 152, 153, 158, 159, 162, 165, 166, 167, 171, 175, 190, 191, 198, 242, 243, 257, 259, 269, 300, 303, 307, 310, 311, 315, 316, 317, 319], "0": [2, 4, 5, 6, 7, 9, 11, 18, 24, 64, 78, 84, 85, 86, 87, 88, 89, 96, 97, 101, 117, 120, 129, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 158, 162, 165, 167, 168, 169, 170, 174, 178, 179, 180, 181, 182, 184, 185, 192, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 216, 217, 221, 222, 223, 227, 228, 229, 230, 235, 237, 239, 247, 248, 250, 251, 252, 256, 257, 258, 259, 267, 268, 269, 280, 281, 298, 300, 301, 302, 303, 304, 305, 308, 309, 312, 314, 315, 316, 320, 321], "00": [4, 9, 11, 312], "000": 11, "001": 267, "002": 309, "0020": 135, "005": 309, "00529": 309, "00843": 309, "01": [4, 192, 312], "0181": 309, "01880": 309, "019": 309, "0190": 135, "02": 269, "024": 309, "0262": 309, "03": 269, "03581": 309, "0363": 309, "04": [6, 9, 312], "04495685": 237, "05": [5, 9, 140, 146, 147, 148, 149, 150, 152, 158, 162, 165, 167, 202, 207, 208, 302, 305, 309, 312], "06": [247, 309], "08": [82, 139, 237, 239], "08831v2": 132, "091": 312, "1": [2, 4, 5, 6, 7, 24, 25, 26, 61, 64, 78, 84, 86, 88, 89, 96, 97, 101, 117, 120, 125, 129, 135, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 158, 162, 165, 167, 170, 174, 178, 179, 180, 182, 184, 185, 190, 192, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 221, 222, 223, 227, 228, 229, 230, 242, 243, 268, 269, 271, 272, 275, 277, 280, 281, 282, 285, 289, 294, 297, 298, 300, 301, 302, 303, 304, 305, 308, 309, 314, 315, 316, 317, 320, 321], "10": [2, 26, 59, 63, 82, 89, 112, 115, 135, 183, 187, 188, 195, 203, 204, 205, 212, 213, 231, 242, 243, 247, 248, 250, 255, 256, 257, 258, 259, 280, 281, 293, 309, 314, 320], "100": [186, 206], "1002": 309, "1007": [26, 309], "1016": [135, 309], "10487472": [256, 257, 258, 259, 309], "10487487": 309, "1056": 309, "1080": [256, 257, 258, 259, 309], "10867651": [256, 257, 258, 259, 309], "1093": 309, "1097": 309, "11": [9, 314], "111": 9, "1111": 309, "1145": [82, 231, 242, 243, 247, 248, 250, 255, 309], "1148": 309, "115": 309, "1198555": [231, 242, 243, 247, 248, 250, 255, 309], "1198746": [247, 248, 250, 309], "1198747": [231, 255, 309], "1198748": [242, 243, 309], "12": [83, 89, 238, 240, 267, 268, 302, 309, 314], "123811": 309, "126": 309, "13": [312, 314], "13th": 309, "14": [7, 65, 233, 235, 245, 246, 248, 249, 250, 253, 254, 256, 257, 258, 259, 268, 314], "1467": 309, "14th": 309, "15": 314, "150": 309, "15904": [82, 309], "15922": [82, 309], "16": 314, "160": 309, "161": 309, "162": 309, "163": 309, "1641": 309, "1652": 309, "166": 309, "167": 309, "169": 309, "170": 309, "172": 309, "179": 267, "18": [26, 135, 191, 309], "180": 267, "1805": 132, "19": 309, "1908": 309, "195": 309, "1973": 135, "1981": 309, "1986": 309, "1987": 309, "1991": 309, "1992": [123, 129, 130, 309], "1994": 309, "1995": 309, "1996": 309, "1997": [256, 257, 258, 259, 309], "1998": 309, "1d": [146, 148, 149, 310], "1e": [59, 65, 82, 83, 89, 139, 147, 183, 184, 186, 187, 233, 235, 237, 238, 239, 240, 245, 246, 247, 248, 249, 250, 253, 254, 256, 257, 258, 259, 267, 268], "1to14": 120, "1to2": 101, "1to20": 101, "1to24": [96, 101], "1to2c": 101, "1to3": 120, "1to36": 120, "1to3c": 120, "1to4": 101, "1to5": 96, "1to6": 96, "2": [2, 5, 7, 37, 84, 86, 89, 101, 103, 117, 120, 129, 135, 136, 139, 144, 146, 148, 168, 169, 171, 172, 181, 189, 191, 192, 203, 204, 205, 206, 211, 212, 213, 231, 243, 255, 256, 257, 258, 259, 268, 269, 275, 280, 281, 282, 285, 293, 294, 301, 302, 303, 304, 305, 309, 314, 315, 316, 318, 320], "20": [184, 203, 204, 205, 212, 213, 302, 309], "2000": [185, 309], "20000330": 309, "2001": [284, 309], "2002": [26, 309], "2003": 309, "2004": [122, 127, 128, 309], "2005": [121, 125, 231, 242, 243, 247, 248, 250, 255, 309], "2008": 309, "201": 309, "2010": 309, "2015": 309, "2016": 309, "2018": 309, "2020": 309, "2024": [309, 311], "203": 309, "21": [135, 309], "22": 309, "220": 309, "222": 309, "23": 309, "23990304": 237, "24": 309, "25": [6, 7, 174, 188, 190, 213, 256, 257, 258, 259, 269, 302, 309, 311], "256": 314, "2629697": 309, "286": 309, "291": 309, "2d": [20, 88, 104, 106, 117, 131, 135, 145, 151, 206, 210, 211, 243, 250, 277, 284, 300, 303, 304, 309], "2exi": 315, "2fxy": 315, "2x_ii": 315, "2x_iy_i": 315, "2y": 315, "2y_0": 315, "2y_1": 315, "2y_i": 315, "2y_n": 315, "3": [5, 9, 63, 89, 90, 101, 104, 116, 120, 129, 135, 136, 139, 145, 174, 184, 189, 191, 231, 234, 235, 236, 237, 239, 241, 244, 246, 248, 249, 250, 253, 258, 259, 266, 267, 268, 280, 281, 293, 301, 302, 303, 304, 305, 309, 314, 315, 316, 318, 320], "30": [256, 257, 258, 259, 309], "3197517": 309, "32": [185, 309], "3201353": 309, "324": 309, "33": [84, 85, 86, 140, 146, 309], "3333333333333333": 182, "336156": 309, "338193": 309, "338200": 309, "3386569": 309, "3392385": 309, "349": 309, "35": 2, "36": 7, "368": 309, "37": 309, "37401": 309, "37422": 309, "376": 309, "39": 309, "3c647": 309, "3d": [18, 64, 86, 96, 97, 101, 106, 107, 117, 120, 125, 132, 144, 145, 146, 148, 170, 174, 197, 206, 207, 211, 231, 232, 236, 237, 239, 241, 242, 243, 244, 246, 247, 248, 249, 250, 253, 255, 284, 300, 303, 304, 309], "3dx": 315, "3e3": 309, "3gy": 315, "3x3": 198, "3x_i": 315, "3y_i": 315, "4": [2, 5, 7, 90, 101, 102, 103, 104, 112, 113, 114, 115, 120, 129, 145, 188, 189, 191, 266, 268, 280, 281, 292, 301, 302, 303, 304, 309, 312, 314], "407": 309, "412": 309, "43": 309, "45": 309, "46": 309, "5": [5, 6, 7, 63, 64, 84, 90, 97, 99, 100, 101, 104, 120, 129, 140, 143, 144, 146, 147, 148, 188, 190, 192, 199, 209, 212, 268, 280, 281, 293, 301, 303, 308, 314, 315, 317], "50": 213, "50040": 309, "55": [7, 242, 243, 309], "557": 309, "559": [5, 9, 312], "564": 309, "569": 2, "58": 309, "6": [63, 84, 90, 104, 118, 119, 120, 129, 146, 148, 149, 183, 185, 186, 187, 192, 247, 280, 281, 293, 301, 303, 309, 314, 317, 320], "60": [242, 243, 309], "63": 309, "632": 309, "647": [185, 309], "658": 309, "66": [26, 309], "668": [185, 309], "7": [7, 84, 89, 129, 280, 281, 303, 309, 314], "73": 135, "771": [7, 9, 312], "780": [6, 9, 312], "781606": 309, "781653": 309, "7823": 309, "7830": 309, "79": [26, 309], "8": [6, 63, 82, 90, 94, 95, 96, 104, 129, 237, 239, 280, 281, 293, 303, 309, 314, 319], "80": 5, "80818381": 237, "82": 267, "83": 309, "8659": 309, "8856": 309, "9": [5, 7, 150, 223, 280, 281, 301, 302, 305, 309, 314], "90020": 135, "90076": 309, "92": 309, "966131": 309, "966134": 309, "980": [2, 4, 312], "A": [11, 26, 63, 96, 101, 115, 120, 123, 129, 130, 135, 214, 231, 242, 243, 282, 293, 302, 304, 308, 309, 310, 311, 314, 315, 316, 317], "As": [311, 316, 317], "At": 193, "By": [6, 45, 72, 84, 85, 86, 87, 88, 89, 92, 125, 146, 147, 148, 183, 184, 186, 187, 205, 206, 207, 208, 209, 210, 211, 212, 266, 298, 303, 315], "For": [2, 27, 28, 30, 31, 32, 33, 34, 35, 37, 43, 81, 86, 87, 88, 89, 96, 101, 104, 105, 120, 141, 144, 145, 146, 147, 148, 152, 158, 162, 165, 166, 167, 171, 172, 183, 184, 186, 187, 205, 211, 214, 215, 216, 217, 221, 222, 223, 225, 237, 239, 247, 248, 250, 266, 270, 285, 286, 287, 289, 298, 302, 304, 305, 308, 314, 315, 317, 319, 320, 321], "If": [1, 20, 24, 25, 26, 39, 41, 45, 48, 53, 62, 64, 68, 72, 73, 75, 85, 86, 87, 88, 89, 91, 92, 93, 97, 104, 105, 107, 108, 110, 125, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 178, 179, 180, 183, 184, 185, 186, 187, 188, 190, 191, 192, 194, 197, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 229, 239, 247, 253, 254, 256, 257, 258, 259, 275, 282, 285, 286, 287, 289, 294, 298, 299, 302, 316, 320], "In": [63, 127, 128, 247, 248, 250, 272, 277, 280, 281, 285, 293, 298, 301, 302, 305, 310, 311, 315, 316], "It": [26, 104, 186, 305, 311, 315, 316, 317, 319], "No": [85, 86, 87, 88, 89], "Not": [96, 101, 120, 289], "On": [135, 309], "One": [308, 314], "Or": 300, "Such": 6, "That": 235, "The": [2, 5, 18, 20, 26, 60, 83, 84, 86, 88, 91, 93, 96, 104, 105, 107, 108, 111, 120, 134, 143, 146, 147, 148, 149, 157, 171, 172, 174, 185, 188, 191, 192, 195, 199, 205, 212, 213, 266, 268, 270, 271, 273, 276, 281, 282, 286, 287, 294, 299, 301, 307, 308, 310, 311, 313, 314, 315, 316, 317, 319, 320], "There": [44, 300, 308, 311, 317], "These": [7, 108, 250, 280, 281, 300, 302, 310, 314, 316], "To": [2, 6, 33, 137, 205, 294, 306, 308, 311, 316, 317], "Will": [90, 104, 231, 237, 239, 255, 278, 282, 285], "With": [250, 280], "_": [2, 315], "_ax": 68, "_description_": [192, 250, 298], "_i": [315, 321], "_j": 321, "_mesh": [66, 67], "_type_": [192, 250, 298], "a1": 302, "a2": 302, "a3": 302, "a_i": [315, 316], "a_x": 316, "ab": [63, 226, 293, 309], "abil": [140, 142, 143, 146, 148, 149, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213], "abl": [154, 160, 172, 176], "about": [108, 174, 213, 276], "abov": [18, 149, 178, 179, 180, 191, 223, 314, 317], "absenc": 303, "academ": [1, 309], "acceler": [237, 239, 246, 249, 250], "accept": 305, "access": [75, 280, 308, 311], "accomplish": 315, "accord": [279, 310], "accordingli": 275, "accur": [2, 6, 317], "achiev": [184, 302, 308, 321], "acm": [82, 231, 242, 243, 247, 248, 250, 255, 309], "across": [1, 316], "activ": [20, 317], "actual": [171, 172], "ad": [96, 101, 107, 120, 185, 188, 191, 316, 317], "adapt": [191, 192, 309], "add": [104, 143, 184, 185, 316], "addit": [2, 89, 91, 93, 146, 148, 149, 280, 289, 310, 314, 315, 317], "addition": [73, 306, 307, 308], "adjac": [31, 43, 85, 86, 87, 88, 89, 183, 186, 187, 224, 256, 257, 258, 259, 269, 280, 292, 314, 316], "admiss": 320, "adopt": [305, 315], "adrian": [309, 316], "advanc": 302, "advantag": [308, 315], "after": [183, 186, 187, 188, 190, 191, 320], "ag073671": 311, "against": 319, "ahead": 316, "ai": 222, "aid": 309, "aim": [302, 311, 313], "akenin": [231, 255, 309], "al": [191, 320], "alec": 309, "alexand": 309, "algorithm": [16, 85, 86, 87, 88, 89, 131, 132, 135, 139, 193, 232, 242, 243, 247, 248, 250, 300, 309, 311, 313, 314, 316, 320], "alia": [58, 69], "alias": [52, 308], "align": [96, 101, 107, 120, 205, 232, 242, 243, 260, 274, 315, 320], "all": [6, 53, 62, 63, 64, 72, 81, 88, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 110, 111, 113, 114, 116, 118, 119, 120, 125, 146, 148, 149, 183, 184, 186, 187, 188, 196, 201, 215, 217, 221, 222, 281, 282, 285, 293, 300, 301, 304, 306, 308, 311, 312, 315, 316, 317, 320], "all_nod": 53, "allevi": 302, "allow": [1, 141, 146, 186, 298, 303, 311, 315, 316, 319, 321], "alohner08": [273, 309], "alon": 315, "along": [24, 26, 83, 85, 86, 87, 88, 89, 144, 178, 179, 180, 205, 211, 212, 278, 302, 308, 314, 320], "alpha": [2, 168, 169, 261, 262, 263, 278, 282, 297, 298], "alpha_0": 316, "alreadi": 48, "also": [5, 6, 15, 104, 209, 211, 256, 257, 258, 259, 279, 304, 311, 314, 316, 317, 321], "alter": [141, 147], "altern": [63, 111, 293, 299, 300, 316], "alwai": [280, 313], "am": 104, "ambigu": [63, 293, 303, 314], "amd": 309, "american": 309, "ami": 309, "amoller05": [231, 255, 309], "among": 316, "amount": [166, 206, 280], "an": [18, 20, 25, 53, 64, 73, 74, 75, 84, 85, 87, 89, 97, 109, 111, 117, 121, 136, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 153, 154, 155, 156, 157, 159, 160, 161, 164, 171, 172, 175, 176, 177, 184, 185, 188, 190, 191, 192, 193, 194, 195, 199, 200, 205, 212, 215, 231, 232, 234, 235, 237, 239, 242, 243, 244, 246, 247, 249, 255, 256, 257, 258, 259, 266, 267, 269, 273, 278, 282, 285, 289, 290, 291, 298, 299, 301, 303, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 319, 320, 321], "analog": 310, "analogi": [184, 185, 309], "analysi": [4, 300, 301, 310, 311, 312], "analyt": 2, "analyticalcurvatur": 2, "analyz": [3, 10, 311], "andr": 311, "andrea": 309, "angl": [45, 188, 190, 211, 218, 220, 222, 223, 224, 226, 267, 269, 273], "anglestep": 211, "angletol": 267, "ani": [1, 7, 26, 53, 63, 70, 73, 109, 111, 141, 147, 149, 156, 157, 188, 225, 234, 235, 289, 293, 302, 305, 307, 308, 311, 316, 319], "anisotrop": 207, "annual": 309, "anoth": [183, 186, 187, 193, 268, 282, 285, 301, 302, 314], "anyth": 315, "apart": [184, 268], "api": [311, 313], "appear": [63, 275, 293], "appli": [86, 88, 184, 185, 309, 321], "applic": [75, 302, 309, 311], "approach": [6, 63, 192, 278, 282, 285, 293, 302, 314, 316], "appropri": [73, 75, 302, 311], "approxim": [6, 84, 127, 140, 142, 146, 147, 148, 152, 158, 162, 165, 167, 202, 209, 309, 314], "ar": [2, 5, 6, 16, 18, 19, 33, 44, 52, 62, 63, 72, 73, 85, 86, 87, 88, 89, 90, 95, 100, 104, 107, 108, 111, 112, 114, 119, 122, 125, 127, 128, 139, 141, 143, 144, 145, 146, 147, 148, 149, 153, 154, 155, 159, 160, 161, 175, 176, 177, 183, 184, 186, 187, 188, 191, 192, 199, 209, 234, 235, 239, 241, 246, 247, 248, 249, 253, 264, 266, 268, 273, 280, 281, 282, 289, 292, 293, 298, 300, 301, 302, 303, 304, 305, 306, 308, 310, 311, 313, 314, 315, 316, 317, 319, 321], "arang": 206, "arbitrarili": [63, 293], "arcco": [2, 226], "arctan": 315, "area": 223, "aren": [63, 92, 108, 184, 293, 317], "arg": [146, 148, 149, 192], "argument": [5, 68, 72, 74, 121, 146, 148, 149, 156, 157, 190], "ariella": 311, "aris": [2, 310], "around": [270, 290, 291, 315], "arrai": [2, 20, 22, 51, 64, 68, 84, 85, 86, 87, 88, 91, 93, 97, 101, 110, 117, 120, 122, 125, 127, 128, 131, 132, 136, 137, 140, 141, 142, 143, 144, 145, 146, 148, 149, 184, 188, 191, 192, 193, 199, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 237, 242, 243, 247, 248, 250, 253, 255, 256, 257, 258, 259, 266, 268, 272, 277, 278, 298, 302, 304, 305, 317], "array_lik": [20, 24, 25, 53, 68, 84, 85, 87, 89, 101, 103, 108, 111, 112, 115, 117, 120, 125, 131, 132, 136, 137, 139, 140, 142, 143, 145, 146, 147, 148, 149, 151, 163, 164, 170, 174, 183, 184, 186, 187, 188, 190, 191, 192, 195, 197, 198, 199, 200, 203, 204, 205, 206, 209, 211, 212, 213, 214, 218, 220, 224, 225, 226, 229, 231, 232, 234, 235, 236, 237, 239, 241, 242, 243, 244, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 266, 274, 279, 281, 288, 292, 298], "articl": 309, "artifici": 309, "arxiv": [132, 309], "ascii": 75, "aspect": [62, 215], "aspectratio": [62, 78], "assert": 73, "assess": [192, 314, 319], "assign": [184, 185, 294], "associ": [20, 117, 275, 285, 301, 319], "assum": [85, 86, 87, 88, 89, 90, 104, 112, 144, 153, 154, 155, 159, 160, 161, 175, 176, 177, 186, 264, 270, 271, 292, 294, 303, 304, 305], "assumpt": 315, "attempt": [63, 145, 188, 293, 299], "attribut": [20, 308], "aubri": 309, "aug": 309, "auger": 311, "author": 313, "auto": [90, 104, 109, 191, 225, 292], "automat": [20, 214], "avail": [6, 62, 183, 184, 186, 187, 298, 299, 305, 313], "averag": [97, 186, 191, 273, 315, 316], "avoid": [63, 185, 293, 300, 308], "awai": 316, "ax": [2, 68, 86, 117, 144, 205, 212, 315, 320], "ax1": [2, 302], "ax2": [2, 302], "ax3": [2, 302], "ax4": 2, "axi": [6, 7, 68, 144, 174, 178, 179, 180, 203, 204, 205, 206, 211, 212, 213, 232, 242, 243, 253, 260, 320], "axial_resolut": 205, "b": [168, 169, 231, 234, 235, 247, 248, 250, 255, 256, 257, 258, 259, 302, 309, 315, 316, 317], "b978": 309, "b_i": 315, "b_x": 316, "b_y": 316, "back": 110, "backend": 299, "background": [125, 146, 148, 269, 302], "bajaj": 309, "balanc": 308, "bar": [2, 321], "bari": [261, 262, 263], "barrier": 286, "barrierelem": 286, "barriernod": 287, "barru": [242, 243, 309], "baryarea": [238, 240], "barycentr": [261, 262, 263, 278, 282, 285, 316, 320], "barytri": 316, "baryweight": 182, "base": [1, 2, 25, 26, 38, 64, 84, 90, 97, 121, 122, 125, 127, 128, 136, 141, 147, 192, 193, 205, 273, 284, 298, 302, 305, 307, 308, 309, 310, 314, 318, 319, 320], "basic": [16, 316], "bd02": [26, 309], "becaus": 6, "becom": [188, 321], "been": [2, 39, 41, 107, 108, 188, 271, 314, 316], "befor": 188, "begin": [315, 316, 320], "behavior": 111, "behind": [313, 316], "being": [19, 53, 188, 215, 216, 217, 221, 222, 223, 227, 228, 229, 230, 247, 248, 250, 278, 301, 302, 305, 311, 315, 316, 319], "below": [149, 188, 301, 314], "belyaev": [147, 309], "ben": 309, "bend": 315, "benjamin": 309, "bent": 315, "best": [2, 78, 94, 95, 98, 99, 100, 102, 113, 114, 116, 118, 119, 216, 217, 221, 222, 223, 227, 228, 229, 230], "beta": [261, 262, 263, 278, 282], "beta_0": 316, "better": [127, 128, 285], "between": [1, 6, 83, 85, 86, 87, 88, 89, 91, 92, 93, 96, 101, 107, 120, 185, 188, 191, 192, 193, 211, 218, 220, 222, 224, 226, 231, 232, 234, 235, 242, 243, 244, 246, 247, 248, 249, 250, 254, 255, 259, 269, 301, 302, 303, 313, 319, 320, 321], "bf01313411": 309, "bfb0014497": 309, "bgcolor": [2, 5, 6, 7, 84, 140, 146, 148, 149, 150, 151, 152, 158, 162, 165, 167, 170, 174, 202, 203, 205, 206, 207, 208, 209, 212, 213, 269, 298, 302, 308], "bicub": [86, 88], "bidirect": [247, 248, 249, 250, 320], "big": [315, 316], "biggest": 315, "bilinear": [85, 86, 87, 88], "binari": [75, 314], "bioinformat": 309, "biomechan": [1, 309, 311], "bit": 5, "blackbox": 313, "blake": 311, "blo00": [184, 309, 321], "blo94": [89, 309, 314], "block": 308, "blom": [185, 309, 321], "bloomenth": [309, 314], "blue": 301, "bmatrix": [315, 320], "board": 1, "bolun": 309, "bone": [309, 315], "bong": 309, "bool": [20, 26, 53, 62, 65, 68, 75, 85, 86, 87, 88, 89, 91, 92, 93, 104, 105, 107, 110, 125, 141, 143, 146, 147, 148, 183, 184, 185, 186, 187, 188, 190, 191, 196, 198, 205, 207, 208, 210, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 231, 232, 234, 235, 236, 237, 239, 241, 242, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 268, 274, 275, 280, 281, 282, 285, 298], "boolean": [153, 154, 155, 159, 160, 161, 175, 176, 177, 243, 302, 311], "boston": 311, "both": [2, 19, 53, 63, 147, 171, 172, 185, 194, 247, 248, 249, 250, 293, 298, 310, 311, 315, 316, 317, 319, 320, 321], "bottasso": [26, 309], "boubekeur": 309, "bound": [5, 6, 24, 53, 68, 84, 146, 148, 149, 150, 156, 157, 192, 202, 207, 208, 210, 231, 232, 242, 243, 255, 260, 274, 298, 316, 319, 320], "boundari": [21, 22, 25, 26, 85, 86, 87, 88, 125, 149, 191, 198, 241, 309, 310, 314, 316], "bow81": [131, 309, 316], "bowyer": [131, 132, 139, 309], "bowyerwatson": 139, "bowyerwatson2d": 316, "bowyerwatson3d": 316, "box": [24, 84, 207, 208, 209, 231, 232, 236, 242, 243, 255, 260, 274, 302, 305, 309, 319], "boxcent": [231, 255], "branch": 319, "break": 52, "bridg": 313, "bright": [125, 315], "brightobject": 125, "brute": [278, 282, 285], "bu": [7, 309], "bucati": 7, "build": [125, 311, 316], "built": [6, 305, 306], "bx": 315, "bx_0y_0": 315, "bx_1y_1": 315, "bx_ny_n": 315, "bxy": 315, "c": [26, 190, 231, 234, 235, 247, 248, 250, 255, 256, 257, 258, 259, 284, 309, 315, 316, 317], "c_i": 315, "c_x": 316, "c_y": 316, "cach": [72, 308], "cag": 309, "cagd": 309, "calcfacenorm": [122, 127, 128, 224], "calcul": [32, 37, 45, 108, 121, 122, 123, 124, 125, 126, 127, 128, 130, 147, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 239, 260, 264, 265, 273, 274, 283, 284, 302, 308, 316, 320], "call": [289, 308], "callabl": [154, 160, 172, 176, 191], "came": 90, "can": [2, 5, 6, 7, 20, 26, 44, 62, 68, 81, 86, 87, 88, 89, 90, 108, 111, 122, 125, 127, 128, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 156, 157, 188, 190, 191, 197, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 246, 249, 250, 268, 278, 280, 282, 285, 286, 287, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311, 314, 315, 316, 317, 319, 320, 321], "candid": 317, "cannot": 286, "cap": [129, 205, 315], "capabl": [1, 10, 16, 84, 300], "captur": 315, "care": [314, 319], "carefulli": 300, "case": [63, 96, 107, 120, 144, 256, 257, 258, 259, 285, 293, 301, 306, 310, 314, 315, 316], "cast": [79, 237, 239, 272], "categor": 129, "categori": 129, "ccw": 108, "cdot": 320, "cell": [67, 185, 308], "cellcent": 185, "center": [7, 24, 96, 101, 120, 151, 170, 174, 183, 185, 186, 187, 203, 204, 205, 206, 211, 212, 213, 231, 255, 305, 314, 315, 316], "centric": [261, 262, 263], "centrod": 185, "centroid": [84, 108, 111, 149, 163, 193, 222, 308, 319], "certain": 145, "cgal": 311, "chalmer": 309, "chanc": [63, 293], "chandrajit": 309, "chang": [45, 52, 60, 192, 266, 314, 316, 317, 321], "channel": 304, "charact": 190, "characterist": [33, 37], "charl": 309, "che95": [85, 86, 309, 314], "check": [73, 247, 248, 249, 250, 266, 316, 317, 319, 320], "chen": 284, "chernyaev": [309, 314], "chi": [33, 37], "child": [96, 101, 107, 120, 319], "children": 319, "choic": [184, 237, 239, 316, 319], "choos": [247, 248, 250, 314], "chosen": [84, 298, 299, 302, 308], "ci": 222, "circl": [204, 205, 213], "circular": [174, 205, 212, 213], "circumfer": [203, 204, 205], "circumferenti": [203, 204, 212, 213], "citat": 313, "cite": 316, "class": [20, 76, 145, 300, 301, 307, 315], "classic": 302, "classif": 315, "classifi": [63, 89, 269, 293], "cleaner": 302, "cleanup": [53, 65, 86, 87, 88, 89, 188, 275], "cleanup_tol": 89, "clear": [45, 72, 303, 311], "clim": [68, 298], "cline": [309, 314], "clockwis": [95, 100, 108, 114, 119, 134, 264, 316], "clone": 306, "close": [2, 89, 109, 111, 125, 205, 235, 237, 239, 247, 248, 250, 256, 257, 258, 259, 302, 310], "cmu": 309, "cnm": 309, "co": [152, 158, 162, 165, 167, 309], "coarsen": [64, 97, 140, 143, 144, 188], "code": [2, 5, 6, 7, 298, 308, 311], "collaps": 188, "collect": [300, 301, 310], "color": [2, 5, 7, 269, 295, 297, 298, 302, 311], "color_convert": [295, 298], "colorscal": 68, "colorspaci": [298, 306], "column": 136, "column_stack": 206, "com": 309, "combin": [6, 146, 250, 302, 305, 309, 314], "come": [306, 308], "comjnl": 309, "common": [307, 315, 317], "commonli": [6, 308, 310, 315], "commun": [309, 311], "compar": 2, "compat": [6, 146], "compil": 311, "complement": 315, "complet": 273, "complex": [7, 302, 305, 313, 317, 319], "compo": 310, "compon": [38, 315, 320], "comprehens": 311, "compris": 301, "comput": [1, 26, 44, 45, 89, 135, 143, 186, 231, 255, 286, 287, 302, 309, 310, 316, 320], "computation": 302, "concav": 315, "concern": 302, "conclud": 320, "concurr": 316, "condens": 309, "condit": [53, 305], "confer": 309, "configur": 317, "confirm": 73, "conflict": 300, "connect": [5, 20, 21, 27, 28, 30, 31, 34, 35, 43, 48, 49, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 127, 128, 131, 132, 134, 136, 137, 141, 147, 156, 157, 185, 186, 193, 194, 199, 200, 206, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 227, 228, 229, 230, 237, 239, 241, 246, 249, 253, 254, 264, 265, 266, 267, 268, 269, 270, 271, 273, 275, 276, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 303, 308, 310, 314, 315, 316, 317, 321], "connet": 89, "consid": [18, 25, 89, 125, 140, 142, 143, 146, 148, 149, 235, 247, 248, 250, 289, 305, 310, 315], "consider": [185, 309], "consist": [16, 101, 141, 147, 270, 271, 278, 294, 301, 310, 314, 315, 316, 320], "constant": [86, 88], "constitut": [6, 267, 289], "constrain": [1, 137, 306], "constraint": [137, 139], "construct": [7, 111, 203, 204, 246, 249, 250, 301, 309, 314, 315, 316, 319], "contain": [2, 20, 26, 63, 64, 68, 82, 90, 91, 93, 104, 140, 142, 143, 145, 146, 148, 149, 185, 193, 194, 195, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 225, 266, 268, 270, 271, 278, 282, 283, 284, 285, 286, 287, 292, 293, 294, 301, 304, 310, 311, 316, 317, 319], "continu": [1, 6, 96, 101, 107, 120, 153, 154, 155, 159, 160, 161, 175, 176, 177, 319], "contour": [125, 140, 146, 302, 309], "contract": [188, 190, 191], "contractit": 190, "contribut": [122, 127, 128, 311], "control": [6, 298, 321], "conveni": [308, 315], "convent": [18, 305, 310], "converg": [183, 184, 186, 187, 189], "convers": [64, 246, 249, 298, 311], "convert": [64, 66, 67, 81, 89, 125, 147, 156, 157, 193, 194, 206, 211, 225, 266, 268, 272, 292, 298, 301, 307, 308, 310], "convex": [134, 135, 310, 315, 317], "convolut": 141, "coolwarm": [2, 269], "coordin": [20, 24, 38, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 135, 136, 137, 139, 146, 148, 149, 150, 151, 152, 156, 157, 158, 162, 165, 167, 170, 174, 178, 179, 180, 185, 191, 192, 193, 194, 195, 197, 198, 199, 200, 204, 205, 206, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 239, 241, 242, 243, 244, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 308, 310, 315, 316, 317, 320, 321], "copi": [53, 141, 147, 186, 276], "coplanar": [204, 316], "core": 308, "corner": [88, 183, 184, 186, 187, 188, 260, 269, 274, 314, 315], "correct": [125, 309, 314], "correspond": [62, 72, 85, 86, 87, 92, 106, 110, 117, 140, 143, 144, 171, 172, 178, 179, 180, 186, 190, 192, 199, 205, 278, 282, 285, 301, 304, 315, 319, 320], "cosalpha": 2, "cosin": 222, "cost": [89, 143], "could": [1, 111, 149, 203, 204, 205, 206, 211, 212, 213, 310, 314, 317, 320], "count": [33, 256, 257, 258, 259], "counter": [95, 100, 108, 114, 119, 264, 316], "counterclockwis": [134, 135], "cours": [206, 231, 242, 243, 247, 248, 250, 255, 309, 317], "cover": 294, "creat": [1, 7, 20, 53, 60, 62, 63, 89, 111, 141, 147, 186, 188, 246, 249, 270, 276, 278, 282, 285, 293, 302, 308, 314, 316, 319], "creation": 319, "criteria": [186, 199, 319], "crop": [64, 97], "cross": [151, 205, 212, 213, 316, 320], "csg": 305, "ct": [311, 315], "cube": [2, 84, 85, 86, 140, 146, 302, 309, 319], "cubic": [86, 88, 97, 122, 140, 146, 207, 270, 294, 309, 310], "cubicfit": [2, 127, 128, 315], "cuda": 1, "cup": [129, 315], "cupi": 1, "current": [16, 25, 26, 65, 183, 186, 187, 193, 267, 270, 285, 289, 311, 319], "curv": [121, 125, 309], "curvatur": [3, 4, 6, 10, 309, 311, 312], "curved": 61, "custom": 308, "cut": [24, 308], "cv2": 306, "cw": 108, "cy": 315, "cylind": [212, 213, 315], "cylindr": [151, 205, 315], "d": [1, 6, 26, 152, 191, 231, 234, 235, 247, 248, 250, 255, 256, 257, 258, 259, 302, 309, 311, 315, 317, 320], "daniel": 309, "dark": 125, "darker": 125, "data": [20, 53, 64, 67, 76, 86, 88, 97, 117, 125, 143, 144, 145, 194, 199, 237, 239, 244, 272, 275, 282, 298, 301, 302, 304, 309, 311, 316, 319], "date": 311, "david": [309, 316], "deal": 308, "dec": 309, "decid": [188, 298], "decompos": [96, 101, 107, 110, 120, 314], "decomposit": [96, 101, 120], "decreas": 186, "def": [5, 305], "default": [18, 20, 24, 25, 26, 45, 53, 62, 64, 65, 68, 72, 75, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 97, 101, 104, 105, 107, 108, 110, 111, 120, 125, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 178, 179, 180, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 231, 235, 237, 239, 241, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 289, 292, 294, 298, 299, 303, 305], "defect": 302, "defin": [25, 29, 36, 77, 85, 86, 87, 88, 89, 112, 163, 164, 276, 282, 285, 301, 308, 310, 315, 316], "definit": 308, "deform": [184, 321], "defualt": 285, "deg": 62, "degener": [63, 86, 87, 88, 193, 266, 267, 293], "degre": [62, 188, 190, 267, 269], "delaunai": [1, 306, 309], "delaunau": 309, "delet": [266, 267, 275, 316], "deleteduplicatenod": [89, 266], "delta": 261, "delval": 272, "demand": 302, "demo": 311, "demo_curvatur": [2, 4, 312], "demo_heart": [5, 9, 312], "demo_mix": [6, 9, 312], "demo_pasta": [7, 9, 312], "demonstr": 7, "deni": 309, "denot": [85, 86, 87, 88, 89, 211, 298], "depend": [1, 6, 107, 171, 172, 266, 302, 311, 315], "depict": 317, "depth": [84, 192, 195, 199, 319], "describ": [18, 84, 146, 147, 148, 149, 191, 192, 315, 316], "descript": 311, "design": [6, 303, 309, 311], "destruct": [141, 147], "det": [316, 320], "detail": [44, 45, 91, 93, 292, 302, 305, 307, 311], "detect": [90, 104, 141, 147, 192, 231, 232, 234, 235, 242, 243, 247, 248, 250, 255], "detectfeatur": [183, 184, 186, 187, 188, 190], "determin": [20, 39, 41, 53, 62, 65, 86, 87, 88, 89, 96, 107, 111, 120, 125, 149, 186, 188, 192, 194, 214, 222, 226, 235, 237, 239, 241, 247, 248, 249, 250, 256, 257, 258, 259, 267, 268, 269, 273, 280, 288, 289, 292, 298, 314, 316, 319, 320], "detomi": [26, 309], "deuteranomali": 298, "dev": 311, "develop": [16, 81, 311, 316], "deviat": [2, 125, 141, 207, 208, 210], "diagon": 314, "diamond": 6, "dicom": [64, 97, 145, 304, 306], "dict": [62, 146, 148, 149, 183, 184, 186, 187, 190, 316], "dictionari": [20, 62, 146, 148, 149, 317], "diff": 302, "diff_fun": 154, "diff_sym": [155, 161], "diff_val": 153, "differ": [8, 10, 20, 82, 84, 104, 109, 141, 147, 153, 154, 155, 161, 190, 234, 235, 266, 298, 301, 302, 305, 310, 311, 315], "differen": [188, 191], "differenti": [84, 147, 152, 153, 154, 155, 158, 159, 160, 161, 162, 165, 167, 175, 176, 177], "difff": 302, "difficult": [302, 311, 316], "dihedr": [62, 218, 220, 224, 226, 269], "dimens": [38, 136, 139, 304, 305], "dimension": [85, 87, 139, 304, 309, 310, 316, 319], "dimetr": 298, "direct": [2, 84, 108, 146, 148, 149, 171, 172, 178, 179, 180, 192, 205, 206, 207, 231, 232, 242, 243, 247, 248, 249, 250, 255, 302, 309, 311, 315, 320], "direction": [125, 315], "directli": [2, 89, 94, 95, 96, 98, 99, 100, 101, 102, 113, 114, 116, 118, 119, 120, 140, 142, 143, 146, 148, 149, 186, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 300, 302, 304, 308, 311, 315, 316], "directori": [64, 97, 144, 145, 304, 306], "dirichlet": 309, "disadvantag": 315, "discard": [64, 97], "discuss": [313, 315, 316], "displac": [184, 185], "displai": [68, 188, 190, 191, 298], "distanc": [146, 148, 163, 164, 166, 171, 172, 174, 191, 192, 206, 213, 235, 246, 249, 268, 278, 282, 285, 309, 316, 321], "distort": [141, 147], "distribut": [5, 321], "divid": [199, 215, 315, 319], "divis": 309, "dl": [82, 309], "do": [186, 188, 308, 311], "document": 311, "doesn": [26, 109, 186, 188, 316, 319], "doi": [26, 82, 135, 231, 242, 243, 247, 248, 250, 255, 256, 257, 258, 259, 309], "domain": 310, "dome": 129, "domin": [205, 211, 212], "don": [73, 246, 249, 316], "done": [5, 300, 302], "doorn": [123, 129, 130, 309], "doubl": 53, "down": 304, "download": [2, 5, 6, 7, 306], "dramat": 1, "drawn": 316, "driven": 311, "dtype": [145, 272], "dual": [84, 108, 193, 309], "dualconn": [108, 193], "dualcoord": [108, 193], "dualgrid_method": 84, "due": [140, 142, 143, 146, 148, 149, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 316], "duplic": [65, 86, 87, 88, 105, 268, 275], "dure": [141, 147, 183, 184, 186, 187], "dx": [309, 315], "dx_0": 315, "dx_1": 315, "dx_n": 315, "dxnew": 185, "dynam": 309, "e": [2, 33, 85, 87, 91, 92, 93, 96, 101, 104, 105, 107, 117, 120, 144, 145, 188, 191, 193, 205, 211, 223, 231, 234, 235, 236, 247, 248, 250, 255, 256, 257, 258, 259, 301, 302, 304, 306, 309, 310, 311, 315, 316, 317, 320], "e0": 104, "e1": 104, "e10": 104, "e2": 104, "e3": 104, "e4": 104, "e5": 104, "e6": 104, "e7": 104, "e8": 104, "e9": 104, "e_": 320, "e_1": 320, "e_2": 320, "each": [20, 27, 28, 29, 30, 31, 34, 35, 36, 38, 43, 84, 85, 87, 88, 89, 90, 92, 97, 103, 104, 105, 107, 108, 110, 115, 121, 122, 125, 127, 128, 146, 148, 149, 156, 157, 163, 164, 183, 185, 186, 187, 190, 191, 192, 195, 199, 207, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 235, 241, 243, 246, 248, 249, 250, 253, 258, 259, 268, 270, 271, 273, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 301, 303, 304, 308, 310, 314, 315, 316, 317, 319, 320], "earliest": 314, "easi": [308, 311], "easili": [6, 308, 317], "ebcb8b": 7, "ecosystem": 308, "ederror": [84, 192, 319], "edg": [20, 27, 28, 33, 39, 85, 86, 87, 88, 89, 90, 91, 94, 96, 98, 99, 101, 102, 104, 107, 109, 113, 115, 116, 118, 120, 125, 137, 139, 141, 147, 183, 184, 186, 187, 188, 190, 191, 203, 204, 205, 212, 213, 215, 256, 257, 258, 259, 266, 269, 286, 289, 298, 301, 302, 303, 310, 314, 316, 320], "edgeconn": [90, 104, 301, 317], "edgeedg": [256, 257, 258, 259], "edgeelem": 104, "edgeelemconn": [301, 317], "edgemod": [86, 88], "edges2uniqu": 301, "edgeset": [20, 54], "edu": [7, 309], "educ": 313, "effici": [19, 63, 152, 158, 162, 165, 167, 242, 243, 247, 248, 250, 284, 293, 302, 306, 308, 309, 314, 316, 317, 319, 320], "effort": 302, "egregium": 315, "eigenvalu": 315, "eight": 319, "either": [25, 53, 63, 84, 85, 86, 87, 88, 89, 117, 125, 134, 141, 144, 146, 147, 154, 160, 172, 176, 188, 191, 202, 206, 207, 208, 210, 211, 213, 223, 266, 268, 293, 298, 301, 310, 311, 314], "elbow": 7, "elemconn": [108, 185, 273, 288, 289, 301], "elemdata": [20, 25, 53, 62, 64, 143, 188, 190, 191, 298], "element": [5, 6, 20, 23, 24, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 40, 49, 53, 62, 63, 64, 67, 68, 73, 78, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 113, 114, 116, 117, 118, 119, 120, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 156, 184, 185, 186, 188, 190, 191, 192, 193, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 237, 239, 242, 246, 249, 253, 254, 255, 264, 265, 266, 267, 268, 269, 270, 271, 273, 276, 278, 279, 282, 285, 286, 288, 289, 292, 293, 294, 298, 301, 302, 304, 308, 310, 311, 314, 315, 316, 319], "elemet": 119, "elemid": [71, 107, 110, 278], "elemneighbor": [224, 286, 289, 301], "elemnorm": [224, 237, 239, 264, 273], "elemregion": 286, "elemset": [20, 55], "elemtyp": [89, 90, 104, 109, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 225, 269, 292, 302], "elia": 309, "elimin": [5, 319], "elis": [309, 311], "ellipsoid": 212, "ellipt": [205, 212, 315], "elsewher": 305, "embed": 315, "emploi": 313, "empti": [26, 63, 73, 194, 196, 293, 319], "enabl": [1, 152, 158, 162, 165, 167, 319], "encod": 319, "encount": 2, "end": [2, 5, 6, 7, 205, 315, 316, 320], "endpt_inclus": [251, 252], "energi": 309, "enforc": [207, 208, 210], "engin": [26, 309], "enhanc": [1, 306], "enough": [315, 316], "ensur": [137, 253, 314, 316, 317, 320], "entir": 26, "entiti": 301, "entri": [20, 25, 53, 62, 72, 86, 91, 93, 104, 140, 143, 188, 190, 191, 272, 298, 314, 317], "environ": 81, "ep": [63, 83, 192, 233, 235, 237, 238, 239, 240, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 293], "epsilon": 320, "equal": [2, 25, 140, 142, 143, 146, 148, 149, 185, 188, 191, 207, 208, 210, 267, 269, 280, 281, 298, 315, 319], "equat": [185, 315], "equiangular": [223, 227], "equilater": [223, 229], "equilibrium": [184, 321], "equival": [53, 112, 302, 308], "error": [73, 84, 122, 125, 127, 128, 192, 285, 302, 306, 314], "especi": 302, "essenti": [316, 319], "establish": [306, 308], "estim": 315, "et": [191, 320], "eta": 181, "etc": [205, 266, 298], "euclidian": 192, "euler": [33, 37], "ev": 309, "evalu": [62, 84, 89, 121, 125, 141, 146, 148, 149, 152, 156, 157, 158, 162, 163, 164, 165, 167, 178, 179, 180, 191, 192, 302, 311, 314, 319], "even": [26, 298], "evenli": [5, 141, 147, 321], "everi": [185, 316, 317, 319], "ex": [104, 106, 224, 266, 268, 270, 271, 283, 284, 285, 294, 315], "ex_0": 315, "ex_1": 315, "ex_n": 315, "exact": [84, 319], "exact_h": [207, 208, 210], "exactli": [198, 207, 208, 210, 234, 235, 241, 256, 257, 258, 259, 268, 316, 319], "examin": 315, "exampl": [2, 4, 5, 6, 7, 9, 11, 84, 89, 96, 101, 120, 139, 140, 143, 146, 148, 149, 150, 151, 152, 158, 162, 165, 167, 170, 174, 202, 203, 205, 206, 209, 212, 213, 247, 248, 250, 268, 269, 280, 281, 304, 305, 307, 308, 311, 312, 314, 315, 317, 319, 320], "example_func": 305, "except": [280, 311], "exclus": 53, "exculd": [278, 282, 285], "execut": [4, 9, 11, 312], "exist": [26, 53, 73, 111, 144, 269, 302, 310, 311, 314, 316, 319], "expand": 316, "expans": 1, "expect": 81, "expens": 149, "experiment": 81, "explain": [193, 311], "explan": 313, "explicitli": [63, 293], "explor": 1, "expos": [104, 109, 141, 147, 310], "express": [152, 158, 162, 165, 167], "extend": [311, 314, 316], "extens": [75, 145, 304, 311], "exterior": [85, 86, 87, 88, 89], "extern": [311, 321], "extract": [13, 25, 85, 87, 89, 94, 95, 98, 99, 100, 102, 105, 106, 109, 113, 114, 116, 118, 119, 284, 311, 314], "extrud": [7, 205, 210], "extrus": 206, "ezproxi": 309, "f": [6, 18, 33, 84, 146, 148, 149, 152, 158, 162, 165, 167, 172, 185, 190, 191, 192, 231, 234, 235, 247, 248, 250, 255, 256, 257, 258, 259, 305, 309, 315, 321], "f1": [154, 160, 176], "f2": [154, 160, 176], "face": [20, 26, 33, 34, 35, 41, 91, 92, 93, 95, 96, 100, 101, 104, 105, 114, 119, 120, 185, 218, 220, 222, 224, 264, 269, 273, 279, 289, 298, 301], "face2nodenorm": [44, 45, 122, 127, 128], "face2uniqu": 105, "face_alpha": [295, 298], "facecent": 185, "faceconn": [105, 301, 317], "faceelem": 105, "faceelemconn": [301, 317], "faces2surfac": 105, "faces2uniqu": 301, "faceset": [20, 26, 56], "facet": 309, "facilit": 317, "factor": [26, 64, 97, 140, 143, 144, 178, 179, 180, 185], "fail": [73, 282], "fall": [314, 320], "fals": [2, 53, 61, 64, 68, 85, 86, 87, 88, 89, 91, 92, 93, 97, 104, 105, 106, 107, 110, 125, 138, 141, 143, 146, 147, 183, 184, 185, 186, 187, 189, 191, 196, 207, 208, 210, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 231, 232, 234, 235, 237, 239, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 266, 267, 268, 274, 280, 281, 282, 285, 298, 302, 308], "famou": 314, "fan": 134, "far": [191, 316], "faraj": [191, 309], "fast": [231, 247, 248, 250, 255, 256, 257, 258, 259, 309], "faster": [247, 248, 250], "featur": [81, 141, 147, 183, 184, 186, 187, 188, 190, 191, 269, 284, 302, 308, 309, 311, 315, 317, 319], "featureangl": [188, 190], "featurenod": 182, "featureweight": 182, "feb": 309, "fi": 222, "field": [163, 164, 191, 199, 309, 314], "fig": [2, 68, 302], "fig1": [2, 302], "fig2": [2, 302], "fig3": [2, 302], "fig4": 2, "figsiz": 302, "figur": 68, "file": [4, 9, 11, 20, 64, 70, 75, 97, 140, 141, 142, 143, 144, 145, 304, 306, 311, 312], "filenam": [75, 145], "filetyp": [75, 145, 307], "fill": [87, 88, 111, 277, 314], "fill_valu": 156, "fillval": 277, "final": [139, 203, 204, 205, 211, 212, 213, 320], "find": [1, 83, 185, 316, 317, 320], "finfo": [63, 293], "finit": [84, 135, 147, 302, 310], "finite_diff_step": 147, "first": [2, 63, 83, 112, 136, 144, 153, 159, 175, 188, 209, 226, 254, 256, 257, 261, 262, 263, 266, 275, 280, 286, 287, 293, 301, 302, 304, 308, 317, 319, 320], "fit": [122, 128], "fix": [26, 183, 184, 185, 186, 187, 188], "fixedg": [141, 147], "fixednod": [26, 141, 147, 182, 183, 184, 186, 187, 188], "fixednot": 185, "fixfeatur": [183, 184, 186, 187], "fixsurf": [183, 184, 186, 187], "flat": [204, 298], "fld979": 309, "flexibl": 303, "flip": [85, 86, 87, 88, 89, 189, 190, 318], "flippabl": 317, "float": [25, 26, 53, 63, 64, 65, 83, 84, 86, 88, 89, 97, 111, 123, 124, 125, 126, 130, 140, 141, 143, 144, 146, 147, 148, 150, 151, 170, 174, 178, 179, 180, 183, 184, 185, 186, 187, 188, 190, 191, 192, 199, 202, 203, 205, 206, 207, 208, 209, 210, 211, 235, 237, 239, 246, 247, 248, 249, 250, 253, 254, 256, 257, 258, 259, 261, 262, 263, 267, 268, 269, 276, 278, 282, 283, 284, 285, 291, 293, 294, 298, 302], "flow": [141, 147], "fluid": [185, 309], "focu": [305, 311], "focus": 311, "follow": [134, 191, 206, 211, 275, 282, 298, 300, 301, 305, 308, 314, 315, 316, 320], "forc": [184, 185, 278, 282, 285, 321], "foreground": [125, 315], "form": [84, 134, 135, 146, 148, 149, 192, 193, 248, 250, 305, 310, 316, 317], "format": [20, 84, 144, 146, 148, 149, 185, 192, 196, 231, 234, 235, 247, 248, 250, 255, 256, 257, 258, 259, 304, 307], "former": 72, "formula": [121, 125, 309], "forum": 309, "forward": [302, 319], "found": [72, 197, 302, 316], "four": [104, 208, 314, 316], "fourier": [6, 309], "fourth": 261, "frac": [315, 320, 321], "fractur": 311, "frad": 157, "frame": 315, "fre97": [186, 309], "freder": 309, "free": 184, "freenod": 147, "freitag": 309, "fring": 311, "from": [1, 2, 4, 5, 6, 7, 9, 11, 13, 33, 37, 74, 85, 87, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 110, 112, 113, 114, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 141, 147, 174, 184, 185, 188, 191, 194, 195, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 221, 222, 223, 224, 227, 228, 229, 230, 235, 254, 264, 266, 267, 268, 271, 272, 275, 280, 281, 282, 285, 300, 301, 302, 304, 305, 307, 309, 310, 311, 312, 314, 315, 316, 317, 319], "ftb16": [191, 309], "ftetwild": 302, "full": [2, 5, 6, 7, 68, 74, 81, 125, 211, 225, 301, 308, 309, 310, 319], "fulli": [192, 286, 287], "fulltext": 309, "fun": 156, "func": [64, 84, 89, 121, 146, 147, 148, 149, 150, 151, 152, 158, 162, 165, 167, 170, 174, 178, 179, 180, 192, 302, 305], "func1": 302, "func2": 302, "function": [2, 6, 13, 19, 63, 84, 89, 104, 108, 121, 140, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 186, 191, 192, 226, 237, 239, 266, 293, 302, 303, 304, 306, 307, 308, 311, 314, 315], "function2octre": [84, 319], "fund": 311, "fundament": 309, "further": [16, 192, 311, 319], "furthest": 316, "fusilli": 7, "futur": 16, "fval": [166, 171], "fval1": [153, 159, 175], "fval2": [153, 159, 175], "fx_0y_0": 315, "fx_1y_1": 315, "fx_ny_n": 315, "fxy": 315, "fy": 315, "g": [2, 37, 85, 87, 144, 145, 188, 191, 205, 231, 234, 235, 236, 247, 248, 250, 255, 256, 257, 258, 259, 301, 302, 304, 309, 310, 311, 315], "galleri": [2, 5, 6, 7, 10, 312], "gamma": [261, 262, 263, 278, 282], "gamma_0": 316, "gao": 309, "gap": 313, "gauss": 315, "gaussian": [61, 121, 124, 125, 141], "gaussian_filt": [125, 141], "gaussian_sigma": [64, 97, 125, 141], "gaussiancurvatur": 315, "gem": 309, "gener": [2, 5, 6, 7, 26, 63, 68, 74, 77, 84, 85, 86, 87, 88, 89, 96, 101, 107, 110, 111, 120, 127, 128, 134, 139, 140, 142, 143, 146, 148, 149, 163, 164, 191, 192, 194, 195, 199, 200, 202, 205, 207, 208, 209, 210, 212, 213, 237, 239, 242, 243, 246, 247, 248, 249, 250, 253, 270, 273, 278, 282, 285, 293, 294, 300, 302, 304, 305, 307, 308, 309], "genu": 305, "geometr": [96, 107, 120, 309, 315, 316], "geometri": [84, 146, 148, 149, 192, 206, 268, 269, 305, 309, 310], "geq": 320, "get": [45, 88, 141, 206, 211, 225, 289, 311], "get_arrai": 302, "get_imag": 302, "getelemconnect": 108, "getelemneighbor": 286, "getnodeneighbor": [122, 127, 128, 286, 287, 289, 308], "getthem": 298, "gi04": [122, 127, 128, 309, 315], "gift": 135, "giftwrap": 133, "github": 306, "give": [117, 290, 291, 315], "given": [64, 97, 139, 144, 145, 197, 205, 253, 270, 298], "gmsh": 311, "go": [2, 5, 6, 7, 185, 308], "goal": 308, "gol05": [121, 125, 309, 315], "goldfeath": [122, 127, 128, 309, 315], "goldman": [121, 125, 309, 315], "gomiti": 7, "gpu": 1, "grad": [84, 192], "gradient": [84, 125, 141, 147, 157, 319], "grant": 311, "graphic": [256, 257, 258, 259, 302, 309, 310], "grayscal": [86, 88, 125, 298], "greater": [64, 85, 86, 87, 88, 89, 97, 140, 143, 144, 191, 267, 278, 282, 285, 315], "grid": [84, 85, 87, 89, 96, 117, 125, 148, 156, 157, 163, 164, 202, 208, 210, 269, 302, 308, 309, 310, 314], "grid2d": 87, "grid2fun": 125, "grit": 309, "group": [90, 281, 286, 287], "growth": 311, "guarante": 101, "guid": [1, 15, 192, 311], "gutierrez": 311, "gy": 315, "gy_0": 315, "gy_1": 315, "gy_n": 315, "gyroid": [6, 140, 146, 148, 149, 269], "h": [5, 6, 86, 88, 111, 140, 141, 142, 143, 146, 147, 148, 149, 188, 190, 191, 202, 207, 208, 209, 210, 231, 234, 235, 247, 248, 250, 255, 256, 257, 258, 259, 309, 315], "h_node": 191, "ha": [5, 38, 63, 73, 89, 104, 105, 108, 247, 248, 250, 266, 270, 293, 300, 307, 311, 314, 316, 317, 320], "half": [205, 212, 301, 316, 317], "halt": 192, "handl": [5, 63, 84, 86, 88, 125, 154, 160, 172, 176, 250, 293, 303, 316], "hang": 309, "harvei": 309, "hash": 317, "hasn": 108, "hat": 315, "have": [1, 2, 83, 89, 107, 188, 224, 231, 235, 243, 248, 250, 258, 259, 266, 267, 271, 300, 301, 304, 308, 314, 315, 316], "haven": [39, 41], "health": 311, "heap": 188, "hear": 1, "heart": [8, 9, 10, 312], "heavili": 1, "height": [205, 294], "held": [26, 183, 184, 185, 186, 187, 188], "help": 313, "here": [302, 313, 315, 316, 317], "hex": [90, 101, 104, 205, 207, 212, 266, 298], "hexahedr": [85, 94, 95, 96, 193, 194, 206, 207, 211, 216, 223, 241, 270, 271, 294, 310, 311], "hexahedra": [85, 193, 310], "hexahedron": [63, 293, 303], "hexconn": 96, "hexcoord": 96, "hi": 191, "hide": 298, "hierarch": 319, "high": [2, 302, 309], "higher": [186, 319], "highli": [122, 127, 128], "highlight": [10, 311], "hip": 311, "hner": 309, "hol10": [193, 309], "hold": [68, 141, 147, 184], "holder": 311, "holmlid": 309, "home": 2, "how": [2, 7, 38, 86, 88, 266, 311, 313, 315, 316], "howev": [26, 52, 125, 139, 188, 302, 303, 314, 316], "hsw": [302, 309], "html": 309, "http": [26, 82, 132, 135, 137, 231, 242, 243, 247, 248, 250, 255, 256, 257, 258, 259, 309], "hu": 309, "hugh": 309, "hull": [134, 135, 138], "hx": [86, 97, 140, 143], "hy": [86, 97, 140, 143], "hyperbol": 315, "hz": [86, 97, 140, 143], "hzg": [191, 309], "i": [1, 2, 6, 18, 20, 25, 26, 29, 33, 36, 37, 38, 48, 53, 63, 64, 68, 72, 73, 81, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 104, 105, 107, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 125, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 155, 159, 160, 161, 171, 172, 174, 175, 176, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 198, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 221, 222, 223, 226, 231, 232, 234, 235, 236, 237, 239, 241, 242, 243, 247, 248, 249, 250, 253, 255, 256, 257, 258, 259, 266, 268, 269, 270, 271, 272, 273, 276, 278, 279, 280, 281, 282, 285, 286, 287, 289, 292, 293, 294, 298, 301, 302, 303, 304, 306, 307, 308, 311, 313, 314, 315, 316, 317, 319, 320, 321], "id": [20, 22, 26, 51, 89, 92, 106, 107, 110, 199, 224, 254, 266, 278, 279, 282], "idea": 313, "ident": [302, 308], "identif": [135, 302], "identifi": [5, 63, 65, 92, 183, 184, 186, 187, 188, 190, 191, 244, 246, 249, 253, 254, 269, 286, 287, 293, 316, 317], "identify_typ": [20, 214], "idx": [91, 93, 266, 268, 280, 281], "ignor": [136, 139, 148], "ij": 321, "im2voxel": [64, 125], "imag": [1, 2, 13, 64, 86, 88, 97, 117, 125, 298, 302, 306, 309, 310, 314, 315], "img": [64, 97, 140, 141, 142, 143, 144], "img_data": 298, "impath": 145, "imperfect": 302, "implement": [16, 25, 84, 192, 193, 289, 311, 313, 316], "implicit": [1, 2, 6, 8, 9, 10, 13, 84, 89, 121, 125, 140, 142, 143, 192, 269, 308, 309, 312, 314, 315], "implicitli": 305, "import": [2, 5, 6, 7, 81, 125, 307, 313, 315, 316], "improv": [1, 5, 16, 26, 278, 282, 285, 302, 311], "imshow": 302, "inaccur": 315, "inact": 317, "incircl": 316, "inclu": [256, 257, 258, 259], "includ": [6, 194, 196, 198, 241, 273, 280, 286, 290, 304, 305, 307, 309, 310, 311, 314, 315, 319], "includecollinear": [133, 135], "inclus": [53, 198, 236, 238, 240, 241, 316], "inconsequenti": 320, "increment": 316, "independ": [60, 315, 316], "index": [26, 61, 104, 105, 278, 279, 301, 314], "indic": [25, 29, 36, 53, 91, 93, 104, 105, 110, 129, 130, 134, 135, 137, 139, 146, 148, 188, 190, 207, 246, 248, 249, 253, 266, 268, 280, 281, 282, 289, 301, 303, 310, 316], "individu": 1, "inf": [278, 282, 285], "infer": [303, 317], "infinit": 316, "influenc": [33, 60], "info": [27, 28, 30, 31, 34, 35, 43], "inform": [2, 20, 135, 188, 190, 311, 315, 317], "infti": 78, "inher": [191, 315], "initi": [89, 183, 185, 186, 187, 206, 211, 302, 311], "inner": 20, "inp": [70, 307], "inplac": [53, 141, 147, 186], "input": [5, 82, 84, 85, 86, 87, 88, 89, 96, 101, 112, 120, 141, 144, 145, 146, 153, 154, 155, 160, 172, 176, 186, 191, 206, 211, 225, 266, 272, 274, 277, 304, 305, 308], "insid": [18, 25, 53, 85, 86, 87, 88, 89, 111, 140, 141, 142, 143, 146, 148, 149, 153, 154, 155, 159, 160, 161, 175, 176, 177, 193, 236, 237, 239, 241, 305, 314, 315, 316], "inspir": [191, 311, 314], "instal": 137, "instanc": 308, "instead": [140, 142, 143, 145, 146, 148, 149, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 273, 320], "institut": [309, 311], "instruct": 306, "int": [25, 26, 53, 64, 84, 85, 86, 87, 88, 89, 97, 125, 140, 141, 143, 144, 147, 178, 179, 180, 183, 184, 186, 187, 188, 190, 192, 195, 199, 203, 204, 205, 206, 209, 211, 212, 213, 271, 272, 277, 282, 285, 290, 298], "int16": 145, "integ": [140, 142, 143, 146, 148, 149, 203, 204], "intellig": 309, "intend": [302, 311, 313], "intens": [64, 97], "interact": [74, 298, 309], "interc": 315, "interesect": 253, "interest": [6, 315, 319], "interfac": [16, 83, 137, 139, 186, 188, 190, 191, 302, 311], "interfer": 316, "interior": [85, 86, 87, 88, 89, 109, 183, 184, 186, 187, 188, 310, 316], "intermedi": 308, "intern": [141, 147, 185, 226, 309], "interpol": [1, 2, 64, 85, 86, 87, 88, 89, 97, 140, 141, 142, 143, 144, 146, 148, 156, 157, 192, 282, 314, 319], "interpret": [316, 317], "interrant": [122, 127, 128, 309, 315], "intersect": [82, 83, 160, 231, 232, 234, 235, 237, 239, 242, 243, 244, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 302, 305, 309, 311, 316, 319], "intersection_fun": 160, "intersection_leav": 244, "intersection_v": 159, "intersectionf": 302, "intersectionpair": 253, "intersectionpoint": [253, 254], "intersectionpt": [246, 247, 248, 249, 259], "intins": 315, "introduc": [2, 302], "intuit": 315, "inv": [91, 93, 110, 268, 280, 281], "invalid": [2, 96, 101, 107, 120, 316], "invari": 309, "invers": [2, 62, 141, 147, 184, 216, 217, 314], "inverseorthogon": [62, 78], "inverseorthogonalqu": [62, 78, 221], "invert": [73, 188, 317], "involv": [1, 302, 316], "iortho": 217, "iorthoq": 216, "ipynb": [2, 5, 6, 7], "irregular": 2, "irrelev": 184, "isn": [146, 321], "iso": 298, "isocontour": 87, "isolin": [87, 314], "isometr": 298, "isosurfac": [13, 18, 25, 85, 86, 87, 88, 89, 121, 140, 141, 142, 146, 147, 148, 166, 171, 192, 309, 314, 315], "isotrop": [86, 88, 200], "isovalu": [84, 87, 140, 142, 143, 146, 148, 149, 314], "iss": 309, "issu": [73, 316], "iter": [2, 141, 147, 183, 184, 186, 187, 188, 189, 190, 273, 321], "itertool": 250, "its": [20, 96, 101, 107, 120, 183, 186, 187, 278, 308, 316, 317, 319, 321], "itself": [315, 320], "j": [123, 129, 130, 185, 309, 321], "jack": 309, "jacobson": 309, "jan": 309, "jarvi": 135, "jean": 309, "jm24": [6, 309, 311], "joe": 309, "john": 309, "join": 302, "jonathan": [16, 137, 309], "jonathon": 139, "josephson": [1, 309, 311], "joshua": 311, "journal": [185, 256, 257, 258, 259, 309, 316], "jpeg": 145, "jpg": 304, "jul": 309, "jule": 309, "jupyt": [2, 5, 6, 7], "jupyter_rfb": 306, "just": [143, 203, 204], "k": [185, 242, 243, 309, 315], "k1a_smooth": 2, "k1a_spher": 2, "k1m_smooth": 2, "k1m_sphere": 2, "k2a_smooth": 2, "k2a_spher": 2, "k2m_smooth": 2, "k2m_sphere": 2, "k_": 321, "kappa_": 315, "kappa_1": [2, 315], "kappa_2": [2, 315], "keep": [24, 53, 72, 84, 140, 142, 143, 146, 148, 149, 184, 308], "kei": [26, 190, 311, 316, 317], "keith": 309, "kept": [111, 149, 266], "kernel": 141, "keyword": [146, 148, 149], "kf": 185, "know": 316, "known": 6, "koenderink": [123, 129, 130, 309], "ku": 185, "kvd92": [123, 129, 130, 309, 315], "kwarg": [68, 74, 146, 148, 149, 192], "l": [26, 192, 309], "l0overrid": 185, "lab": 311, "label": [2, 186, 188, 190, 191, 302], "laidlaw": 309, "lambda": [6, 89], "lambdifi": [152, 158, 162, 165, 167], "laplacian": [2, 5, 141, 147, 183, 184, 186, 187, 309], "larg": [143, 184, 302], "larger": [186, 310, 317, 319], "largest": [183, 184, 186, 187, 316], "last": 280, "later": [26, 308], "layer": [26, 270, 271, 294, 309], "layerconn": 270, "layercoord": 270, "lc87": [85, 86, 309, 314], "lead": [302, 314, 315, 316], "leaf": [194, 197, 198, 201, 244, 319], "least": [289, 315, 316], "leav": [201, 205, 316], "lectur": 309, "left": [315, 320], "legend": 2, "len": [2, 117, 206, 253, 280, 282, 285], "length": [20, 140, 142, 143, 146, 148, 149, 185, 188, 190, 191, 215, 277, 280, 281, 298, 303], "leq": 320, "less": [18, 25, 63, 64, 85, 86, 87, 88, 89, 97, 140, 142, 143, 144, 146, 148, 149, 183, 184, 186, 187, 188, 192, 266, 269, 293, 315], "lessen": 313, "letter": 135, "level": [25, 85, 86, 87, 88, 89, 192, 193, 308, 319], "lexicograph": 304, "li": [316, 320], "lib": 309, "librari": [108, 309, 311], "lie": [2, 121, 141, 146, 147, 148, 205, 234, 235, 256, 257, 258, 259, 269, 317], "like": [96, 107, 120, 250, 311], "likewis": 317, "limit": [108, 236, 302, 311, 320], "line": [7, 20, 87, 88, 203, 204, 206, 211, 293, 298, 303, 314, 316], "line_color": 298, "line_width": 298, "linear": [85, 86, 87, 88, 89, 140, 141, 142, 146, 148, 156, 157, 185, 192, 315, 319], "link": [52, 309, 316, 319], "linspac": 206, "list": [20, 24, 26, 27, 28, 29, 30, 31, 34, 35, 36, 43, 62, 65, 68, 72, 74, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 134, 135, 139, 144, 146, 148, 149, 156, 157, 163, 164, 185, 192, 193, 196, 198, 199, 201, 202, 207, 208, 210, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 237, 239, 241, 242, 244, 246, 249, 254, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 298, 301, 308], "ller": 309, "load": [64, 304, 321], "local": [141, 147, 183, 184, 186, 187, 188, 190, 274, 315], "locallaplaciansmooth": 5, "locat": [18, 183, 184, 186, 187, 266, 268, 279], "lock": 308, "log": 2, "long": [6, 205], "longer": 319, "longest": [185, 215], "look": 315, "lookup": 314, "loop": [247, 248, 250], "loos": 311, "lorensen": [309, 314], "lori": 309, "loss": 302, "love": 1, "low": [2, 6, 302, 315], "lower": [53, 68, 150, 188, 231, 232, 236, 242, 243, 255, 308, 319, 320], "lth86": [302, 309], "lumetr": 310, "m": [25, 60, 62, 64, 66, 67, 70, 81, 141, 147, 163, 164, 168, 169, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 206, 211, 249, 253, 298, 305, 307, 308, 309, 321], "m1": [6, 302], "m2": [6, 302, 308], "m3": 6, "m4": 6, "macaroni": 7, "machin": [63, 293], "made": 310, "magnitud": [125, 315], "mai": [52, 81, 96, 101, 107, 120, 145, 146, 148, 149, 184, 188, 193, 207, 208, 210, 211, 285, 301, 302, 305, 315, 317, 320], "main": [310, 314], "maintain": 1, "major": [174, 213, 302, 305], "make": [20, 207, 208, 210, 308, 311, 315], "mani": [19, 38, 63, 247, 248, 250, 293, 303, 308, 315], "manifold": [237, 239, 309], "manipul": [300, 311], "manufactur": 310, "map": [1, 278, 282, 285], "mappingmatrix": [278, 282, 285], "marc": 309, "march": [2, 84, 85, 86, 87, 88, 89, 140, 146, 148, 309], "marchingcub": [140, 146, 314], "marchingcubesimag": [125, 140, 146], "marchingsquar": 314, "marchingtetrahedra": [140, 146, 314], "mark": [316, 319], "marti": 311, "masknan": 2, "mat": 274, "match": [188, 191, 272], "materi": [188, 191, 309], "mathbf": 315, "mathemat": [305, 309], "matplotlib": [2, 68, 306], "matric": 185, "matrix": [86, 88, 117, 144, 274, 282, 285, 315, 320], "matter": [153, 154, 155, 237, 239, 309], "max": [61, 62, 185, 215, 216, 217, 218, 220, 221, 222, 223, 225, 320], "maxangl": 218, "maxdepth": [84, 192, 195, 199], "maxdihedr": [62, 226], "maximum": [26, 68, 84, 121, 122, 123, 124, 125, 126, 127, 128, 130, 146, 148, 149, 153, 154, 159, 160, 183, 184, 186, 187, 188, 190, 192, 195, 199, 216, 218, 315, 319], "maxit": [183, 184, 186, 187, 188], "maxprincip": [121, 122, 123, 124, 125, 126, 127, 128, 130], "mb": [4, 9, 11, 312], "mc": [84, 140, 146, 148], "mc33": [84, 140, 146], "me": 1, "mean": [2, 6, 60, 61, 62, 121, 125, 126, 186, 215, 216, 217, 218, 220, 221, 222, 223, 225, 308, 316, 317, 320], "meancurvatur": 315, "meaning": 125, "meanratio": [62, 78, 186], "measur": [6, 78, 315, 319], "mechan": 309, "mechanobiolog": [309, 311], "mechanobiologi": [1, 309, 311], "meet": [256, 257, 258, 259, 317], "mem": [4, 9, 11, 312], "memori": 317, "merg": [275, 294], "mergedconn": 275, "mergedcoord": 275, "mergedv": 275, "mergemesh": 294, "mesh": [1, 2, 5, 7, 12, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 127, 128, 140, 141, 142, 143, 146, 147, 148, 149, 156, 157, 163, 164, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 224, 225, 227, 228, 229, 230, 237, 239, 241, 246, 249, 253, 254, 264, 266, 267, 268, 269, 270, 271, 275, 276, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 300, 301, 302, 303, 306, 309, 313, 316, 317, 321], "mesh2": 65, "mesh2sdf": 1, "meshanalysi": [4, 312], "meshboolean": 302, "meshgener": [9, 312], "meshio": [66, 67, 70, 75, 306, 307, 311], "meshio2mymesh": 307, "meshpi": 311, "met": [195, 199], "meth": 65, "method": [2, 7, 8, 10, 16, 24, 25, 44, 45, 76, 84, 85, 86, 87, 88, 89, 96, 101, 107, 120, 125, 133, 139, 140, 141, 142, 146, 147, 148, 156, 157, 163, 183, 185, 186, 187, 191, 193, 223, 227, 229, 238, 240, 273, 286, 302, 307, 308, 309, 310, 314, 315, 321], "metric": [61, 62], "micro": 311, "middl": 5, "midpoint": [85, 86, 87, 88, 89, 115, 140, 142, 146, 148, 191, 314], "might": 300, "min": [61, 62, 185, 186, 189, 215, 216, 217, 218, 220, 221, 222, 223, 225, 282, 285, 320], "minangl": 220, "mind": 315, "mindepth": [84, 192], "mindihedr": [62, 226], "minim": [6, 63, 152, 158, 162, 165, 167, 293, 317], "minimum": [68, 84, 121, 122, 123, 124, 125, 126, 127, 128, 130, 146, 148, 149, 155, 161, 175, 176, 177, 186, 192, 199, 220, 222, 247, 248, 250, 274, 309, 315], "minor": [174, 213], "minprincip": [121, 122, 123, 124, 125, 126, 127, 128, 130], "minsiz": 199, "minut": [2, 5, 6, 7], "mirror": 276, "mirroredconn": 276, "mirroredcoord": 276, "mislabel": [63, 293], "mix": [8, 9, 10, 20, 89, 90, 104, 292, 303, 311, 312, 314], "mixed_el": [89, 146], "mixed_topology1": 6, "mixed_topology2": 6, "mixed_topology3": 6, "mixed_topology4": 6, "mm": 2, "mnew": [183, 184, 186, 187, 188, 190, 191], "mode": [53, 86, 88, 111, 125, 149, 194, 286, 289, 298, 308], "model": [302, 309, 311], "modif": 308, "modifi": [53, 186, 188, 302, 304, 308, 317], "modul": [1, 6, 16, 18, 300, 301, 307, 308], "mohebi": 311, "moller97": [256, 257, 258, 259, 309], "mollert05": [247, 248, 250, 309, 320], "more": [1, 2, 5, 27, 28, 30, 31, 34, 35, 43, 44, 45, 64, 81, 97, 140, 141, 143, 144, 147, 188, 190, 247, 248, 250, 266, 273, 302, 305, 307, 310, 311, 313, 321], "morgan": [309, 311], "morlei": [242, 243, 309], "moscow": 309, "most": [2, 63, 108, 188, 273, 286, 287, 292, 293, 298, 301, 309, 310, 311, 313, 314, 315, 316, 319], "mostvis": 273, "mostvisible_it": 273, "mostvisible_loop": 273, "movabl": 147, "move": [2, 141, 146, 147, 148, 183, 184, 186, 187, 191, 286, 308, 316], "movement": [183, 184, 186, 187], "mt": [84, 140, 146], "much": [2, 247, 248, 250, 302, 320], "multi": [285, 304, 309], "multichannel": [144, 145, 304], "multipl": [6, 65, 91, 104, 188, 190, 231, 247, 248, 250, 285, 301, 305, 308, 314], "must": [26, 53, 64, 83, 89, 97, 111, 137, 139, 140, 141, 143, 144, 146, 148, 184, 185, 188, 191, 199, 205, 250, 266, 304, 314, 316, 320], "mx3": [131, 132, 136, 137], "my": 1, "mymesh": [1, 2, 5, 6, 7, 10, 302, 303, 305, 306, 307, 308, 310, 313, 316], "mymesh2meshio": [81, 307], "m\u00f6ller": [231, 247, 248, 250, 255, 256, 257, 258, 259, 320], "n": [7, 11, 90, 104, 136, 139, 178, 179, 180, 184, 209, 231, 235, 239, 241, 243, 248, 250, 253, 258, 259, 290, 309, 315, 316], "n0": 104, "n1": [104, 106], "n2": [104, 106], "n3": 106, "n4": 106, "n5": 106, "n_i": 321, "name": [20, 26, 72, 75, 145, 298, 299, 300, 304, 310], "nan": [44, 253], "nation": 311, "natur": [313, 316, 319], "ndarrai": [64, 84, 85, 86, 87, 88, 89, 91, 93, 96, 97, 101, 110, 111, 112, 115, 117, 120, 121, 122, 125, 127, 128, 131, 132, 134, 135, 136, 137, 140, 141, 142, 143, 144, 152, 153, 158, 159, 162, 165, 166, 167, 171, 175, 177, 184, 193, 194, 198, 210, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 235, 243, 246, 247, 248, 249, 253, 258, 259, 260, 262, 266, 268, 272, 274, 277, 278, 280, 281, 298], "ndimag": [64, 97, 125, 140, 141, 143, 144], "nearbi": 188, "necessari": [26, 125, 192, 316, 320, 321], "necessarili": [101, 107], "need": [108, 185, 247, 248, 250, 285, 302, 306, 308, 313, 314, 316, 317, 319], "neg": [25, 140, 142, 143, 146, 148, 149, 153, 154, 155, 159, 160, 161, 175, 176, 177, 178, 179, 180, 205, 315, 316], "neglect": 112, "neighbor": [5, 31, 43, 50, 96, 101, 107, 120, 122, 127, 128, 183, 185, 186, 187, 222, 224, 286, 287, 289, 290, 291, 292, 301, 316, 317, 321], "neighborhood": [188, 290, 291, 315], "neilesh": 311, "neither": 209, "nelem": [63, 188, 190, 191, 293], "nesper": 309, "net": 321, "network": [26, 321], "never": 317, "nevertheless": 6, "new": [7, 85, 86, 87, 88, 89, 96, 101, 103, 107, 110, 115, 120, 183, 184, 186, 187, 188, 191, 266, 268, 270, 279, 280, 302, 308, 314, 316], "newconn": [85, 86, 87, 88, 266, 268, 279], "newcoord": [85, 86, 87, 88, 96, 101, 120, 268, 279], "newedg": 54, "newfac": 56, "newid": 279, "newli": 316, "newnodeconn": 55, "newnodecoord": 57, "newvalu": 89, "next": [192, 316, 319], "nface": 295, "ni": 226, "nine": 129, "nj": 226, "nlayer": [26, 271], "nnode": 269, "nodal": [6, 25, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 122, 127, 128, 134, 156, 157, 185, 193, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 227, 228, 229, 230, 264, 265, 267, 268, 269, 270, 271, 273, 275, 276, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 309], "node": [2, 5, 20, 21, 22, 26, 29, 30, 33, 36, 38, 42, 43, 44, 45, 48, 49, 50, 51, 53, 63, 64, 65, 67, 73, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 132, 136, 137, 139, 141, 143, 147, 149, 156, 157, 163, 164, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 237, 239, 241, 244, 246, 249, 253, 254, 261, 262, 263, 266, 268, 269, 270, 271, 273, 275, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 301, 303, 308, 310, 314, 315, 316, 317, 319], "nodeconn": [2, 20, 48, 52, 58, 63, 73, 84, 85, 87, 89, 90, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 113, 114, 116, 118, 119, 120, 131, 132, 134, 136, 137, 140, 142, 143, 146, 148, 149, 182, 185, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 228, 229, 230, 265, 266, 267, 268, 271, 273, 276, 279, 283, 286, 287, 288, 289, 290, 291, 292, 293, 301, 308, 310], "nodeconn1": 275, "nodeconn2": 275, "nodecoord": [2, 20, 52, 69, 73, 84, 85, 87, 89, 90, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 125, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 146, 148, 149, 182, 185, 199, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 228, 229, 230, 233, 237, 239, 246, 249, 253, 264, 265, 266, 267, 268, 269, 271, 273, 276, 278, 279, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 301, 302, 308, 310], "nodecoords1": [254, 275, 282, 285], "nodecoords2": [254, 275, 282, 285], "nodedata": [20, 25, 53, 64, 97, 143, 149, 298, 302], "nodeneighbor": [2, 122, 127, 128, 185, 287, 292, 301, 308], "nodeneighborhood": [122, 290, 291], "nodenorm": [2, 108, 122, 127, 128, 273], "nodenormalsmethod": 44, "noderegion": 287, "nodeset": [20, 57], "nodespringsmooth": [141, 147, 321], "nodev": [157, 163, 164, 275], "nodevals1": [275, 285], "nodevals2": [275, 285], "nodevalu": [85, 87, 89], "non": [44, 63, 73, 105, 139, 184, 185, 188, 191, 207, 208, 210, 273, 293, 301, 314, 315, 316, 317], "nondelaunai": 139, "none": [20, 24, 25, 26, 53, 54, 55, 56, 57, 62, 64, 68, 72, 84, 97, 108, 111, 125, 137, 138, 139, 140, 142, 143, 145, 146, 147, 148, 156, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 197, 199, 203, 204, 205, 206, 209, 211, 212, 213, 214, 229, 231, 237, 239, 246, 249, 253, 255, 272, 276, 278, 279, 282, 285, 286, 287, 289, 294, 295, 298], "nonetyp": [24, 26, 62, 72, 147, 184, 190, 197, 239, 246, 249, 298], "nor": 209, "nord": 311, "norm": 209, "normal": [24, 32, 44, 45, 108, 122, 127, 128, 141, 147, 178, 179, 180, 210, 222, 224, 226, 231, 232, 233, 234, 235, 237, 239, 255, 264, 273, 278, 308, 309, 315, 317], "notabl": 311, "note": [62, 90, 96, 101, 104, 107, 108, 120, 153, 154, 155, 202, 209, 212, 270, 282, 285, 289, 302, 309, 316, 317], "notebook": [2, 5, 6, 7], "notion": 315, "notrim": 149, "noura": 309, "nov": 311, "novel": 309, "now": 315, "np": [2, 6, 7, 44, 63, 64, 84, 85, 86, 87, 88, 89, 91, 93, 96, 97, 101, 110, 111, 112, 115, 117, 120, 121, 122, 125, 127, 128, 131, 132, 134, 135, 136, 137, 140, 141, 142, 143, 144, 152, 153, 158, 159, 162, 165, 166, 167, 171, 175, 177, 184, 193, 194, 198, 206, 210, 211, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 237, 239, 243, 246, 247, 248, 249, 250, 253, 255, 256, 257, 258, 259, 260, 262, 266, 268, 269, 272, 274, 277, 278, 280, 281, 282, 285, 293, 298], "npt": [282, 285], "nring": [61, 290], "numba": 306, "number": [20, 26, 33, 38, 39, 40, 41, 42, 90, 104, 112, 141, 147, 183, 184, 186, 187, 188, 190, 191, 203, 204, 205, 209, 212, 213, 223, 266, 271, 281, 282, 285, 290, 298, 301, 303, 306, 308, 316, 321], "numer": [185, 309], "numpi": [1, 2, 6, 7, 85, 86, 87, 88, 91, 93, 97, 144, 145, 146, 148, 149, 152, 158, 162, 165, 167, 192, 272, 277, 298, 304, 305, 306], "nvidia": 1, "nx2": [20, 131], "nx3": [20, 122, 127, 128, 131, 132, 184, 195, 199, 246, 249, 260, 274], "nx4": 278, "o": [306, 309, 320], "o_x": 320, "ob01": [141, 147, 309], "obj": 307, "object": [52, 62, 63, 64, 66, 67, 70, 82, 84, 125, 140, 141, 142, 143, 146, 147, 148, 149, 163, 164, 183, 184, 186, 187, 192, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 284, 293, 298, 302, 305, 307, 308, 309, 311, 315], "obp03": [187, 309], "observ": 6, "obtain": [84, 86, 87, 91, 92, 93, 108, 122, 127, 128, 141, 147, 153, 154, 155, 159, 160, 161, 175, 176, 177, 289, 301, 302, 304, 305, 310, 314, 315], "occur": [111, 125, 146, 320], "octre": [84, 111, 237, 239, 244, 246, 249, 250, 253, 278, 282, 285, 302], "octree2du": 84, "octree_ep": 84, "octree_strategi": 84, "octreenod": [111, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 237, 239, 244, 246, 249, 253, 278, 282, 285], "off": 317, "offer": [302, 305, 308], "offset": [171, 172, 211], "offset_v": 166, "often": [188, 191, 302, 314, 321], "ohtak": [147, 309], "old": [268, 279], "om": 304, "omit": 306, "onc": [266, 299, 316], "one": [24, 52, 60, 91, 93, 96, 101, 104, 105, 107, 120, 141, 183, 185, 186, 187, 195, 199, 231, 246, 247, 248, 249, 250, 282, 285, 289, 301, 308, 311, 314, 315, 316, 319], "ongo": 311, "onli": [24, 91, 93, 104, 105, 125, 136, 141, 144, 147, 183, 184, 185, 186, 187, 188, 191, 193, 194, 195, 199, 205, 209, 212, 213, 237, 239, 247, 248, 249, 250, 266, 267, 271, 282, 285, 289, 298, 299, 301, 304, 306, 315, 316, 317, 319, 320], "onlinelibrari": 309, "onto": [2, 278, 316, 320], "opac": 298, "opaqu": 298, "open": [205, 310, 315], "opencv": [304, 306], "oper": [20, 52, 144, 153, 154, 155, 188, 190, 268, 280, 301, 302, 305, 308, 311, 313, 314], "opposit": [25, 140, 142, 143, 146, 148, 149, 305, 314, 315, 316], "optim": [6, 26, 108, 141, 147, 215, 309, 311], "optimizetet": 26, "option": [1, 20, 24, 25, 26, 45, 53, 62, 64, 65, 68, 72, 73, 74, 75, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 101, 104, 105, 107, 108, 110, 111, 120, 125, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 229, 231, 235, 237, 239, 241, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 289, 292, 294, 298, 299], "optionalperpendicular": 212, "order": [64, 95, 97, 100, 108, 114, 117, 119, 134, 135, 140, 143, 144, 153, 154, 155, 190, 266, 268, 280, 281, 304, 309, 310, 314, 315, 316, 317, 320], "org": [26, 82, 132, 135, 137, 231, 242, 243, 247, 248, 250, 255, 256, 257, 258, 259, 309], "organ": 300, "orient": [96, 101, 107, 120, 174, 210, 298, 301, 315, 316], "origin": [1, 60, 85, 86, 89, 91, 93, 106, 107, 110, 141, 147, 188, 191, 266, 268, 280, 281, 308, 311, 313, 320], "ortho": 222, "orthogon": [62, 78, 216, 217, 221], "orthogonalqu": [62, 78], "orthopaed": 1, "orthoq": 221, "other": [20, 52, 60, 72, 101, 108, 141, 147, 171, 172, 188, 205, 225, 253, 266, 277, 300, 302, 305, 308, 311, 315, 316, 317, 320], "otherwis": [26, 53, 86, 89, 186, 188, 191, 194, 205, 206, 207, 208, 210, 211, 231, 232, 234, 235, 237, 239, 242, 243, 247, 255, 256, 258, 259, 304, 316], "oup": 309, "out": [53, 74, 272, 277, 280, 281], "outer": [310, 317], "output": [74, 111, 153, 154, 155, 159, 160, 161, 175, 176, 177, 272, 280, 281], "outsid": [18, 53, 95, 100, 114, 119, 237, 239, 264, 305, 314, 315], "outward": [315, 316], "over": [188, 206, 317], "overal": 316, "overdetermin": 315, "overhead": [63, 293], "overlap": [231, 255, 270, 309], "overrid": [145, 185], "overridden": [140, 146], "overview": 311, "p": [6, 167, 168, 169, 242, 243, 316], "p_": 316, "p_i": 316, "p_x": 316, "p_y": 316, "packag": [307, 308, 311], "pad": [86, 88, 125, 253, 272, 277], "page": 309, "pair": [226, 253, 258, 259, 317], "pairwis": 250, "pan": 298, "panozzo": 309, "paper": [316, 320], "paraboloid": 316, "param": 267, "paramet": [6, 20, 24, 25, 26, 53, 62, 64, 65, 66, 68, 70, 72, 75, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 239, 241, 242, 243, 244, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 298, 299, 315, 320], "parent": [96, 101, 107, 120, 319], "parentid": 89, "parsecolor": 298, "part": [104, 105, 316], "partial": [26, 193, 315], "particular": [311, 315], "particularli": [6, 302, 311], "partit": [314, 319], "pasko": 309, "pass": [53, 74, 146, 148, 149, 188, 190, 266, 304, 311, 319], "past": 286, "pasta": [8, 9, 10, 312], "path": [70, 140, 141, 142, 143, 144, 145, 306, 316], "pdf": [82, 132, 309], "peel": 271, "peelconn": 271, "peelcoord": 271, "peeledconn": 271, "peeledcoord": 271, "penn": 7, "per": [64, 97, 140, 143, 144, 301, 315], "perform": [1, 2, 5, 26, 62, 64, 85, 86, 87, 88, 89, 141, 144, 147, 148, 149, 183, 184, 186, 187, 188, 190, 273, 298, 301, 302, 317, 319, 320], "pergamon": 309, "perhap": 319, "period": [6, 152, 158, 162, 165, 167], "permit": 188, "perpendicular": [203, 204, 205], "peter": 309, "ph": 311, "phi_resolut": [212, 213], "physic": 309, "physik": 309, "pi": [7, 206, 211, 315], "pillow": 306, "pip": [137, 306], "pixel": [86, 88, 310], "place": [83, 84, 85, 86, 87, 88, 89, 115, 140, 141, 142, 146, 147, 148, 183, 184, 186, 187, 191, 193, 268, 314, 316], "placement": [2, 141, 147], "plan": 16, "planar": [63, 293], "plane": [24, 117, 135, 141, 147, 178, 179, 180, 187, 203, 204, 205, 232, 234, 235, 276, 298, 308, 310, 315], "pleas": 7, "plot": [2, 5, 6, 7, 74, 81, 84, 140, 146, 148, 149, 150, 151, 152, 158, 162, 165, 167, 170, 174, 202, 203, 205, 206, 207, 208, 209, 212, 213, 269, 298, 302, 308], "plt": [2, 302], "pm": 315, "pmatrix": 316, "png": [145, 304], "point": [6, 24, 110, 125, 129, 131, 132, 134, 135, 137, 141, 146, 148, 156, 157, 163, 164, 195, 197, 203, 204, 205, 209, 210, 211, 212, 213, 232, 234, 235, 236, 237, 239, 241, 242, 243, 244, 246, 247, 248, 249, 250, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 274, 278, 282, 285, 302, 305, 308, 310, 314, 315], "points2octre": 319, "pole": 213, "polygon": [90, 98, 104, 108, 309, 310, 316], "polyhedr": 309, "polyhedra": 310, "polyhedron": 317, "polytop": 309, "poor": 302, "popular": [316, 319], "posit": [25, 85, 86, 87, 88, 89, 117, 140, 141, 142, 143, 146, 147, 148, 149, 183, 184, 186, 187, 282, 315, 316, 320], "possibl": [63, 146, 148, 188, 190, 293, 314, 317], "possibli": 1, "potenti": [63, 270, 293, 317], "power": 311, "pp": 185, "practic": [94, 95, 98, 99, 100, 102, 113, 114, 116, 118, 119, 316], "pre": [77, 316], "preced": [72, 209], "precis": [63, 293], "precomput": [237, 239, 278, 282, 285], "predominantli": [203, 204], "prefer": 299, "prefix": 145, "prescrib": [166, 184], "present": [90, 104, 139, 188, 293, 298], "preserv": [188, 190, 191], "prevent": [33, 184], "previous": [45, 183, 186, 187, 246, 249, 316], "primal": 309, "primari": [20, 96, 107, 120], "primarili": [187, 226, 301, 302, 310], "primit": [6, 7, 85, 87, 89, 96, 269, 300, 302, 308], "princip": [2, 61, 121, 122, 123, 124, 125, 126, 127, 128, 130, 309], "print": [20, 62, 215, 216, 217, 218, 220, 221, 222, 223, 225, 282, 285], "priorit": 188, "problemat": 302, "proce": 320, "procedur": [26, 309, 316], "proceed": 309, "process": [135, 188, 302, 316, 319], "produc": [25, 205, 212, 285, 302, 304, 308], "progress": [188, 190, 191, 313], "project": [1, 137, 278, 282, 285, 311, 316, 320], "proper": [108, 304], "properli": [111, 317, 319], "properti": [21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 58, 69, 72, 96, 107, 120, 315], "propos": [192, 193, 314], "protanomali": 298, "provid": [1, 20, 53, 72, 89, 108, 111, 121, 125, 127, 128, 136, 139, 148, 184, 185, 186, 188, 191, 206, 207, 209, 229, 231, 239, 255, 275, 278, 282, 285, 286, 287, 307, 311, 313, 316], "pt": [24, 197, 210, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 261, 262, 263], "pt1": 209, "pt2": 209, "public": 309, "publish": [311, 316], "pure": [94, 95, 99, 100, 102, 113, 114, 116, 118, 119, 203, 204, 205, 206, 211, 212, 311], "purpos": [225, 306, 310, 313], "pv": 81, "pvmesh": 81, "py": [2, 4, 5, 6, 7, 9, 312], "pydicom": [304, 306], "pyglet": 299, "pymesh": 311, "pypi": 137, "pyplot": 2, "pyramid": [63, 90, 99, 100, 101, 104, 193, 211, 216, 223, 293, 294, 303], "pyramidconn": [101, 294], "pyramidcoord": [101, 294], "pyramidheight": 294, "python": [2, 5, 6, 7, 137, 304, 317], "pyvista": [81, 311], "qef": [192, 319], "qhull": 16, "qingnan": 309, "quad": [90, 101, 103, 104, 146, 202, 205, 208, 210, 211, 212, 213, 228, 266, 292, 303, 310], "quadfit": 315, "quadrat": [89, 128, 148, 192, 303, 319], "quadrilater": [63, 87, 89, 90, 95, 100, 102, 103, 104, 119, 202, 203, 204, 206, 208, 210, 213, 228, 293, 303, 314], "quak": 309, "qual": 62, "qualiti": [2, 5, 19, 62, 96, 107, 120, 186, 188, 190, 302, 306, 309, 311, 315, 317], "qualityfunc": 186, "qualitymetr": 189, "qualitys": 191, "qualitythreshold": 181, "queri": 317, "question": 1, "queue": 316, "quick": 308, "quit": 302, "r": [135, 141, 147, 153, 154, 155, 159, 160, 161, 174, 175, 176, 177, 213, 242, 243, 302, 305, 309, 320], "r1": 205, "r2": 205, "r_0": 320, "r_1": 320, "r_2": 320, "r_x": 320, "r_y": 320, "r_z": 320, "radial": [203, 204, 205, 212, 213], "radial_resolut": [203, 204, 205, 212, 213], "radian": [62, 206, 211], "radii": 205, "radiu": [2, 151, 170, 174, 203, 205, 212, 213, 291, 305, 316], "rag": [272, 277, 280, 281, 301], "rai": [302, 309, 319], "rainald": 309, "rais": [73, 306], "rand": [237, 239], "random": [63, 237, 239, 282, 285, 293], "randomli": 316, "rang": [146, 148, 216, 217, 221, 222, 223, 227, 228, 229, 230, 298, 315], "rare": [63, 293], "rather": [24, 75, 94, 95, 96, 98, 99, 100, 101, 102, 113, 114, 116, 118, 119, 120, 141, 143, 147, 193, 301, 302, 311, 314, 316, 317, 319], "ratio": [62, 215], "rayboxesintersect": 320, "rayboxintersect": 320, "rayssurfintersect": 250, "raystrianglesintersect": [247, 248, 320], "raytriangleintersect": [248, 250, 320], "raytrianglesintersect": [247, 250, 320], "re": [53, 268, 280, 281, 315, 316], "reach": [317, 319, 320], "read": [304, 307], "readabl": [70, 273, 311], "reader": 304, "real": [152, 158, 162, 165, 167], "reason": [6, 317], "recalcul": [185, 308, 317], "receiv": 44, "recogniz": 315, "recommend": [188, 191], "reconnect": 268, "reconstruct": 1, "record": 309, "recov": [280, 281], "rectangular": [202, 207, 208, 209, 253, 277, 301, 310], "rectilinear": [85, 87, 117], "red": [5, 301], "redistribut": [2, 141, 147, 184], "reduc": [91, 93, 141, 147, 186, 188, 266, 314], "redund": 317, "refer": [32, 60, 73, 89, 188, 191, 193, 298, 308, 311, 313, 315], "referenc": [33, 301, 308], "refin": [192, 199, 319], "regardless": [146, 302, 315], "region": [87, 188, 190, 191, 286, 287, 319], "regist": 1, "registr": 1, "regulargridinterpol": 141, "rel": [146, 148, 261, 262, 263, 282], "relabel": 279, "relat": [16, 76, 91, 93], "relev": [205, 212, 213, 289, 303, 316, 317], "reli": [302, 315, 319, 320], "relianc": 311, "remain": [6, 112, 268], "remesh": 309, "remov": [84, 86, 87, 88, 105, 140, 142, 143, 146, 147, 148, 149, 188, 191, 266, 268, 271, 272, 316, 317], "renumb": [188, 268, 275], "reorder": [280, 281], "repeat": [190, 302, 316, 319], "replac": 306, "report": 62, "reposit": [141, 147, 183, 186, 187, 321], "repositori": 306, "repres": [97, 232, 301, 305, 310, 317, 319], "represent": [6, 27, 28, 30, 31, 34, 35, 43, 52, 199, 200, 278, 282, 284, 285, 302, 317, 319], "request": 1, "requir": [89, 280, 289, 302, 306, 315, 317], "resampl": [64, 97, 140, 143, 144], "research": [1, 311], "resolut": [64, 97, 302, 309, 319], "resolv": 314, "respect": [86, 205, 213, 314, 315], "result": [2, 6, 83, 89, 96, 101, 107, 108, 120, 127, 128, 184, 203, 204, 207, 208, 210, 302, 315], "retriev": [197, 198, 201], "return": [5, 24, 25, 60, 62, 63, 64, 66, 67, 68, 70, 74, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 239, 241, 242, 243, 244, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 299, 302, 304, 305, 308], "return_anchor": [85, 87], "return_count": 91, "return_edgeconn": 104, "return_edgeelem": 104, "return_faceconn": 105, "return_faceelem": 105, "return_fig": [2, 68, 302], "return_gradi": [64, 97], "return_hul": 138, "return_id": [92, 107, 110], "return_idx": [91, 93, 266, 268, 280, 281], "return_imag": 298, "return_intersect": [245, 251, 252], "return_inv": [91, 93, 110, 268, 280, 281], "return_kf": 185, "return_mappingmatrix": 285, "return_matrix": 274, "return_nodedata": [64, 97, 143], "return_nodevalu": 89, "return_octre": [282, 285], "return_parentid": 89, "return_pt": [253, 254], "return_separ": 280, "return_surfelem": 106, "revers": [268, 280], "revolut": [211, 213], "revolv": 7, "rewritten": 90, "rfboutputcontext": [2, 5, 6, 7], "rgb": [144, 145, 304], "rgba": [145, 298, 304], "rho": 181, "richard": 309, "ridg": [5, 129], "right": [298, 315, 320], "ring": [290, 315], "risk": [141, 147], "rmax": [153, 154, 155, 159, 160, 161], "rmin": [175, 176, 177], "rmsd": 2, "rmsd_k1a_smooth": 2, "rmsd_k1a_spher": 2, "rmsd_k1m_smooth": 2, "rmsd_k1m_sphere": 2, "robust": [19, 242, 243, 309], "romain": 309, "ron": [121, 125, 309], "root": [2, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 244, 306, 319], "rotat": [206, 211, 213, 274, 298, 314], "row": [20, 268, 280, 281, 282, 301], "rrner": 309, "rule": 308, "run": [2, 5, 6, 7, 140, 142, 143, 146, 148, 149, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 306], "runner": 2, "runtimewarn": 2, "russia": 309, "rut": 129, "s003660200006": [26, 309], "s00371": 309, "s1": [251, 252], "s10237": 309, "s2": [251, 252], "saddl": [129, 315], "same": [20, 48, 72, 101, 120, 147, 183, 186, 187, 266, 268, 300, 301, 308, 314, 316, 317, 319], "sampl": [63, 84, 121, 211, 212, 282, 285, 293, 304, 309, 319], "satisfi": 305, "save": 145, "scaffold": [309, 311], "scalar": [2, 20, 25, 53, 68, 84, 140, 142, 143, 146, 148, 149, 152, 153, 154, 158, 159, 160, 162, 165, 166, 167, 171, 172, 175, 176, 177, 191, 205, 206, 211, 212, 213, 269, 285, 295, 296, 298, 305, 308], "scalar_prefer": [53, 298], "scale": [64, 97, 129, 140, 143, 144, 178, 179, 180, 185, 309, 315], "scalefactor": [64, 97, 140, 142, 143, 144, 304], "scaleord": [64, 97, 140, 142, 143, 144], "scan": [311, 315], "scenario": [63, 293], "scf": 190, "schaefer": 309, "schedul": 190, "scheme": 112, "schneider": 309, "schnere": 309, "schwarz": [6, 152, 167], "scienc": 309, "scipi": [16, 64, 97, 125, 139, 140, 141, 143, 144, 185, 306], "scott": 309, "scratch": 311, "script": [2, 5, 6, 7], "se": 309, "search": [197, 198, 319], "second": [2, 5, 6, 7, 65, 83, 153, 159, 175, 191, 209, 226, 253, 254, 256, 257, 261, 262, 263, 302, 317], "section": [151, 205, 212, 213, 280, 313, 320], "see": [2, 15, 26, 27, 28, 30, 31, 34, 35, 43, 44, 45, 64, 65, 68, 74, 84, 89, 91, 93, 97, 125, 140, 141, 143, 144, 146, 147, 188, 190, 246, 247, 248, 249, 250, 292, 298, 301, 305, 307, 308, 314, 315, 316, 317, 319, 320, 321], "seen": 6, "segment": [87, 209, 245, 314], "select": [140, 146, 298, 299, 316], "self": 253, "sensit": [122, 127, 128], "sep": 309, "separ": [144, 188, 191, 280, 287, 308, 314], "sequenti": [183, 186, 187], "seri": [6, 309, 310], "serv": 313, "set": [6, 20, 26, 44, 45, 63, 85, 86, 87, 88, 89, 91, 93, 111, 125, 131, 132, 135, 141, 146, 147, 148, 153, 159, 175, 183, 184, 185, 186, 187, 188, 195, 235, 243, 248, 250, 258, 259, 260, 270, 274, 280, 286, 287, 292, 293, 294, 298, 299, 302, 308, 310, 316, 319], "set_axis_off": 302, "set_titl": [2, 302], "set_xtick": 2, "set_xticklabel": 2, "set_ylabel": 2, "set_ylim": 2, "set_yscal": 2, "seven": 315, "sever": [6, 16, 44, 300, 301, 302, 305, 306, 308, 310, 314, 317, 319], "shade": 298, "shadi": 311, "shape": [8, 9, 10, 61, 129, 130, 231, 235, 236, 237, 239, 241, 243, 244, 246, 248, 249, 250, 258, 259, 302, 309, 310, 312, 316], "shapeindex": [129, 315], "share": [91, 92, 93, 104, 256, 257, 258, 259, 289, 301, 317], "sharp": [302, 309], "she96": [309, 311], "shewchuk": [16, 137, 139, 309], "shi": 311, "shift": [7, 211], "shirlei": [242, 243, 309], "shortcom": 314, "shorter": 188, "shortest": [185, 215], "shoud": [64, 97], "should": [20, 26, 63, 64, 84, 86, 90, 96, 97, 101, 103, 120, 121, 134, 139, 140, 143, 146, 147, 148, 149, 154, 160, 172, 176, 192, 224, 228, 230, 231, 235, 241, 242, 243, 246, 247, 248, 249, 250, 258, 259, 273, 278, 282, 285, 293, 298, 300, 305, 311, 316], "shouldn": [237, 239], "show": [2, 68, 298, 301, 302, 313], "show_edg": [2, 84, 202, 203, 205, 206, 207, 208, 209, 212, 213, 298, 308], "show_empti": 196, "show_fac": 298, "shown": [298, 316, 317], "shrinkag": [141, 147], "si": 309, "si15": [309, 311], "sici": 309, "side": [24, 105, 140, 142, 143, 146, 148, 149, 234, 235, 317], "siggraph": [231, 242, 243, 247, 248, 250, 255, 309], "sigma_max": 181, "sigma_min": 181, "sign": [25, 140, 142, 143, 146, 148, 149, 163, 164, 166, 171, 172, 192, 315, 316, 320], "signific": [2, 143], "significantli": [247, 248, 250, 278, 282, 285], "similar": 314, "similarli": [308, 317], "simpl": [273, 302], "simplex": 89, "simplexmethod": 223, "simpli": [216, 266, 285, 316], "simul": [1, 298, 310], "simultan": [141, 147, 183, 186, 187], "sin": [152, 158, 162, 165, 167, 206], "sinc": [1, 302, 308, 314, 319, 321], "singl": [7, 53, 86, 88, 89, 96, 101, 120, 123, 124, 126, 130, 140, 142, 143, 144, 145, 146, 148, 149, 250, 286, 287, 304, 317, 319], "situat": 314, "six": [202, 207, 210], "size": [5, 6, 64, 86, 88, 97, 111, 125, 141, 147, 188, 190, 191, 192, 199, 202, 206, 207, 208, 209, 210, 211, 223, 286, 287, 294, 319], "skelet": 311, "skew": [62, 78, 122, 127, 128, 189, 216, 227, 228, 229, 230], "slice": [144, 280, 304], "slice0": 144, "slightli": [207, 208, 210, 247, 248, 250], "sliver": 223, "slow": 149, "slower": [273, 302], "small": [83, 147, 235, 237, 239, 246, 247, 248, 249, 250, 253, 254, 256, 257, 258, 259, 280, 306, 320, 321], "smaller": [199, 319], "smart": 186, "smartlaplaciansmooth": 190, "smooth": [2, 141, 147, 183, 184, 186, 187, 190, 298, 309, 318], "smooth_kwarg": 190, "smoother": 190, "smoothspher": 2, "snap": [146, 148], "snap2surf": [146, 148], "snapgrid2surf": [146, 148], "so": [52, 125, 144, 153, 154, 155, 186, 188, 308, 314, 316, 317, 319, 320], "societi": 309, "softwar": [308, 309, 311], "sohn": 309, "solid": [104, 105, 298, 309], "solid2edg": [90, 91, 94, 98, 99, 102, 109, 113, 116, 118, 292, 301], "solid2fac": [92, 93, 95, 100, 114, 119, 301], "solid2tet": [89, 96, 101, 120], "solv": [185, 315, 316, 320, 321], "some": [20, 52, 63, 72, 188, 193, 205, 212, 213, 293, 302, 311, 313, 315], "soo": 309, "soon": 306, "sophist": 1, "sort": [108, 188, 268, 280, 281, 286, 287, 317], "sourc": [2, 5, 6, 7, 20, 24, 25, 26, 46, 47, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299], "sp": [152, 158, 162, 165, 167], "space": [6, 310, 319], "span": 192, "spars": [185, 194], "spatial": [38, 136, 139, 319], "spec": 309, "specfi": 25, "special": [310, 316], "specif": [6, 7, 145, 301, 303, 306, 308, 311, 313], "specifi": [24, 26, 62, 63, 72, 84, 86, 88, 90, 97, 104, 125, 139, 140, 142, 143, 145, 146, 148, 149, 151, 156, 157, 166, 183, 184, 185, 186, 187, 190, 191, 192, 198, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 225, 241, 246, 249, 266, 271, 272, 277, 282, 291, 293, 298, 319], "speed": [278, 282, 285], "spent": 302, "sphere": [2, 84, 89, 213, 300, 302, 305, 308, 315], "spheric": [129, 315], "sphinx": [2, 5, 6, 7, 10], "split": [83, 101, 103, 139, 190, 191, 281, 302, 314], "splitfeatur": 61, "spread": 184, "spring": [26, 141, 147, 184, 185, 309, 310, 318], "springer": 309, "spuriou": 315, "sqrt": [2, 315], "squar": [2, 87, 88, 208, 210, 315], "src": 2, "stabl": 81, "stack": [64, 97, 145, 304], "standard": [63, 125, 141, 293, 310, 317], "star": 316, "start": [7, 26, 242, 243, 247, 248, 250, 280, 311, 316, 319], "state": [62, 314], "static": 68, "statist": [282, 285], "statu": 317, "step": [190, 206, 211, 302, 316], "steve": 309, "stiff": [26, 184, 185, 321], "stiffnessfactor": [26, 185], "still": [19, 81, 213], "stl": [70, 307], "storag": [247, 248, 250, 309], "store": [20, 62, 117, 143, 144, 149, 188, 191, 304, 308, 317], "str": [20, 25, 26, 53, 62, 63, 64, 70, 72, 75, 84, 85, 86, 87, 88, 89, 90, 96, 97, 101, 104, 108, 111, 120, 125, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 163, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 223, 225, 237, 239, 246, 249, 253, 266, 273, 278, 282, 285, 286, 289, 292, 293, 298, 299], "straight": [7, 302, 319], "strategi": [84, 192, 319], "stretch": 315, "strict": 267, "strictli": [26, 184, 207, 208, 210, 228, 230, 246, 249, 321], "string": [25, 53, 72, 144, 188, 190, 191, 285, 298], "strive": 311, "structur": [76, 111, 192, 193, 195, 200, 237, 239, 244, 246, 249, 268, 278, 282, 285, 301, 309, 311, 316, 319], "sub": [225, 310], "subdivid": [26, 195, 319], "subdivis": [84, 192], "subject": 6, "sublist": 280, "submit": 7, "submodul": 300, "subplot": [2, 302], "subsequ": 308, "subseri": 309, "substitut": 1, "suffer": 302, "suffici": [89, 235, 237, 239, 247, 248, 250, 256, 257, 258, 259, 320, 321], "suit": 62, "suitabl": [104, 292], "sum": [2, 6, 225], "sum_": 321, "super": 316, "suppli": [199, 289, 311], "support": [1, 20, 70, 104, 108, 145, 282, 285, 307, 311], "sure": [316, 319], "surf": [20, 25, 26, 63, 73, 84, 89, 104, 203, 204, 205, 206, 211, 212, 213, 214, 266, 292, 293, 308], "surf1": [82, 83], "surf1intersect": 254, "surf2": [82, 83], "surf2intersect": 254, "surf2octre": 253, "surf2tri": [246, 249], "surf2voxel": 308, "surfac": [1, 2, 6, 18, 20, 21, 22, 26, 32, 33, 37, 44, 45, 48, 49, 50, 51, 63, 82, 83, 84, 89, 92, 104, 105, 106, 108, 109, 110, 111, 121, 122, 125, 127, 128, 140, 141, 146, 147, 148, 149, 150, 151, 152, 158, 162, 165, 167, 170, 171, 172, 174, 183, 184, 186, 187, 188, 199, 202, 203, 204, 205, 206, 209, 211, 212, 213, 214, 224, 237, 239, 246, 249, 253, 254, 264, 266, 269, 278, 282, 284, 285, 289, 293, 294, 298, 302, 303, 305, 309, 311, 314], "surface2edg": 104, "surface2octre": [237, 239, 246, 249, 278, 282, 285, 319], "surfacemesh": [2, 5, 150, 151, 152, 158, 162, 165, 167, 170, 174, 302, 305], "surfacenodeoptim": 2, "surfconn": [26, 32, 52, 92, 106, 108, 111, 122, 127, 128, 199, 233, 237, 239, 246, 249, 253, 264, 269, 278, 284], "surfconn1": [254, 282, 285], "surfconn2": [254, 282, 285], "surfcoord": 111, "sw05": [84, 192, 193, 309, 319], "sweep": 7, "sydnei": 311, "symbol": [84, 121, 152, 155, 158, 161, 162, 165, 167, 177], "symfun": 173, "symfun1": [155, 161, 177], "symfun2": [155, 161, 177], "symmetr": [153, 154, 155, 302], "sympi": [121, 147, 152, 155, 158, 161, 162, 165, 167, 177, 302, 306], "symposium": 309, "system": [81, 125, 274, 315, 319, 321], "t": [26, 39, 41, 60, 63, 68, 73, 92, 108, 109, 146, 171, 172, 173, 184, 186, 188, 231, 237, 239, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 278, 282, 284, 285, 289, 293, 308, 313, 315, 316, 317, 319, 320, 321], "t_": 320, "t_i": 320, "t_j": 316, "t_p": 316, "tabl": [301, 314, 316], "take": [6, 72, 156, 157, 191, 209, 308, 316], "taken": [53, 104, 105, 191, 314, 319], "tami": 309, "tandfonlin": 309, "tangent": [141, 147, 187], "tangenti": [2, 141, 147, 186, 187], "tangentialsurfac": 186, "target": [186, 188, 189, 190, 191], "task": 311, "taubin": 5, "td": 320, "techniqu": 309, "teeth": 311, "temporarili": 225, "term": [282, 285, 308, 317], "termin": [183, 184, 186, 187, 316, 319], "teseo": 309, "tessel": 309, "test": [108, 231, 234, 235, 236, 237, 239, 241, 244, 246, 249, 250, 255, 256, 257, 258, 259, 309, 314, 319], "tet": [89, 90, 104, 107, 142, 148, 205, 206, 207, 211, 212, 225, 266, 269, 292, 317], "tet10nodeconn": 112, "tet4nodeconn": [112, 115], "tetconn": [96, 101, 107, 120], "tetconn1to14": 120, "tetconn1to2": 101, "tetconn1to24": 96, "tetconn1to3": 120, "tetconn1to36": 120, "tetconn1to4": 101, "tetconn1to5": 96, "tetconn1to6": 96, "tetcontract": 190, "tetcoord": 107, "tetcoords1to14": 120, "tetcoords1to2": 101, "tetcoords1to24": 96, "tetcoords1to3": 120, "tetcoords1to36": 120, "tetcoords1to4": 101, "tetcoords1to5": 96, "tetcoords1to6": 96, "tetflip": 190, "tetgen": [309, 311], "tetmesh": [6, 269, 302, 305], "tetnodeconn": 89, "tetnodecoord": 89, "tetopt": 26, "tetradehdr": 112, "tetradehedr": 112, "tetrahedr": [26, 63, 89, 90, 96, 101, 104, 112, 113, 114, 115, 120, 132, 142, 148, 188, 190, 191, 205, 206, 207, 211, 212, 216, 223, 229, 261, 283, 293, 302, 303, 309, 311, 316, 317], "tetrahedra": [84, 89, 96, 101, 107, 120, 140, 146, 148, 205, 211, 212, 229, 302, 303, 310, 317], "tetrahedron": [261, 303, 316], "tetraher": 1, "tetsplit": 190, "th": [309, 321], "tha": 316, "than": [18, 25, 63, 64, 72, 75, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 113, 114, 116, 118, 119, 120, 125, 140, 141, 142, 143, 144, 146, 147, 148, 149, 183, 184, 186, 187, 188, 191, 192, 193, 199, 225, 247, 248, 250, 266, 267, 269, 278, 282, 285, 293, 301, 302, 311, 314, 315, 316, 317, 319], "thei": [6, 39, 41, 53, 86, 90, 108, 141, 147, 239, 268, 280, 281, 286, 300, 301, 303, 308, 310, 314, 315, 317, 319], "them": [83, 205, 306, 308, 316, 319], "theme": [296, 298, 311], "theorema": 315, "theoret": 2, "theori": [1, 15, 311, 316], "therefor": 315, "theta_resolut": [203, 204, 205, 212, 213], "thi": [1, 5, 6, 7, 16, 18, 20, 24, 25, 26, 38, 48, 52, 53, 62, 63, 73, 83, 84, 87, 89, 90, 96, 101, 107, 108, 109, 117, 120, 122, 125, 127, 128, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 158, 162, 165, 166, 167, 171, 172, 174, 184, 190, 191, 192, 193, 199, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 226, 237, 239, 242, 243, 246, 247, 248, 249, 250, 256, 257, 258, 259, 266, 270, 285, 293, 298, 300, 302, 303, 305, 308, 311, 313, 314, 315, 316, 317, 319, 320, 321], "thick": [26, 171, 172], "thick_fun": 172, "thicken": 172, "thickenf": [6, 269], "thieri": 309, "thing": 308, "third": [136, 139, 261, 262, 263], "thoroughli": 316, "those": [72, 267, 275, 308, 316, 317, 319, 320], "though": [6, 302], "thousand": 319, "three": [5, 86, 117, 121, 140, 142, 143, 146, 148, 149, 150, 151, 154, 155, 160, 161, 170, 172, 174, 176, 177, 178, 179, 180, 191, 198, 207, 211, 212, 213, 224, 234, 247, 255, 256, 257, 278, 301, 304, 305, 308, 310, 315, 316, 317, 319, 320], "threhsold": 53, "threshold": [25, 64, 84, 85, 86, 87, 88, 89, 97, 140, 141, 142, 143, 146, 147, 148, 149, 192, 269, 302, 310, 314, 315], "threshold_dir": [140, 142], "threshold_direct": [25, 64, 97, 140, 142, 143, 146, 148, 149, 302, 308], "thrich": 309, "through": [24, 84, 86, 146, 148, 149, 188, 266, 301, 302, 307, 314, 317], "throughout": [305, 311], "thu": [96, 101, 107, 112, 120, 141, 147, 188, 315], "thurrnerwuthrich98": [273, 309], "tiff": [64, 97, 145, 304], "tifffil": 304, "tight_layout": 302, "tim": [1, 311], "time": [2, 5, 6, 7, 183, 186, 187, 188, 190, 247, 248, 250, 308, 316, 320], "times3": 320, "timothi": 309, "tissu": [309, 311], "todo": [90, 104, 267, 285, 289], "togeth": [65, 275, 302], "toj": 7, "tol": [59, 65, 82, 139, 267, 268, 278, 282, 285], "toler": [65, 82, 83, 84, 89, 183, 184, 186, 187, 246, 249, 253, 254, 267, 268, 278, 282, 285], "toma": 309, "too": 125, "tool": [13, 14, 15, 17, 18, 256, 257, 258, 259, 309, 311], "toolbox": 311, "top": [6, 9, 312], "topolog": [33, 37, 309, 314], "topologi": [8, 9, 10, 312, 317], "toru": 305, "total": [2, 4, 5, 6, 7, 9, 11, 26, 212, 213, 214, 312], "touch": 316, "toward": [141, 147, 315, 316], "tpm": [8, 9, 10, 152, 158, 162, 165, 167, 312], "tpmss": 6, "trace": 302, "trade": 317, "transact": 309, "transfer": [20, 89], "transit": 193, "transpar": 298, "travers": [316, 317, 319], "treat": [86, 90, 104, 141, 144, 147, 316, 321], "tree": 319, "tri": [90, 103, 104, 110, 146, 198, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 231, 235, 238, 240, 248, 250, 263, 266, 302, 310], "tri1": [256, 257, 258, 259], "tri2": [256, 257, 258, 259], "triangl": [2, 16, 63, 87, 88, 89, 110, 122, 127, 128, 134, 136, 139, 198, 199, 205, 212, 213, 230, 231, 234, 235, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 262, 263, 264, 266, 267, 293, 303, 306, 309, 311, 314, 316, 319], "triangleboxintersect": 231, "triangluar": 285, "triangul": [1, 122, 127, 128, 131, 132, 134, 136, 137, 140, 146, 309, 314], "triangular": [26, 63, 83, 87, 88, 90, 100, 103, 104, 110, 114, 116, 119, 199, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 223, 224, 230, 237, 239, 246, 249, 253, 264, 282, 284, 285, 293, 301, 311], "triconn": [103, 110], "tricoord": [110, 234, 247, 255], "trimesh": 311, "trimetr": [298, 302, 308], "trinorm": [231, 255], "tripli": [6, 152, 158, 162, 165, 167], "tritanomali": 298, "trough": 129, "true": [2, 20, 26, 53, 62, 65, 68, 75, 84, 85, 86, 87, 88, 89, 91, 92, 93, 104, 105, 107, 110, 125, 133, 135, 141, 145, 146, 147, 148, 152, 158, 162, 165, 167, 183, 184, 185, 186, 187, 188, 190, 191, 198, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 225, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 268, 275, 280, 281, 282, 285, 298, 302], "truli": 6, "trumbor": [247, 248, 250, 309, 320], "tube": [174, 213], "tupl": [53, 68, 84, 86, 88, 97, 140, 142, 143, 144, 145, 146, 148, 149, 185, 192, 207, 232, 242, 298, 304], "twin": 316, "twist": 206, "twist_cent": 206, "two": [2, 53, 68, 82, 83, 85, 87, 88, 89, 92, 93, 136, 139, 153, 154, 155, 159, 160, 161, 175, 176, 177, 191, 205, 232, 242, 254, 256, 257, 258, 259, 266, 268, 269, 275, 280, 301, 302, 304, 315, 316, 317, 319], "type": [20, 24, 25, 60, 62, 63, 64, 66, 67, 70, 73, 74, 82, 84, 89, 90, 92, 94, 95, 98, 99, 100, 102, 103, 104, 106, 109, 113, 114, 116, 117, 118, 119, 123, 124, 126, 129, 130, 131, 132, 134, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 183, 184, 186, 187, 188, 190, 191, 192, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 239, 241, 242, 243, 244, 247, 250, 255, 256, 257, 258, 260, 264, 265, 266, 267, 270, 272, 273, 277, 278, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 299, 301, 302, 304, 307, 308, 311, 319], "typic": [2, 96, 101, 107, 120], "u": [280, 281, 302, 320], "uedg": 91, "ufac": 93, "ultim": 320, "un": 317, "unambigu": [63, 293, 317], "unattach": 33, "unchang": [96, 101, 112, 120, 268, 272, 304, 315], "unclos": [104, 109, 111, 302], "underbrac": 315, "undergon": 108, "understand": [311, 313], "unexpect": 111, "unidirect": 320, "uniform": [2, 20, 89, 148, 191, 270, 294, 310], "union": [82, 89, 176, 302, 305, 311], "union_fun": 176, "union_sym": 177, "union_v": 175, "unionf": [84, 302], "uniqu": [33, 91, 93, 266, 281, 314, 316], "unit": [2, 122, 125, 127, 128, 141, 242, 243, 247, 248, 250, 273, 305, 315, 321], "unitless": 315, "univers": 311, "unknown": 315, "unless": 292, "unload": 185, "unnecessari": 308, "unpack": [140, 142, 143, 146, 148, 149, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213], "unsign": 164, "until": [183, 184, 186, 187, 188, 195, 199, 319, 321], "unus": 188, "up": [20, 63, 293, 298, 304, 310], "updat": [62, 185, 266, 268, 317], "upon": 311, "upper": [53, 68, 150, 207, 208, 210, 231, 232, 236, 242, 243, 255, 320], "url": 309, "us": [1, 6, 7, 16, 18, 20, 24, 25, 26, 33, 37, 44, 53, 64, 68, 84, 86, 87, 88, 89, 90, 94, 95, 96, 98, 99, 100, 101, 102, 104, 105, 107, 108, 111, 113, 114, 116, 118, 119, 120, 125, 137, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 167, 175, 176, 177, 183, 184, 186, 187, 188, 190, 191, 192, 193, 206, 209, 223, 226, 227, 229, 235, 237, 239, 246, 247, 248, 249, 250, 256, 257, 258, 259, 266, 268, 269, 273, 277, 278, 280, 281, 282, 285, 286, 294, 298, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 317, 319, 320, 321], "usag": 317, "user": [306, 308, 311, 313], "util": [2, 75, 89, 96, 107, 108, 120, 122, 125, 127, 128, 214, 224, 250, 302, 304, 306, 307, 308, 317], "uv_1": 320, "v": [33, 84, 146, 148, 149, 192, 225, 229, 283, 284, 289, 316, 320], "v_0": 320, "v_1": 320, "v_2": 320, "val": [117, 156], "valid": [237, 239, 267, 311, 316, 317], "valu": [2, 18, 25, 26, 53, 68, 82, 85, 86, 87, 88, 89, 117, 123, 124, 125, 126, 130, 140, 142, 143, 146, 148, 149, 153, 154, 155, 156, 157, 159, 160, 161, 163, 164, 166, 171, 172, 175, 176, 177, 185, 192, 235, 237, 239, 247, 248, 250, 256, 257, 258, 259, 267, 268, 272, 277, 278, 282, 285, 286, 287, 298, 302, 308, 314, 315, 317, 320], "van": [123, 129, 130, 309], "vari": [6, 207, 208, 210, 301], "variabl": [154, 155, 160, 161, 172, 176, 177, 277, 300, 305], "varieti": [75, 301, 304, 307, 310, 311, 314], "variou": [80, 307, 308, 311, 317, 319], "vast": 302, "vdot": 315, "vector": [1, 5, 20, 24, 32, 44, 45, 84, 108, 122, 127, 128, 141, 147, 151, 152, 154, 158, 160, 162, 165, 167, 172, 176, 191, 210, 211, 222, 224, 226, 231, 232, 234, 235, 237, 239, 242, 243, 244, 246, 247, 248, 249, 250, 255, 258, 259, 264, 273, 278, 309, 315, 317, 320], "vector_func": [152, 158, 162, 165, 167], "vectoriz": 305, "verbos": [2, 20, 62, 145, 188, 189, 190, 191, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 282, 285], "veri": 311, "verifi": [73, 285, 311, 317], "versa": 319, "version": [2, 75, 89, 231, 250, 273, 311, 317], "vertebr": 311, "vertex": [33, 309, 316, 317], "vertexvalu": 86, "vertic": [33, 84, 86, 88, 112, 140, 141, 142, 146, 147, 148, 192, 193, 198, 231, 234, 235, 247, 248, 250, 255, 256, 257, 258, 259, 261, 262, 263, 314, 316, 319], "via": [2, 137, 141], "viabl": 188, "vice": 319, "victoria": 309, "view": [68, 95, 100, 114, 119, 264, 302, 308, 315], "visibl": [273, 316], "vision": [298, 309], "vispi": [298, 299, 306], "visual": [68, 74, 302, 306, 309], "vivian": 311, "vo": 310, "vol": [20, 25, 63, 73, 84, 89, 104, 205, 212, 213, 214, 266, 293, 302], "volum": [5, 20, 32, 33, 37, 62, 63, 73, 84, 89, 96, 106, 107, 109, 120, 141, 147, 187, 206, 211, 214, 223, 229, 266, 274, 283, 284, 293, 303, 305, 309, 311, 314, 316, 317], "volumetr": [205, 212, 213, 302, 310], "von": 309, "voronoi": 309, "voxel": [64, 86, 97, 111, 117, 125, 140, 141, 143, 144, 149, 156, 157, 163, 164, 194, 200, 241, 270, 271, 294, 308], "voxel2octre": 319, "voxelconn": [97, 111, 117, 156, 157, 194, 200, 241, 270, 294], "voxelcoord": [97, 111, 117, 156, 157, 194, 200, 241, 270, 294], "voxeldata": 97, "voxelmesh": [304, 305], "voxelnodeconn": [85, 308], "voxelnodecoord": [85, 308], "voxels": [64, 97, 125, 141], "vsn91": [6, 309], "vtk": [70, 311], "vtu": [70, 307], "vv_2": 320, "w": [6, 7, 84, 140, 146, 148, 149, 150, 151, 152, 158, 162, 165, 167, 170, 174, 202, 203, 205, 206, 207, 208, 209, 212, 213, 269, 302, 308, 309, 315], "wa": [1, 188, 299, 308, 311, 316], "wai": [101, 120, 122, 127, 128, 300, 302, 305, 316, 320], "walk": 316, "wang": 309, "warn": 73, "warren": 309, "wat81": [131, 309, 316], "watertight": 314, "watson": [131, 132, 139, 309], "wbms05": [242, 243, 309, 320], "we": [311, 315], "websit": 193, "wedg": [63, 89, 90, 101, 104, 118, 119, 120, 206, 211, 216, 223, 293, 303, 314], "wedgeconn": 120, "wedgecoord": 120, "weight": [6, 273], "weights1": 6, "weights2": 6, "weights3": 6, "weights4": 6, "weingarten": 315, "well": [16, 108, 146, 148, 223, 306, 308, 311, 313], "were": [188, 191], "what": [107, 207, 208, 210, 267, 289, 302, 314], "when": [20, 63, 95, 100, 114, 119, 178, 179, 180, 183, 184, 186, 187, 188, 247, 248, 250, 264, 268, 293, 301, 302, 303, 313, 315, 316, 319], "where": [2, 18, 20, 112, 146, 148, 149, 184, 191, 192, 207, 208, 210, 253, 256, 257, 258, 259, 279, 301, 305, 310, 314, 315, 316, 317, 320, 321], "whether": [53, 65, 84, 86, 87, 88, 89, 125, 186, 192, 198, 214, 226, 236, 237, 239, 241, 246, 247, 248, 249, 250, 266, 269, 298, 314, 315, 316, 317, 319, 320], "which": [1, 2, 5, 16, 53, 89, 90, 96, 107, 108, 111, 120, 121, 144, 146, 148, 149, 163, 164, 185, 188, 190, 191, 194, 201, 205, 211, 212, 225, 250, 278, 281, 298, 301, 302, 304, 307, 310, 311, 313, 314, 315, 316, 319], "whichev": [63, 293], "while": [26, 183, 184, 186, 187, 301, 302, 305, 310, 311, 313, 315, 316, 317, 319], "white": [2, 5, 6], "who": 267, "whose": [178, 179, 180, 185, 316], "why": 313, "wide": 311, "width": [2, 298], "wikipedia": 305, "wil": 188, "wild": 309, "wilei": 309, "william": [242, 243, 309, 320], "window": 298, "wirefram": [298, 310], "within": [1, 26, 90, 104, 108, 146, 148, 156, 157, 188, 191, 192, 193, 199, 247, 248, 250, 278, 283, 284, 310, 316, 319, 320], "without": [141, 147, 184, 268, 306, 308, 315, 316], "won": [60, 68, 278, 282, 285, 289, 308, 313], "word": 190, "work": [2, 81, 111, 280, 301, 311, 313, 320], "worst": [78, 216, 217, 221, 222, 223, 227, 228, 229, 230], "would": 315, "wrap": [81, 125, 135, 270, 311], "wrapper": [136, 137, 311], "write": [20, 304, 307], "written": [20, 70, 145, 304, 311, 315], "www": [242, 243, 309], "x": [5, 6, 18, 84, 86, 89, 117, 121, 144, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 165, 167, 170, 172, 174, 176, 177, 178, 179, 180, 184, 191, 192, 197, 203, 204, 205, 206, 209, 210, 211, 213, 231, 232, 236, 242, 243, 255, 276, 298, 304, 305, 309, 310, 315, 316, 320, 321], "x0": [106, 178, 294], "x1": [106, 150, 268, 270, 271, 283, 284, 285], "x2": [150, 285], "x3": 285, "x4": [282, 285], "x_": 320, "x_0": 315, "x_1": 315, "x_i": [315, 321], "x_iy_i": 315, "x_n": 315, "xifeng": 309, "xin": 53, "xlim": [231, 232, 236, 242, 243, 255], "xmax": [84, 146, 148, 149, 192, 202, 207, 208, 210, 231, 236, 255, 320], "xmin": [84, 146, 148, 149, 192, 202, 207, 208, 210, 231, 236, 255, 320], "xnew": 185, "xout": 53, "xy": [180, 276, 298], "xz": [179, 276, 298], "y": [5, 6, 18, 84, 86, 89, 117, 121, 144, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 165, 167, 170, 172, 174, 176, 177, 178, 179, 180, 184, 191, 192, 197, 203, 204, 205, 206, 209, 210, 211, 213, 231, 232, 236, 242, 243, 255, 276, 298, 304, 305, 309, 310, 315, 316, 320], "y0": [106, 179, 294], "y1": [106, 150, 268, 270, 271, 283, 284, 285], "y2": [150, 285], "y3": 285, "y_": 320, "y_0": 315, "y_1": 315, "y_i": [315, 321], "y_n": 315, "yet": [39, 41, 192], "yixin": 309, "ylim": [231, 232, 236, 242, 243, 255], "ymax": [84, 146, 148, 149, 192, 202, 207, 208, 210, 231, 236, 255, 320], "ymin": [84, 146, 148, 149, 192, 202, 207, 208, 210, 231, 236, 255, 320], "yongji": 309, "you": [1, 308], "yutaka": 309, "yx": 117, "yz": [178, 276], "z": [5, 6, 18, 84, 86, 88, 89, 117, 121, 141, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 165, 167, 170, 172, 174, 176, 177, 178, 179, 180, 184, 191, 192, 197, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 231, 232, 236, 242, 243, 255, 276, 298, 304, 305, 309, 315, 316, 320], "z0": [106, 180, 294], "z1": [106, 150, 268, 270, 271, 283, 284, 285], "z2": [150, 285], "z3": 285, "z_": 320, "z_0": 315, "z_1": 315, "z_i": [315, 321], "z_n": 315, "zbs03": [192, 309, 319], "zeitschrift": 309, "zero": [6, 18, 184, 206, 269, 320], "zhang": [284, 309], "zhou": 309, "zip": [2, 5, 6, 7], "ziti": 7, "zlim": [231, 232, 236, 242, 243, 255], "zmax": [84, 146, 148, 149, 192, 202, 207, 210, 231, 236, 255, 320], "zmin": [84, 146, 148, 149, 192, 202, 207, 210, 231, 236, 255, 320], "zoom": [64, 97, 140, 143, 144], "zorin": 309, "\u00f6": 309, "\u00fc": 309}, "titles": ["API Reference", "Development", "Curvature Analysis", "Mesh Analysis Examples", "Computation times", "Implicit Heart", "Mixed-Topology TPMS", "Pasta Shapes", "Mesh Generation Examples", "Computation times", "Examples", "Computation times", "mymesh.booleans", "mymesh.contour", "mymesh.converter", "mymesh.curvature", "mymesh.delaunay", "mymesh.image", "mymesh.implicit", "mymesh.improvement", "mymesh.mesh", "mymesh.mesh.mesh.BoundaryConn", "mymesh.mesh.mesh.BoundaryNodes", "mymesh.mesh.mesh.Centroids", "mymesh.mesh.mesh.Clip", "mymesh.mesh.mesh.Contour", "mymesh.mesh.mesh.CreateBoundaryLayer", "mymesh.mesh.mesh.EdgeConn", "mymesh.mesh.mesh.EdgeElemConn", "mymesh.mesh.mesh.Edges", "mymesh.mesh.mesh.ElemConn", "mymesh.mesh.mesh.ElemNeighbors", "mymesh.mesh.mesh.ElemNormals", "mymesh.mesh.mesh.EulerCharacteristic", "mymesh.mesh.mesh.FaceConn", "mymesh.mesh.mesh.FaceElemConn", "mymesh.mesh.mesh.Faces", "mymesh.mesh.mesh.Genus", "mymesh.mesh.mesh.ND", "mymesh.mesh.mesh.NEdge", "mymesh.mesh.mesh.NElem", "mymesh.mesh.mesh.NFace", "mymesh.mesh.mesh.NNode", "mymesh.mesh.mesh.NodeNeighbors", "mymesh.mesh.mesh.NodeNormals", "mymesh.mesh.mesh.NodeNormalsMethod", "mymesh.mesh.mesh.RenumberFacesBySet", "mymesh.mesh.mesh.RenumberNodesBySet", "mymesh.mesh.mesh.SurfConn", "mymesh.mesh.mesh.SurfElemConn", "mymesh.mesh.mesh.SurfNodeNeighbors", "mymesh.mesh.mesh.SurfNodes", "mymesh.mesh.mesh.Surface", "mymesh.mesh.mesh.Threshold", "mymesh.mesh.mesh.addEdges", "mymesh.mesh.mesh.addElems", "mymesh.mesh.mesh.addFaces", "mymesh.mesh.mesh.addNodes", "mymesh.mesh.mesh.cells", "mymesh.mesh.mesh.cleanup", "mymesh.mesh.mesh.copy", "mymesh.mesh.mesh.getCurvature", "mymesh.mesh.mesh.getQuality", "mymesh.mesh.mesh.identify_type", "mymesh.mesh.mesh.imread", "mymesh.mesh.mesh.merge", "mymesh.mesh.mesh.meshio2mymesh", "mymesh.mesh.mesh.mymesh2meshio", "mymesh.mesh.mesh.plot", "mymesh.mesh.mesh.points", "mymesh.mesh.mesh.read", "mymesh.mesh.mesh.removeElems", "mymesh.mesh.mesh.reset", "mymesh.mesh.mesh.validate", "mymesh.mesh.mesh.view", "mymesh.mesh.mesh.write", "mymesh.octree", "mymesh.primitives", "mymesh.quality", "mymesh.rays", "mymesh.utils", "mymesh.visualize", "mymesh.booleans.MeshBooleans", "mymesh.booleans.SplitMesh", "mymesh.contour.Adaptive", "mymesh.contour.MarchingCubes", "mymesh.contour.MarchingCubesImage", "mymesh.contour.MarchingSquares", "mymesh.contour.MarchingSquaresImage", "mymesh.contour.MarchingTetrahedra", "mymesh.converter.EdgesByElement", "mymesh.converter.edges2unique", "mymesh.converter.faces2surface", "mymesh.converter.faces2unique", "mymesh.converter.hex2edges", "mymesh.converter.hex2faces", "mymesh.converter.hex2tet", "mymesh.converter.im2voxel", "mymesh.converter.polygon2edges", "mymesh.converter.pyramid2edges", "mymesh.converter.pyramid2faces", "mymesh.converter.pyramid2tet", "mymesh.converter.quad2edges", "mymesh.converter.quad2tri", "mymesh.converter.solid2edges", "mymesh.converter.solid2faces", "mymesh.converter.solid2surface", "mymesh.converter.solid2tets", "mymesh.converter.surf2dual", "mymesh.converter.surf2edges", "mymesh.converter.surf2tris", "mymesh.converter.surf2voxel", "mymesh.converter.tet102tet4", "mymesh.converter.tet2edges", "mymesh.converter.tet2faces", "mymesh.converter.tet42tet10", "mymesh.converter.tri2edges", "mymesh.converter.voxel2im", "mymesh.converter.wedge2edges", "mymesh.converter.wedge2faces", "mymesh.converter.wedge2tet", "mymesh.curvature.AnalyticalCurvature", "mymesh.curvature.CubicFit", "mymesh.curvature.Curvedness", "mymesh.curvature.GaussianCurvature", "mymesh.curvature.ImageCurvature", "mymesh.curvature.MeanCurvature", "mymesh.curvature.NormCurve", "mymesh.curvature.QuadFit", "mymesh.curvature.ShapeCategory", "mymesh.curvature.ShapeIndex", "mymesh.delaunay.BowyerWatson2d", "mymesh.delaunay.BowyerWatson3d", "mymesh.delaunay.ConvexHull", "mymesh.delaunay.ConvexHullFanTriangulation", "mymesh.delaunay.ConvexHull_GiftWrapping", "mymesh.delaunay.SciPy", "mymesh.delaunay.Triangle", "mymesh.delaunay.TriangleSplittingTriangulation", "mymesh.delaunay.Triangulate", "mymesh.image.SurfaceMesh", "mymesh.image.SurfaceNodeOptimization", "mymesh.image.TetMesh", "mymesh.image.VoxelMesh", "mymesh.image.read", "mymesh.image.write", "mymesh.implicit.SurfaceMesh", "mymesh.implicit.SurfaceNodeOptimization", "mymesh.implicit.TetMesh", "mymesh.implicit.VoxelMesh", "mymesh.implicit.box", "mymesh.implicit.cylinder", "mymesh.implicit.diamond", "mymesh.implicit.diff", "mymesh.implicit.difff", "mymesh.implicit.diffs", "mymesh.implicit.grid2fun", "mymesh.implicit.grid2grad", "mymesh.implicit.gyroid", "mymesh.implicit.intersection", "mymesh.implicit.intersectionf", "mymesh.implicit.intersections", "mymesh.implicit.lidinoid", "mymesh.implicit.mesh2sdf", "mymesh.implicit.mesh2udf", "mymesh.implicit.neovius", "mymesh.implicit.offset", "mymesh.implicit.primitive", "mymesh.implicit.rMax", "mymesh.implicit.rMin", "mymesh.implicit.sphere", "mymesh.implicit.thicken", "mymesh.implicit.thickenf", "mymesh.implicit.thickens", "mymesh.implicit.torus", "mymesh.implicit.union", "mymesh.implicit.unionf", "mymesh.implicit.unions", "mymesh.implicit.xplane", "mymesh.implicit.yplane", "mymesh.implicit.zplane", "mymesh.improvement.GeoTransformSmoothing", "mymesh.improvement.GlobalLaplacianSmoothing", "mymesh.improvement.LocalLaplacianSmoothing", "mymesh.improvement.NodeSpringSmoothing", "mymesh.improvement.SegmentSpringSmoothing", "mymesh.improvement.SmartLaplacianSmoothing", "mymesh.improvement.TangentialLaplacianSmoothing", "mymesh.improvement.TetContract", "mymesh.improvement.TetFlip", "mymesh.improvement.TetImprove", "mymesh.improvement.TetSplit", "mymesh.octree.Function2Octree", "mymesh.octree.Octree2Dual", "mymesh.octree.Octree2Voxel", "mymesh.octree.Points2Octree", "mymesh.octree.Print", "mymesh.octree.SearchOctree", "mymesh.octree.SearchOctreeTri", "mymesh.octree.Surface2Octree", "mymesh.octree.Voxel2Octree", "mymesh.octree.getAllLeaf", "mymesh.primitives.Box", "mymesh.primitives.Circle", "mymesh.primitives.CirclePt", "mymesh.primitives.Cylinder", "mymesh.primitives.Extrude", "mymesh.primitives.Grid", "mymesh.primitives.Grid2D", "mymesh.primitives.Line", "mymesh.primitives.Plane", "mymesh.primitives.Revolve", "mymesh.primitives.Sphere", "mymesh.primitives.Torus", "mymesh.quality.Area", "mymesh.quality.AspectRatio", "mymesh.quality.InverseOrthogonalQuality", "mymesh.quality.InverseOrthogonality", "mymesh.quality.MaxDihedral", "mymesh.quality.MeanRatio", "mymesh.quality.MinDihedral", "mymesh.quality.OrthogonalQuality", "mymesh.quality.Orthogonality", "mymesh.quality.Skewness", "mymesh.quality.SurfDihedralAngles", "mymesh.quality.Volume", "mymesh.quality.dihedralAngles", "mymesh.quality.equiangular_skewness", "mymesh.quality.quad_skewness", "mymesh.quality.tet_vol_skewness", "mymesh.quality.tri_skewness", "mymesh.rays.BoxTrianglesIntersection", "mymesh.rays.PlaneBoxIntersection", "mymesh.rays.PlaneSurfIntersection", "mymesh.rays.PlaneTriangleIntersection", "mymesh.rays.PlaneTrianglesIntersection", "mymesh.rays.PointInBox", "mymesh.rays.PointInSurf", "mymesh.rays.PointInTri", "mymesh.rays.PointsInSurf", "mymesh.rays.PointsInTris", "mymesh.rays.PointsInVoxel", "mymesh.rays.RayBoxIntersection", "mymesh.rays.RayBoxesIntersection", "mymesh.rays.RayOctreeIntersection", "mymesh.rays.RaySegmentsIntersection", "mymesh.rays.RaySurfIntersection", "mymesh.rays.RayTriangleIntersection", "mymesh.rays.RayTrianglesIntersection", "mymesh.rays.RaysSurfIntersection", "mymesh.rays.RaysTrianglesIntersection", "mymesh.rays.SegmentSegmentIntersection", "mymesh.rays.SegmentsSegmentsIntersection", "mymesh.rays.SurfSelfIntersection", "mymesh.rays.SurfSurfIntersection", "mymesh.rays.TriangleBoxIntersection", "mymesh.rays.TriangleTriangleIntersection", "mymesh.rays.TriangleTriangleIntersectionPt", "mymesh.rays.TrianglesTrianglesIntersection", "mymesh.rays.TrianglesTrianglesIntersectionPts", "mymesh.utils.AABB", "mymesh.utils.BaryTet", "mymesh.utils.BaryTri", "mymesh.utils.BaryTris", "mymesh.utils.CalcFaceNormal", "mymesh.utils.Centroids", "mymesh.utils.CleanupDegenerateElements", "mymesh.utils.DeleteDegenerateElements", "mymesh.utils.DeleteDuplicateNodes", "mymesh.utils.DetectFeatures", "mymesh.utils.DilateVoxel", "mymesh.utils.ErodeVoxel", "mymesh.utils.ExtractRagged", "mymesh.utils.Face2NodeNormal", "mymesh.utils.MVBB", "mymesh.utils.MergeMesh", "mymesh.utils.MirrorMesh", "mymesh.utils.PadRagged", "mymesh.utils.Project2Surface", "mymesh.utils.RelabelNodes", "mymesh.utils.SortRaggedByLength", "mymesh.utils.SplitRaggedByLength", "mymesh.utils.SurfMapping", "mymesh.utils.TetMeshVol", "mymesh.utils.TriSurfVol", "mymesh.utils.ValueMapping", "mymesh.utils.getConnectedElements", "mymesh.utils.getConnectedNodes", "mymesh.utils.getElemConnectivity", "mymesh.utils.getElemNeighbors", "mymesh.utils.getNodeNeighborhood", "mymesh.utils.getNodeNeighborhoodByRadius", "mymesh.utils.getNodeNeighbors", "mymesh.utils.identify_type", "mymesh.utils.makePyramidLayer", "mymesh.visualize.FaceColor", "mymesh.visualize.GetTheme", "mymesh.visualize.ParseColor", "mymesh.visualize.View", "mymesh.visualize.set_vispy_backend", "User Guide", "Connectivity Representations", "Constructive Solid Geometry", "Element Types", "Image-based Meshing", "Implicit Meshing", "Installation", "File Input/Output", "Working with the <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">mesh</span></code> class", "References", "What is a mesh?", "MyMesh: General purpose, implicit, and image-based meshing in python", "Computation times", "Theory Guide", "Contour", "Curvature", "Delaunay Triangulation", "2\u21923 and 3\u21922 Flips", "Improvement", "Octree", "Rays", "Spring-based Smoothing"], "titleterms": {"2": 317, "2d": [77, 301, 310], "3": 317, "33": 314, "3d": [77, 310], "On": 308, "aabb": 260, "acknowledg": 311, "adapt": 84, "addedg": 54, "addelem": 55, "addfac": 56, "addnod": 57, "an": [5, 305], "analysi": [2, 3, 10], "analyt": 315, "analyticalcurvatur": 121, "api": 0, "area": 214, "aspectratio": 215, "barytet": 261, "barytri": [262, 263], "base": [17, 304, 311, 315, 321], "boolean": [12, 82, 83], "boundaryconn": 21, "boundarynod": 22, "bowyer": 316, "bowyerwatson2d": 131, "bowyerwatson3d": 132, "box": [150, 202, 320], "boxtrianglesintersect": 231, "calcfacenorm": 264, "calcul": [2, 15, 78, 315], "caviti": 316, "cell": 58, "centroid": [23, 265], "circl": 203, "circlept": 204, "circumcircl": 316, "class": 308, "clean": 80, "cleanup": 59, "cleanupdegenerateel": 266, "clip": [24, 308], "cloud": 319, "comput": [4, 9, 11, 312], "connect": [14, 80, 301], "construct": [77, 302], "contour": [13, 25, 84, 85, 86, 87, 88, 89, 308, 314], "convent": 315, "convers": [14, 15, 76], "convert": [14, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120], "convex": 16, "convexhul": 133, "convexhull_giftwrap": 135, "convexhullfantriangul": 134, "copi": [60, 308], "core": 306, "creat": 5, "createboundarylay": 26, "creation": 76, "csg": 302, "cube": 314, "cubic": 315, "cubicfit": 122, "curvatur": [2, 15, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 315], "curved": [123, 315], "cylind": [151, 205], "data": 317, "defin": [5, 305], "definit": 319, "delaunai": [16, 131, 132, 133, 134, 135, 136, 137, 138, 139, 316], "deletedegenerateel": 267, "deleteduplicatenod": 268, "demand": 308, "depend": 306, "detectfeatur": 269, "develop": 1, "diamond": 152, "diff": [153, 155], "difff": 154, "dihedralangl": 226, "dilatevoxel": 270, "distanc": 319, "edg": [29, 317], "edgeconn": 27, "edgeelemconn": 28, "edges2uniqu": 91, "edgesbyel": 90, "elemconn": 30, "element": [14, 303, 317], "elemneighbor": 31, "elemnorm": 32, "equiangular_skew": 227, "erodevoxel": 271, "error": [2, 319], "euclidean": 319, "eulercharacterist": 33, "exampl": [3, 8, 10, 301], "explicit": 302, "extractrag": 272, "extrud": 206, "face": [36, 317], "face2nodenorm": 273, "facecolor": 295, "faceconn": 34, "faceelemconn": 35, "faces2surfac": 92, "faces2uniqu": 93, "featur": 1, "file": [17, 307], "fit": 315, "flip": 317, "format": 316, "from": [76, 306, 308], "function": [5, 18, 78, 305, 319], "function2octre": 192, "gaussian": 315, "gaussiancurvatur": 124, "gener": [8, 10, 17, 18, 311, 319], "genu": 37, "geometri": 302, "geotransformsmooth": 181, "getallleaf": 201, "getconnectedel": 286, "getconnectednod": 287, "getcurvatur": 61, "getelemconnect": 288, "getelemneighbor": 289, "getnodeneighbor": 292, "getnodeneighborhood": 290, "getnodeneighborhoodbyradiu": 291, "getqual": 62, "getthem": 296, "globallaplaciansmooth": 182, "grid": 207, "grid2d": 208, "grid2fun": 156, "grid2grad": 157, "guid": [300, 313], "gyroid": 158, "heart": 5, "helper": 78, "hex2edg": 94, "hex2fac": 95, "hex2tet": 96, "hull": 16, "i": [305, 310], "identify_typ": [63, 293], "im2voxel": 97, "imag": [17, 140, 141, 142, 143, 144, 145, 304, 307, 311], "imagecurvatur": 125, "implicit": [5, 18, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 302, 305, 311, 319], "import": 300, "improv": [19, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 318], "imread": 64, "inclus": 320, "index": [306, 315], "initi": 316, "input": 307, "insert": 316, "insid": 79, "instal": 306, "interpret": 315, "intersect": [79, 159, 161, 320], "intersectionf": 160, "inverseorthogon": 217, "inverseorthogonalqu": 216, "io": 17, "lidinoid": 162, "line": [209, 310], "local": 19, "locallaplaciansmooth": 183, "locat": 316, "makepyramidlay": 294, "manipul": 80, "march": 314, "marchingcub": 85, "marchingcubesimag": 86, "marchingsquar": 87, "marchingsquaresimag": 88, "marchingtetrahedra": 89, "maxdihedr": 218, "mean": 315, "meancurvatur": 126, "meanratio": 219, "measur": [2, 80], "merg": 65, "mergemesh": 275, "mesh": [3, 8, 10, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 80, 304, 305, 307, 308, 310, 311, 315, 319], "mesh2sdf": 163, "mesh2udf": 164, "meshboolean": 82, "meshio2mymesh": 66, "method": 20, "metric": [78, 315], "mindihedr": 220, "mirrormesh": 276, "miscellan": 80, "mix": 6, "modif": 318, "mvbb": 274, "mymesh": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 304, 311], "mymesh2meshio": 67, "nd": 38, "nedg": 39, "need": 311, "nelem": 40, "neoviu": 165, "nface": 41, "nnode": 42, "node": [19, 318, 321], "nodeneighbor": 43, "nodenorm": 44, "nodenormalsmethod": 45, "nodespringsmooth": 184, "normcurv": 127, "object": 0, "octre": [76, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 319], "octree2du": 193, "octree2voxel": 194, "offset": 166, "oper": [12, 18], "option": 306, "orthogon": 222, "orthogonalqu": 221, "other": 18, "output": 307, "outsid": 79, "overview": 300, "packag": [300, 306], "padrag": 277, "parsecolor": 297, "pasta": 7, "plan": 1, "planar": 310, "plane": [210, 320], "planeboxintersect": 232, "planesurfintersect": 233, "planetriangleintersect": 234, "planetrianglesintersect": 235, "plot": 68, "point": [69, 316, 319, 320], "pointinbox": 236, "pointinsurf": 237, "pointintri": 238, "points2octre": 195, "pointsinsurf": 239, "pointsintri": 240, "pointsinvoxel": 241, "polygon2edg": 98, "primit": [77, 167, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213], "princip": 315, "print": 196, "procedur": 317, "project": 80, "project2surfac": 278, "properti": [20, 308], "purpos": 311, "pypi": 306, "pyramid2edg": 99, "pyramid2fac": 100, "pyramid2tet": 101, "python": [306, 311], "quad2edg": 102, "quad2tri": 103, "quad_skew": 228, "quadfit": 128, "quadrat": 315, "qualiti": [78, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230], "queri": 76, "rai": [79, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 320], "rayboxesintersect": 243, "rayboxintersect": 242, "rayoctreeintersect": 244, "raysegmentsintersect": 245, "rayssurfintersect": 249, "raystrianglesintersect": 250, "raysurfintersect": 246, "raytriangleintersect": 247, "raytrianglesintersect": 248, "read": [70, 144], "refer": [0, 309], "relabelnod": 279, "removeelem": 71, "renumberfacesbyset": 46, "renumbernodesbyset": 47, "reposit": [19, 318], "represent": 301, "reset": 72, "retriangul": 316, "revolv": 211, "rmax": 168, "rmin": 169, "roadmap": 1, "scipi": 136, "searchoctre": 197, "searchoctreetri": 198, "segment": 320, "segmentsegmentintersect": 251, "segmentspringsmooth": 185, "segmentssegmentsintersect": 252, "set_vispy_backend": 299, "shape": [7, 77, 315, 320], "shapecategori": 129, "shapeindex": 130, "skew": 223, "smartlaplaciansmooth": 186, "smooth": [5, 19, 321], "solid": 302, "solid2edg": 104, "solid2fac": 105, "solid2surfac": 106, "solid2tet": 107, "sortraggedbylength": 280, "sourc": 306, "sphere": [170, 212], "splitmesh": 83, "splitraggedbylength": 281, "spring": 321, "squar": 314, "statement": 311, "structur": 317, "submodul": 0, "summari": 311, "surf": 310, "surf2dual": 108, "surf2edg": 109, "surf2tri": 110, "surf2voxel": 111, "surfac": [5, 52, 80, 310, 315, 319, 320], "surface2octre": 199, "surfacemesh": [140, 146], "surfacenodeoptim": [141, 147], "surfconn": 48, "surfdihedralangl": 224, "surfelemconn": 49, "surfmap": 282, "surfnod": 51, "surfnodeneighbor": 50, "surfselfintersect": 253, "surfsurfintersect": 254, "tabl": 317, "tangentiallaplaciansmooth": 187, "test": [79, 316, 320], "tet102tet4": 112, "tet2edg": 113, "tet2fac": 114, "tet42tet10": 115, "tet_vol_skew": 229, "tetcontract": 188, "tetflip": 189, "tetimprov": 190, "tetmesh": [142, 148], "tetmeshvol": 283, "tetrahedr": 16, "tetrahedra": 314, "tetsplit": 191, "theori": 313, "thicken": [171, 173], "thickenf": 172, "threshold": [53, 308], "time": [4, 9, 11, 312], "topolog": 318, "topologi": [6, 19], "toru": [174, 213], "tpm": 6, "tri2edg": 116, "tri_skew": 230, "triangl": [137, 320], "triangleboxintersect": 255, "trianglesplittingtriangul": 138, "trianglestrianglesintersect": 258, "trianglestrianglesintersectionpt": 259, "triangletriangleintersect": 256, "triangletriangleintersectionpt": 257, "triangul": [16, 139, 316], "trisurfvol": 284, "type": [14, 303, 310], "union": [175, 177], "unionf": 176, "unpack": 308, "up": 80, "user": 300, "util": [18, 76, 80, 81, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294], "valid": 73, "valuemap": 285, "view": [74, 298], "visual": [81, 295, 296, 297, 298, 299], "vol": 310, "volum": [225, 310], "voxel": [310, 319], "voxel2im": 117, "voxel2octre": 200, "voxelmesh": [143, 149], "watson": 316, "wedge2edg": 118, "wedge2fac": 119, "wedge2tet": 120, "what": [305, 310], "work": 308, "write": [75, 145], "xplane": 178, "yplane": 179, "zplane": 180}})