Search.setIndex({"alltitles": {"2D Example": [[296, "d-example"]], "2D Planar Meshes": [[304, "d-planar-meshes"]], "2D to 3D Constructions": [[78, "d-to-3d-constructions"]], "2\u21923 and 3\u21922 Flips": [[311, null]], "3D Surfaces": [[304, "d-surfaces"]], "API Reference": [[0, null]], "Acknowledgements": [[305, "acknowledgements"]], "Analytical Curvature": [[309, "analytical-curvature"]], "Bowyer-Watson": [[310, "bowyer-watson"]], "Bowyer-Watson: Initialization": [[310, "bowyer-watson-initialization"]], "Bowyer-Watson: Point Insertion": [[310, "bowyer-watson-point-insertion"]], "Calculating Curvature": [[309, "calculating-curvature"]], "Cavity Formation": [[310, "cavity-formation"]], "Circumcircle Test": [[310, "circumcircle-test"]], "Computation times": [[4, null], [9, null], [11, null], [306, null]], "Connectivity Representations": [[296, null]], "Connectivity conversion": [[14, "connectivity-conversion"]], "Constructive Solid Geometry": [[297, null]], "Contour": [[308, null]], "Contouring": [[13, "contouring"]], "Conventions": [[309, "conventions"]], "Conversion From Octree": [[77, "conversion-from-octree"]], "Convex Hull": [[16, "convex-hull"]], "Core dependencies": [[295, "core-dependencies"]], "Creating a Surface": [[5, "creating-a-surface"]], "Cubic Surface Fitting": [[309, "cubic-surface-fitting"]], "Curvature": [[309, null]], "Curvature Analysis": [[2, null]], "Curvature Calculation": [[15, "curvature-calculation"]], "Curvature Conversion": [[15, "curvature-conversion"]], "Curvature Metrics": [[309, "curvature-metrics"]], "Curvature calculation": [[2, "curvature-calculation"]], "Curvedness": [[309, "curvedness"]], "Data Structure": [[311, "data-structure"]], "Defining an implicit function": [[5, "defining-an-implicit-function"]], "Defining implicit functions": [[300, "defining-implicit-functions"]], "Delaunay Triangulation": [[310, null]], "Dependencies": [[295, "dependencies"]], "Development": [[1, null]], "Edge Table": [[311, "id3"]], "Element Table": [[311, "id1"]], "Element Types": [[298, null]], "Element type conversion": [[14, "element-type-conversion"]], "Error Measurement": [[2, "error-measurement"]], "Euclidean Distance Error": [[313, "euclidean-distance-error"]], "Examples": [[10, null]], "Explicit CSG": [[297, "explicit-csg"]], "Face Table": [[311, "id2"]], "File IO": [[17, "file-io"]], "File Input/Output": [[301, null]], "Flipping Procedure": [[311, "flipping-procedure"]], "Gaussian Curvature": [[309, "gaussian-curvature"]], "Generating Octrees": [[313, "generating-octrees"]], "Getting Started": [[295, "getting-started"]], "Image files": [[301, "image-files"]], "Image-based Mesh Generation": [[17, "image-based-mesh-generation"]], "Image-based Meshing": [[299, null]], "Images in MyMesh": [[299, "images-in-mymesh"]], "Implicit CSG": [[297, "implicit-csg"]], "Implicit Function Octrees": [[313, "implicit-function-octrees"]], "Implicit Function Operators": [[18, "implicit-function-operators"]], "Implicit Functions": [[18, "implicit-functions"]], "Implicit Meshing": [[300, null]], "Implicit meshing": [[5, null]], "Improvement": [[312, null]], "Inside/Outside Tests": [[80, "inside-outside-tests"]], "Installing from source:": [[295, "installing-from-source"]], "Interpretation": [[309, "interpretation"]], "Intersection Tests": [[80, "intersection-tests"]], "Line Meshes (Type='line')": [[304, "line-meshes-type-line"]], "Local mesh topology": [[19, "local-mesh-topology"]], "Marching Cubes": [[308, "marching-cubes"]], "Marching Cubes 33": [[308, "marching-cubes-33"]], "Marching Squares": [[308, "marching-squares"]], "Marching Tetrahedra": [[308, "marching-tetrahedra"]], "Mean Curvature": [[309, "mean-curvature"]], "Mesh Analysis Examples": [[3, null], [10, "mesh-analysis-examples"]], "Mesh Clean Up": [[81, "mesh-clean-up"]], "Mesh Connectivity": [[81, "mesh-connectivity"]], "Mesh Generation": [[18, "mesh-generation"]], "Mesh Generation Examples": [[8, null], [10, "mesh-generation-examples"]], "Mesh Manipulations": [[81, "mesh-manipulations"]], "Mesh Measurements": [[81, "mesh-measurements"]], "Mesh Types": [[304, "mesh-types"]], "Mesh files": [[301, "mesh-files"]], "Mesh smoothing/node repositioning": [[19, "mesh-smoothing-node-repositioning"]], "Mesh type conversion": [[14, "mesh-type-conversion"]], "Mesh-Based Curvature": [[309, "mesh-based-curvature"]], "Meshing Implicit Functions": [[300, "meshing-implicit-functions"]], "Methods": [[20, "methods"]], "Miscellaneous": [[81, "miscellaneous"]], "Mixed-Topology TPMS": [[6, null]], "MyMesh: General purpose, implicit, and image-based meshing in python": [[305, null]], "Node Repositioning": [[312, "node-repositioning"]], "Node Spring-based": [[315, "node-spring-based"]], "Objects": [[0, "objects"]], "Octree": [[313, null]], "Octree Creation": [[77, "octree-creation"]], "Octree Definition": [[313, "octree-definition"]], "Octree Querying": [[77, "octree-querying"]], "Octree Utilities": [[77, "octree-utilities"]], "On-demand properties": [[302, "on-demand-properties"]], "Operations": [[12, "operations"]], "Optional dependencies": [[295, "optional-dependencies"]], "Other Implicit Mesh Utilities": [[18, "other-implicit-mesh-utilities"]], "Plane-Box Intersection": [[314, "plane-box-intersection"]], "Plane-Shape Intersection Tests": [[314, "plane-shape-intersection-tests"]], "Plane-Triangle Intersection": [[314, "plane-triangle-intersection"]], "Point Cloud Octrees": [[313, "point-cloud-octrees"]], "Point Inclusion Tests": [[314, "point-inclusion-tests"]], "Point Location": [[310, "point-location"]], "Point in Surface": [[314, "point-in-surface"]], "Principal Curvatures": [[309, "principal-curvatures"]], "Properties": [[20, "properties"]], "Python Package Index (PyPI)": [[295, "python-package-index-pypi"]], "Quadratic Surface Fitting": [[309, "quadratic-surface-fitting"]], "Quality Calculation Helper Functions": [[79, "quality-calculation-helper-functions"]], "Quality Metrics": [[79, "quality-metrics"]], "Ray-Box Intersection": [[314, "ray-box-intersection"]], "Ray-Segment Intersection": [[314, "ray-segment-intersection"]], "Ray-Shape Intersection Tests": [[314, "ray-shape-intersection-tests"]], "Ray-Triangle Intersection": [[314, "ray-triangle-intersection"]], "Rays": [[314, null]], "References": [[303, null]], "Retriangulation": [[310, "retriangulation"]], "Roadmap & Planned features": [[1, "roadmap-planned-features"]], "Segment-Segment Intersection": [[314, "segment-segment-intersection"]], "Shape Index": [[309, "shape-index"]], "Shape-Shape Intersection Tests": [[314, "shape-shape-intersection-tests"]], "Shapes": [[78, "shapes"]], "Smoothing": [[5, "smoothing"]], "Spring-based Smoothing": [[315, null]], "Statement of need": [[305, "statement-of-need"]], "Submodules": [[0, "submodules"]], "Summary": [[305, "summary"]], "Surface Mesh Octrees": [[313, "surface-mesh-octrees"]], "Surface Meshes (Type='surf')": [[304, "surface-meshes-type-surf"]], "Surface Projection": [[81, "surface-projection"]], "Sweep Construction": [[7, null]], "Tetrahedralization": [[16, "tetrahedralization"]], "Theory Guide": [[307, null]], "Topological Modifications": [[312, "topological-modifications"]], "Triangle-Box Intersection": [[314, "triangle-box-intersection"]], "Triangle-Triangle Intersection": [[314, "triangle-triangle-intersection"]], "Triangulation": [[16, "triangulation"]], "Unpacking": [[302, "unpacking"]], "User Guide": [[295, null]], "Volume Meshes (Type='vol')": [[304, "volume-meshes-type-vol"]], "Voxel Meshes": [[304, "voxel-meshes"]], "Voxel Octrees": [[313, "voxel-octrees"]], "What is a mesh?": [[304, null]], "What is an implicit function?": [[300, "what-is-an-implicit-function"]], "Working with the mesh class": [[302, null]], "mymesh.booleans": [[12, null]], "mymesh.booleans.MeshBooleans": [[83, null]], "mymesh.booleans.SplitMesh": [[84, null]], "mymesh.contour": [[13, null]], "mymesh.contour.Adaptive": [[85, null]], "mymesh.contour.MarchingCubes": [[86, null]], "mymesh.contour.MarchingCubesImage": [[87, null]], "mymesh.contour.MarchingSquares": [[88, null]], "mymesh.contour.MarchingSquaresImage": [[89, null]], "mymesh.contour.MarchingTetrahedra": [[90, null]], "mymesh.converter": [[14, null]], "mymesh.converter.EdgesByElement": [[91, null]], "mymesh.converter.edges2unique": [[92, null]], "mymesh.converter.faces2surface": [[93, null]], "mymesh.converter.faces2unique": [[94, null]], "mymesh.converter.hex2edges": [[95, null]], "mymesh.converter.hex2faces": [[96, null]], "mymesh.converter.hex2tet": [[97, null]], "mymesh.converter.im2voxel": [[98, null]], "mymesh.converter.polygon2edges": [[99, null]], "mymesh.converter.pyramid2edges": [[100, null]], "mymesh.converter.pyramid2faces": [[101, null]], "mymesh.converter.pyramid2tet": [[102, null]], "mymesh.converter.quad2edges": [[103, null]], "mymesh.converter.quad2tri": [[104, null]], "mymesh.converter.solid2edges": [[105, null]], "mymesh.converter.solid2faces": [[106, null]], "mymesh.converter.solid2surface": [[107, null]], "mymesh.converter.solid2tets": [[108, null]], "mymesh.converter.surf2dual": [[109, null]], "mymesh.converter.surf2edges": [[110, null]], "mymesh.converter.surf2voxel": [[111, null]], "mymesh.converter.tet102tet4": [[112, null]], "mymesh.converter.tet2edges": [[113, null]], "mymesh.converter.tet2faces": [[114, null]], "mymesh.converter.tet42tet10": [[115, null]], "mymesh.converter.tri2edges": [[116, null]], "mymesh.converter.voxel2im": [[117, null]], "mymesh.converter.wedge2edges": [[118, null]], "mymesh.converter.wedge2faces": [[119, null]], "mymesh.converter.wedge2tet": [[120, null]], "mymesh.curvature": [[15, null]], "mymesh.curvature.AnalyticalCurvature": [[121, null]], "mymesh.curvature.CubicFit": [[122, null]], "mymesh.curvature.Curvedness": [[123, null]], "mymesh.curvature.GaussianCurvature": [[124, null]], "mymesh.curvature.ImageCurvature": [[125, null]], "mymesh.curvature.MeanCurvature": [[126, null]], "mymesh.curvature.NormCurve": [[127, null]], "mymesh.curvature.QuadFit": [[128, null]], "mymesh.curvature.ShapeCategory": [[129, null]], "mymesh.curvature.ShapeIndex": [[130, null]], "mymesh.delaunay": [[16, null]], "mymesh.delaunay.BowyerWatson2d": [[131, null]], "mymesh.delaunay.BowyerWatson3d": [[132, null]], "mymesh.delaunay.ConvexHull": [[133, null]], "mymesh.delaunay.ConvexHullFanTriangulation": [[134, null]], "mymesh.delaunay.ConvexHull_GiftWrapping": [[135, null]], "mymesh.delaunay.SciPy": [[136, null]], "mymesh.delaunay.Triangle": [[137, null]], "mymesh.delaunay.TriangleSplittingTriangulation": [[138, null]], "mymesh.delaunay.Triangulate": [[139, null]], "mymesh.image": [[17, null]], "mymesh.image.SurfaceMesh": [[140, null]], "mymesh.image.SurfaceNodeOptimization": [[141, null]], "mymesh.image.TetMesh": [[142, null]], "mymesh.image.VoxelMesh": [[143, null]], "mymesh.image.read": [[144, null]], "mymesh.image.write": [[145, null]], "mymesh.implicit": [[18, null]], "mymesh.implicit.SurfaceMesh": [[146, null]], "mymesh.implicit.SurfaceNodeOptimization": [[147, null]], "mymesh.implicit.TetMesh": [[148, null]], "mymesh.implicit.VoxelMesh": [[149, null]], "mymesh.implicit.box": [[150, null]], "mymesh.implicit.cylinder": [[151, null]], "mymesh.implicit.diamond": [[152, null]], "mymesh.implicit.diff": [[153, null]], "mymesh.implicit.difff": [[154, null]], "mymesh.implicit.diffs": [[155, null]], "mymesh.implicit.grid2fun": [[156, null]], "mymesh.implicit.grid2grad": [[157, null]], "mymesh.implicit.gyroid": [[158, null]], "mymesh.implicit.intersection": [[159, null]], "mymesh.implicit.intersectionf": [[160, null]], "mymesh.implicit.intersections": [[161, null]], "mymesh.implicit.lidinoid": [[162, null]], "mymesh.implicit.mesh2sdf": [[163, null]], "mymesh.implicit.mesh2udf": [[164, null]], "mymesh.implicit.neovius": [[165, null]], "mymesh.implicit.offset": [[166, null]], "mymesh.implicit.primitive": [[167, null]], "mymesh.implicit.rMax": [[168, null]], "mymesh.implicit.rMin": [[169, null]], "mymesh.implicit.sphere": [[170, null]], "mymesh.implicit.thicken": [[171, null]], "mymesh.implicit.thickenf": [[172, null]], "mymesh.implicit.thickens": [[173, null]], "mymesh.implicit.torus": [[174, null]], "mymesh.implicit.union": [[175, null]], "mymesh.implicit.unionf": [[176, null]], "mymesh.implicit.unions": [[177, null]], "mymesh.implicit.xplane": [[178, null]], "mymesh.implicit.yplane": [[179, null]], "mymesh.implicit.zplane": [[180, null]], "mymesh.improvement": [[19, null]], "mymesh.improvement.GeoTransformSmoothing": [[181, null]], "mymesh.improvement.GlobalLaplacianSmoothing": [[182, null]], "mymesh.improvement.LocalLaplacianSmoothing": [[183, null]], "mymesh.improvement.NodeSpringSmoothing": [[184, null]], "mymesh.improvement.SegmentSpringSmoothing": [[185, null]], "mymesh.improvement.SmartLaplacianSmoothing": [[186, null]], "mymesh.improvement.TangentialLaplacianSmoothing": [[187, null]], "mymesh.improvement.TetContract": [[188, null]], "mymesh.improvement.TetFlip": [[189, null]], "mymesh.improvement.TetImprove": [[190, null]], "mymesh.improvement.TetSplit": [[191, null]], "mymesh.mesh": [[20, null]], "mymesh.mesh.mesh.AxisAlign": [[21, null]], "mymesh.mesh.mesh.BoundaryConn": [[22, null]], "mymesh.mesh.mesh.BoundaryNodes": [[23, null]], "mymesh.mesh.mesh.Centroids": [[24, null]], "mymesh.mesh.mesh.Clip": [[25, null]], "mymesh.mesh.mesh.Contour": [[26, null]], "mymesh.mesh.mesh.CreateBoundaryLayer": [[27, null]], "mymesh.mesh.mesh.EdgeConn": [[28, null]], "mymesh.mesh.mesh.EdgeElemConn": [[29, null]], "mymesh.mesh.mesh.Edges": [[30, null]], "mymesh.mesh.mesh.ElemConn": [[31, null]], "mymesh.mesh.mesh.ElemNeighbors": [[32, null]], "mymesh.mesh.mesh.ElemNormals": [[33, null]], "mymesh.mesh.mesh.EulerCharacteristic": [[34, null]], "mymesh.mesh.mesh.FaceConn": [[35, null]], "mymesh.mesh.mesh.FaceElemConn": [[36, null]], "mymesh.mesh.mesh.Faces": [[37, null]], "mymesh.mesh.mesh.Genus": [[38, null]], "mymesh.mesh.mesh.ND": [[39, null]], "mymesh.mesh.mesh.NEdge": [[40, null]], "mymesh.mesh.mesh.NElem": [[41, null]], "mymesh.mesh.mesh.NFace": [[42, null]], "mymesh.mesh.mesh.NNode": [[43, null]], "mymesh.mesh.mesh.NodeNeighbors": [[44, null]], "mymesh.mesh.mesh.NodeNormals": [[45, null]], "mymesh.mesh.mesh.NodeNormalsMethod": [[46, null]], "mymesh.mesh.mesh.RenumberFacesBySet": [[47, null]], "mymesh.mesh.mesh.RenumberNodesBySet": [[48, null]], "mymesh.mesh.mesh.SurfConn": [[49, null]], "mymesh.mesh.mesh.SurfElemConn": [[50, null]], "mymesh.mesh.mesh.SurfNodeNeighbors": [[51, null]], "mymesh.mesh.mesh.SurfNodes": [[52, null]], "mymesh.mesh.mesh.Surface": [[53, null]], "mymesh.mesh.mesh.Threshold": [[54, null]], "mymesh.mesh.mesh.addEdges": [[55, null]], "mymesh.mesh.mesh.addElems": [[56, null]], "mymesh.mesh.mesh.addFaces": [[57, null]], "mymesh.mesh.mesh.addNodes": [[58, null]], "mymesh.mesh.mesh.cells": [[59, null]], "mymesh.mesh.mesh.cleanup": [[60, null]], "mymesh.mesh.mesh.copy": [[61, null]], "mymesh.mesh.mesh.getCurvature": [[62, null]], "mymesh.mesh.mesh.getQuality": [[63, null]], "mymesh.mesh.mesh.identify_type": [[64, null]], "mymesh.mesh.mesh.imread": [[65, null]], "mymesh.mesh.mesh.merge": [[66, null]], "mymesh.mesh.mesh.meshio2mymesh": [[67, null]], "mymesh.mesh.mesh.mymesh2meshio": [[68, null]], "mymesh.mesh.mesh.plot": [[69, null]], "mymesh.mesh.mesh.points": [[70, null]], "mymesh.mesh.mesh.read": [[71, null]], "mymesh.mesh.mesh.removeElems": [[72, null]], "mymesh.mesh.mesh.reset": [[73, null]], "mymesh.mesh.mesh.validate": [[74, null]], "mymesh.mesh.mesh.view": [[75, null]], "mymesh.mesh.mesh.write": [[76, null]], "mymesh.octree": [[77, null]], "mymesh.octree.Function2Octree": [[192, null]], "mymesh.octree.Octree2Dual": [[193, null]], "mymesh.octree.Octree2Voxel": [[194, null]], "mymesh.octree.Points2Octree": [[195, null]], "mymesh.octree.Print": [[196, null]], "mymesh.octree.SearchOctree": [[197, null]], "mymesh.octree.SearchOctreeTri": [[198, null]], "mymesh.octree.Surface2Octree": [[199, null]], "mymesh.octree.Voxel2Octree": [[200, null]], "mymesh.octree.getAllLeaf": [[201, null]], "mymesh.primitives": [[78, null]], "mymesh.primitives.Box": [[202, null]], "mymesh.primitives.Circle": [[203, null]], "mymesh.primitives.CirclePt": [[204, null]], "mymesh.primitives.Cylinder": [[205, null]], "mymesh.primitives.Extrude": [[206, null]], "mymesh.primitives.Grid": [[207, null]], "mymesh.primitives.Grid2D": [[208, null]], "mymesh.primitives.Line": [[209, null]], "mymesh.primitives.Plane": [[210, null]], "mymesh.primitives.Revolve": [[211, null]], "mymesh.primitives.Sphere": [[212, null]], "mymesh.primitives.Torus": [[213, null]], "mymesh.quality": [[79, null]], "mymesh.quality.Area": [[214, null]], "mymesh.quality.AspectRatio": [[215, null]], "mymesh.quality.InverseOrthogonalQuality": [[216, null]], "mymesh.quality.InverseOrthogonality": [[217, null]], "mymesh.quality.MaxDihedral": [[218, null]], "mymesh.quality.MeanRatio": [[219, null]], "mymesh.quality.MinDihedral": [[220, null]], "mymesh.quality.OrthogonalQuality": [[221, null]], "mymesh.quality.Orthogonality": [[222, null]], "mymesh.quality.Skewness": [[223, null]], "mymesh.quality.SurfDihedralAngles": [[224, null]], "mymesh.quality.Volume": [[225, null]], "mymesh.quality.dihedralAngles": [[226, null]], "mymesh.quality.equiangular_skewness": [[227, null]], "mymesh.quality.quad_skewness": [[228, null]], "mymesh.quality.tet_vol_skewness": [[229, null]], "mymesh.quality.tri_skewness": [[230, null]], "mymesh.rays": [[80, null]], "mymesh.rays.BoxTrianglesIntersection": [[231, null]], "mymesh.rays.PlaneBoxIntersection": [[232, null]], "mymesh.rays.PlaneSurfIntersection": [[233, null]], "mymesh.rays.PlaneTriangleIntersection": [[234, null]], "mymesh.rays.PlaneTrianglesIntersection": [[235, null]], "mymesh.rays.PointInBox": [[236, null]], "mymesh.rays.PointInSurf": [[237, null]], "mymesh.rays.PointInTri": [[238, null]], "mymesh.rays.PointsInSurf": [[239, null]], "mymesh.rays.PointsInTris": [[240, null]], "mymesh.rays.PointsInVoxel": [[241, null]], "mymesh.rays.RayBoxIntersection": [[242, null]], "mymesh.rays.RayBoxesIntersection": [[243, null]], "mymesh.rays.RayOctreeIntersection": [[244, null]], "mymesh.rays.RaySegmentsIntersection": [[245, null]], "mymesh.rays.RaySurfIntersection": [[246, null]], "mymesh.rays.RayTriangleIntersection": [[247, null]], "mymesh.rays.RayTrianglesIntersection": [[248, null]], "mymesh.rays.RaysSurfIntersection": [[249, null]], "mymesh.rays.RaysTrianglesIntersection": [[250, null]], "mymesh.rays.SegmentSegmentIntersection": [[251, null]], "mymesh.rays.SegmentsSegmentsIntersection": [[252, null]], "mymesh.rays.SurfSelfIntersection": [[253, null]], "mymesh.rays.SurfSurfIntersection": [[254, null]], "mymesh.rays.TriangleBoxIntersection": [[255, null]], "mymesh.rays.TriangleTriangleIntersection": [[256, null]], "mymesh.rays.TriangleTriangleIntersectionPt": [[257, null]], "mymesh.rays.TrianglesTrianglesIntersection": [[258, null]], "mymesh.rays.TrianglesTrianglesIntersectionPts": [[259, null]], "mymesh.utils": [[81, null]], "mymesh.utils.AABB": [[260, null]], "mymesh.utils.BaryTet": [[261, null]], "mymesh.utils.BaryTri": [[262, null]], "mymesh.utils.BaryTris": [[263, null]], "mymesh.utils.CalcFaceNormal": [[264, null]], "mymesh.utils.Centroids": [[265, null]], "mymesh.utils.CleanupDegenerateElements": [[266, null]], "mymesh.utils.DeleteDegenerateElements": [[267, null]], "mymesh.utils.DeleteDuplicateNodes": [[268, null]], "mymesh.utils.DetectFeatures": [[269, null]], "mymesh.utils.DilateVoxel": [[270, null]], "mymesh.utils.ErodeVoxel": [[271, null]], "mymesh.utils.ExtractRagged": [[272, null]], "mymesh.utils.Face2NodeNormal": [[273, null]], "mymesh.utils.MVBB": [[274, null]], "mymesh.utils.MergeMesh": [[275, null]], "mymesh.utils.MirrorMesh": [[276, null]], "mymesh.utils.PadRagged": [[277, null]], "mymesh.utils.Project2Surface": [[278, null]], "mymesh.utils.RelabelNodes": [[279, null]], "mymesh.utils.SortRaggedByLength": [[280, null]], "mymesh.utils.SplitRaggedByLength": [[281, null]], "mymesh.utils.SurfMapping": [[282, null]], "mymesh.utils.TetMeshVol": [[283, null]], "mymesh.utils.TriSurfVol": [[284, null]], "mymesh.utils.ValueMapping": [[285, null]], "mymesh.utils.getConnectedElements": [[286, null]], "mymesh.utils.getConnectedNodes": [[287, null]], "mymesh.utils.getElemConnectivity": [[288, null]], "mymesh.utils.getElemNeighbors": [[289, null]], "mymesh.utils.getNodeNeighborhood": [[290, null]], "mymesh.utils.getNodeNeighborhoodByRadius": [[291, null]], "mymesh.utils.getNodeNeighbors": [[292, null]], "mymesh.utils.identify_type": [[293, null]], "mymesh.utils.makePyramidLayer": [[294, null]], "mymesh.visualize": [[82, null]]}, "docnames": ["api", "dev", "examples/MeshAnalysis/demo_curvature", "examples/MeshAnalysis/index", "examples/MeshAnalysis/sg_execution_times", "examples/MeshGeneration/demo_heart", "examples/MeshGeneration/demo_mixed-top", "examples/MeshGeneration/demo_pasta", "examples/MeshGeneration/index", "examples/MeshGeneration/sg_execution_times", "examples/index", "examples/sg_execution_times", "generated/mymesh.booleans", "generated/mymesh.contour", "generated/mymesh.converter", "generated/mymesh.curvature", "generated/mymesh.delaunay", "generated/mymesh.image", "generated/mymesh.implicit", "generated/mymesh.improvement", "generated/mymesh.mesh", "generated/mymesh.mesh.mesh.AxisAlign", "generated/mymesh.mesh.mesh.BoundaryConn", "generated/mymesh.mesh.mesh.BoundaryNodes", "generated/mymesh.mesh.mesh.Centroids", "generated/mymesh.mesh.mesh.Clip", "generated/mymesh.mesh.mesh.Contour", "generated/mymesh.mesh.mesh.CreateBoundaryLayer", "generated/mymesh.mesh.mesh.EdgeConn", "generated/mymesh.mesh.mesh.EdgeElemConn", "generated/mymesh.mesh.mesh.Edges", "generated/mymesh.mesh.mesh.ElemConn", "generated/mymesh.mesh.mesh.ElemNeighbors", "generated/mymesh.mesh.mesh.ElemNormals", "generated/mymesh.mesh.mesh.EulerCharacteristic", "generated/mymesh.mesh.mesh.FaceConn", "generated/mymesh.mesh.mesh.FaceElemConn", "generated/mymesh.mesh.mesh.Faces", "generated/mymesh.mesh.mesh.Genus", "generated/mymesh.mesh.mesh.ND", "generated/mymesh.mesh.mesh.NEdge", "generated/mymesh.mesh.mesh.NElem", "generated/mymesh.mesh.mesh.NFace", "generated/mymesh.mesh.mesh.NNode", "generated/mymesh.mesh.mesh.NodeNeighbors", "generated/mymesh.mesh.mesh.NodeNormals", "generated/mymesh.mesh.mesh.NodeNormalsMethod", "generated/mymesh.mesh.mesh.RenumberFacesBySet", "generated/mymesh.mesh.mesh.RenumberNodesBySet", "generated/mymesh.mesh.mesh.SurfConn", "generated/mymesh.mesh.mesh.SurfElemConn", "generated/mymesh.mesh.mesh.SurfNodeNeighbors", "generated/mymesh.mesh.mesh.SurfNodes", "generated/mymesh.mesh.mesh.Surface", "generated/mymesh.mesh.mesh.Threshold", "generated/mymesh.mesh.mesh.addEdges", "generated/mymesh.mesh.mesh.addElems", "generated/mymesh.mesh.mesh.addFaces", "generated/mymesh.mesh.mesh.addNodes", "generated/mymesh.mesh.mesh.cells", "generated/mymesh.mesh.mesh.cleanup", "generated/mymesh.mesh.mesh.copy", "generated/mymesh.mesh.mesh.getCurvature", "generated/mymesh.mesh.mesh.getQuality", "generated/mymesh.mesh.mesh.identify_type", "generated/mymesh.mesh.mesh.imread", "generated/mymesh.mesh.mesh.merge", "generated/mymesh.mesh.mesh.meshio2mymesh", "generated/mymesh.mesh.mesh.mymesh2meshio", "generated/mymesh.mesh.mesh.plot", "generated/mymesh.mesh.mesh.points", "generated/mymesh.mesh.mesh.read", "generated/mymesh.mesh.mesh.removeElems", "generated/mymesh.mesh.mesh.reset", "generated/mymesh.mesh.mesh.validate", "generated/mymesh.mesh.mesh.view", "generated/mymesh.mesh.mesh.write", "generated/mymesh.octree", "generated/mymesh.primitives", "generated/mymesh.quality", "generated/mymesh.rays", "generated/mymesh.utils", "generated/mymesh.visualize", "generated/submodules/mymesh.booleans.MeshBooleans", "generated/submodules/mymesh.booleans.SplitMesh", "generated/submodules/mymesh.contour.Adaptive", "generated/submodules/mymesh.contour.MarchingCubes", "generated/submodules/mymesh.contour.MarchingCubesImage", "generated/submodules/mymesh.contour.MarchingSquares", "generated/submodules/mymesh.contour.MarchingSquaresImage", "generated/submodules/mymesh.contour.MarchingTetrahedra", "generated/submodules/mymesh.converter.EdgesByElement", "generated/submodules/mymesh.converter.edges2unique", "generated/submodules/mymesh.converter.faces2surface", "generated/submodules/mymesh.converter.faces2unique", "generated/submodules/mymesh.converter.hex2edges", "generated/submodules/mymesh.converter.hex2faces", "generated/submodules/mymesh.converter.hex2tet", "generated/submodules/mymesh.converter.im2voxel", "generated/submodules/mymesh.converter.polygon2edges", "generated/submodules/mymesh.converter.pyramid2edges", "generated/submodules/mymesh.converter.pyramid2faces", "generated/submodules/mymesh.converter.pyramid2tet", "generated/submodules/mymesh.converter.quad2edges", "generated/submodules/mymesh.converter.quad2tri", "generated/submodules/mymesh.converter.solid2edges", "generated/submodules/mymesh.converter.solid2faces", "generated/submodules/mymesh.converter.solid2surface", "generated/submodules/mymesh.converter.solid2tets", "generated/submodules/mymesh.converter.surf2dual", "generated/submodules/mymesh.converter.surf2edges", "generated/submodules/mymesh.converter.surf2voxel", "generated/submodules/mymesh.converter.tet102tet4", "generated/submodules/mymesh.converter.tet2edges", "generated/submodules/mymesh.converter.tet2faces", "generated/submodules/mymesh.converter.tet42tet10", "generated/submodules/mymesh.converter.tri2edges", "generated/submodules/mymesh.converter.voxel2im", "generated/submodules/mymesh.converter.wedge2edges", "generated/submodules/mymesh.converter.wedge2faces", "generated/submodules/mymesh.converter.wedge2tet", "generated/submodules/mymesh.curvature.AnalyticalCurvature", "generated/submodules/mymesh.curvature.CubicFit", "generated/submodules/mymesh.curvature.Curvedness", "generated/submodules/mymesh.curvature.GaussianCurvature", "generated/submodules/mymesh.curvature.ImageCurvature", "generated/submodules/mymesh.curvature.MeanCurvature", "generated/submodules/mymesh.curvature.NormCurve", "generated/submodules/mymesh.curvature.QuadFit", "generated/submodules/mymesh.curvature.ShapeCategory", "generated/submodules/mymesh.curvature.ShapeIndex", "generated/submodules/mymesh.delaunay.BowyerWatson2d", "generated/submodules/mymesh.delaunay.BowyerWatson3d", "generated/submodules/mymesh.delaunay.ConvexHull", "generated/submodules/mymesh.delaunay.ConvexHullFanTriangulation", "generated/submodules/mymesh.delaunay.ConvexHull_GiftWrapping", "generated/submodules/mymesh.delaunay.SciPy", "generated/submodules/mymesh.delaunay.Triangle", "generated/submodules/mymesh.delaunay.TriangleSplittingTriangulation", "generated/submodules/mymesh.delaunay.Triangulate", "generated/submodules/mymesh.image.SurfaceMesh", "generated/submodules/mymesh.image.SurfaceNodeOptimization", "generated/submodules/mymesh.image.TetMesh", "generated/submodules/mymesh.image.VoxelMesh", "generated/submodules/mymesh.image.read", "generated/submodules/mymesh.image.write", "generated/submodules/mymesh.implicit.SurfaceMesh", "generated/submodules/mymesh.implicit.SurfaceNodeOptimization", "generated/submodules/mymesh.implicit.TetMesh", "generated/submodules/mymesh.implicit.VoxelMesh", "generated/submodules/mymesh.implicit.box", "generated/submodules/mymesh.implicit.cylinder", "generated/submodules/mymesh.implicit.diamond", "generated/submodules/mymesh.implicit.diff", "generated/submodules/mymesh.implicit.difff", "generated/submodules/mymesh.implicit.diffs", "generated/submodules/mymesh.implicit.grid2fun", "generated/submodules/mymesh.implicit.grid2grad", "generated/submodules/mymesh.implicit.gyroid", "generated/submodules/mymesh.implicit.intersection", "generated/submodules/mymesh.implicit.intersectionf", "generated/submodules/mymesh.implicit.intersections", "generated/submodules/mymesh.implicit.lidinoid", "generated/submodules/mymesh.implicit.mesh2sdf", "generated/submodules/mymesh.implicit.mesh2udf", "generated/submodules/mymesh.implicit.neovius", "generated/submodules/mymesh.implicit.offset", "generated/submodules/mymesh.implicit.primitive", "generated/submodules/mymesh.implicit.rMax", "generated/submodules/mymesh.implicit.rMin", "generated/submodules/mymesh.implicit.sphere", "generated/submodules/mymesh.implicit.thicken", "generated/submodules/mymesh.implicit.thickenf", "generated/submodules/mymesh.implicit.thickens", "generated/submodules/mymesh.implicit.torus", "generated/submodules/mymesh.implicit.union", "generated/submodules/mymesh.implicit.unionf", "generated/submodules/mymesh.implicit.unions", "generated/submodules/mymesh.implicit.xplane", "generated/submodules/mymesh.implicit.yplane", "generated/submodules/mymesh.implicit.zplane", "generated/submodules/mymesh.improvement.GeoTransformSmoothing", "generated/submodules/mymesh.improvement.GlobalLaplacianSmoothing", "generated/submodules/mymesh.improvement.LocalLaplacianSmoothing", "generated/submodules/mymesh.improvement.NodeSpringSmoothing", "generated/submodules/mymesh.improvement.SegmentSpringSmoothing", "generated/submodules/mymesh.improvement.SmartLaplacianSmoothing", "generated/submodules/mymesh.improvement.TangentialLaplacianSmoothing", "generated/submodules/mymesh.improvement.TetContract", "generated/submodules/mymesh.improvement.TetFlip", "generated/submodules/mymesh.improvement.TetImprove", "generated/submodules/mymesh.improvement.TetSplit", "generated/submodules/mymesh.octree.Function2Octree", "generated/submodules/mymesh.octree.Octree2Dual", "generated/submodules/mymesh.octree.Octree2Voxel", "generated/submodules/mymesh.octree.Points2Octree", "generated/submodules/mymesh.octree.Print", "generated/submodules/mymesh.octree.SearchOctree", "generated/submodules/mymesh.octree.SearchOctreeTri", "generated/submodules/mymesh.octree.Surface2Octree", "generated/submodules/mymesh.octree.Voxel2Octree", "generated/submodules/mymesh.octree.getAllLeaf", "generated/submodules/mymesh.primitives.Box", "generated/submodules/mymesh.primitives.Circle", "generated/submodules/mymesh.primitives.CirclePt", "generated/submodules/mymesh.primitives.Cylinder", "generated/submodules/mymesh.primitives.Extrude", "generated/submodules/mymesh.primitives.Grid", "generated/submodules/mymesh.primitives.Grid2D", "generated/submodules/mymesh.primitives.Line", "generated/submodules/mymesh.primitives.Plane", "generated/submodules/mymesh.primitives.Revolve", "generated/submodules/mymesh.primitives.Sphere", "generated/submodules/mymesh.primitives.Torus", "generated/submodules/mymesh.quality.Area", "generated/submodules/mymesh.quality.AspectRatio", "generated/submodules/mymesh.quality.InverseOrthogonalQuality", "generated/submodules/mymesh.quality.InverseOrthogonality", "generated/submodules/mymesh.quality.MaxDihedral", "generated/submodules/mymesh.quality.MeanRatio", "generated/submodules/mymesh.quality.MinDihedral", "generated/submodules/mymesh.quality.OrthogonalQuality", "generated/submodules/mymesh.quality.Orthogonality", "generated/submodules/mymesh.quality.Skewness", "generated/submodules/mymesh.quality.SurfDihedralAngles", "generated/submodules/mymesh.quality.Volume", "generated/submodules/mymesh.quality.dihedralAngles", "generated/submodules/mymesh.quality.equiangular_skewness", "generated/submodules/mymesh.quality.quad_skewness", "generated/submodules/mymesh.quality.tet_vol_skewness", "generated/submodules/mymesh.quality.tri_skewness", "generated/submodules/mymesh.rays.BoxTrianglesIntersection", "generated/submodules/mymesh.rays.PlaneBoxIntersection", "generated/submodules/mymesh.rays.PlaneSurfIntersection", "generated/submodules/mymesh.rays.PlaneTriangleIntersection", "generated/submodules/mymesh.rays.PlaneTrianglesIntersection", "generated/submodules/mymesh.rays.PointInBox", "generated/submodules/mymesh.rays.PointInSurf", "generated/submodules/mymesh.rays.PointInTri", "generated/submodules/mymesh.rays.PointsInSurf", "generated/submodules/mymesh.rays.PointsInTris", "generated/submodules/mymesh.rays.PointsInVoxel", "generated/submodules/mymesh.rays.RayBoxIntersection", "generated/submodules/mymesh.rays.RayBoxesIntersection", "generated/submodules/mymesh.rays.RayOctreeIntersection", "generated/submodules/mymesh.rays.RaySegmentsIntersection", "generated/submodules/mymesh.rays.RaySurfIntersection", "generated/submodules/mymesh.rays.RayTriangleIntersection", "generated/submodules/mymesh.rays.RayTrianglesIntersection", "generated/submodules/mymesh.rays.RaysSurfIntersection", "generated/submodules/mymesh.rays.RaysTrianglesIntersection", "generated/submodules/mymesh.rays.SegmentSegmentIntersection", "generated/submodules/mymesh.rays.SegmentsSegmentsIntersection", "generated/submodules/mymesh.rays.SurfSelfIntersection", "generated/submodules/mymesh.rays.SurfSurfIntersection", "generated/submodules/mymesh.rays.TriangleBoxIntersection", "generated/submodules/mymesh.rays.TriangleTriangleIntersection", "generated/submodules/mymesh.rays.TriangleTriangleIntersectionPt", "generated/submodules/mymesh.rays.TrianglesTrianglesIntersection", "generated/submodules/mymesh.rays.TrianglesTrianglesIntersectionPts", "generated/submodules/mymesh.utils.AABB", "generated/submodules/mymesh.utils.BaryTet", "generated/submodules/mymesh.utils.BaryTri", "generated/submodules/mymesh.utils.BaryTris", "generated/submodules/mymesh.utils.CalcFaceNormal", "generated/submodules/mymesh.utils.Centroids", "generated/submodules/mymesh.utils.CleanupDegenerateElements", "generated/submodules/mymesh.utils.DeleteDegenerateElements", "generated/submodules/mymesh.utils.DeleteDuplicateNodes", "generated/submodules/mymesh.utils.DetectFeatures", "generated/submodules/mymesh.utils.DilateVoxel", "generated/submodules/mymesh.utils.ErodeVoxel", "generated/submodules/mymesh.utils.ExtractRagged", "generated/submodules/mymesh.utils.Face2NodeNormal", "generated/submodules/mymesh.utils.MVBB", "generated/submodules/mymesh.utils.MergeMesh", "generated/submodules/mymesh.utils.MirrorMesh", "generated/submodules/mymesh.utils.PadRagged", "generated/submodules/mymesh.utils.Project2Surface", "generated/submodules/mymesh.utils.RelabelNodes", "generated/submodules/mymesh.utils.SortRaggedByLength", "generated/submodules/mymesh.utils.SplitRaggedByLength", "generated/submodules/mymesh.utils.SurfMapping", "generated/submodules/mymesh.utils.TetMeshVol", "generated/submodules/mymesh.utils.TriSurfVol", "generated/submodules/mymesh.utils.ValueMapping", "generated/submodules/mymesh.utils.getConnectedElements", "generated/submodules/mymesh.utils.getConnectedNodes", "generated/submodules/mymesh.utils.getElemConnectivity", "generated/submodules/mymesh.utils.getElemNeighbors", "generated/submodules/mymesh.utils.getNodeNeighborhood", "generated/submodules/mymesh.utils.getNodeNeighborhoodByRadius", "generated/submodules/mymesh.utils.getNodeNeighbors", "generated/submodules/mymesh.utils.identify_type", "generated/submodules/mymesh.utils.makePyramidLayer", "guide", "guide/connectivity", "guide/csg", "guide/elem_types", "guide/image_meshing", "guide/implicit_meshing", "guide/io", "guide/mesh_class", "guide/ref", "guide/what_mesh", "index", "sg_execution_times", "theory", "theory/contour", "theory/curvature", "theory/delaunay", "theory/flips23", "theory/improvement", "theory/octree", "theory/rays", "theory/springsmooth"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["api.rst", "dev.rst", "examples/MeshAnalysis/demo_curvature.rst", "examples/MeshAnalysis/index.rst", "examples/MeshAnalysis/sg_execution_times.rst", "examples/MeshGeneration/demo_heart.rst", "examples/MeshGeneration/demo_mixed-top.rst", "examples/MeshGeneration/demo_pasta.rst", "examples/MeshGeneration/index.rst", "examples/MeshGeneration/sg_execution_times.rst", "examples/index.rst", "examples/sg_execution_times.rst", "generated/mymesh.booleans.rst", "generated/mymesh.contour.rst", "generated/mymesh.converter.rst", "generated/mymesh.curvature.rst", "generated/mymesh.delaunay.rst", "generated/mymesh.image.rst", "generated/mymesh.implicit.rst", "generated/mymesh.improvement.rst", "generated/mymesh.mesh.rst", "generated/mymesh.mesh.mesh.AxisAlign.rst", "generated/mymesh.mesh.mesh.BoundaryConn.rst", "generated/mymesh.mesh.mesh.BoundaryNodes.rst", "generated/mymesh.mesh.mesh.Centroids.rst", "generated/mymesh.mesh.mesh.Clip.rst", "generated/mymesh.mesh.mesh.Contour.rst", "generated/mymesh.mesh.mesh.CreateBoundaryLayer.rst", "generated/mymesh.mesh.mesh.EdgeConn.rst", "generated/mymesh.mesh.mesh.EdgeElemConn.rst", "generated/mymesh.mesh.mesh.Edges.rst", "generated/mymesh.mesh.mesh.ElemConn.rst", "generated/mymesh.mesh.mesh.ElemNeighbors.rst", "generated/mymesh.mesh.mesh.ElemNormals.rst", "generated/mymesh.mesh.mesh.EulerCharacteristic.rst", "generated/mymesh.mesh.mesh.FaceConn.rst", "generated/mymesh.mesh.mesh.FaceElemConn.rst", "generated/mymesh.mesh.mesh.Faces.rst", "generated/mymesh.mesh.mesh.Genus.rst", "generated/mymesh.mesh.mesh.ND.rst", "generated/mymesh.mesh.mesh.NEdge.rst", "generated/mymesh.mesh.mesh.NElem.rst", "generated/mymesh.mesh.mesh.NFace.rst", "generated/mymesh.mesh.mesh.NNode.rst", "generated/mymesh.mesh.mesh.NodeNeighbors.rst", "generated/mymesh.mesh.mesh.NodeNormals.rst", "generated/mymesh.mesh.mesh.NodeNormalsMethod.rst", "generated/mymesh.mesh.mesh.RenumberFacesBySet.rst", "generated/mymesh.mesh.mesh.RenumberNodesBySet.rst", "generated/mymesh.mesh.mesh.SurfConn.rst", "generated/mymesh.mesh.mesh.SurfElemConn.rst", "generated/mymesh.mesh.mesh.SurfNodeNeighbors.rst", "generated/mymesh.mesh.mesh.SurfNodes.rst", "generated/mymesh.mesh.mesh.Surface.rst", "generated/mymesh.mesh.mesh.Threshold.rst", "generated/mymesh.mesh.mesh.addEdges.rst", "generated/mymesh.mesh.mesh.addElems.rst", "generated/mymesh.mesh.mesh.addFaces.rst", "generated/mymesh.mesh.mesh.addNodes.rst", "generated/mymesh.mesh.mesh.cells.rst", "generated/mymesh.mesh.mesh.cleanup.rst", "generated/mymesh.mesh.mesh.copy.rst", "generated/mymesh.mesh.mesh.getCurvature.rst", "generated/mymesh.mesh.mesh.getQuality.rst", "generated/mymesh.mesh.mesh.identify_type.rst", "generated/mymesh.mesh.mesh.imread.rst", "generated/mymesh.mesh.mesh.merge.rst", "generated/mymesh.mesh.mesh.meshio2mymesh.rst", "generated/mymesh.mesh.mesh.mymesh2meshio.rst", "generated/mymesh.mesh.mesh.plot.rst", "generated/mymesh.mesh.mesh.points.rst", "generated/mymesh.mesh.mesh.read.rst", "generated/mymesh.mesh.mesh.removeElems.rst", "generated/mymesh.mesh.mesh.reset.rst", "generated/mymesh.mesh.mesh.validate.rst", "generated/mymesh.mesh.mesh.view.rst", "generated/mymesh.mesh.mesh.write.rst", "generated/mymesh.octree.rst", "generated/mymesh.primitives.rst", "generated/mymesh.quality.rst", "generated/mymesh.rays.rst", "generated/mymesh.utils.rst", "generated/mymesh.visualize.rst", "generated/submodules/mymesh.booleans.MeshBooleans.rst", "generated/submodules/mymesh.booleans.SplitMesh.rst", "generated/submodules/mymesh.contour.Adaptive.rst", "generated/submodules/mymesh.contour.MarchingCubes.rst", "generated/submodules/mymesh.contour.MarchingCubesImage.rst", "generated/submodules/mymesh.contour.MarchingSquares.rst", "generated/submodules/mymesh.contour.MarchingSquaresImage.rst", "generated/submodules/mymesh.contour.MarchingTetrahedra.rst", "generated/submodules/mymesh.converter.EdgesByElement.rst", "generated/submodules/mymesh.converter.edges2unique.rst", "generated/submodules/mymesh.converter.faces2surface.rst", "generated/submodules/mymesh.converter.faces2unique.rst", "generated/submodules/mymesh.converter.hex2edges.rst", "generated/submodules/mymesh.converter.hex2faces.rst", "generated/submodules/mymesh.converter.hex2tet.rst", "generated/submodules/mymesh.converter.im2voxel.rst", "generated/submodules/mymesh.converter.polygon2edges.rst", "generated/submodules/mymesh.converter.pyramid2edges.rst", "generated/submodules/mymesh.converter.pyramid2faces.rst", "generated/submodules/mymesh.converter.pyramid2tet.rst", "generated/submodules/mymesh.converter.quad2edges.rst", "generated/submodules/mymesh.converter.quad2tri.rst", "generated/submodules/mymesh.converter.solid2edges.rst", "generated/submodules/mymesh.converter.solid2faces.rst", "generated/submodules/mymesh.converter.solid2surface.rst", "generated/submodules/mymesh.converter.solid2tets.rst", "generated/submodules/mymesh.converter.surf2dual.rst", "generated/submodules/mymesh.converter.surf2edges.rst", "generated/submodules/mymesh.converter.surf2voxel.rst", "generated/submodules/mymesh.converter.tet102tet4.rst", "generated/submodules/mymesh.converter.tet2edges.rst", "generated/submodules/mymesh.converter.tet2faces.rst", "generated/submodules/mymesh.converter.tet42tet10.rst", "generated/submodules/mymesh.converter.tri2edges.rst", "generated/submodules/mymesh.converter.voxel2im.rst", "generated/submodules/mymesh.converter.wedge2edges.rst", "generated/submodules/mymesh.converter.wedge2faces.rst", "generated/submodules/mymesh.converter.wedge2tet.rst", "generated/submodules/mymesh.curvature.AnalyticalCurvature.rst", "generated/submodules/mymesh.curvature.CubicFit.rst", "generated/submodules/mymesh.curvature.Curvedness.rst", "generated/submodules/mymesh.curvature.GaussianCurvature.rst", "generated/submodules/mymesh.curvature.ImageCurvature.rst", "generated/submodules/mymesh.curvature.MeanCurvature.rst", "generated/submodules/mymesh.curvature.NormCurve.rst", "generated/submodules/mymesh.curvature.QuadFit.rst", "generated/submodules/mymesh.curvature.ShapeCategory.rst", "generated/submodules/mymesh.curvature.ShapeIndex.rst", "generated/submodules/mymesh.delaunay.BowyerWatson2d.rst", "generated/submodules/mymesh.delaunay.BowyerWatson3d.rst", "generated/submodules/mymesh.delaunay.ConvexHull.rst", "generated/submodules/mymesh.delaunay.ConvexHullFanTriangulation.rst", "generated/submodules/mymesh.delaunay.ConvexHull_GiftWrapping.rst", "generated/submodules/mymesh.delaunay.SciPy.rst", "generated/submodules/mymesh.delaunay.Triangle.rst", "generated/submodules/mymesh.delaunay.TriangleSplittingTriangulation.rst", "generated/submodules/mymesh.delaunay.Triangulate.rst", "generated/submodules/mymesh.image.SurfaceMesh.rst", "generated/submodules/mymesh.image.SurfaceNodeOptimization.rst", "generated/submodules/mymesh.image.TetMesh.rst", "generated/submodules/mymesh.image.VoxelMesh.rst", "generated/submodules/mymesh.image.read.rst", "generated/submodules/mymesh.image.write.rst", "generated/submodules/mymesh.implicit.SurfaceMesh.rst", "generated/submodules/mymesh.implicit.SurfaceNodeOptimization.rst", "generated/submodules/mymesh.implicit.TetMesh.rst", "generated/submodules/mymesh.implicit.VoxelMesh.rst", "generated/submodules/mymesh.implicit.box.rst", "generated/submodules/mymesh.implicit.cylinder.rst", "generated/submodules/mymesh.implicit.diamond.rst", "generated/submodules/mymesh.implicit.diff.rst", "generated/submodules/mymesh.implicit.difff.rst", "generated/submodules/mymesh.implicit.diffs.rst", "generated/submodules/mymesh.implicit.grid2fun.rst", "generated/submodules/mymesh.implicit.grid2grad.rst", "generated/submodules/mymesh.implicit.gyroid.rst", "generated/submodules/mymesh.implicit.intersection.rst", "generated/submodules/mymesh.implicit.intersectionf.rst", "generated/submodules/mymesh.implicit.intersections.rst", "generated/submodules/mymesh.implicit.lidinoid.rst", "generated/submodules/mymesh.implicit.mesh2sdf.rst", "generated/submodules/mymesh.implicit.mesh2udf.rst", "generated/submodules/mymesh.implicit.neovius.rst", "generated/submodules/mymesh.implicit.offset.rst", "generated/submodules/mymesh.implicit.primitive.rst", "generated/submodules/mymesh.implicit.rMax.rst", "generated/submodules/mymesh.implicit.rMin.rst", "generated/submodules/mymesh.implicit.sphere.rst", "generated/submodules/mymesh.implicit.thicken.rst", "generated/submodules/mymesh.implicit.thickenf.rst", "generated/submodules/mymesh.implicit.thickens.rst", "generated/submodules/mymesh.implicit.torus.rst", "generated/submodules/mymesh.implicit.union.rst", "generated/submodules/mymesh.implicit.unionf.rst", "generated/submodules/mymesh.implicit.unions.rst", "generated/submodules/mymesh.implicit.xplane.rst", "generated/submodules/mymesh.implicit.yplane.rst", "generated/submodules/mymesh.implicit.zplane.rst", "generated/submodules/mymesh.improvement.GeoTransformSmoothing.rst", "generated/submodules/mymesh.improvement.GlobalLaplacianSmoothing.rst", "generated/submodules/mymesh.improvement.LocalLaplacianSmoothing.rst", "generated/submodules/mymesh.improvement.NodeSpringSmoothing.rst", "generated/submodules/mymesh.improvement.SegmentSpringSmoothing.rst", "generated/submodules/mymesh.improvement.SmartLaplacianSmoothing.rst", "generated/submodules/mymesh.improvement.TangentialLaplacianSmoothing.rst", "generated/submodules/mymesh.improvement.TetContract.rst", "generated/submodules/mymesh.improvement.TetFlip.rst", "generated/submodules/mymesh.improvement.TetImprove.rst", "generated/submodules/mymesh.improvement.TetSplit.rst", "generated/submodules/mymesh.octree.Function2Octree.rst", "generated/submodules/mymesh.octree.Octree2Dual.rst", "generated/submodules/mymesh.octree.Octree2Voxel.rst", "generated/submodules/mymesh.octree.Points2Octree.rst", "generated/submodules/mymesh.octree.Print.rst", "generated/submodules/mymesh.octree.SearchOctree.rst", "generated/submodules/mymesh.octree.SearchOctreeTri.rst", "generated/submodules/mymesh.octree.Surface2Octree.rst", "generated/submodules/mymesh.octree.Voxel2Octree.rst", "generated/submodules/mymesh.octree.getAllLeaf.rst", "generated/submodules/mymesh.primitives.Box.rst", "generated/submodules/mymesh.primitives.Circle.rst", "generated/submodules/mymesh.primitives.CirclePt.rst", "generated/submodules/mymesh.primitives.Cylinder.rst", "generated/submodules/mymesh.primitives.Extrude.rst", "generated/submodules/mymesh.primitives.Grid.rst", "generated/submodules/mymesh.primitives.Grid2D.rst", "generated/submodules/mymesh.primitives.Line.rst", "generated/submodules/mymesh.primitives.Plane.rst", "generated/submodules/mymesh.primitives.Revolve.rst", "generated/submodules/mymesh.primitives.Sphere.rst", "generated/submodules/mymesh.primitives.Torus.rst", "generated/submodules/mymesh.quality.Area.rst", "generated/submodules/mymesh.quality.AspectRatio.rst", "generated/submodules/mymesh.quality.InverseOrthogonalQuality.rst", "generated/submodules/mymesh.quality.InverseOrthogonality.rst", "generated/submodules/mymesh.quality.MaxDihedral.rst", "generated/submodules/mymesh.quality.MeanRatio.rst", "generated/submodules/mymesh.quality.MinDihedral.rst", "generated/submodules/mymesh.quality.OrthogonalQuality.rst", "generated/submodules/mymesh.quality.Orthogonality.rst", "generated/submodules/mymesh.quality.Skewness.rst", "generated/submodules/mymesh.quality.SurfDihedralAngles.rst", "generated/submodules/mymesh.quality.Volume.rst", "generated/submodules/mymesh.quality.dihedralAngles.rst", "generated/submodules/mymesh.quality.equiangular_skewness.rst", "generated/submodules/mymesh.quality.quad_skewness.rst", "generated/submodules/mymesh.quality.tet_vol_skewness.rst", "generated/submodules/mymesh.quality.tri_skewness.rst", "generated/submodules/mymesh.rays.BoxTrianglesIntersection.rst", "generated/submodules/mymesh.rays.PlaneBoxIntersection.rst", "generated/submodules/mymesh.rays.PlaneSurfIntersection.rst", "generated/submodules/mymesh.rays.PlaneTriangleIntersection.rst", "generated/submodules/mymesh.rays.PlaneTrianglesIntersection.rst", "generated/submodules/mymesh.rays.PointInBox.rst", "generated/submodules/mymesh.rays.PointInSurf.rst", "generated/submodules/mymesh.rays.PointInTri.rst", "generated/submodules/mymesh.rays.PointsInSurf.rst", "generated/submodules/mymesh.rays.PointsInTris.rst", "generated/submodules/mymesh.rays.PointsInVoxel.rst", "generated/submodules/mymesh.rays.RayBoxIntersection.rst", "generated/submodules/mymesh.rays.RayBoxesIntersection.rst", "generated/submodules/mymesh.rays.RayOctreeIntersection.rst", "generated/submodules/mymesh.rays.RaySegmentsIntersection.rst", "generated/submodules/mymesh.rays.RaySurfIntersection.rst", "generated/submodules/mymesh.rays.RayTriangleIntersection.rst", "generated/submodules/mymesh.rays.RayTrianglesIntersection.rst", "generated/submodules/mymesh.rays.RaysSurfIntersection.rst", "generated/submodules/mymesh.rays.RaysTrianglesIntersection.rst", "generated/submodules/mymesh.rays.SegmentSegmentIntersection.rst", "generated/submodules/mymesh.rays.SegmentsSegmentsIntersection.rst", "generated/submodules/mymesh.rays.SurfSelfIntersection.rst", "generated/submodules/mymesh.rays.SurfSurfIntersection.rst", "generated/submodules/mymesh.rays.TriangleBoxIntersection.rst", "generated/submodules/mymesh.rays.TriangleTriangleIntersection.rst", "generated/submodules/mymesh.rays.TriangleTriangleIntersectionPt.rst", "generated/submodules/mymesh.rays.TrianglesTrianglesIntersection.rst", "generated/submodules/mymesh.rays.TrianglesTrianglesIntersectionPts.rst", "generated/submodules/mymesh.utils.AABB.rst", "generated/submodules/mymesh.utils.BaryTet.rst", "generated/submodules/mymesh.utils.BaryTri.rst", "generated/submodules/mymesh.utils.BaryTris.rst", "generated/submodules/mymesh.utils.CalcFaceNormal.rst", "generated/submodules/mymesh.utils.Centroids.rst", "generated/submodules/mymesh.utils.CleanupDegenerateElements.rst", "generated/submodules/mymesh.utils.DeleteDegenerateElements.rst", "generated/submodules/mymesh.utils.DeleteDuplicateNodes.rst", "generated/submodules/mymesh.utils.DetectFeatures.rst", "generated/submodules/mymesh.utils.DilateVoxel.rst", "generated/submodules/mymesh.utils.ErodeVoxel.rst", "generated/submodules/mymesh.utils.ExtractRagged.rst", "generated/submodules/mymesh.utils.Face2NodeNormal.rst", "generated/submodules/mymesh.utils.MVBB.rst", "generated/submodules/mymesh.utils.MergeMesh.rst", "generated/submodules/mymesh.utils.MirrorMesh.rst", "generated/submodules/mymesh.utils.PadRagged.rst", "generated/submodules/mymesh.utils.Project2Surface.rst", "generated/submodules/mymesh.utils.RelabelNodes.rst", "generated/submodules/mymesh.utils.SortRaggedByLength.rst", "generated/submodules/mymesh.utils.SplitRaggedByLength.rst", "generated/submodules/mymesh.utils.SurfMapping.rst", "generated/submodules/mymesh.utils.TetMeshVol.rst", "generated/submodules/mymesh.utils.TriSurfVol.rst", "generated/submodules/mymesh.utils.ValueMapping.rst", "generated/submodules/mymesh.utils.getConnectedElements.rst", "generated/submodules/mymesh.utils.getConnectedNodes.rst", "generated/submodules/mymesh.utils.getElemConnectivity.rst", "generated/submodules/mymesh.utils.getElemNeighbors.rst", "generated/submodules/mymesh.utils.getNodeNeighborhood.rst", "generated/submodules/mymesh.utils.getNodeNeighborhoodByRadius.rst", "generated/submodules/mymesh.utils.getNodeNeighbors.rst", "generated/submodules/mymesh.utils.identify_type.rst", "generated/submodules/mymesh.utils.makePyramidLayer.rst", "guide.rst", "guide/connectivity.rst", "guide/csg.rst", "guide/elem_types.rst", "guide/image_meshing.rst", "guide/implicit_meshing.rst", "guide/io.rst", "guide/mesh_class.rst", "guide/ref.rst", "guide/what_mesh.rst", "index.rst", "sg_execution_times.rst", "theory.rst", "theory/contour.rst", "theory/curvature.rst", "theory/delaunay.rst", "theory/flips23.rst", "theory/improvement.rst", "theory/octree.rst", "theory/rays.rst", "theory/springsmooth.rst"], "indexentries": {"aabb() (in module mymesh.utils)": [[260, "mymesh.utils.AABB", false]], "adaptive() (in module mymesh.contour)": [[85, "mymesh.contour.Adaptive", false]], "addedges() (mymesh.mesh.mesh method)": [[55, "mymesh.mesh.mesh.addEdges", false]], "addelems() (mymesh.mesh.mesh method)": [[56, "mymesh.mesh.mesh.addElems", false]], "addfaces() (mymesh.mesh.mesh method)": [[57, "mymesh.mesh.mesh.addFaces", false]], "addnodes() (mymesh.mesh.mesh method)": [[58, "mymesh.mesh.mesh.addNodes", false]], "analyticalcurvature() (in module mymesh.curvature)": [[121, "mymesh.curvature.AnalyticalCurvature", false]], "area() (in module mymesh.quality)": [[214, "mymesh.quality.Area", false]], "aspectratio() (in module mymesh.quality)": [[215, "mymesh.quality.AspectRatio", false]], "axisalign() (mymesh.mesh.mesh method)": [[21, "mymesh.mesh.mesh.AxisAlign", false]], "barytet() (in module mymesh.utils)": [[261, "mymesh.utils.BaryTet", false]], "barytri() (in module mymesh.utils)": [[262, "mymesh.utils.BaryTri", false]], "barytris() (in module mymesh.utils)": [[263, "mymesh.utils.BaryTris", false]], "boundaryconn (mymesh.mesh.mesh property)": [[22, "mymesh.mesh.mesh.BoundaryConn", false]], "boundarynodes (mymesh.mesh.mesh property)": [[23, "mymesh.mesh.mesh.BoundaryNodes", false]], "bowyerwatson2d() (in module mymesh.delaunay)": [[131, "mymesh.delaunay.BowyerWatson2d", false]], "bowyerwatson3d() (in module mymesh.delaunay)": [[132, "mymesh.delaunay.BowyerWatson3d", false]], "box() (in module mymesh.implicit)": [[150, "mymesh.implicit.box", false]], "box() (in module mymesh.primitives)": [[202, "mymesh.primitives.Box", false]], "boxtrianglesintersection() (in module mymesh.rays)": [[231, "mymesh.rays.BoxTrianglesIntersection", false]], "calcfacenormal() (in module mymesh.utils)": [[264, "mymesh.utils.CalcFaceNormal", false]], "cells (mymesh.mesh.mesh property)": [[59, "mymesh.mesh.mesh.cells", false]], "centroids (mymesh.mesh.mesh property)": [[24, "mymesh.mesh.mesh.Centroids", false]], "centroids() (in module mymesh.utils)": [[265, "mymesh.utils.Centroids", false]], "circle() (in module mymesh.primitives)": [[203, "mymesh.primitives.Circle", false]], "circlept() (in module mymesh.primitives)": [[204, "mymesh.primitives.CirclePt", false]], "cleanup() (mymesh.mesh.mesh method)": [[60, "mymesh.mesh.mesh.cleanup", false]], "cleanupdegenerateelements() (in module mymesh.utils)": [[266, "mymesh.utils.CleanupDegenerateElements", false]], "clip() (mymesh.mesh.mesh method)": [[25, "mymesh.mesh.mesh.Clip", false]], "contour() (mymesh.mesh.mesh method)": [[26, "mymesh.mesh.mesh.Contour", false]], "convexhull() (in module mymesh.delaunay)": [[133, "mymesh.delaunay.ConvexHull", false]], "convexhull_giftwrapping() (in module mymesh.delaunay)": [[135, "mymesh.delaunay.ConvexHull_GiftWrapping", false]], "convexhullfantriangulation() (in module mymesh.delaunay)": [[134, "mymesh.delaunay.ConvexHullFanTriangulation", false]], "copy() (mymesh.mesh.mesh method)": [[61, "mymesh.mesh.mesh.copy", false]], "createboundarylayer() (mymesh.mesh.mesh method)": [[27, "mymesh.mesh.mesh.CreateBoundaryLayer", false]], "cubicfit() (in module mymesh.curvature)": [[122, "mymesh.curvature.CubicFit", false]], "curvedness() (in module mymesh.curvature)": [[123, "mymesh.curvature.Curvedness", false]], "cylinder() (in module mymesh.implicit)": [[151, "mymesh.implicit.cylinder", false]], "cylinder() (in module mymesh.primitives)": [[205, "mymesh.primitives.Cylinder", false]], "deletedegenerateelements() (in module mymesh.utils)": [[267, "mymesh.utils.DeleteDegenerateElements", false]], "deleteduplicatenodes() (in module mymesh.utils)": [[268, "mymesh.utils.DeleteDuplicateNodes", false]], "detectfeatures() (in module mymesh.utils)": [[269, "mymesh.utils.DetectFeatures", false]], "diamond() (in module mymesh.implicit)": [[152, "mymesh.implicit.diamond", false]], "diff() (in module mymesh.implicit)": [[153, "mymesh.implicit.diff", false]], "difff() (in module mymesh.implicit)": [[154, "mymesh.implicit.difff", false]], "diffs() (in module mymesh.implicit)": [[155, "mymesh.implicit.diffs", false]], "dihedralangles() (in module mymesh.quality)": [[226, "mymesh.quality.dihedralAngles", false]], "dilatevoxel() (in module mymesh.utils)": [[270, "mymesh.utils.DilateVoxel", false]], "edgeconn (mymesh.mesh.mesh property)": [[28, "mymesh.mesh.mesh.EdgeConn", false]], "edgeelemconn (mymesh.mesh.mesh property)": [[29, "mymesh.mesh.mesh.EdgeElemConn", false]], "edges (mymesh.mesh.mesh property)": [[30, "mymesh.mesh.mesh.Edges", false]], "edges2unique() (in module mymesh.converter)": [[92, "mymesh.converter.edges2unique", false]], "edgesbyelement() (in module mymesh.converter)": [[91, "mymesh.converter.EdgesByElement", false]], "edgesets (mymesh.mesh attribute)": [[20, "mymesh.mesh.EdgeSets", false]], "elemconn (mymesh.mesh.mesh property)": [[31, "mymesh.mesh.mesh.ElemConn", false]], "elemdata (mymesh.mesh attribute)": [[20, "mymesh.mesh.ElemData", false]], "elemneighbors (mymesh.mesh.mesh property)": [[32, "mymesh.mesh.mesh.ElemNeighbors", false]], "elemnormals (mymesh.mesh.mesh property)": [[33, "mymesh.mesh.mesh.ElemNormals", false]], "elemsets (mymesh.mesh attribute)": [[20, "mymesh.mesh.ElemSets", false]], "equiangular_skewness() (in module mymesh.quality)": [[227, "mymesh.quality.equiangular_skewness", false]], "erodevoxel() (in module mymesh.utils)": [[271, "mymesh.utils.ErodeVoxel", false]], "eulercharacteristic (mymesh.mesh.mesh property)": [[34, "mymesh.mesh.mesh.EulerCharacteristic", false]], "extractragged() (in module mymesh.utils)": [[272, "mymesh.utils.ExtractRagged", false]], "extrude() (in module mymesh.primitives)": [[206, "mymesh.primitives.Extrude", false]], "face2nodenormal() (in module mymesh.utils)": [[273, "mymesh.utils.Face2NodeNormal", false]], "faceconn (mymesh.mesh.mesh property)": [[35, "mymesh.mesh.mesh.FaceConn", false]], "faceelemconn (mymesh.mesh.mesh property)": [[36, "mymesh.mesh.mesh.FaceElemConn", false]], "faces (mymesh.mesh.mesh property)": [[37, "mymesh.mesh.mesh.Faces", false]], "faces2surface() (in module mymesh.converter)": [[93, "mymesh.converter.faces2surface", false]], "faces2unique() (in module mymesh.converter)": [[94, "mymesh.converter.faces2unique", false]], "facesets (mymesh.mesh attribute)": [[20, "mymesh.mesh.FaceSets", false]], "function2octree() (in module mymesh.octree)": [[192, "mymesh.octree.Function2Octree", false]], "gaussiancurvature() (in module mymesh.curvature)": [[124, "mymesh.curvature.GaussianCurvature", false]], "genus (mymesh.mesh.mesh property)": [[38, "mymesh.mesh.mesh.Genus", false]], "geotransformsmoothing() (in module mymesh.improvement)": [[181, "mymesh.improvement.GeoTransformSmoothing", false]], "getallleaf() (in module mymesh.octree)": [[201, "mymesh.octree.getAllLeaf", false]], "getconnectedelements() (in module mymesh.utils)": [[286, "mymesh.utils.getConnectedElements", false]], "getconnectednodes() (in module mymesh.utils)": [[287, "mymesh.utils.getConnectedNodes", false]], "getcurvature() (mymesh.mesh.mesh method)": [[62, "mymesh.mesh.mesh.getCurvature", false]], "getelemconnectivity() (in module mymesh.utils)": [[288, "mymesh.utils.getElemConnectivity", false]], "getelemneighbors() (in module mymesh.utils)": [[289, "mymesh.utils.getElemNeighbors", false]], "getnodeneighborhood() (in module mymesh.utils)": [[290, "mymesh.utils.getNodeNeighborhood", false]], "getnodeneighborhoodbyradius() (in module mymesh.utils)": [[291, "mymesh.utils.getNodeNeighborhoodByRadius", false]], "getnodeneighbors() (in module mymesh.utils)": [[292, "mymesh.utils.getNodeNeighbors", false]], "getquality() (mymesh.mesh.mesh method)": [[63, "mymesh.mesh.mesh.getQuality", false]], "globallaplaciansmoothing() (in module mymesh.improvement)": [[182, "mymesh.improvement.GlobalLaplacianSmoothing", false]], "grid() (in module mymesh.primitives)": [[207, "mymesh.primitives.Grid", false]], "grid2d() (in module mymesh.primitives)": [[208, "mymesh.primitives.Grid2D", false]], "grid2fun() (in module mymesh.implicit)": [[156, "mymesh.implicit.grid2fun", false]], "grid2grad() (in module mymesh.implicit)": [[157, "mymesh.implicit.grid2grad", false]], "gyroid() (in module mymesh.implicit)": [[158, "mymesh.implicit.gyroid", false]], "hex2edges() (in module mymesh.converter)": [[95, "mymesh.converter.hex2edges", false]], "hex2faces() (in module mymesh.converter)": [[96, "mymesh.converter.hex2faces", false]], "hex2tet() (in module mymesh.converter)": [[97, "mymesh.converter.hex2tet", false]], "identify_type() (in module mymesh.utils)": [[293, "mymesh.utils.identify_type", false]], "identify_type() (mymesh.mesh.mesh method)": [[64, "mymesh.mesh.mesh.identify_type", false]], "im2voxel() (in module mymesh.converter)": [[98, "mymesh.converter.im2voxel", false]], "imagecurvature() (in module mymesh.curvature)": [[125, "mymesh.curvature.ImageCurvature", false]], "imread() (mymesh.mesh.mesh method)": [[65, "mymesh.mesh.mesh.imread", false]], "intersection() (in module mymesh.implicit)": [[159, "mymesh.implicit.intersection", false]], "intersectionf() (in module mymesh.implicit)": [[160, "mymesh.implicit.intersectionf", false]], "intersections() (in module mymesh.implicit)": [[161, "mymesh.implicit.intersections", false]], "inverseorthogonality() (in module mymesh.quality)": [[217, "mymesh.quality.InverseOrthogonality", false]], "inverseorthogonalquality() (in module mymesh.quality)": [[216, "mymesh.quality.InverseOrthogonalQuality", false]], "lidinoid() (in module mymesh.implicit)": [[162, "mymesh.implicit.lidinoid", false]], "line() (in module mymesh.primitives)": [[209, "mymesh.primitives.Line", false]], "locallaplaciansmoothing() (in module mymesh.improvement)": [[183, "mymesh.improvement.LocalLaplacianSmoothing", false]], "makepyramidlayer() (in module mymesh.utils)": [[294, "mymesh.utils.makePyramidLayer", false]], "marchingcubes() (in module mymesh.contour)": [[86, "mymesh.contour.MarchingCubes", false]], "marchingcubesimage() (in module mymesh.contour)": [[87, "mymesh.contour.MarchingCubesImage", false]], "marchingsquares() (in module mymesh.contour)": [[88, "mymesh.contour.MarchingSquares", false]], "marchingsquaresimage() (in module mymesh.contour)": [[89, "mymesh.contour.MarchingSquaresImage", false]], "marchingtetrahedra() (in module mymesh.contour)": [[90, "mymesh.contour.MarchingTetrahedra", false]], "maxdihedral() (in module mymesh.quality)": [[218, "mymesh.quality.MaxDihedral", false]], "meancurvature() (in module mymesh.curvature)": [[126, "mymesh.curvature.MeanCurvature", false]], "meanratio() (in module mymesh.quality)": [[219, "mymesh.quality.MeanRatio", false]], "merge() (mymesh.mesh.mesh method)": [[66, "mymesh.mesh.mesh.merge", false]], "mergemesh() (in module mymesh.utils)": [[275, "mymesh.utils.MergeMesh", false]], "mesh (class in mymesh)": [[20, "mymesh.mesh", false]], "mesh2sdf() (in module mymesh.implicit)": [[163, "mymesh.implicit.mesh2sdf", false]], "mesh2udf() (in module mymesh.implicit)": [[164, "mymesh.implicit.mesh2udf", false]], "meshbooleans() (in module mymesh.booleans)": [[83, "mymesh.booleans.MeshBooleans", false]], "meshio2mymesh() (mymesh.mesh.mesh method)": [[67, "mymesh.mesh.mesh.meshio2mymesh", false]], "mindihedral() (in module mymesh.quality)": [[220, "mymesh.quality.MinDihedral", false]], "mirrormesh() (in module mymesh.utils)": [[276, "mymesh.utils.MirrorMesh", false]], "module": [[0, "module-mymesh", false], [12, "module-mymesh.booleans", false], [13, "module-mymesh.contour", false], [14, "module-mymesh.converter", false], [15, "module-mymesh.curvature", false], [16, "module-mymesh.delaunay", false], [17, "module-mymesh.image", false], [18, "module-mymesh.implicit", false], [19, "module-mymesh.improvement", false], [77, "module-mymesh.octree", false], [78, "module-mymesh.primitives", false], [79, "module-mymesh.quality", false], [80, "module-mymesh.rays", false], [81, "module-mymesh.utils", false], [82, "module-mymesh.visualize", false]], "mvbb() (in module mymesh.utils)": [[274, "mymesh.utils.MVBB", false]], "mymesh": [[0, "module-mymesh", false]], "mymesh.booleans": [[12, "module-mymesh.booleans", false]], "mymesh.contour": [[13, "module-mymesh.contour", false]], "mymesh.converter": [[14, "module-mymesh.converter", false]], "mymesh.curvature": [[15, "module-mymesh.curvature", false]], "mymesh.delaunay": [[16, "module-mymesh.delaunay", false]], "mymesh.image": [[17, "module-mymesh.image", false]], "mymesh.implicit": [[18, "module-mymesh.implicit", false]], "mymesh.improvement": [[19, "module-mymesh.improvement", false]], "mymesh.octree": [[77, "module-mymesh.octree", false]], "mymesh.primitives": [[78, "module-mymesh.primitives", false]], "mymesh.quality": [[79, "module-mymesh.quality", false]], "mymesh.rays": [[80, "module-mymesh.rays", false]], "mymesh.utils": [[81, "module-mymesh.utils", false]], "mymesh.visualize": [[82, "module-mymesh.visualize", false]], "mymesh2meshio() (mymesh.mesh.mesh method)": [[68, "mymesh.mesh.mesh.mymesh2meshio", false]], "nd (mymesh.mesh.mesh property)": [[39, "mymesh.mesh.mesh.ND", false]], "nedge (mymesh.mesh.mesh property)": [[40, "mymesh.mesh.mesh.NEdge", false]], "nelem (mymesh.mesh.mesh property)": [[41, "mymesh.mesh.mesh.NElem", false]], "neovius() (in module mymesh.implicit)": [[165, "mymesh.implicit.neovius", false]], "nface (mymesh.mesh.mesh property)": [[42, "mymesh.mesh.mesh.NFace", false]], "nnode (mymesh.mesh.mesh property)": [[43, "mymesh.mesh.mesh.NNode", false]], "nodedata (mymesh.mesh attribute)": [[20, "mymesh.mesh.NodeData", false]], "nodeneighbors (mymesh.mesh.mesh property)": [[44, "mymesh.mesh.mesh.NodeNeighbors", false]], "nodenormals (mymesh.mesh.mesh property)": [[45, "mymesh.mesh.mesh.NodeNormals", false]], "nodenormalsmethod (mymesh.mesh.mesh property)": [[46, "mymesh.mesh.mesh.NodeNormalsMethod", false]], "nodesets (mymesh.mesh attribute)": [[20, "mymesh.mesh.NodeSets", false]], "nodespringsmoothing() (in module mymesh.improvement)": [[184, "mymesh.improvement.NodeSpringSmoothing", false]], "normcurve() (in module mymesh.curvature)": [[127, "mymesh.curvature.NormCurve", false]], "octree2dual() (in module mymesh.octree)": [[193, "mymesh.octree.Octree2Dual", false]], "octree2voxel() (in module mymesh.octree)": [[194, "mymesh.octree.Octree2Voxel", false]], "offset() (in module mymesh.implicit)": [[166, "mymesh.implicit.offset", false]], "orthogonality() (in module mymesh.quality)": [[222, "mymesh.quality.Orthogonality", false]], "orthogonalquality() (in module mymesh.quality)": [[221, "mymesh.quality.OrthogonalQuality", false]], "padragged() (in module mymesh.utils)": [[277, "mymesh.utils.PadRagged", false]], "plane() (in module mymesh.primitives)": [[210, "mymesh.primitives.Plane", false]], "planeboxintersection() (in module mymesh.rays)": [[232, "mymesh.rays.PlaneBoxIntersection", false]], "planesurfintersection() (in module mymesh.rays)": [[233, "mymesh.rays.PlaneSurfIntersection", false]], "planetriangleintersection() (in module mymesh.rays)": [[234, "mymesh.rays.PlaneTriangleIntersection", false]], "planetrianglesintersection() (in module mymesh.rays)": [[235, "mymesh.rays.PlaneTrianglesIntersection", false]], "plot() (mymesh.mesh.mesh method)": [[69, "mymesh.mesh.mesh.plot", false]], "pointinbox() (in module mymesh.rays)": [[236, "mymesh.rays.PointInBox", false]], "pointinsurf() (in module mymesh.rays)": [[237, "mymesh.rays.PointInSurf", false]], "pointintri() (in module mymesh.rays)": [[238, "mymesh.rays.PointInTri", false]], "points (mymesh.mesh.mesh property)": [[70, "mymesh.mesh.mesh.points", false]], "points2octree() (in module mymesh.octree)": [[195, "mymesh.octree.Points2Octree", false]], "pointsinsurf() (in module mymesh.rays)": [[239, "mymesh.rays.PointsInSurf", false]], "pointsintris() (in module mymesh.rays)": [[240, "mymesh.rays.PointsInTris", false]], "pointsinvoxel() (in module mymesh.rays)": [[241, "mymesh.rays.PointsInVoxel", false]], "polygon2edges() (in module mymesh.converter)": [[99, "mymesh.converter.polygon2edges", false]], "primitive() (in module mymesh.implicit)": [[167, "mymesh.implicit.primitive", false]], "print() (in module mymesh.octree)": [[196, "mymesh.octree.Print", false]], "project2surface() (in module mymesh.utils)": [[278, "mymesh.utils.Project2Surface", false]], "pyramid2edges() (in module mymesh.converter)": [[100, "mymesh.converter.pyramid2edges", false]], "pyramid2faces() (in module mymesh.converter)": [[101, "mymesh.converter.pyramid2faces", false]], "pyramid2tet() (in module mymesh.converter)": [[102, "mymesh.converter.pyramid2tet", false]], "quad2edges() (in module mymesh.converter)": [[103, "mymesh.converter.quad2edges", false]], "quad2tri() (in module mymesh.converter)": [[104, "mymesh.converter.quad2tri", false]], "quad_skewness() (in module mymesh.quality)": [[228, "mymesh.quality.quad_skewness", false]], "quadfit() (in module mymesh.curvature)": [[128, "mymesh.curvature.QuadFit", false]], "rayboxesintersection() (in module mymesh.rays)": [[243, "mymesh.rays.RayBoxesIntersection", false]], "rayboxintersection() (in module mymesh.rays)": [[242, "mymesh.rays.RayBoxIntersection", false]], "rayoctreeintersection() (in module mymesh.rays)": [[244, "mymesh.rays.RayOctreeIntersection", false]], "raysegmentsintersection() (in module mymesh.rays)": [[245, "mymesh.rays.RaySegmentsIntersection", false]], "rayssurfintersection() (in module mymesh.rays)": [[249, "mymesh.rays.RaysSurfIntersection", false]], "raystrianglesintersection() (in module mymesh.rays)": [[250, "mymesh.rays.RaysTrianglesIntersection", false]], "raysurfintersection() (in module mymesh.rays)": [[246, "mymesh.rays.RaySurfIntersection", false]], "raytriangleintersection() (in module mymesh.rays)": [[247, "mymesh.rays.RayTriangleIntersection", false]], "raytrianglesintersection() (in module mymesh.rays)": [[248, "mymesh.rays.RayTrianglesIntersection", false]], "read() (in module mymesh.image)": [[144, "mymesh.image.read", false]], "read() (mymesh.mesh.mesh method)": [[71, "mymesh.mesh.mesh.read", false]], "relabelnodes() (in module mymesh.utils)": [[279, "mymesh.utils.RelabelNodes", false]], "removeelems() (mymesh.mesh.mesh method)": [[72, "mymesh.mesh.mesh.removeElems", false]], "renumberfacesbyset() (mymesh.mesh.mesh method)": [[47, "mymesh.mesh.mesh.RenumberFacesBySet", false]], "renumbernodesbyset() (mymesh.mesh.mesh method)": [[48, "mymesh.mesh.mesh.RenumberNodesBySet", false]], "reset() (mymesh.mesh.mesh method)": [[73, "mymesh.mesh.mesh.reset", false]], "revolve() (in module mymesh.primitives)": [[211, "mymesh.primitives.Revolve", false]], "rmax() (in module mymesh.implicit)": [[168, "mymesh.implicit.rMax", false]], "rmin() (in module mymesh.implicit)": [[169, "mymesh.implicit.rMin", false]], "scipy() (in module mymesh.delaunay)": [[136, "mymesh.delaunay.SciPy", false]], "searchoctree() (in module mymesh.octree)": [[197, "mymesh.octree.SearchOctree", false]], "searchoctreetri() (in module mymesh.octree)": [[198, "mymesh.octree.SearchOctreeTri", false]], "segmentsegmentintersection() (in module mymesh.rays)": [[251, "mymesh.rays.SegmentSegmentIntersection", false]], "segmentspringsmoothing() (in module mymesh.improvement)": [[185, "mymesh.improvement.SegmentSpringSmoothing", false]], "segmentssegmentsintersection() (in module mymesh.rays)": [[252, "mymesh.rays.SegmentsSegmentsIntersection", false]], "shapecategory() (in module mymesh.curvature)": [[129, "mymesh.curvature.ShapeCategory", false]], "shapeindex() (in module mymesh.curvature)": [[130, "mymesh.curvature.ShapeIndex", false]], "skewness() (in module mymesh.quality)": [[223, "mymesh.quality.Skewness", false]], "smartlaplaciansmoothing() (in module mymesh.improvement)": [[186, "mymesh.improvement.SmartLaplacianSmoothing", false]], "solid2edges() (in module mymesh.converter)": [[105, "mymesh.converter.solid2edges", false]], "solid2faces() (in module mymesh.converter)": [[106, "mymesh.converter.solid2faces", false]], "solid2surface() (in module mymesh.converter)": [[107, "mymesh.converter.solid2surface", false]], "solid2tets() (in module mymesh.converter)": [[108, "mymesh.converter.solid2tets", false]], "sortraggedbylength() (in module mymesh.utils)": [[280, "mymesh.utils.SortRaggedByLength", false]], "sphere() (in module mymesh.implicit)": [[170, "mymesh.implicit.sphere", false]], "sphere() (in module mymesh.primitives)": [[212, "mymesh.primitives.Sphere", false]], "splitmesh() (in module mymesh.booleans)": [[84, "mymesh.booleans.SplitMesh", false]], "splitraggedbylength() (in module mymesh.utils)": [[281, "mymesh.utils.SplitRaggedByLength", false]], "surf2dual() (in module mymesh.converter)": [[109, "mymesh.converter.surf2dual", false]], "surf2edges() (in module mymesh.converter)": [[110, "mymesh.converter.surf2edges", false]], "surf2voxel() (in module mymesh.converter)": [[111, "mymesh.converter.surf2voxel", false]], "surface (mymesh.mesh.mesh property)": [[53, "mymesh.mesh.mesh.Surface", false]], "surface2octree() (in module mymesh.octree)": [[199, "mymesh.octree.Surface2Octree", false]], "surfacemesh() (in module mymesh.image)": [[140, "mymesh.image.SurfaceMesh", false]], "surfacemesh() (in module mymesh.implicit)": [[146, "mymesh.implicit.SurfaceMesh", false]], "surfacenodeoptimization() (in module mymesh.image)": [[141, "mymesh.image.SurfaceNodeOptimization", false]], "surfacenodeoptimization() (in module mymesh.implicit)": [[147, "mymesh.implicit.SurfaceNodeOptimization", false]], "surfconn (mymesh.mesh.mesh property)": [[49, "mymesh.mesh.mesh.SurfConn", false]], "surfdihedralangles() (in module mymesh.quality)": [[224, "mymesh.quality.SurfDihedralAngles", false]], "surfelemconn (mymesh.mesh.mesh property)": [[50, "mymesh.mesh.mesh.SurfElemConn", false]], "surfmapping() (in module mymesh.utils)": [[282, "mymesh.utils.SurfMapping", false]], "surfnodeneighbors (mymesh.mesh.mesh property)": [[51, "mymesh.mesh.mesh.SurfNodeNeighbors", false]], "surfnodes (mymesh.mesh.mesh property)": [[52, "mymesh.mesh.mesh.SurfNodes", false]], "surfselfintersection() (in module mymesh.rays)": [[253, "mymesh.rays.SurfSelfIntersection", false]], "surfsurfintersection() (in module mymesh.rays)": [[254, "mymesh.rays.SurfSurfIntersection", false]], "tangentiallaplaciansmoothing() (in module mymesh.improvement)": [[187, "mymesh.improvement.TangentialLaplacianSmoothing", false]], "tet102tet4() (in module mymesh.converter)": [[112, "mymesh.converter.tet102tet4", false]], "tet2edges() (in module mymesh.converter)": [[113, "mymesh.converter.tet2edges", false]], "tet2faces() (in module mymesh.converter)": [[114, "mymesh.converter.tet2faces", false]], "tet42tet10() (in module mymesh.converter)": [[115, "mymesh.converter.tet42tet10", false]], "tet_vol_skewness() (in module mymesh.quality)": [[229, "mymesh.quality.tet_vol_skewness", false]], "tetcontract() (in module mymesh.improvement)": [[188, "mymesh.improvement.TetContract", false]], "tetflip() (in module mymesh.improvement)": [[189, "mymesh.improvement.TetFlip", false]], "tetimprove() (in module mymesh.improvement)": [[190, "mymesh.improvement.TetImprove", false]], "tetmesh() (in module mymesh.image)": [[142, "mymesh.image.TetMesh", false]], "tetmesh() (in module mymesh.implicit)": [[148, "mymesh.implicit.TetMesh", false]], "tetmeshvol() (in module mymesh.utils)": [[283, "mymesh.utils.TetMeshVol", false]], "tetsplit() (in module mymesh.improvement)": [[191, "mymesh.improvement.TetSplit", false]], "thicken() (in module mymesh.implicit)": [[171, "mymesh.implicit.thicken", false]], "thickenf() (in module mymesh.implicit)": [[172, "mymesh.implicit.thickenf", false]], "thickens() (in module mymesh.implicit)": [[173, "mymesh.implicit.thickens", false]], "threshold() (mymesh.mesh.mesh method)": [[54, "mymesh.mesh.mesh.Threshold", false]], "torus() (in module mymesh.implicit)": [[174, "mymesh.implicit.torus", false]], "torus() (in module mymesh.primitives)": [[213, "mymesh.primitives.Torus", false]], "tri2edges() (in module mymesh.converter)": [[116, "mymesh.converter.tri2edges", false]], "tri_skewness() (in module mymesh.quality)": [[230, "mymesh.quality.tri_skewness", false]], "triangle() (in module mymesh.delaunay)": [[137, "mymesh.delaunay.Triangle", false]], "triangleboxintersection() (in module mymesh.rays)": [[255, "mymesh.rays.TriangleBoxIntersection", false]], "trianglesplittingtriangulation() (in module mymesh.delaunay)": [[138, "mymesh.delaunay.TriangleSplittingTriangulation", false]], "trianglestrianglesintersection() (in module mymesh.rays)": [[258, "mymesh.rays.TrianglesTrianglesIntersection", false]], "trianglestrianglesintersectionpts() (in module mymesh.rays)": [[259, "mymesh.rays.TrianglesTrianglesIntersectionPts", false]], "triangletriangleintersection() (in module mymesh.rays)": [[256, "mymesh.rays.TriangleTriangleIntersection", false]], "triangletriangleintersectionpt() (in module mymesh.rays)": [[257, "mymesh.rays.TriangleTriangleIntersectionPt", false]], "triangulate() (in module mymesh.delaunay)": [[139, "mymesh.delaunay.Triangulate", false]], "trisurfvol() (in module mymesh.utils)": [[284, "mymesh.utils.TriSurfVol", false]], "union() (in module mymesh.implicit)": [[175, "mymesh.implicit.union", false]], "unionf() (in module mymesh.implicit)": [[176, "mymesh.implicit.unionf", false]], "unions() (in module mymesh.implicit)": [[177, "mymesh.implicit.unions", false]], "validate() (mymesh.mesh.mesh method)": [[74, "mymesh.mesh.mesh.validate", false]], "valuemapping() (in module mymesh.utils)": [[285, "mymesh.utils.ValueMapping", false]], "view() (mymesh.mesh.mesh method)": [[75, "mymesh.mesh.mesh.view", false]], "volume() (in module mymesh.quality)": [[225, "mymesh.quality.Volume", false]], "voxel2im() (in module mymesh.converter)": [[117, "mymesh.converter.voxel2im", false]], "voxel2octree() (in module mymesh.octree)": [[200, "mymesh.octree.Voxel2Octree", false]], "voxelmesh() (in module mymesh.image)": [[143, "mymesh.image.VoxelMesh", false]], "voxelmesh() (in module mymesh.implicit)": [[149, "mymesh.implicit.VoxelMesh", false]], "wedge2edges() (in module mymesh.converter)": [[118, "mymesh.converter.wedge2edges", false]], "wedge2faces() (in module mymesh.converter)": [[119, "mymesh.converter.wedge2faces", false]], "wedge2tet() (in module mymesh.converter)": [[120, "mymesh.converter.wedge2tet", false]], "write() (in module mymesh.image)": [[145, "mymesh.image.write", false]], "write() (mymesh.mesh.mesh method)": [[76, "mymesh.mesh.mesh.write", false]], "xplane() (in module mymesh.implicit)": [[178, "mymesh.implicit.xplane", false]], "yplane() (in module mymesh.implicit)": [[179, "mymesh.implicit.yplane", false]], "zplane() (in module mymesh.implicit)": [[180, "mymesh.implicit.zplane", false]]}, "objects": {"": [[0, 0, 0, "-", "mymesh"]], "mymesh": [[12, 0, 0, "-", "booleans"], [13, 0, 0, "-", "contour"], [14, 0, 0, "-", "converter"], [15, 0, 0, "-", "curvature"], [16, 0, 0, "-", "delaunay"], [17, 0, 0, "-", "image"], [18, 0, 0, "-", "implicit"], [19, 0, 0, "-", "improvement"], [20, 2, 1, "", "mesh"], [77, 0, 0, "-", "octree"], [78, 0, 0, "-", "primitives"], [79, 0, 0, "-", "quality"], [80, 0, 0, "-", "rays"], [81, 0, 0, "-", "utils"], [82, 0, 0, "-", "visualize"]], "mymesh.booleans": [[83, 1, 1, "", "MeshBooleans"], [84, 1, 1, "", "SplitMesh"]], "mymesh.contour": [[85, 1, 1, "", "Adaptive"], [86, 1, 1, "", "MarchingCubes"], [87, 1, 1, "", "MarchingCubesImage"], [88, 1, 1, "", "MarchingSquares"], [89, 1, 1, "", "MarchingSquaresImage"], [90, 1, 1, "", "MarchingTetrahedra"]], "mymesh.converter": [[91, 1, 1, "", "EdgesByElement"], [92, 1, 1, "", "edges2unique"], [93, 1, 1, "", "faces2surface"], [94, 1, 1, "", "faces2unique"], [95, 1, 1, "", "hex2edges"], [96, 1, 1, "", "hex2faces"], [97, 1, 1, "", "hex2tet"], [98, 1, 1, "", "im2voxel"], [99, 1, 1, "", "polygon2edges"], [100, 1, 1, "", "pyramid2edges"], [101, 1, 1, "", "pyramid2faces"], [102, 1, 1, "", "pyramid2tet"], [103, 1, 1, "", "quad2edges"], [104, 1, 1, "", "quad2tri"], [105, 1, 1, "", "solid2edges"], [106, 1, 1, "", "solid2faces"], [107, 1, 1, "", "solid2surface"], [108, 1, 1, "", "solid2tets"], [109, 1, 1, "", "surf2dual"], [110, 1, 1, "", "surf2edges"], [111, 1, 1, "", "surf2voxel"], [112, 1, 1, "", "tet102tet4"], [113, 1, 1, "", "tet2edges"], [114, 1, 1, "", "tet2faces"], [115, 1, 1, "", "tet42tet10"], [116, 1, 1, "", "tri2edges"], [117, 1, 1, "", "voxel2im"], [118, 1, 1, "", "wedge2edges"], [119, 1, 1, "", "wedge2faces"], [120, 1, 1, "", "wedge2tet"]], "mymesh.curvature": [[121, 1, 1, "", "AnalyticalCurvature"], [122, 1, 1, "", "CubicFit"], [123, 1, 1, "", "Curvedness"], [124, 1, 1, "", "GaussianCurvature"], [125, 1, 1, "", "ImageCurvature"], [126, 1, 1, "", "MeanCurvature"], [127, 1, 1, "", "NormCurve"], [128, 1, 1, "", "QuadFit"], [129, 1, 1, "", "ShapeCategory"], [130, 1, 1, "", "ShapeIndex"]], "mymesh.delaunay": [[131, 1, 1, "", "BowyerWatson2d"], [132, 1, 1, "", "BowyerWatson3d"], [133, 1, 1, "", "ConvexHull"], [134, 1, 1, "", "ConvexHullFanTriangulation"], [135, 1, 1, "", "ConvexHull_GiftWrapping"], [136, 1, 1, "", "SciPy"], [137, 1, 1, "", "Triangle"], [138, 1, 1, "", "TriangleSplittingTriangulation"], [139, 1, 1, "", "Triangulate"]], "mymesh.image": [[140, 1, 1, "", "SurfaceMesh"], [141, 1, 1, "", "SurfaceNodeOptimization"], [142, 1, 1, "", "TetMesh"], [143, 1, 1, "", "VoxelMesh"], [144, 1, 1, "", "read"], [145, 1, 1, "", "write"]], "mymesh.implicit": [[146, 1, 1, "", "SurfaceMesh"], [147, 1, 1, "", "SurfaceNodeOptimization"], [148, 1, 1, "", "TetMesh"], [149, 1, 1, "", "VoxelMesh"], [150, 1, 1, "", "box"], [151, 1, 1, "", "cylinder"], [152, 1, 1, "", "diamond"], [153, 1, 1, "", "diff"], [154, 1, 1, "", "difff"], [155, 1, 1, "", "diffs"], [156, 1, 1, "", "grid2fun"], [157, 1, 1, "", "grid2grad"], [158, 1, 1, "", "gyroid"], [159, 1, 1, "", "intersection"], [160, 1, 1, "", "intersectionf"], [161, 1, 1, "", "intersections"], [162, 1, 1, "", "lidinoid"], [163, 1, 1, "", "mesh2sdf"], [164, 1, 1, "", "mesh2udf"], [165, 1, 1, "", "neovius"], [166, 1, 1, "", "offset"], [167, 1, 1, "", "primitive"], [168, 1, 1, "", "rMax"], [169, 1, 1, "", "rMin"], [170, 1, 1, "", "sphere"], [171, 1, 1, "", "thicken"], [172, 1, 1, "", "thickenf"], [173, 1, 1, "", "thickens"], [174, 1, 1, "", "torus"], [175, 1, 1, "", "union"], [176, 1, 1, "", "unionf"], [177, 1, 1, "", "unions"], [178, 1, 1, "", "xplane"], [179, 1, 1, "", "yplane"], [180, 1, 1, "", "zplane"]], "mymesh.improvement": [[181, 1, 1, "", "GeoTransformSmoothing"], [182, 1, 1, "", "GlobalLaplacianSmoothing"], [183, 1, 1, "", "LocalLaplacianSmoothing"], [184, 1, 1, "", "NodeSpringSmoothing"], [185, 1, 1, "", "SegmentSpringSmoothing"], [186, 1, 1, "", "SmartLaplacianSmoothing"], [187, 1, 1, "", "TangentialLaplacianSmoothing"], [188, 1, 1, "", "TetContract"], [189, 1, 1, "", "TetFlip"], [190, 1, 1, "", "TetImprove"], [191, 1, 1, "", "TetSplit"]], "mymesh.mesh": [[20, 3, 1, "", "EdgeSets"], [20, 3, 1, "", "ElemData"], [20, 3, 1, "", "ElemSets"], [20, 3, 1, "", "FaceSets"], [20, 3, 1, "", "NodeData"], [20, 3, 1, "", "NodeSets"]], "mymesh.mesh.mesh": [[21, 4, 1, "", "AxisAlign"], [22, 5, 1, "", "BoundaryConn"], [23, 5, 1, "", "BoundaryNodes"], [24, 5, 1, "", "Centroids"], [25, 4, 1, "", "Clip"], [26, 4, 1, "", "Contour"], [27, 4, 1, "", "CreateBoundaryLayer"], [28, 5, 1, "", "EdgeConn"], [29, 5, 1, "", "EdgeElemConn"], [30, 5, 1, "", "Edges"], [31, 5, 1, "", "ElemConn"], [32, 5, 1, "", "ElemNeighbors"], [33, 5, 1, "", "ElemNormals"], [34, 5, 1, "", "EulerCharacteristic"], [35, 5, 1, "", "FaceConn"], [36, 5, 1, "", "FaceElemConn"], [37, 5, 1, "", "Faces"], [38, 5, 1, "", "Genus"], [39, 5, 1, "", "ND"], [40, 5, 1, "", "NEdge"], [41, 5, 1, "", "NElem"], [42, 5, 1, "", "NFace"], [43, 5, 1, "", "NNode"], [44, 5, 1, "", "NodeNeighbors"], [45, 5, 1, "", "NodeNormals"], [46, 5, 1, "", "NodeNormalsMethod"], [47, 4, 1, "", "RenumberFacesBySet"], [48, 4, 1, "", "RenumberNodesBySet"], [49, 5, 1, "", "SurfConn"], [50, 5, 1, "", "SurfElemConn"], [51, 5, 1, "", "SurfNodeNeighbors"], [52, 5, 1, "", "SurfNodes"], [53, 5, 1, "", "Surface"], [54, 4, 1, "", "Threshold"], [55, 4, 1, "", "addEdges"], [56, 4, 1, "", "addElems"], [57, 4, 1, "", "addFaces"], [58, 4, 1, "", "addNodes"], [59, 5, 1, "", "cells"], [60, 4, 1, "", "cleanup"], [61, 4, 1, "", "copy"], [62, 4, 1, "", "getCurvature"], [63, 4, 1, "", "getQuality"], [64, 4, 1, "", "identify_type"], [65, 4, 1, "", "imread"], [66, 4, 1, "", "merge"], [67, 4, 1, "", "meshio2mymesh"], [68, 4, 1, "", "mymesh2meshio"], [69, 4, 1, "", "plot"], [70, 5, 1, "", "points"], [71, 4, 1, "", "read"], [72, 4, 1, "", "removeElems"], [73, 4, 1, "", "reset"], [74, 4, 1, "", "validate"], [75, 4, 1, "", "view"], [76, 4, 1, "", "write"]], "mymesh.octree": [[192, 1, 1, "", "Function2Octree"], [193, 1, 1, "", "Octree2Dual"], [194, 1, 1, "", "Octree2Voxel"], [195, 1, 1, "", "Points2Octree"], [196, 1, 1, "", "Print"], [197, 1, 1, "", "SearchOctree"], [198, 1, 1, "", "SearchOctreeTri"], [199, 1, 1, "", "Surface2Octree"], [200, 1, 1, "", "Voxel2Octree"], [201, 1, 1, "", "getAllLeaf"]], "mymesh.primitives": [[202, 1, 1, "", "Box"], [203, 1, 1, "", "Circle"], [204, 1, 1, "", "CirclePt"], [205, 1, 1, "", "Cylinder"], [206, 1, 1, "", "Extrude"], [207, 1, 1, "", "Grid"], [208, 1, 1, "", "Grid2D"], [209, 1, 1, "", "Line"], [210, 1, 1, "", "Plane"], [211, 1, 1, "", "Revolve"], [212, 1, 1, "", "Sphere"], [213, 1, 1, "", "Torus"]], "mymesh.quality": [[214, 1, 1, "", "Area"], [215, 1, 1, "", "AspectRatio"], [216, 1, 1, "", "InverseOrthogonalQuality"], [217, 1, 1, "", "InverseOrthogonality"], [218, 1, 1, "", "MaxDihedral"], [219, 1, 1, "", "MeanRatio"], [220, 1, 1, "", "MinDihedral"], [221, 1, 1, "", "OrthogonalQuality"], [222, 1, 1, "", "Orthogonality"], [223, 1, 1, "", "Skewness"], [224, 1, 1, "", "SurfDihedralAngles"], [225, 1, 1, "", "Volume"], [226, 1, 1, "", "dihedralAngles"], [227, 1, 1, "", "equiangular_skewness"], [228, 1, 1, "", "quad_skewness"], [229, 1, 1, "", "tet_vol_skewness"], [230, 1, 1, "", "tri_skewness"]], "mymesh.rays": [[231, 1, 1, "", "BoxTrianglesIntersection"], [232, 1, 1, "", "PlaneBoxIntersection"], [233, 1, 1, "", "PlaneSurfIntersection"], [234, 1, 1, "", "PlaneTriangleIntersection"], [235, 1, 1, "", "PlaneTrianglesIntersection"], [236, 1, 1, "", "PointInBox"], [237, 1, 1, "", "PointInSurf"], [238, 1, 1, "", "PointInTri"], [239, 1, 1, "", "PointsInSurf"], [240, 1, 1, "", "PointsInTris"], [241, 1, 1, "", "PointsInVoxel"], [242, 1, 1, "", "RayBoxIntersection"], [243, 1, 1, "", "RayBoxesIntersection"], [244, 1, 1, "", "RayOctreeIntersection"], [245, 1, 1, "", "RaySegmentsIntersection"], [246, 1, 1, "", "RaySurfIntersection"], [247, 1, 1, "", "RayTriangleIntersection"], [248, 1, 1, "", "RayTrianglesIntersection"], [249, 1, 1, "", "RaysSurfIntersection"], [250, 1, 1, "", "RaysTrianglesIntersection"], [251, 1, 1, "", "SegmentSegmentIntersection"], [252, 1, 1, "", "SegmentsSegmentsIntersection"], [253, 1, 1, "", "SurfSelfIntersection"], [254, 1, 1, "", "SurfSurfIntersection"], [255, 1, 1, "", "TriangleBoxIntersection"], [256, 1, 1, "", "TriangleTriangleIntersection"], [257, 1, 1, "", "TriangleTriangleIntersectionPt"], [258, 1, 1, "", "TrianglesTrianglesIntersection"], [259, 1, 1, "", "TrianglesTrianglesIntersectionPts"]], "mymesh.utils": [[260, 1, 1, "", "AABB"], [261, 1, 1, "", "BaryTet"], [262, 1, 1, "", "BaryTri"], [263, 1, 1, "", "BaryTris"], [264, 1, 1, "", "CalcFaceNormal"], [265, 1, 1, "", "Centroids"], [266, 1, 1, "", "CleanupDegenerateElements"], [267, 1, 1, "", "DeleteDegenerateElements"], [268, 1, 1, "", "DeleteDuplicateNodes"], [269, 1, 1, "", "DetectFeatures"], [270, 1, 1, "", "DilateVoxel"], [271, 1, 1, "", "ErodeVoxel"], [272, 1, 1, "", "ExtractRagged"], [273, 1, 1, "", "Face2NodeNormal"], [274, 1, 1, "", "MVBB"], [275, 1, 1, "", "MergeMesh"], [276, 1, 1, "", "MirrorMesh"], [277, 1, 1, "", "PadRagged"], [278, 1, 1, "", "Project2Surface"], [279, 1, 1, "", "RelabelNodes"], [280, 1, 1, "", "SortRaggedByLength"], [281, 1, 1, "", "SplitRaggedByLength"], [282, 1, 1, "", "SurfMapping"], [283, 1, 1, "", "TetMeshVol"], [284, 1, 1, "", "TriSurfVol"], [285, 1, 1, "", "ValueMapping"], [286, 1, 1, "", "getConnectedElements"], [287, 1, 1, "", "getConnectedNodes"], [288, 1, 1, "", "getElemConnectivity"], [289, 1, 1, "", "getElemNeighbors"], [290, 1, 1, "", "getNodeNeighborhood"], [291, 1, 1, "", "getNodeNeighborhoodByRadius"], [292, 1, 1, "", "getNodeNeighbors"], [293, 1, 1, "", "identify_type"], [294, 1, 1, "", "makePyramidLayer"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:property"}, "terms": {"": [5, 16, 54, 85, 109, 125, 137, 139, 152, 153, 158, 159, 162, 165, 166, 167, 171, 175, 190, 191, 198, 242, 243, 257, 259, 298, 301, 304, 305, 309, 310, 311, 313], "0": [2, 4, 5, 6, 7, 9, 11, 18, 25, 65, 79, 85, 86, 87, 88, 89, 90, 97, 98, 102, 117, 120, 129, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 158, 162, 165, 167, 168, 169, 170, 174, 178, 179, 180, 181, 182, 184, 185, 192, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 216, 217, 221, 222, 223, 227, 228, 229, 230, 235, 237, 239, 247, 248, 250, 251, 252, 256, 257, 258, 259, 267, 268, 280, 281, 296, 297, 298, 299, 300, 302, 303, 305, 306, 308, 309, 310, 314, 315], "00": [4, 9, 11, 306], "000": [4, 9, 11, 306], "001": 267, "002": 303, "0020": 135, "005": 303, "00529": 303, "00843": 303, "01": 192, "0181": 303, "01880": 303, "019": 303, "0190": 135, "024": 303, "0262": 303, "03581": 303, "0363": 303, "04": 6, "05": [5, 140, 146, 147, 148, 149, 150, 152, 158, 162, 165, 167, 202, 207, 208, 297, 300, 303], "06": [247, 303], "08": [83, 139, 237, 239], "08831v2": 132, "09344283": 237, "1": [2, 4, 5, 6, 7, 25, 26, 27, 62, 65, 79, 85, 87, 89, 90, 97, 98, 102, 117, 120, 125, 129, 135, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 158, 162, 165, 167, 170, 174, 178, 179, 180, 182, 184, 185, 190, 192, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 221, 222, 223, 227, 228, 229, 230, 242, 243, 268, 271, 272, 275, 277, 280, 281, 282, 285, 289, 294, 296, 297, 298, 299, 300, 302, 303, 305, 308, 309, 310, 311, 314, 315], "10": [2, 27, 60, 64, 83, 90, 112, 115, 135, 183, 187, 188, 195, 203, 204, 231, 242, 243, 247, 248, 250, 255, 256, 257, 258, 259, 280, 281, 293, 303, 308, 314], "100": [186, 206], "1002": 303, "1007": [27, 303], "1016": [135, 303], "10487472": [256, 257, 258, 259, 303], "10487487": 303, "1056": 303, "1080": [256, 257, 258, 259, 303], "10867651": [256, 257, 258, 259, 303], "1093": 303, "1097": 303, "11": [305, 308], "1111": 303, "1145": [83, 231, 242, 243, 247, 248, 250, 255, 303], "1148": 303, "115": 303, "1198555": [231, 242, 243, 247, 248, 250, 255, 303], "1198746": [247, 248, 250, 303], "1198747": [231, 255, 303], "1198748": [242, 243, 303], "12": [84, 90, 238, 240, 267, 268, 297, 303, 308], "123811": 303, "126": 303, "13": 308, "13th": 303, "14": [7, 66, 233, 235, 245, 246, 248, 249, 250, 253, 254, 256, 257, 258, 259, 268, 308], "1467": 303, "14th": 303, "15": 308, "150": 303, "15904": [83, 303], "15922": [83, 303], "16": 308, "160": 303, "161": 303, "162": 303, "163": 303, "1641": 303, "1652": 303, "166": 303, "167": 303, "169": 303, "170": 303, "172": 303, "179": 267, "18": [27, 135, 191, 303], "180": 267, "1805": 132, "19": 303, "1908": 303, "195": 303, "1973": 135, "1981": 303, "1986": 303, "1987": 303, "1991": 303, "1992": [123, 129, 130, 303], "1994": 303, "1995": 303, "1996": 303, "1997": [256, 257, 258, 259, 303], "1998": 303, "1d": [146, 148, 149, 304], "1e": [60, 66, 83, 84, 90, 139, 147, 183, 184, 186, 187, 233, 235, 237, 238, 239, 240, 245, 246, 247, 248, 249, 250, 253, 254, 256, 257, 258, 259, 267, 268], "1to14": 120, "1to2": 102, "1to20": 102, "1to24": [97, 102], "1to2c": 102, "1to3": 120, "1to36": 120, "1to3c": 120, "1to4": 102, "1to5": 97, "1to6": 97, "2": [2, 5, 7, 38, 85, 87, 90, 102, 104, 117, 120, 129, 135, 136, 139, 144, 146, 148, 168, 169, 171, 172, 181, 189, 191, 192, 203, 204, 205, 206, 211, 212, 213, 231, 243, 255, 256, 257, 258, 259, 268, 275, 280, 281, 282, 285, 293, 294, 296, 297, 298, 299, 300, 303, 308, 309, 310, 312, 314], "20": [184, 203, 204, 205, 212, 213, 297, 303], "2000": [185, 303], "20000330": 303, "2001": [284, 303], "2002": [27, 303], "2003": 303, "2004": [122, 127, 128, 303], "2005": [121, 125, 231, 242, 243, 247, 248, 250, 255, 303], "2008": 303, "201": 303, "2010": 303, "2015": 303, "2016": 303, "2018": 303, "2020": 303, "2024": [303, 305], "203": 303, "21": [135, 303], "22": 303, "220": 303, "222": 303, "23": 303, "24": 303, "25": [6, 7, 174, 188, 190, 205, 213, 256, 257, 258, 259, 269, 297, 303], "256": 308, "2629697": 303, "286": 303, "291": 303, "2d": [89, 105, 107, 117, 131, 135, 145, 151, 206, 210, 211, 243, 250, 277, 284, 298, 299, 303], "2exi": 309, "2fxy": 309, "2x_ii": 309, "2x_iy_i": 309, "2y": 309, "2y_0": 309, "2y_1": 309, "2y_i": 309, "2y_n": 309, "3": [5, 9, 64, 90, 91, 102, 105, 116, 120, 129, 135, 136, 139, 145, 174, 184, 189, 191, 231, 234, 235, 236, 237, 239, 241, 244, 246, 248, 249, 250, 253, 258, 259, 266, 267, 268, 280, 281, 293, 296, 297, 298, 299, 300, 303, 308, 309, 310, 312, 314], "30": [256, 257, 258, 259, 303], "3197517": 303, "32": [185, 303], "3201353": 303, "324": 303, "33": [85, 86, 87, 140, 146, 303], "3333333333333333": 182, "336156": 303, "338193": 303, "338200": 303, "3386569": 303, "3392385": 303, "349": 303, "35": 2, "35687835": 237, "36": 7, "368": 303, "37": 303, "37401": 303, "37422": 303, "376": 303, "39": 303, "3c647": 303, "3d": [18, 65, 87, 97, 98, 102, 107, 108, 117, 120, 125, 132, 144, 145, 146, 148, 170, 174, 197, 206, 207, 211, 231, 232, 236, 237, 239, 241, 242, 243, 244, 246, 247, 248, 249, 250, 253, 255, 284, 298, 299, 303], "3dx": 309, "3e3": 303, "3gy": 309, "3x3": 198, "3x_i": 309, "3y_i": 309, "4": [2, 5, 91, 102, 103, 104, 105, 112, 113, 114, 115, 120, 129, 145, 188, 189, 191, 266, 268, 280, 281, 292, 296, 297, 298, 299, 303, 306, 308], "407": 303, "412": 303, "43": 303, "45": 303, "46": 303, "5": [5, 6, 7, 64, 65, 85, 91, 98, 100, 101, 102, 105, 120, 129, 140, 143, 144, 146, 147, 148, 188, 190, 192, 199, 209, 212, 268, 280, 281, 293, 296, 298, 302, 308, 309, 311], "50": 213, "50040": 303, "51290722": 237, "55": [7, 242, 243, 303], "557": 303, "564": 303, "58": 303, "6": [64, 85, 91, 105, 118, 119, 120, 129, 146, 148, 149, 183, 185, 186, 187, 192, 247, 280, 281, 293, 296, 298, 303, 308, 311, 314], "60": [242, 243, 303], "63": 303, "632": 303, "647": [185, 303], "658": 303, "66": [27, 303], "668": [185, 303], "7": [7, 85, 90, 129, 280, 281, 298, 303, 308], "73": 135, "781606": 303, "781653": 303, "7823": 303, "7830": 303, "79": [27, 303], "8": [6, 64, 83, 91, 95, 96, 97, 105, 129, 237, 239, 280, 281, 293, 298, 303, 308, 313], "80": 5, "82": 267, "83": 303, "8659": 303, "8856": 303, "9": [5, 7, 150, 223, 280, 281, 296, 297, 300, 303, 308], "90020": 135, "90076": 303, "92": 303, "966131": 303, "966134": 303, "A": [11, 27, 64, 97, 102, 115, 120, 123, 129, 130, 135, 214, 231, 242, 243, 282, 293, 297, 299, 302, 303, 304, 305, 308, 309, 310, 311], "As": [305, 310, 311], "At": 193, "By": [6, 46, 73, 85, 86, 87, 88, 89, 90, 93, 125, 146, 147, 148, 183, 184, 186, 187, 205, 206, 207, 208, 209, 210, 211, 266, 298, 309], "For": [28, 29, 31, 32, 33, 34, 35, 36, 38, 44, 82, 87, 88, 89, 90, 97, 102, 105, 106, 120, 141, 144, 145, 146, 147, 148, 152, 158, 162, 165, 166, 167, 171, 172, 183, 184, 186, 187, 211, 214, 215, 216, 217, 221, 222, 223, 225, 237, 239, 247, 248, 250, 266, 270, 285, 286, 287, 289, 297, 299, 300, 302, 308, 309, 311, 313, 314, 315], "If": [1, 20, 26, 27, 40, 42, 46, 49, 54, 63, 65, 73, 74, 76, 86, 87, 88, 89, 90, 92, 93, 94, 98, 105, 106, 108, 109, 125, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 178, 179, 180, 183, 184, 185, 186, 187, 188, 190, 191, 192, 194, 197, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 229, 239, 247, 253, 254, 256, 257, 258, 259, 275, 282, 285, 286, 287, 289, 294, 297, 310, 314], "In": [64, 127, 128, 247, 248, 250, 272, 277, 280, 281, 285, 293, 296, 297, 300, 304, 305, 309, 310], "It": [27, 105, 186, 300, 305, 309, 310, 311, 313], "No": [86, 87, 88, 89, 90], "Not": [97, 102, 120, 289], "On": [135, 303], "One": [302, 308], "Such": 6, "That": 235, "The": [2, 5, 18, 20, 27, 84, 85, 87, 89, 92, 94, 97, 105, 106, 108, 109, 111, 120, 134, 143, 146, 147, 148, 149, 157, 171, 172, 174, 185, 188, 191, 192, 195, 199, 205, 212, 213, 266, 268, 270, 271, 273, 276, 281, 282, 286, 287, 294, 296, 301, 302, 304, 305, 307, 308, 309, 310, 311, 313, 314], "There": [45, 302, 305, 311], "These": [7, 109, 250, 280, 281, 297, 304, 308, 310], "To": [2, 6, 34, 137, 294, 302, 305, 310, 311], "Will": [91, 105, 231, 237, 239, 255, 278, 282, 285], "With": [250, 280], "_": [2, 309], "_description_": [190, 192, 250], "_i": [309, 315], "_j": 315, "_mesh": [67, 68], "_type_": [190, 192, 250], "a1": 297, "a2": 297, "a3": 297, "a_i": [309, 310], "a_x": 310, "ab": [64, 226, 293, 303], "abil": [140, 142, 143, 146, 148, 149, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213], "abl": [154, 160, 172, 176], "about": [109, 174, 213, 276], "abov": [18, 149, 178, 179, 180, 191, 223, 308, 311], "absenc": 298, "academ": [1, 303], "acceler": [237, 239, 246, 249, 250], "accept": 300, "access": [76, 280, 302, 305], "accomplish": 309, "accord": [279, 304], "accordingli": 275, "accur": [2, 6, 311], "achiev": [184, 297, 302, 315], "acm": [83, 231, 242, 243, 247, 248, 250, 255, 303], "across": [1, 310], "activ": [20, 311], "actual": [171, 172], "ad": [97, 102, 108, 120, 185, 188, 191, 310, 311], "adapt": [191, 192, 303], "add": [105, 143, 184, 185, 310], "addit": [2, 90, 92, 94, 146, 148, 149, 280, 289, 304, 308, 309, 311], "addition": [74, 295, 301, 302], "adjac": [32, 44, 86, 87, 88, 89, 90, 183, 186, 187, 224, 256, 257, 258, 259, 269, 280, 292, 308, 310], "admiss": 314, "adopt": [300, 309], "adrian": [303, 310], "advanc": 297, "advantag": [302, 309], "after": [183, 186, 187, 188, 191, 314], "ag073671": 305, "against": 313, "ahead": 310, "ai": 222, "aid": 303, "aim": [297, 305, 307], "akenin": [231, 255, 303], "al": [191, 314], "alec": 303, "alexand": 303, "algorithm": [16, 86, 87, 88, 89, 90, 131, 132, 135, 139, 193, 232, 242, 243, 247, 248, 250, 303, 305, 307, 308, 310, 314], "alia": [59, 70], "alias": [53, 302], "align": [97, 102, 108, 120, 205, 232, 242, 243, 260, 274, 309, 314], "all": [6, 54, 63, 64, 65, 73, 89, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 111, 113, 114, 116, 118, 119, 120, 125, 146, 148, 149, 183, 184, 186, 187, 188, 196, 201, 215, 217, 221, 222, 281, 282, 285, 293, 296, 299, 302, 305, 306, 309, 310, 311, 314], "all_nod": 54, "allevi": 297, "allow": [1, 141, 146, 186, 298, 305, 309, 310, 313, 315], "alohner08": [273, 303], "alon": 309, "along": [27, 84, 86, 87, 88, 89, 90, 144, 178, 179, 180, 211, 212, 278, 297, 308, 314], "alpha": [168, 169, 261, 262, 263, 278, 282], "alpha_0": 310, "alreadi": 49, "also": [5, 6, 15, 105, 209, 211, 256, 257, 258, 259, 279, 299, 305, 308, 310, 311, 315], "alter": [141, 147], "altern": [64, 111, 293, 310], "alwai": [280, 307], "am": 105, "ambigu": [64, 293, 298, 308], "amd": 303, "american": 303, "ami": 303, "amoller05": [231, 255, 303], "among": 310, "amount": [166, 206, 280], "an": [18, 20, 26, 54, 65, 74, 76, 85, 86, 88, 90, 98, 110, 111, 117, 121, 136, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 153, 154, 155, 156, 157, 159, 160, 161, 164, 171, 172, 175, 176, 177, 184, 185, 188, 190, 191, 192, 193, 194, 195, 199, 200, 205, 212, 215, 231, 232, 234, 235, 237, 239, 242, 243, 244, 246, 247, 249, 255, 256, 257, 258, 259, 266, 267, 269, 273, 278, 282, 285, 289, 290, 291, 295, 296, 298, 303, 304, 305, 307, 308, 309, 310, 311, 313, 314, 315], "analog": 304, "analogi": [184, 185, 303], "analysi": [4, 296, 304, 305, 306], "analyt": 2, "analyticalcurvatur": 2, "analyz": [3, 10, 305], "andr": 305, "andrea": 303, "angl": [46, 188, 190, 211, 218, 220, 222, 223, 224, 226, 267, 269, 273], "anglestep": 211, "angletol": 267, "ani": [1, 7, 27, 54, 64, 71, 74, 110, 111, 141, 147, 149, 156, 157, 188, 225, 234, 235, 289, 293, 297, 300, 301, 305, 310, 313], "anisotrop": 207, "annual": 303, "anoth": [183, 186, 187, 193, 268, 282, 285, 296, 297, 308], "anyth": 309, "apart": [184, 268], "api": [305, 307], "appear": [64, 275, 293], "appli": [87, 89, 184, 185, 303, 315], "applic": [76, 297, 303, 305], "approach": [6, 64, 192, 278, 282, 285, 293, 297, 308, 310], "appropri": [74, 76, 297, 305], "approxim": [6, 85, 127, 140, 142, 146, 147, 148, 152, 158, 162, 165, 167, 202, 209, 303, 308], "ar": [2, 5, 6, 16, 18, 19, 34, 45, 53, 63, 64, 73, 74, 86, 87, 88, 89, 90, 91, 96, 101, 105, 108, 109, 111, 112, 114, 119, 122, 125, 127, 128, 139, 141, 143, 144, 145, 146, 147, 148, 149, 153, 154, 155, 159, 160, 161, 175, 176, 177, 183, 184, 186, 187, 188, 191, 192, 199, 209, 234, 235, 239, 241, 246, 247, 248, 249, 253, 264, 266, 268, 273, 280, 281, 282, 289, 292, 293, 295, 296, 297, 298, 299, 300, 302, 304, 305, 307, 308, 309, 310, 311, 313, 315], "arang": 206, "arbitrarili": [64, 293], "arcco": 226, "arctan": 309, "area": 223, "aren": [64, 93, 109, 184, 293, 311], "arg": [146, 148, 149, 192], "argument": [5, 73, 121, 146, 148, 149, 156, 157, 190], "ariella": 305, "aris": [2, 304], "around": [270, 290, 291, 309], "arrai": [2, 65, 85, 86, 87, 88, 89, 92, 94, 98, 102, 117, 120, 122, 125, 127, 128, 131, 132, 136, 137, 140, 141, 142, 143, 144, 145, 146, 148, 149, 184, 188, 191, 192, 193, 199, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 237, 242, 243, 247, 248, 250, 253, 255, 256, 257, 258, 259, 266, 268, 272, 277, 278, 297, 299, 300, 311], "array_lik": [20, 26, 54, 85, 86, 88, 90, 102, 104, 109, 111, 112, 115, 117, 120, 125, 131, 132, 136, 137, 139, 140, 142, 143, 145, 146, 147, 148, 149, 151, 163, 164, 170, 174, 183, 184, 186, 187, 188, 190, 191, 192, 195, 197, 198, 199, 200, 203, 204, 206, 209, 211, 212, 213, 214, 218, 220, 224, 225, 226, 229, 231, 232, 234, 235, 236, 237, 239, 241, 242, 243, 244, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 266, 274, 279, 281, 288, 292], "articl": 303, "artifici": 303, "arxiv": [132, 303], "ascii": 76, "aspect": [63, 215], "aspectratio": [63, 79], "aspir": 307, "assert": 74, "assess": [192, 308, 313], "assign": [184, 185, 294], "associ": [20, 117, 275, 285, 296, 313], "assum": [86, 87, 88, 89, 90, 91, 105, 112, 144, 153, 154, 155, 159, 160, 161, 175, 176, 177, 186, 264, 270, 271, 292, 294, 298, 299, 300], "assumpt": 309, "attempt": [64, 145, 188, 293], "attribut": [20, 302], "aubri": 303, "aug": 303, "auger": 305, "author": 307, "auto": [91, 105, 110, 191, 225, 292], "automat": [20, 214], "avail": [6, 63, 183, 184, 186, 187, 300, 307], "averag": [98, 186, 191, 273, 309, 310], "avoid": [64, 185, 293, 302], "awai": 310, "ax": [2, 87, 117, 144, 205, 212, 309, 314], "ax1": 297, "ax2": 297, "ax3": 297, "axi": [6, 7, 144, 174, 178, 179, 180, 203, 204, 205, 206, 211, 212, 213, 232, 242, 243, 253, 260, 314], "axis_step": 205, "b": [168, 169, 231, 234, 235, 247, 248, 250, 255, 256, 257, 258, 259, 297, 303, 309, 310, 311], "b978": 303, "b_i": 309, "b_x": 310, "b_y": 310, "background": [125, 146, 148, 297], "bajaj": 303, "balanc": 302, "bar": [2, 315], "bari": [261, 262, 263], "barrier": 286, "barrierelem": 286, "barriernod": 287, "barru": [242, 243, 303], "baryarea": [238, 240], "barycentr": [261, 262, 263, 278, 282, 285, 310, 314], "barytri": 310, "baryweight": 182, "base": [1, 2, 26, 27, 39, 65, 85, 91, 98, 121, 122, 125, 127, 128, 136, 141, 147, 192, 193, 273, 284, 297, 300, 301, 303, 304, 308, 312, 313, 314], "basic": [16, 310], "bd02": [27, 303], "becaus": 6, "becom": [188, 315], "been": [2, 40, 42, 108, 109, 188, 271, 308, 310], "befor": 188, "begin": [309, 310, 314], "behavior": 111, "behind": [307, 310], "being": [19, 54, 188, 215, 216, 217, 221, 222, 223, 227, 228, 229, 230, 247, 248, 250, 278, 296, 297, 300, 305, 309, 310, 313], "below": [149, 188, 296, 308], "belyaev": [147, 303], "ben": 303, "bend": 309, "benjamin": 303, "bent": 309, "best": [2, 79, 95, 96, 99, 100, 101, 103, 113, 114, 116, 118, 119, 216, 217, 221, 222, 223, 227, 228, 229, 230], "beta": [261, 262, 263, 278, 282], "beta_0": 310, "better": [127, 128, 285], "between": [1, 6, 84, 86, 87, 88, 89, 90, 92, 93, 94, 97, 102, 108, 120, 185, 188, 191, 192, 193, 211, 218, 220, 222, 224, 226, 231, 232, 234, 235, 242, 243, 244, 246, 247, 248, 249, 250, 254, 255, 259, 269, 296, 297, 298, 307, 313, 314, 315], "bf01313411": 303, "bfb0014497": 303, "bgcolor": [2, 5, 6, 7, 85, 140, 146, 148, 149, 150, 151, 152, 158, 162, 165, 167, 170, 174, 202, 203, 205, 206, 207, 208, 209, 212, 213, 297], "bicub": [87, 89], "bidirect": [247, 248, 249, 250, 314], "big": [309, 310], "biggest": 309, "bilinear": [86, 87, 88, 89], "binari": [76, 308], "bioinformat": 303, "biomechan": [1, 303, 305], "bit": [5, 307], "blackbox": 307, "blake": 305, "blo00": [184, 303, 315], "blo94": [90, 303, 308], "block": 302, "blom": [185, 303, 315], "bloomenth": [303, 308], "blue": 296, "bmatrix": [309, 314], "board": 1, "bolun": 303, "bone": [303, 309], "bong": 303, "bool": [20, 27, 54, 63, 66, 76, 86, 87, 88, 89, 90, 92, 93, 94, 105, 106, 108, 125, 141, 143, 146, 147, 148, 183, 184, 185, 186, 187, 188, 190, 191, 196, 198, 205, 207, 208, 210, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 231, 232, 234, 235, 236, 237, 239, 241, 242, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 268, 274, 275, 280, 281, 282, 285], "boolean": [153, 154, 155, 159, 160, 161, 175, 176, 177, 243, 297, 305], "boston": 305, "both": [2, 19, 54, 64, 147, 171, 172, 185, 194, 247, 248, 249, 250, 293, 304, 305, 309, 310, 311, 313, 314, 315], "bottasso": [27, 303], "boubekeur": 303, "bound": [5, 6, 54, 85, 146, 148, 149, 150, 156, 157, 192, 202, 205, 207, 208, 210, 231, 232, 242, 243, 255, 260, 274, 310, 313, 314], "boundari": [22, 26, 27, 86, 87, 88, 89, 125, 149, 191, 198, 241, 303, 304, 308, 310], "bow81": [131, 303, 310], "bowyer": [131, 132, 139, 303], "bowyerwatson": 139, "bowyerwatson2d": 310, "bowyerwatson3d": 310, "box": [85, 207, 208, 209, 231, 232, 236, 242, 243, 255, 260, 274, 297, 300, 303, 313], "boxcent": [231, 255], "branch": 313, "break": 53, "bridg": 307, "bright": [125, 309], "brightobject": 125, "brute": [278, 282, 285], "bu": [7, 303], "bucati": 7, "build": [125, 305, 310], "built": [6, 295, 300], "bx": 309, "bx_0y_0": 309, "bx_1y_1": 309, "bx_ny_n": 309, "bxy": 309, "c": [27, 190, 231, 234, 235, 247, 248, 250, 255, 256, 257, 258, 259, 284, 303, 309, 310, 311], "c_i": 309, "c_x": 310, "c_y": 310, "cach": [73, 302], "cag": 303, "cagd": 303, "calcfacenorm": [122, 127, 128, 224], "calcul": [33, 38, 46, 109, 121, 122, 123, 124, 125, 126, 127, 128, 130, 147, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 239, 260, 264, 265, 273, 274, 283, 284, 297, 302, 310, 314], "call": [289, 302], "callabl": [154, 160, 172, 176, 191], "came": 91, "can": [2, 5, 6, 7, 27, 45, 63, 82, 87, 88, 89, 90, 91, 109, 111, 122, 125, 127, 128, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 156, 157, 188, 190, 191, 197, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 246, 249, 250, 268, 278, 280, 282, 285, 286, 287, 295, 296, 297, 299, 300, 301, 302, 304, 305, 308, 309, 310, 311, 313, 314, 315], "candid": 311, "cannot": 286, "cap": [129, 205, 309], "capabl": [1, 10, 16, 85], "captur": 309, "care": [308, 313], "case": [64, 97, 108, 120, 144, 256, 257, 258, 259, 285, 293, 295, 296, 304, 308, 309, 310], "cast": [80, 237, 239, 272], "categor": 129, "categori": 129, "ccw": 109, "cdot": 314, "cell": [68, 185, 302], "cellcent": 185, "center": [7, 97, 102, 120, 151, 170, 174, 183, 185, 186, 187, 203, 204, 206, 211, 212, 213, 231, 255, 300, 308, 309, 310], "centric": [261, 262, 263], "centrod": 185, "centroid": [85, 109, 111, 149, 163, 193, 222, 302, 313], "certain": 145, "cgal": 305, "chalmer": 303, "chanc": [64, 293], "chandrajit": 303, "chang": [46, 53, 192, 266, 308, 310, 311, 315], "channel": 299, "charact": 190, "characterist": [34, 38], "charl": 303, "che95": [86, 87, 303, 308], "check": [74, 247, 248, 249, 250, 266, 310, 311, 313, 314], "chen": 284, "chernyaev": [303, 308], "chi": [34, 38], "child": [97, 102, 108, 120, 313], "children": 313, "choic": [184, 237, 239, 310, 313], "choos": [247, 248, 250, 308], "chosen": [85, 297], "ci": 222, "circl": [204, 213], "circular": [174, 205, 212, 213], "circumfer": [204, 205], "circumferenti": [203, 204, 212, 213], "citat": 307, "cite": 310, "class": [20, 77, 145, 296, 301, 309], "classic": 297, "classif": 309, "classifi": [64, 90, 269, 293], "cleaner": 297, "cleanup": [54, 66, 87, 88, 89, 90, 188, 275], "cleanup_tol": 90, "clear": [46, 73, 298, 305], "clim": 69, "cline": [303, 308], "clockwis": [96, 101, 109, 114, 119, 134, 264, 310], "clone": 295, "close": [2, 90, 110, 111, 125, 205, 235, 237, 239, 247, 248, 250, 256, 257, 258, 259, 297, 304], "cmu": 303, "cnm": 303, "co": [152, 158, 162, 165, 167, 303], "coarsen": [65, 98, 140, 143, 144, 188], "code": [2, 5, 6, 7, 302, 305], "collaps": 188, "collect": [296, 304], "color": [2, 5, 7, 297, 305], "colorspaci": 295, "column": 136, "column_stack": 206, "com": 303, "combin": [6, 146, 250, 297, 300, 303, 308], "come": 302, "comjnl": 303, "common": [301, 309, 311], "commonli": [6, 302, 304, 309], "commun": [303, 305], "compar": 2, "compat": [6, 146], "compil": 305, "complement": 309, "complet": 273, "complex": [7, 297, 300, 307, 311, 313], "compo": 304, "compon": [39, 309, 314], "comprehens": 305, "compris": 296, "comput": [1, 27, 45, 46, 90, 135, 143, 186, 231, 255, 286, 287, 297, 303, 304, 310, 314], "computation": 297, "concav": 309, "concern": 297, "conclud": 314, "concurr": 310, "condens": 303, "condit": [54, 300], "confer": 303, "configur": 311, "confirm": 74, "connect": [20, 22, 28, 29, 31, 32, 35, 36, 44, 49, 50, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 127, 128, 131, 132, 134, 136, 137, 141, 147, 156, 157, 185, 186, 193, 194, 199, 200, 206, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 227, 228, 229, 230, 237, 239, 241, 246, 249, 253, 254, 264, 265, 266, 267, 268, 269, 270, 271, 273, 275, 276, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 298, 302, 304, 308, 309, 310, 311, 315], "connet": 90, "consid": [18, 26, 90, 125, 140, 142, 143, 146, 148, 149, 235, 247, 248, 250, 289, 300, 304, 309], "consider": [185, 303], "consist": [16, 102, 141, 147, 270, 271, 278, 294, 296, 304, 308, 309, 310, 314], "constant": [87, 89], "constitut": [6, 267, 289], "constrain": [1, 137, 295], "constraint": [137, 139], "construct": [8, 9, 10, 111, 203, 204, 246, 249, 250, 296, 303, 306, 308, 309, 310, 313], "contain": [2, 27, 64, 65, 83, 91, 92, 94, 105, 140, 142, 143, 145, 146, 148, 149, 185, 193, 194, 195, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 225, 266, 268, 270, 271, 278, 282, 283, 284, 285, 286, 287, 292, 293, 294, 296, 299, 304, 305, 310, 311, 313], "continu": [1, 6, 97, 102, 108, 120, 153, 154, 155, 159, 160, 161, 175, 176, 177, 313], "contour": [125, 140, 146, 297, 303], "contract": [188, 190, 191], "contractit": 190, "contribut": [122, 127, 128, 305], "control": [6, 315], "conveni": [302, 309], "convent": [18, 300, 304], "converg": [183, 184, 186, 187, 189], "convers": [65, 246, 249, 305], "convert": [65, 67, 68, 82, 90, 125, 147, 156, 157, 193, 194, 206, 211, 225, 266, 268, 272, 292, 296, 301, 302, 304], "convex": [134, 135, 304, 309, 311], "convolut": 141, "coolwarm": 2, "coordin": [20, 39, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 135, 136, 137, 139, 146, 148, 149, 150, 151, 152, 156, 157, 158, 162, 165, 167, 170, 174, 178, 179, 180, 185, 191, 192, 193, 194, 195, 197, 198, 199, 200, 204, 206, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 239, 241, 242, 243, 244, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 302, 304, 309, 310, 311, 314, 315], "copi": [54, 141, 147, 186, 276], "coplanar": [204, 310], "core": 302, "corner": [89, 183, 184, 186, 187, 188, 260, 269, 274, 308, 309], "correct": [125, 303, 308], "correspond": [63, 73, 86, 87, 88, 93, 107, 117, 140, 143, 144, 171, 172, 178, 179, 180, 186, 190, 192, 199, 278, 282, 285, 296, 299, 309, 313, 314], "cosin": 222, "cost": [90, 143], "could": [1, 111, 149, 204, 206, 211, 304, 308, 311, 314], "count": [34, 256, 257, 258, 259], "counter": [96, 101, 109, 114, 119, 264, 310], "counterclockwis": [134, 135], "cours": [206, 231, 242, 243, 247, 248, 250, 255, 303, 311], "cover": 294, "creat": [1, 7, 20, 54, 63, 64, 90, 111, 141, 147, 186, 188, 246, 249, 270, 276, 278, 282, 285, 293, 297, 302, 308, 310, 313], "creation": 313, "criteria": [186, 199, 313], "crop": [65, 98], "cross": [151, 212, 213, 310, 314], "csg": 300, "ct": [305, 309], "cube": [2, 85, 86, 87, 140, 146, 297, 303, 313], "cubic": [5, 87, 89, 98, 122, 140, 146, 207, 270, 294, 303, 304], "cubicfit": [2, 127, 128, 309], "cuda": 1, "cup": [129, 309], "cupi": 1, "current": [16, 26, 27, 66, 183, 186, 187, 193, 267, 270, 285, 289, 305, 313], "curv": [121, 125, 303], "curvatur": [3, 4, 6, 10, 303, 305, 306], "curved": 62, "custom": 302, "cv2": 295, "cw": 109, "cy": 309, "cyl": 205, "cylind": [212, 213, 309], "cylindr": [151, 205, 309], "d": [1, 6, 27, 152, 191, 231, 234, 235, 247, 248, 250, 255, 256, 257, 258, 259, 297, 303, 305, 309, 311, 314], "daniel": 303, "dark": 125, "darker": 125, "data": [20, 54, 65, 68, 77, 87, 89, 98, 117, 125, 143, 144, 145, 194, 199, 237, 239, 244, 272, 275, 282, 296, 297, 299, 303, 305, 310, 313], "date": 305, "david": [303, 310], "deal": 302, "dec": 303, "decid": 188, "decompos": [97, 102, 108, 120, 308], "decomposit": [97, 102, 120], "decreas": 186, "def": [5, 300], "default": [18, 20, 26, 27, 46, 54, 63, 65, 66, 73, 76, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98, 102, 105, 106, 108, 109, 111, 120, 125, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 178, 179, 180, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 231, 235, 237, 239, 241, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 289, 292, 294, 298, 300], "defect": 297, "defin": [26, 30, 37, 78, 86, 87, 88, 89, 90, 112, 163, 164, 276, 282, 285, 296, 302, 304, 309, 310], "definit": 302, "deform": [184, 315], "defualt": 285, "deg": 63, "degener": [64, 87, 88, 89, 193, 266, 267, 293], "degre": [63, 188, 190, 267, 269], "delaunai": [1, 295, 303], "delaunau": 303, "delet": [266, 267, 275, 310], "deleteduplicatenod": [90, 266], "delta": 261, "delval": 272, "demand": 297, "demo": 305, "demo_curvatur": [2, 4, 306], "demo_heart": [5, 9, 306], "demo_mix": [6, 9, 306], "demo_pasta": [7, 9, 306], "demonstr": 7, "deni": 303, "denot": [86, 87, 88, 89, 90, 211], "depend": [1, 6, 108, 171, 172, 266, 297, 305, 309], "depict": 311, "depth": [85, 192, 195, 199, 313], "describ": [18, 85, 146, 147, 148, 149, 191, 192, 309, 310], "descript": 305, "design": [6, 298, 303, 305], "destruct": [141, 147], "det": [310, 314], "detail": [45, 46, 92, 94, 292, 297, 300, 301, 305], "detect": [91, 105, 141, 147, 192, 231, 232, 234, 235, 242, 243, 247, 248, 250, 255], "detectfeatur": [183, 184, 186, 187, 188, 190], "determin": [20, 40, 42, 54, 63, 66, 87, 88, 89, 90, 97, 108, 111, 120, 125, 149, 186, 188, 192, 194, 214, 222, 226, 235, 237, 239, 241, 247, 248, 249, 250, 256, 257, 258, 259, 267, 268, 269, 273, 280, 288, 289, 292, 308, 310, 313, 314], "detomi": [27, 303], "develop": [16, 82, 305, 310], "deviat": [2, 125, 141, 207, 208, 210], "diagon": 308, "diamond": 6, "dicom": [65, 98, 145, 295, 299], "dict": [63, 146, 148, 149, 183, 184, 186, 187, 190, 310], "dictionari": [20, 63, 146, 148, 149, 311], "diff": 297, "diff_fun": 154, "diff_sym": [155, 161], "diff_val": 153, "differ": [8, 10, 83, 85, 105, 110, 141, 147, 153, 154, 155, 161, 190, 234, 235, 266, 296, 297, 300, 304, 305, 309], "differen": [188, 191], "differenti": [85, 147, 152, 153, 154, 155, 158, 159, 160, 161, 162, 165, 167, 175, 176, 177], "difff": 297, "difficult": [297, 305, 310], "dihedr": [63, 218, 220, 224, 226, 269], "dimens": [39, 136, 139, 299, 300], "dimension": [86, 88, 139, 299, 303, 304, 310, 313], "direct": [2, 85, 109, 146, 148, 149, 171, 172, 178, 179, 180, 192, 205, 206, 207, 231, 232, 242, 243, 247, 248, 249, 250, 255, 297, 303, 305, 309, 314], "direction": [125, 309], "directli": [2, 90, 95, 96, 97, 99, 100, 101, 102, 103, 113, 114, 116, 118, 119, 120, 140, 142, 143, 146, 148, 149, 186, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 297, 299, 302, 305, 309, 310], "directori": [65, 98, 144, 145, 295, 299], "dirichlet": 303, "disadvantag": 309, "discard": [65, 98], "discuss": [307, 309, 310], "displac": [184, 185], "displai": [188, 190, 191], "distanc": [146, 148, 163, 164, 166, 171, 172, 174, 191, 192, 206, 213, 235, 246, 249, 268, 278, 282, 285, 303, 310, 315], "distort": [141, 147], "distribut": [5, 315], "divid": [199, 215, 309, 313], "divis": 303, "dl": [83, 303], "do": [186, 188, 305], "document": 305, "doesn": [27, 110, 186, 188, 310, 313], "doi": [27, 83, 135, 231, 242, 243, 247, 248, 250, 255, 256, 257, 258, 259, 303], "domain": 304, "dome": 129, "domin": 211, "don": [74, 246, 249, 310], "done": 297, "doorn": [123, 129, 130, 303], "doubl": 54, "down": 299, "download": [2, 5, 6, 7, 295], "dramat": 1, "drawn": 310, "driven": 305, "dtype": [145, 272], "dual": [85, 109, 193, 303], "dualconn": [109, 193], "dualcoord": [109, 193], "dualgrid_method": 85, "due": [140, 142, 143, 146, 148, 149, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 310], "duplic": [66, 87, 88, 89, 106, 268, 275], "dure": [141, 147, 183, 184, 186, 187], "dx": [303, 309], "dx_0": 309, "dx_1": 309, "dx_n": 309, "dxnew": 185, "dynam": 303, "e": [2, 34, 86, 88, 92, 93, 94, 97, 102, 105, 106, 108, 117, 120, 144, 145, 188, 191, 193, 205, 211, 223, 231, 234, 235, 236, 247, 248, 250, 255, 256, 257, 258, 259, 295, 296, 297, 299, 303, 304, 305, 309, 310, 311, 314], "e0": 105, "e1": 105, "e10": 105, "e2": 105, "e3": 105, "e4": 105, "e5": 105, "e6": 105, "e7": 105, "e8": 105, "e9": 105, "e_": 314, "e_1": 314, "e_2": 314, "each": [20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 44, 85, 86, 88, 89, 90, 91, 93, 98, 104, 105, 106, 108, 109, 115, 121, 122, 125, 127, 128, 146, 148, 149, 156, 157, 163, 164, 183, 185, 186, 187, 190, 191, 192, 195, 199, 207, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 235, 241, 243, 246, 248, 249, 250, 253, 258, 259, 268, 270, 271, 273, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 296, 298, 299, 304, 308, 309, 310, 311, 313, 314], "earli": 82, "earliest": 308, "easi": [302, 305], "easili": [6, 302, 311], "ebcb8b": 7, "ecosystem": 302, "ederror": [85, 192, 313], "edg": [20, 28, 29, 34, 40, 86, 87, 88, 89, 90, 91, 92, 95, 97, 99, 100, 102, 103, 105, 108, 110, 113, 115, 116, 118, 120, 125, 137, 139, 141, 147, 183, 184, 186, 187, 188, 190, 191, 203, 204, 215, 256, 257, 258, 259, 266, 269, 286, 289, 296, 297, 298, 304, 308, 310, 314], "edgeconn": [91, 105, 296, 311], "edgeedg": [256, 257, 258, 259], "edgeelem": 105, "edgeelemconn": [296, 311], "edgemod": [87, 89], "edges2uniqu": 296, "edgeset": [20, 55], "edu": [7, 303], "educ": 307, "effici": [19, 64, 152, 158, 162, 165, 167, 242, 243, 247, 248, 250, 284, 293, 295, 297, 302, 303, 308, 310, 311, 313, 314], "effort": 297, "egregium": 309, "eigenvalu": 309, "eight": 313, "either": [26, 54, 64, 85, 86, 87, 88, 89, 90, 117, 125, 134, 141, 144, 146, 147, 154, 160, 172, 176, 188, 191, 202, 205, 206, 207, 208, 210, 211, 212, 213, 223, 266, 268, 293, 296, 304, 305, 308], "elbow": 7, "elemconn": [109, 185, 273, 288, 289, 296], "elemdata": [20, 26, 54, 63, 65, 143, 188, 190, 191], "element": [5, 6, 20, 24, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 41, 50, 54, 63, 64, 65, 68, 74, 79, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 116, 117, 118, 119, 120, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 156, 184, 185, 186, 188, 190, 191, 192, 193, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 237, 239, 242, 246, 249, 253, 254, 255, 264, 265, 266, 267, 268, 269, 270, 271, 273, 276, 278, 279, 282, 285, 286, 288, 289, 292, 293, 294, 296, 297, 299, 302, 304, 305, 308, 309, 310, 313], "elemet": 119, "elemid": [72, 108, 278], "elemneighbor": [224, 286, 289, 296], "elemnorm": [224, 237, 239, 264, 273], "elemregion": 286, "elemset": [20, 56], "elemtyp": [90, 91, 105, 110, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 225, 292, 297], "elia": 303, "elimin": [5, 313], "elis": [303, 305], "ellipsoid": [212, 213], "ellipt": [212, 309], "elsewher": 300, "embed": 309, "emploi": 307, "empti": [27, 64, 74, 194, 196, 293, 313], "enabl": [1, 152, 158, 162, 165, 167, 313], "encod": 313, "end": [2, 5, 6, 7, 205, 309, 310, 314], "endpt_inclus": [251, 252], "energi": 303, "enforc": [207, 208, 210], "engin": [27, 303], "enhanc": [1, 295], "enough": [309, 310], "ensur": [137, 253, 308, 310, 311, 314], "entir": 27, "entiti": 296, "entri": [20, 26, 54, 63, 73, 87, 92, 94, 105, 140, 143, 188, 190, 191, 272, 308, 311], "ep": [64, 84, 192, 233, 235, 237, 238, 239, 240, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 293], "epsilon": 314, "equal": [26, 140, 142, 143, 146, 148, 149, 185, 188, 191, 207, 208, 210, 267, 269, 280, 281, 309, 313], "equat": [185, 309], "equiangular": [223, 227], "equilater": [223, 229], "equilibrium": [184, 315], "equival": [54, 112, 297, 302], "error": [74, 85, 122, 125, 127, 128, 192, 285, 295, 297, 308], "especi": 297, "essenti": [310, 313], "establish": [295, 302], "estim": 309, "et": [191, 314], "eta": 181, "etc": 266, "euclidian": 192, "euler": [34, 38], "ev": 303, "evalu": [63, 85, 90, 121, 125, 141, 146, 148, 149, 152, 156, 157, 158, 162, 163, 164, 165, 167, 178, 179, 180, 191, 192, 297, 305, 308, 313], "even": 27, "evenli": [5, 141, 147, 315], "everi": [185, 310, 311, 313], "ex": [105, 107, 224, 266, 268, 270, 271, 283, 284, 285, 294, 309], "ex_0": 309, "ex_1": 309, "ex_n": 309, "exact": [85, 313], "exact_h": [207, 208, 210], "exactli": [198, 207, 208, 210, 234, 235, 241, 256, 257, 258, 259, 268, 310, 313], "examin": 309, "exampl": [2, 4, 5, 6, 7, 9, 11, 85, 90, 97, 102, 120, 139, 140, 143, 146, 148, 149, 150, 151, 152, 158, 162, 165, 167, 170, 174, 202, 203, 205, 206, 209, 212, 213, 247, 248, 250, 268, 280, 281, 299, 300, 301, 302, 305, 306, 308, 309, 311, 313, 314], "example_func": 300, "except": [280, 305], "exclus": 54, "exculd": [278, 282, 285], "execut": [4, 9, 11, 306], "exist": [27, 54, 74, 111, 144, 269, 297, 304, 305, 308, 310, 313], "expand": 310, "expans": 1, "expens": 149, "explain": [193, 305], "explan": 307, "explicitli": [64, 293], "explor": 1, "expos": [105, 110, 141, 147, 304], "express": [152, 158, 162, 165, 167], "extend": [305, 308, 310], "extens": [76, 145, 299, 305], "exterior": [86, 87, 88, 89, 90], "extern": [305, 315], "extract": [13, 26, 86, 88, 90, 95, 96, 99, 100, 101, 103, 106, 107, 110, 113, 114, 116, 118, 119, 284, 305, 308], "extrud": [7, 210], "extrus": [7, 206], "ezproxi": 303, "f": [6, 18, 34, 85, 146, 148, 149, 152, 158, 162, 165, 167, 172, 185, 190, 191, 192, 231, 234, 235, 247, 248, 250, 255, 256, 257, 258, 259, 300, 303, 309, 315], "f1": [154, 160, 176], "f2": [154, 160, 176], "face": [20, 27, 34, 35, 36, 42, 92, 93, 94, 96, 97, 101, 102, 105, 106, 114, 119, 120, 185, 218, 220, 222, 224, 264, 269, 273, 279, 289, 296], "face2nodenorm": [45, 46, 122, 127, 128], "face2uniqu": 106, "facecent": 185, "faceconn": [106, 296, 311], "faceelem": 106, "faceelemconn": [296, 311], "faces2surfac": 106, "faces2uniqu": 296, "faceset": [20, 27, 57], "facet": 303, "facilit": 311, "factor": [27, 65, 98, 140, 143, 144, 178, 179, 180, 185], "fail": [74, 282], "fall": [308, 314], "fals": [2, 25, 54, 62, 65, 69, 86, 87, 88, 89, 90, 92, 93, 94, 98, 105, 106, 107, 108, 125, 138, 141, 143, 146, 147, 183, 184, 185, 186, 187, 189, 191, 196, 205, 207, 208, 210, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 231, 232, 234, 235, 237, 239, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 266, 267, 268, 274, 280, 281, 282, 285, 297], "famou": 308, "fan": 134, "far": [191, 310], "faraj": [191, 303], "fast": [231, 247, 248, 250, 255, 256, 257, 258, 259, 303], "faster": [247, 248, 250], "featur": [82, 141, 147, 183, 184, 186, 187, 188, 190, 191, 284, 297, 302, 303, 305, 309, 311, 313], "featureangl": [188, 190], "featurenod": 182, "featureweight": 182, "feb": 303, "fi": 222, "field": [163, 164, 191, 199, 303, 308], "fig": [2, 297], "fig1": 297, "fig2": 297, "fig3": 297, "figsiz": 297, "file": [4, 9, 11, 20, 65, 71, 76, 98, 140, 141, 142, 143, 144, 145, 295, 299, 305, 306], "filenam": [76, 145], "filetyp": [76, 145, 301], "fill": [88, 89, 111, 277, 308], "fill_valu": 156, "fillval": 277, "final": [139, 203, 204, 211, 314], "find": [1, 84, 185, 310, 311, 314], "finfo": [64, 293], "finit": [85, 135, 147, 297, 304], "finite_diff_step": 147, "first": [2, 64, 84, 112, 136, 144, 153, 159, 175, 188, 209, 226, 254, 256, 257, 261, 262, 263, 266, 275, 280, 286, 287, 293, 296, 297, 299, 302, 311, 313, 314], "fit": [122, 128], "fix": [27, 183, 184, 185, 186, 187, 188], "fixedg": [141, 147], "fixednod": [27, 141, 147, 182, 183, 184, 186, 187, 188], "fixednot": 185, "fixfeatur": [183, 184, 186, 187], "fixsurf": [183, 184, 186, 187], "flat": 204, "fld979": 303, "flexibl": 298, "flip": [25, 86, 87, 88, 89, 90, 189, 190, 312], "flippabl": 311, "float": [26, 27, 54, 64, 65, 66, 84, 85, 87, 89, 90, 98, 111, 123, 124, 125, 126, 130, 140, 141, 143, 144, 146, 147, 148, 150, 151, 170, 174, 178, 179, 180, 183, 184, 185, 186, 187, 188, 190, 191, 192, 199, 202, 203, 205, 206, 207, 208, 209, 210, 211, 235, 237, 239, 246, 247, 248, 249, 250, 253, 254, 256, 257, 258, 259, 261, 262, 263, 267, 268, 269, 276, 278, 282, 283, 284, 285, 291, 293, 294, 297], "flow": [141, 147], "fluid": [185, 303], "focu": [300, 305], "focus": 305, "follow": [134, 191, 206, 211, 275, 282, 296, 300, 302, 308, 309, 310, 314], "forc": [184, 185, 278, 282, 285, 315], "foreground": [125, 309], "form": [85, 134, 135, 146, 148, 149, 192, 193, 248, 250, 300, 304, 310, 311], "format": [85, 144, 146, 148, 149, 185, 192, 196, 231, 234, 235, 247, 248, 250, 255, 256, 257, 258, 259, 299, 301], "former": 73, "formula": [121, 125, 303], "forum": 303, "forward": [297, 313], "found": [73, 197, 297, 310], "four": [105, 208, 308, 310], "fourier": [6, 303], "fourth": 261, "frac": [309, 314, 315], "fractur": 305, "frad": 157, "frame": 309, "fre97": [186, 303], "freder": 303, "free": 184, "freenod": 147, "freitag": 303, "fring": 305, "from": [1, 2, 4, 5, 6, 7, 9, 11, 13, 34, 38, 86, 88, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 112, 113, 114, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 141, 147, 174, 184, 185, 188, 191, 194, 195, 203, 204, 206, 207, 208, 210, 211, 213, 216, 217, 221, 222, 223, 224, 227, 228, 229, 230, 235, 254, 264, 266, 267, 268, 271, 272, 275, 280, 281, 282, 285, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 313], "ftb16": [191, 303], "ftetwild": 297, "full": [2, 5, 6, 7, 82, 125, 205, 211, 225, 296, 302, 303, 304, 313], "fulli": [192, 286, 287], "fulltext": 303, "fun": 156, "func": [2, 65, 85, 90, 121, 146, 147, 148, 149, 150, 151, 152, 158, 162, 165, 167, 170, 174, 178, 179, 180, 192, 297, 300], "func1": 297, "func2": 297, "function": [2, 6, 13, 19, 64, 85, 90, 105, 109, 121, 140, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 186, 191, 192, 226, 237, 239, 266, 293, 295, 297, 298, 299, 301, 302, 305, 308, 309], "function2octre": [85, 313], "fund": 305, "fundament": [302, 303], "further": [16, 192, 305, 313], "furthest": 310, "fusilli": 7, "futur": 16, "fval": [166, 171], "fval1": [153, 159, 175], "fval2": [153, 159, 175], "fx_0y_0": 309, "fx_1y_1": 309, "fx_ny_n": 309, "fxy": 309, "fy": 309, "g": [2, 38, 86, 88, 144, 145, 188, 191, 231, 234, 235, 236, 247, 248, 250, 255, 256, 257, 258, 259, 296, 297, 299, 303, 304, 305, 309], "galleri": [2, 5, 6, 7, 10, 306], "gamma": [261, 262, 263, 278, 282], "gamma_0": 310, "gao": 303, "gap": 307, "gauss": 309, "gaussian": [62, 121, 124, 125, 141], "gaussian_filt": [125, 141], "gaussian_sigma": [65, 98, 125, 141], "gaussiancurvatur": 309, "gem": 303, "gener": [2, 5, 6, 7, 27, 64, 78, 85, 86, 87, 88, 89, 90, 97, 102, 108, 111, 120, 127, 128, 134, 139, 140, 142, 143, 146, 148, 149, 163, 164, 191, 192, 194, 195, 199, 200, 202, 205, 207, 208, 209, 210, 212, 213, 237, 239, 242, 243, 246, 247, 248, 249, 250, 253, 270, 273, 278, 282, 285, 293, 294, 297, 299, 300, 301, 303], "genu": 300, "geometr": [97, 108, 120, 303, 309, 310], "geometri": [85, 146, 148, 149, 192, 206, 268, 269, 300, 303, 304], "geq": 314, "get": [46, 89, 141, 206, 211, 225, 289, 305], "get_arrai": 297, "get_imag": 297, "getelemconnect": 109, "getelemneighbor": 286, "getnodeneighbor": [122, 127, 128, 286, 287, 289, 302], "gi04": [122, 127, 128, 303, 309], "gift": 135, "giftwrap": 133, "give": [117, 290, 291, 309], "given": [65, 98, 139, 144, 145, 197, 253, 270], "gmsh": 305, "go": [2, 5, 6, 7, 185, 302], "goal": 302, "gol05": [121, 125, 303, 309], "goldfeath": [122, 127, 128, 303, 309], "goldman": [121, 125, 303, 309], "gomiti": 7, "gpu": 1, "grad": [85, 192], "gradient": [85, 125, 141, 147, 157, 313], "grant": 305, "graphic": [256, 257, 258, 259, 297, 303, 304], "grayscal": [87, 89, 125], "greater": [65, 86, 87, 88, 89, 90, 98, 140, 143, 144, 191, 267, 278, 282, 285, 309], "grid": [85, 86, 88, 90, 97, 117, 125, 148, 156, 157, 163, 164, 202, 208, 210, 297, 303, 304, 308], "grid2d": 88, "grid2fun": 125, "grit": 303, "group": [91, 281, 286, 287], "grow": 307, "growth": 305, "guarante": 102, "guid": [1, 15, 192, 305], "gutierrez": 305, "gy": 309, "gy_0": 309, "gy_1": 309, "gy_n": 309, "gyroid": [6, 140, 146, 148, 149], "h": [5, 6, 87, 89, 111, 140, 141, 142, 143, 146, 147, 148, 149, 188, 190, 191, 202, 207, 208, 209, 210, 231, 234, 235, 247, 248, 250, 255, 256, 257, 258, 259, 303, 309], "h_node": 191, "ha": [5, 39, 64, 74, 90, 105, 106, 109, 247, 248, 250, 266, 270, 293, 301, 305, 308, 310, 311, 314], "half": [212, 296, 310, 311], "halt": 192, "handl": [5, 64, 85, 87, 89, 125, 154, 160, 172, 176, 250, 293, 298, 310], "hang": 303, "harvei": 303, "hash": 311, "hasn": 109, "hat": 309, "have": [1, 2, 84, 90, 108, 188, 224, 231, 235, 243, 248, 250, 258, 259, 266, 267, 271, 296, 299, 302, 308, 309, 310], "haven": [40, 42], "health": 305, "heap": 188, "hear": 1, "heart": 5, "heavili": 1, "height": 294, "held": [27, 183, 184, 185, 186, 187, 188], "help": 307, "here": [297, 307, 309, 310, 311], "hex": [91, 102, 105, 207, 266], "hexahedr": [86, 95, 96, 97, 193, 194, 206, 207, 211, 216, 223, 241, 270, 271, 294, 304, 305], "hexahedra": [86, 193, 304], "hexahedron": [64, 293, 298], "hexconn": 97, "hexcoord": 97, "hi": 191, "hierarch": 313, "high": [2, 297, 303], "higher": [186, 313], "highli": [122, 127, 128], "highlight": [10, 305], "hip": 305, "hner": 303, "hol10": [193, 303], "hold": [141, 147, 184], "holder": 305, "holmlid": 303, "how": [2, 7, 39, 87, 89, 266, 305, 307, 309, 310], "howev": [27, 53, 125, 139, 188, 297, 298, 308, 310], "hsw": [297, 303], "html": 303, "http": [27, 83, 132, 135, 137, 231, 242, 243, 247, 248, 250, 255, 256, 257, 258, 259, 303], "hu": 303, "hugh": 303, "hull": [134, 135, 138], "hx": [87, 98, 140, 143], "hy": [87, 98, 140, 143], "hyperbol": 309, "hz": [87, 98, 140, 143], "hzg": [191, 303], "i": [1, 2, 6, 18, 26, 27, 30, 34, 37, 38, 39, 49, 54, 64, 65, 73, 74, 82, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 108, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 125, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 155, 159, 160, 161, 171, 172, 174, 175, 176, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 198, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 226, 231, 232, 234, 235, 236, 237, 239, 241, 242, 243, 247, 248, 249, 250, 253, 255, 256, 257, 258, 259, 266, 268, 269, 270, 271, 272, 273, 276, 278, 279, 280, 281, 282, 285, 286, 287, 289, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 305, 307, 308, 309, 310, 311, 313, 314, 315], "id": [27, 90, 93, 107, 108, 199, 224, 254, 266, 278, 279, 282], "idea": 307, "ident": 297, "identif": [135, 297], "identifi": [64, 66, 93, 183, 184, 186, 187, 188, 190, 191, 244, 246, 249, 253, 254, 269, 286, 287, 293, 310, 311], "identify_typ": [20, 214], "idx": [92, 94, 266, 268, 280, 281], "ignor": [136, 139, 148], "ij": 315, "im2voxel": [65, 125], "imag": [1, 2, 13, 65, 87, 89, 98, 117, 125, 295, 297, 303, 304, 308, 309], "img": [65, 98, 140, 141, 142, 143, 144], "impath": 145, "imperfect": 297, "implement": [16, 26, 85, 192, 193, 289, 305, 307, 310], "implicit": [1, 2, 6, 8, 9, 10, 13, 85, 90, 121, 125, 140, 142, 143, 192, 303, 306, 308, 309], "implicitli": 300, "import": [2, 5, 6, 7, 82, 125, 301, 307, 309, 310], "improv": [1, 5, 16, 27, 278, 282, 285, 297, 305], "imshow": 297, "inaccur": 309, "inact": 311, "incircl": 310, "inclu": [256, 257, 258, 259], "includ": [6, 194, 196, 198, 241, 273, 280, 286, 290, 299, 300, 301, 303, 304, 305, 308, 309, 313], "includecollinear": [133, 135], "inclus": [54, 198, 236, 238, 240, 241, 310], "incomplet": 307, "inconsequenti": 314, "increment": 310, "independ": [309, 310], "index": [27, 62, 105, 106, 278, 279, 296, 308], "indic": [26, 30, 37, 54, 92, 94, 105, 106, 129, 130, 134, 135, 137, 139, 146, 148, 188, 190, 207, 246, 248, 249, 253, 266, 268, 280, 281, 282, 289, 296, 298, 304, 310], "individu": 1, "inf": [278, 282, 285], "infer": [298, 311], "infinit": 310, "influenc": 34, "info": [28, 29, 31, 32, 35, 36, 44], "inform": [2, 20, 135, 188, 190, 305, 309, 311], "infti": 79, "inher": [191, 309], "initi": [90, 183, 185, 186, 187, 206, 211, 297, 305], "inp": [71, 301], "inplac": [54, 141, 147, 186], "input": [5, 83, 85, 86, 87, 88, 89, 90, 97, 102, 112, 120, 141, 144, 145, 146, 153, 154, 155, 160, 172, 176, 186, 191, 205, 206, 211, 225, 266, 272, 274, 277, 299, 300, 302], "insid": [18, 26, 54, 86, 87, 88, 89, 90, 111, 140, 141, 142, 143, 146, 148, 149, 153, 154, 155, 159, 160, 161, 175, 176, 177, 193, 236, 237, 239, 241, 300, 308, 309, 310], "inspir": [191, 305, 308], "instal": 137, "instanc": 302, "instead": [140, 142, 143, 145, 146, 148, 149, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 273, 314], "institut": [303, 305], "instruct": 295, "int": [26, 27, 54, 65, 85, 86, 87, 88, 89, 90, 98, 125, 140, 141, 143, 144, 147, 178, 179, 180, 183, 184, 186, 187, 188, 190, 192, 195, 199, 203, 204, 205, 206, 209, 211, 212, 213, 271, 272, 277, 282, 285, 290], "int16": 145, "integ": [140, 142, 143, 146, 148, 149, 203, 204], "intellig": 303, "intend": [297, 305, 307], "intens": [65, 98], "interact": 303, "interc": 309, "interesect": 253, "interest": [6, 309, 313], "interfac": [16, 84, 137, 139, 186, 188, 190, 191, 297, 305], "interfer": 310, "interior": [86, 87, 88, 89, 90, 110, 183, 184, 186, 187, 188, 304, 310], "intermedi": 302, "intern": [141, 147, 185, 226, 303], "interpol": [1, 2, 5, 65, 86, 87, 88, 89, 90, 98, 140, 141, 142, 143, 144, 146, 148, 156, 157, 192, 282, 308, 313], "interpret": [310, 311], "interrant": [122, 127, 128, 303, 309], "intersect": [83, 84, 160, 231, 232, 234, 235, 237, 239, 242, 243, 244, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 297, 300, 303, 305, 310, 313], "intersection_fun": 160, "intersection_leav": 244, "intersection_v": 159, "intersectionf": 297, "intersectionpair": 253, "intersectionpoint": [253, 254], "intersectionpt": [246, 247, 248, 249, 259], "intins": 309, "introduc": [2, 297], "intuit": 309, "inv": [92, 94, 268, 280, 281], "invalid": [97, 102, 108, 120, 310], "invari": 303, "invers": [63, 141, 147, 184, 216, 217, 308], "inverseorthogon": [63, 79], "inverseorthogonalqu": [63, 79, 221], "invert": [74, 188, 311], "involv": [1, 297, 310], "iortho": 217, "iorthoq": 216, "ipynb": [2, 5, 6, 7], "irregular": 2, "irrelev": 184, "isn": [146, 315], "isocontour": 88, "isolin": [88, 308], "isosurfac": [13, 18, 26, 86, 87, 88, 89, 90, 121, 140, 141, 142, 146, 147, 148, 166, 171, 192, 303, 308, 309], "isotrop": [87, 89, 200], "isovalu": [85, 88, 140, 142, 143, 146, 148, 149, 308], "iss": 303, "issu": [74, 310], "iter": [2, 141, 147, 183, 184, 186, 187, 188, 189, 190, 273, 315], "itertool": 250, "its": [20, 97, 102, 108, 120, 183, 186, 187, 278, 302, 310, 311, 313, 315], "itself": [309, 314], "j": [123, 129, 130, 185, 303, 315], "jack": 303, "jacobson": 303, "jan": 303, "jarvi": 135, "jean": 303, "jm24": [6, 303], "joe": 303, "john": 303, "join": 297, "jonathan": [16, 137, 303], "jonathon": 139, "josephson": [1, 303, 305], "joshua": 305, "journal": [185, 256, 257, 258, 259, 303, 310], "jpeg": 145, "jpg": 299, "jul": 303, "jule": 303, "jupyt": [2, 5, 6, 7], "jupyter_rfb": 295, "just": [143, 204], "k": [185, 242, 243, 303, 309], "k1a_smooth": 2, "k1a_spher": 2, "k1m_smooth": 2, "k1m_sphere": 2, "k2a_smooth": 2, "k2a_spher": 2, "k2m_smooth": 2, "k2m_sphere": 2, "k_": 315, "kappa_": 309, "kappa_1": 309, "kappa_2": 309, "keep": [54, 73, 85, 140, 142, 143, 146, 148, 149, 184], "kei": [27, 190, 305, 310, 311], "keith": 303, "kept": [111, 149, 266], "kernel": 141, "keyword": [146, 148, 149], "kf": 185, "know": 310, "known": 6, "koenderink": [123, 129, 130, 303], "ku": 185, "kvd92": [123, 129, 130, 303, 309], "kwarg": [69, 75, 146, 148, 149, 192], "l": [27, 192, 303], "l0overrid": 185, "lab": 305, "label": [2, 186, 188, 190, 191, 297], "laidlaw": 303, "lambda": [6, 90], "lambdifi": [152, 158, 162, 165, 167], "laplacian": [2, 5, 141, 147, 183, 184, 186, 187, 303], "larg": [143, 184, 297], "larger": [186, 304, 311, 313], "largest": [183, 184, 186, 187, 310], "last": 280, "later": [27, 302], "layer": [27, 270, 271, 294, 303], "layerconn": 270, "layercoord": 270, "lc87": [86, 87, 303, 308], "lead": [297, 308, 309, 310], "leaf": [194, 197, 198, 201, 244, 313], "least": [289, 309, 310], "leav": [201, 205, 310], "lectur": 303, "left": [309, 314], "legend": 2, "len": [2, 117, 206, 253, 280, 282, 285], "length": [20, 140, 142, 143, 146, 148, 149, 185, 188, 190, 191, 205, 215, 277, 280, 281, 298], "leq": 314, "less": [18, 26, 64, 65, 86, 87, 88, 89, 90, 98, 140, 142, 143, 144, 146, 148, 149, 183, 184, 186, 187, 188, 192, 266, 269, 293, 309], "lessen": 307, "letter": 135, "level": [26, 86, 87, 88, 89, 90, 192, 193, 313], "lexicograph": 299, "li": [310, 314], "lib": 303, "librari": [109, 303, 305], "lie": [2, 121, 141, 146, 147, 148, 205, 234, 235, 256, 257, 258, 259, 269, 311], "like": [97, 108, 120, 250, 305], "likewis": 311, "limit": [109, 236, 297, 305, 314], "line": [7, 88, 89, 204, 206, 211, 293, 298, 308, 310], "linear": [86, 87, 88, 89, 90, 140, 141, 142, 146, 148, 156, 157, 185, 192, 309, 313], "link": [53, 303, 310, 313], "linspac": 206, "list": [20, 27, 28, 29, 30, 31, 32, 35, 36, 37, 44, 63, 66, 73, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 134, 135, 139, 144, 146, 148, 149, 156, 157, 163, 164, 185, 192, 193, 196, 198, 199, 201, 202, 205, 207, 208, 210, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 237, 239, 241, 242, 244, 246, 249, 254, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 296, 302], "ller": 303, "load": [65, 299, 315], "local": [141, 147, 183, 184, 186, 187, 188, 190, 274, 309], "locallaplaciansmooth": 5, "locat": [18, 183, 184, 186, 187, 266, 268, 279], "lock": 302, "log": 2, "long": [6, 205], "longer": 313, "longest": [185, 215], "look": 309, "lookup": 308, "loop": [247, 248, 250], "loos": 305, "lorensen": [303, 308], "lori": 303, "loss": 297, "love": 1, "low": [2, 6, 297, 309], "lower": [54, 150, 188, 231, 232, 236, 242, 243, 255, 313, 314], "lth86": [297, 303], "lumetr": 304, "m": [26, 63, 65, 67, 68, 71, 82, 141, 147, 163, 164, 168, 169, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 206, 211, 249, 253, 300, 301, 303, 315], "m1": [6, 297], "m2": [6, 297], "m3": 6, "m4": 6, "macaroni": 7, "machin": [64, 293], "made": 304, "magnitud": [125, 309], "mai": [53, 97, 102, 108, 120, 145, 146, 148, 149, 184, 188, 193, 207, 208, 210, 211, 285, 296, 297, 300, 309, 311, 314], "main": [304, 308], "maintain": 1, "major": [174, 213, 297, 300], "make": [207, 208, 210, 302, 305, 309], "mani": [19, 39, 64, 247, 248, 250, 293, 298, 302, 309], "manifold": [237, 239, 303], "manipul": 305, "manufactur": 304, "map": [1, 278, 282, 285], "mappingmatrix": [278, 282, 285], "marc": 303, "march": [2, 85, 86, 87, 88, 89, 90, 140, 146, 148, 303], "marchingcub": [140, 146, 308], "marchingcubesimag": [125, 140, 146], "marchingsquar": 308, "marchingtetrahedra": [140, 146, 308], "mark": [310, 313], "marti": 305, "mat": 274, "match": [188, 191, 272], "materi": [188, 191, 303], "mathbf": 309, "mathemat": [300, 303], "matplotlib": [2, 295], "matric": 185, "matrix": [87, 89, 117, 144, 274, 282, 285, 309, 314], "matter": [153, 154, 155, 237, 239, 303], "max": [62, 63, 185, 215, 216, 217, 218, 220, 221, 222, 223, 225, 314], "maxangl": 218, "maxdepth": [85, 192, 195, 199], "maxdihedr": [63, 226], "maximum": [27, 85, 121, 122, 123, 124, 125, 126, 127, 128, 130, 146, 148, 149, 153, 154, 159, 160, 183, 184, 186, 187, 188, 190, 192, 195, 199, 216, 218, 309, 313], "maxit": [183, 184, 186, 187, 188], "maxprincip": [121, 122, 123, 124, 125, 126, 127, 128, 130], "mb": [4, 9, 11, 306], "mc": [85, 140, 146, 148], "mc33": [85, 140, 146], "me": 1, "mean": [2, 6, 62, 63, 121, 125, 126, 186, 215, 216, 217, 218, 220, 221, 222, 223, 225, 302, 310, 311, 314], "meancurvatur": 309, "meaning": 125, "meanratio": [63, 79, 186], "measur": [6, 79, 309, 313], "mechan": 303, "mechanobiolog": [303, 305], "mechanobiologi": [1, 303, 305], "meet": [256, 257, 258, 259, 311], "mem": [4, 9, 11, 306], "memori": 311, "merg": [275, 294], "mergedconn": 275, "mergedcoord": 275, "mergedv": 275, "mergemesh": 294, "mesh": [1, 2, 7, 9, 12, 78, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 127, 128, 140, 141, 142, 143, 146, 147, 148, 149, 156, 157, 163, 164, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 224, 225, 227, 228, 229, 230, 237, 239, 241, 246, 249, 253, 254, 264, 266, 267, 268, 269, 270, 271, 275, 276, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 303, 306, 307, 310, 311, 315], "mesh2": 66, "mesh2sdf": 1, "meshanalysi": [4, 306], "meshboolean": 297, "meshgener": [9, 306], "meshio": [67, 68, 71, 76, 295, 301, 305], "meshio2mymesh": 301, "meshpi": 305, "met": [195, 199], "meth": [20, 66], "method": [2, 7, 8, 10, 16, 26, 45, 46, 77, 85, 86, 87, 88, 89, 90, 97, 102, 108, 120, 125, 133, 139, 140, 141, 142, 146, 147, 148, 156, 157, 163, 183, 185, 186, 187, 191, 193, 223, 227, 229, 238, 240, 273, 286, 297, 301, 303, 304, 308, 309, 315], "metric": [62, 63], "micro": 305, "middl": 5, "midpoint": [86, 87, 88, 89, 90, 115, 140, 142, 146, 148, 191, 308], "min": [62, 63, 185, 186, 189, 215, 216, 217, 218, 220, 221, 222, 223, 225, 282, 285, 314], "minangl": 220, "mind": 309, "mindepth": [85, 192], "mindihedr": [63, 226], "minim": [6, 64, 152, 158, 162, 165, 167, 293, 311], "minimum": [85, 121, 122, 123, 124, 125, 126, 127, 128, 130, 146, 148, 149, 155, 161, 175, 176, 177, 186, 192, 199, 220, 222, 247, 248, 250, 274, 303, 309], "minor": [174, 213], "minprincip": [121, 122, 123, 124, 125, 126, 127, 128, 130], "minsiz": 199, "mirror": 276, "mirroredconn": 276, "mirroredcoord": 276, "mislabel": [64, 293], "mix": [8, 9, 10, 90, 91, 105, 292, 298, 305, 306, 308], "mixed_el": [90, 146], "mixed_topology1": 6, "mixed_topology2": 6, "mixed_topology3": 6, "mixed_topology4": 6, "mm": 2, "mnew": [183, 184, 186, 187, 188, 191], "mode": [54, 87, 89, 111, 125, 149, 194, 286, 289], "model": [297, 303, 305], "modifi": [54, 186, 188, 297, 299, 302, 311], "modul": [1, 6, 16, 18, 296, 301, 302], "mohebi": 305, "moller97": [256, 257, 258, 259, 303], "mollert05": [247, 248, 250, 303, 314], "more": [1, 2, 5, 28, 29, 31, 32, 35, 36, 44, 45, 46, 65, 82, 98, 140, 141, 143, 144, 147, 188, 190, 247, 248, 250, 266, 273, 297, 300, 301, 302, 304, 305, 307, 315], "morgan": [303, 305], "morlei": [242, 243, 303], "moscow": 303, "most": [2, 64, 109, 188, 273, 286, 287, 292, 293, 296, 303, 304, 305, 307, 308, 309, 310, 313], "mostvis": 273, "mostvisible_it": 273, "mostvisible_loop": 273, "movabl": 147, "move": [2, 141, 146, 147, 148, 183, 184, 186, 187, 191, 286, 302, 310], "movement": [183, 184, 186, 187], "mt": [85, 140, 146], "much": [2, 247, 248, 250, 297, 314], "multi": [285, 299, 303], "multichannel": [144, 145, 299], "multipl": [6, 66, 92, 105, 188, 190, 231, 247, 248, 250, 285, 296, 300, 302, 308], "must": [27, 54, 65, 84, 90, 98, 111, 137, 139, 140, 141, 143, 144, 146, 148, 184, 185, 188, 191, 199, 205, 250, 266, 299, 308, 310, 314], "mx3": [131, 132, 136, 137], "my": 1, "mymesh": [1, 2, 5, 6, 7, 10, 295, 297, 298, 300, 301, 302, 304, 307, 310], "mymesh2meshio": [82, 301], "m\u00f6ller": [231, 247, 248, 250, 255, 256, 257, 258, 259, 314], "n": [7, 11, 91, 105, 136, 139, 178, 179, 180, 184, 209, 231, 235, 239, 241, 243, 248, 250, 253, 258, 259, 290, 303, 309, 310], "n0": 105, "n1": [105, 107], "n2": [105, 107], "n3": 107, "n4": 107, "n5": 107, "n_i": 315, "name": [20, 27, 73, 76, 145, 299, 304], "nan": [45, 253], "nation": 305, "natur": [307, 310, 313], "ndarrai": [65, 85, 86, 87, 88, 89, 90, 92, 94, 97, 98, 102, 111, 112, 115, 117, 120, 121, 122, 125, 127, 128, 131, 132, 134, 135, 136, 137, 140, 141, 142, 143, 144, 152, 153, 158, 159, 162, 165, 166, 167, 171, 175, 177, 184, 193, 194, 198, 210, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 235, 243, 246, 247, 248, 249, 253, 258, 259, 260, 262, 266, 268, 272, 274, 277, 278, 280, 281], "ndimag": [65, 98, 125, 140, 141, 143, 144], "nearbi": 188, "necessari": [27, 125, 192, 310, 314, 315], "necessarili": [102, 108], "need": [109, 185, 247, 248, 250, 285, 295, 297, 302, 307, 308, 310, 311, 313], "neg": [26, 140, 142, 143, 146, 148, 149, 153, 154, 155, 159, 160, 161, 175, 176, 177, 178, 179, 180, 309, 310], "neglect": 112, "neighbor": [32, 44, 51, 97, 102, 108, 120, 122, 127, 128, 183, 185, 186, 187, 222, 224, 286, 287, 289, 290, 291, 292, 296, 310, 311, 315], "neighborhood": [188, 290, 291, 309], "neilesh": 305, "neither": 209, "nelem": [64, 188, 190, 191, 293], "nesper": 303, "net": 315, "network": [27, 315], "never": 311, "nevertheless": 6, "new": [7, 86, 87, 88, 89, 90, 97, 102, 104, 108, 115, 120, 183, 184, 186, 187, 188, 191, 266, 268, 270, 279, 280, 297, 302, 308, 310], "newconn": [86, 87, 88, 89, 266, 268, 279], "newcoord": [86, 87, 88, 89, 97, 102, 120, 268, 279], "newedg": 55, "newfac": 57, "newid": 279, "newli": 310, "newnodeconn": 56, "newnodecoord": 58, "newvalu": 90, "next": [192, 310, 313], "ni": 226, "nine": 129, "nj": 226, "nlayer": [27, 271], "nodal": [6, 26, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 113, 114, 115, 116, 118, 119, 120, 122, 127, 128, 134, 156, 157, 185, 193, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 227, 228, 229, 230, 264, 265, 267, 268, 269, 270, 271, 273, 275, 276, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 303], "node": [2, 5, 20, 22, 27, 30, 31, 34, 37, 39, 43, 44, 45, 46, 49, 50, 51, 54, 64, 65, 66, 68, 74, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 132, 136, 137, 139, 141, 143, 147, 149, 156, 157, 163, 164, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 237, 239, 241, 244, 246, 249, 253, 254, 261, 262, 263, 266, 268, 269, 270, 271, 273, 275, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 298, 302, 304, 308, 309, 310, 311, 313], "nodeconn": [2, 20, 49, 53, 59, 64, 74, 85, 86, 88, 90, 91, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 113, 114, 116, 118, 119, 120, 131, 132, 134, 136, 137, 140, 142, 143, 146, 148, 149, 182, 185, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 228, 229, 230, 265, 266, 267, 268, 271, 273, 276, 279, 283, 286, 287, 288, 289, 290, 291, 292, 293, 296, 302, 304], "nodeconn1": 275, "nodeconn2": 275, "nodecoord": [2, 20, 53, 70, 74, 85, 86, 88, 90, 91, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 125, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 146, 148, 149, 182, 185, 199, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 228, 229, 230, 233, 237, 239, 246, 249, 253, 264, 265, 266, 267, 268, 269, 271, 273, 276, 278, 279, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 296, 297, 302, 304], "nodecoords1": [254, 275, 282, 285], "nodecoords2": [254, 275, 282, 285], "nodedata": [20, 26, 54, 65, 98, 143, 149, 297], "nodeneighbor": [2, 122, 127, 128, 185, 287, 292, 296, 302], "nodeneighborhood": [122, 290, 291], "nodenorm": [2, 109, 122, 127, 128, 273], "nodenormalsmethod": 45, "noderegion": 287, "nodeset": [20, 58], "nodespringsmooth": [141, 147, 315], "nodev": [157, 163, 164, 275], "nodevals1": [275, 285], "nodevals2": [275, 285], "nodevalu": [86, 88, 90], "non": [45, 64, 74, 106, 139, 184, 185, 188, 191, 207, 208, 210, 273, 293, 296, 308, 309, 310, 311], "nondelaunai": 139, "none": [20, 25, 26, 27, 54, 55, 56, 57, 58, 63, 65, 69, 73, 85, 98, 109, 111, 125, 137, 138, 139, 140, 142, 143, 145, 146, 147, 148, 156, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 197, 199, 203, 204, 205, 206, 209, 211, 214, 229, 231, 237, 239, 246, 249, 253, 255, 272, 276, 278, 279, 282, 285, 286, 287, 289, 294], "nonetyp": [27, 63, 73, 147, 184, 190, 197, 239, 246, 249], "nor": 209, "nord": 305, "norm": 209, "normal": [25, 33, 45, 46, 109, 122, 127, 128, 141, 147, 178, 179, 180, 210, 222, 224, 226, 231, 232, 233, 234, 235, 237, 239, 255, 264, 273, 278, 303, 309, 311], "notabl": 305, "note": [63, 91, 97, 102, 105, 108, 109, 120, 153, 154, 155, 202, 209, 270, 282, 285, 289, 297, 303, 310, 311], "notebook": [2, 5, 6, 7], "notion": 309, "notrim": 149, "noura": 303, "nov": 305, "novel": 303, "now": 309, "np": [2, 6, 7, 45, 64, 65, 85, 86, 87, 88, 89, 90, 92, 94, 97, 98, 102, 111, 112, 115, 117, 120, 121, 122, 125, 127, 128, 131, 132, 134, 135, 136, 137, 140, 141, 142, 143, 144, 152, 153, 158, 159, 162, 165, 166, 167, 171, 175, 177, 184, 193, 194, 198, 206, 210, 211, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 237, 239, 243, 246, 247, 248, 249, 250, 253, 255, 256, 257, 258, 259, 260, 262, 266, 268, 272, 274, 277, 278, 280, 281, 282, 285, 293], "npt": [282, 285], "nring": [62, 290], "numba": 295, "number": [20, 27, 34, 39, 40, 41, 42, 43, 91, 105, 112, 141, 147, 183, 184, 186, 187, 188, 190, 191, 203, 204, 205, 209, 212, 213, 223, 266, 271, 281, 282, 285, 290, 295, 296, 298, 302, 310, 315], "numer": [185, 303], "numpi": [1, 2, 6, 7, 86, 87, 88, 89, 92, 94, 98, 144, 145, 146, 148, 149, 152, 158, 162, 165, 167, 192, 272, 277, 295, 299, 300], "nvidia": 1, "nx2": 131, "nx3": [122, 127, 128, 131, 132, 184, 195, 199, 246, 249, 260, 274], "nx4": 278, "o": [295, 303, 314], "o_x": 314, "ob01": [141, 147, 303], "obj": 301, "object": [53, 63, 64, 65, 67, 68, 71, 83, 85, 125, 140, 141, 142, 143, 146, 147, 148, 149, 163, 164, 183, 184, 186, 187, 192, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 284, 293, 297, 300, 301, 302, 303, 305, 309], "obp03": [187, 303], "observ": 6, "obtain": [85, 87, 88, 92, 93, 94, 109, 122, 127, 128, 141, 147, 153, 154, 155, 159, 160, 161, 175, 176, 177, 289, 296, 297, 299, 300, 304, 308, 309], "occur": [111, 125, 146, 314], "octre": [85, 111, 237, 239, 244, 246, 249, 250, 253, 278, 282, 285, 297], "octree2du": 85, "octree_ep": 85, "octree_strategi": 85, "octreenod": [111, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 237, 239, 244, 246, 249, 253, 278, 282, 285], "off": 311, "offer": [297, 300, 302], "offset": [171, 172, 211], "offset_v": 166, "often": [188, 191, 297, 308, 315], "ohtak": [147, 303], "old": [268, 279], "om": 299, "onc": [266, 310], "one": [53, 92, 94, 97, 102, 105, 106, 108, 120, 141, 183, 185, 186, 187, 195, 199, 231, 246, 247, 248, 249, 250, 282, 285, 289, 296, 305, 308, 309, 310, 313], "ongo": 305, "onli": [92, 94, 105, 106, 125, 136, 141, 144, 147, 183, 184, 185, 186, 187, 188, 191, 193, 194, 195, 199, 209, 237, 239, 247, 248, 249, 250, 266, 267, 271, 282, 285, 289, 295, 296, 299, 309, 310, 311, 313, 314], "onlinelibrari": 303, "onto": [2, 278, 310, 314], "open": [205, 304, 309], "opencv": [295, 299], "oper": [20, 53, 144, 153, 154, 155, 188, 190, 268, 280, 296, 297, 300, 302, 305, 307, 308], "opposit": [26, 140, 142, 143, 146, 148, 149, 300, 308, 309, 310], "optim": [6, 27, 109, 141, 147, 215, 303, 305], "optimizetet": 27, "option": [1, 20, 26, 27, 46, 54, 63, 65, 66, 73, 74, 76, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 102, 105, 106, 108, 109, 111, 120, 125, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 229, 231, 235, 237, 239, 241, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 289, 292, 294], "order": [65, 96, 98, 101, 109, 114, 117, 119, 134, 135, 140, 143, 144, 153, 154, 155, 190, 266, 268, 280, 281, 299, 303, 304, 308, 309, 310, 311, 314], "org": [27, 83, 132, 135, 137, 231, 242, 243, 247, 248, 250, 255, 256, 257, 258, 259, 303], "orient": [97, 102, 108, 120, 174, 210, 296, 309, 310], "origin": [1, 86, 87, 90, 92, 94, 107, 108, 141, 147, 188, 191, 266, 268, 280, 281, 305, 307, 314], "ortho": 222, "orthogon": [63, 79, 216, 217, 221], "orthogonalqu": [63, 79], "orthopaed": 1, "orthoq": 221, "other": [20, 53, 73, 102, 109, 141, 147, 171, 172, 188, 205, 225, 253, 266, 277, 297, 300, 302, 305, 309, 310, 311, 314], "otherwis": [27, 54, 87, 90, 186, 188, 191, 194, 205, 206, 207, 208, 210, 211, 231, 232, 234, 235, 237, 239, 242, 243, 247, 255, 256, 258, 259, 299, 310], "oup": 303, "out": [54, 272, 277, 280, 281], "outer": [304, 311], "output": [111, 153, 154, 155, 159, 160, 161, 175, 176, 177, 272, 280, 281], "outsid": [18, 54, 96, 101, 114, 119, 237, 239, 264, 300, 308, 309], "outward": [309, 310], "over": [188, 206, 307, 311], "overal": 310, "overdetermin": 309, "overhead": [64, 293], "overlap": [231, 255, 270, 303], "overrid": [145, 185], "overridden": [140, 146], "overview": 305, "p": [6, 167, 168, 169, 242, 243, 310], "p_": 310, "p_i": 310, "p_x": 310, "p_y": 310, "packag": [301, 302, 305], "pad": [87, 89, 125, 253, 272, 277], "page": 303, "pair": [226, 253, 258, 259, 311], "pairwis": 250, "panozzo": 303, "paper": [310, 314], "paraboloid": 310, "param": 267, "paramet": [6, 20, 26, 27, 54, 63, 65, 66, 67, 71, 73, 76, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 239, 241, 242, 243, 244, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 309, 314], "parent": [97, 102, 108, 120, 313], "parentid": 90, "part": [105, 106, 310], "partial": [27, 193, 309], "particular": [305, 309], "particularli": [6, 297, 305], "partit": [308, 313], "pasko": 303, "pass": [54, 146, 148, 149, 188, 190, 266, 299, 305, 313], "past": 286, "pasta": 7, "path": [71, 140, 141, 142, 143, 144, 145, 295, 310], "pdf": [83, 132, 303], "peel": 271, "peelconn": 271, "peelcoord": 271, "peeledconn": 271, "peeledcoord": 271, "penn": 7, "per": [65, 98, 140, 143, 144, 296, 309], "perform": [1, 2, 5, 27, 63, 65, 86, 87, 88, 89, 90, 141, 144, 147, 148, 149, 183, 184, 186, 187, 188, 190, 273, 296, 297, 311, 313, 314], "pergamon": 303, "perhap": 313, "period": [6, 152, 158, 162, 165, 167], "permit": 188, "perpendicular": [203, 204], "peter": 303, "ph": 305, "phi_resolut": [212, 213], "physic": 303, "physik": 303, "pi": [7, 206, 211, 309], "pillow": 295, "pip": [137, 295], "pixel": [87, 89, 304], "place": [84, 85, 86, 87, 88, 89, 90, 115, 140, 141, 142, 146, 147, 148, 183, 184, 186, 187, 191, 193, 268, 308, 310], "placement": [2, 141, 147], "plan": 16, "planar": [64, 293], "plane": [117, 135, 141, 147, 178, 179, 180, 187, 203, 204, 205, 232, 234, 235, 276, 304, 309], "pleas": 7, "plot": [2, 5, 6, 7, 82, 85, 140, 146, 148, 149, 150, 151, 152, 158, 162, 165, 167, 170, 174, 202, 203, 205, 206, 207, 208, 209, 212, 213, 297], "plt": [2, 297], "pm": 309, "pmatrix": 310, "png": [145, 299], "point": [6, 125, 129, 131, 132, 134, 135, 137, 141, 146, 148, 156, 157, 163, 164, 195, 197, 203, 204, 205, 209, 210, 211, 212, 213, 232, 234, 235, 236, 237, 239, 241, 242, 243, 244, 246, 247, 248, 249, 250, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 274, 278, 282, 285, 297, 300, 302, 304, 308, 309], "points2octre": 313, "pole": [212, 213], "polygon": [91, 99, 105, 109, 303, 304, 310], "polyhedr": 303, "polyhedra": 304, "polyhedron": 311, "polytop": 303, "poor": 297, "popular": [310, 313], "posit": [26, 86, 87, 88, 89, 90, 117, 140, 141, 142, 143, 146, 147, 148, 149, 183, 184, 186, 187, 282, 309, 310, 314], "possibl": [64, 146, 148, 188, 190, 293, 308, 311], "possibli": 1, "potenti": [64, 270, 293, 311], "power": 305, "pp": 185, "practic": [95, 96, 99, 100, 101, 103, 113, 114, 116, 118, 119, 310], "pre": [78, 310], "preced": [73, 209], "precis": [64, 293], "precomput": [237, 239, 278, 282, 285], "predominantli": [203, 204], "prefix": 145, "prescrib": [166, 184], "present": [91, 105, 139, 188, 293], "preserv": [188, 190, 191], "prevent": [34, 184], "previous": [46, 183, 186, 187, 246, 249, 310], "primal": 303, "primari": [20, 97, 108, 120], "primarili": [187, 226, 296, 297, 304], "primit": [6, 7, 86, 88, 90, 97, 297, 302], "princip": [62, 121, 122, 123, 124, 125, 126, 127, 128, 130, 303], "print": [20, 63, 215, 216, 217, 218, 220, 221, 222, 223, 225, 282, 285], "priorit": 188, "problemat": 297, "proce": 314, "procedur": [27, 303, 310], "proceed": 303, "process": [135, 188, 297, 310, 313], "produc": [26, 285, 297, 299], "progress": [188, 190, 191], "project": [1, 137, 278, 282, 285, 305, 310, 314], "proper": [109, 299], "properli": [111, 311, 313], "properti": [22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 59, 70, 73, 97, 108, 120, 309], "propos": [192, 193, 308], "provid": [1, 20, 54, 73, 90, 109, 111, 121, 125, 127, 128, 136, 139, 148, 184, 185, 186, 188, 191, 206, 207, 209, 229, 231, 239, 255, 275, 278, 282, 285, 286, 287, 301, 305, 307, 310], "pt": [25, 197, 210, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 261, 262, 263], "pt1": 209, "pt2": 209, "public": 303, "publish": [305, 310], "pure": [95, 96, 100, 101, 103, 113, 114, 116, 118, 119, 203, 204, 206, 211, 305], "purpos": [225, 295, 304, 307], "pv": 82, "pvmesh": 82, "py": [2, 4, 5, 6, 7, 9, 306], "pydicom": [295, 299], "pymesh": 305, "pypi": 137, "pyplot": 2, "pyramid": [64, 91, 100, 101, 102, 105, 193, 211, 216, 223, 293, 294, 298], "pyramidconn": [102, 294], "pyramidcoord": [102, 294], "pyramidheight": 294, "python": [2, 5, 6, 7, 137, 299, 311], "pyvista": [82, 305], "qef": [192, 313], "qhull": 16, "qingnan": 303, "quad": [91, 102, 104, 105, 146, 202, 205, 208, 210, 211, 212, 213, 228, 266, 292, 298, 304], "quadfit": 309, "quadrat": [90, 128, 148, 192, 298, 313], "quadrilater": [64, 88, 90, 91, 96, 101, 103, 104, 105, 119, 202, 203, 204, 205, 206, 208, 210, 212, 213, 228, 293, 298, 308], "quak": 303, "qual": 63, "qualiti": [2, 5, 19, 63, 97, 108, 120, 186, 188, 190, 295, 297, 303, 305, 309, 311], "qualityfunc": 186, "qualitymetr": 189, "qualitys": 191, "qualitythreshold": 181, "queri": 311, "question": 1, "queue": 310, "quick": 302, "quit": 297, "r": [135, 141, 147, 153, 154, 155, 159, 160, 161, 174, 175, 176, 177, 213, 242, 243, 297, 300, 303, 314], "r_0": 314, "r_1": 314, "r_2": 314, "r_x": 314, "r_y": 314, "r_z": 314, "radial": [203, 204], "radial_resolut": [203, 204], "radian": [63, 206, 211], "radiu": [151, 170, 174, 203, 212, 213, 291, 300, 310], "rag": [272, 277, 280, 281, 296], "rai": [297, 303, 313], "rainald": 303, "rais": [74, 295], "rand": [237, 239], "random": [64, 237, 239, 282, 285, 293], "randomli": 310, "rang": [146, 148, 216, 217, 221, 222, 223, 227, 228, 229, 230, 309], "rare": [64, 293], "rather": [76, 95, 96, 97, 99, 100, 101, 102, 103, 113, 114, 116, 118, 119, 120, 141, 143, 147, 193, 296, 297, 305, 308, 310, 311, 313], "ratio": [63, 215], "rayboxesintersect": 314, "rayboxintersect": 314, "rayssurfintersect": 250, "raystrianglesintersect": [247, 248, 314], "raytriangleintersect": [248, 250, 314], "raytrianglesintersect": [247, 250, 314], "re": [54, 268, 280, 281, 309, 310], "reach": [311, 313, 314], "read": [299, 301], "readabl": [71, 273, 305], "reader": 299, "real": [152, 158, 162, 165, 167], "reason": [6, 311], "recalcul": [185, 302, 311], "receiv": 45, "recogniz": 309, "recommend": [188, 191], "reconnect": 268, "reconstruct": 1, "record": 303, "recov": [280, 281], "rectangular": [202, 207, 208, 209, 253, 277, 296, 304], "rectilinear": [86, 88, 117], "red": [5, 296], "redistribut": [2, 141, 147, 184], "reduc": [92, 94, 141, 147, 186, 188, 266, 308], "redund": 311, "refer": [33, 74, 90, 188, 191, 193, 305, 307, 309], "referenc": [34, 296, 302], "refin": [192, 199, 313], "regardless": [146, 205, 297, 309], "region": [88, 188, 190, 191, 286, 287, 313], "regist": 1, "registr": 1, "regulargridinterpol": 141, "rel": [146, 148, 261, 262, 263, 282], "relabel": 279, "relat": [16, 77, 92, 94], "relev": [289, 298, 310, 311], "reli": [297, 309, 313, 314], "relianc": 305, "remain": [6, 112, 268], "remesh": 303, "remov": [85, 87, 88, 89, 106, 140, 142, 143, 146, 147, 148, 149, 188, 191, 266, 268, 271, 272, 310, 311], "renumb": [188, 268, 275], "reorder": [280, 281], "repeat": [190, 297, 310, 313], "replac": 295, "report": 63, "reposit": [141, 147, 183, 186, 187, 315], "repositori": 295, "repres": [98, 232, 296, 300, 304, 311, 313], "represent": [6, 28, 29, 31, 32, 35, 36, 44, 53, 199, 200, 278, 282, 284, 285, 297, 311, 313], "request": 1, "requir": [90, 280, 289, 295, 297, 309, 311], "resampl": [65, 98, 140, 143, 144], "research": [1, 305], "resolut": [65, 98, 205, 297, 303, 313], "resolv": 308, "respect": [87, 213, 308, 309], "result": [2, 6, 84, 90, 97, 102, 108, 109, 120, 127, 128, 184, 203, 204, 207, 208, 210, 297, 309], "retriev": [197, 198, 201], "return": [5, 26, 63, 64, 65, 67, 68, 71, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 239, 241, 242, 243, 244, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 297, 299, 300, 302], "return_anchor": [86, 88], "return_count": 92, "return_edgeconn": 105, "return_edgeelem": 105, "return_faceconn": 106, "return_faceelem": 106, "return_fig": [69, 297], "return_gradi": [65, 98], "return_hul": 138, "return_id": [93, 108], "return_idx": [92, 94, 266, 268, 280, 281], "return_intersect": [245, 251, 252], "return_inv": [92, 94, 268, 280, 281], "return_kf": 185, "return_mappingmatrix": 285, "return_matrix": 274, "return_nodedata": [65, 98, 143], "return_nodevalu": 90, "return_octre": [282, 285], "return_parentid": 90, "return_pt": [253, 254], "return_separ": 280, "return_surfelem": 107, "revers": [268, 280], "revolut": [7, 211, 213], "revolv": 7, "rewritten": 91, "rgb": [144, 145, 299], "rgba": [145, 299], "rho": 181, "richard": 303, "ridg": [5, 129], "right": [309, 314], "ring": [290, 309], "risk": [141, 147], "rmax": [153, 154, 155, 159, 160, 161], "rmin": [175, 176, 177], "rmsd": 2, "rmsd_k1a_smooth": 2, "rmsd_k1a_spher": 2, "rmsd_k1m_smooth": 2, "rmsd_k1m_sphere": 2, "robust": [19, 242, 243, 303], "romain": 303, "ron": [121, 125, 303], "root": [2, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 244, 295, 313], "rotat": [206, 211, 213, 274, 308], "row": [268, 280, 281, 282, 296], "rrner": 303, "run": [140, 142, 143, 146, 148, 149, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 295], "russia": 303, "rut": 129, "s003660200006": [27, 303], "s00371": 303, "s1": [251, 252], "s10237": 303, "s2": [251, 252], "saddl": [129, 309], "same": [20, 49, 73, 102, 120, 147, 183, 186, 187, 266, 268, 296, 302, 308, 310, 311, 313], "sampl": [64, 85, 121, 211, 212, 282, 285, 293, 299, 303, 313], "satisfi": 300, "save": 145, "scaffold": [303, 305], "scalar": [2, 20, 26, 54, 85, 140, 142, 143, 146, 148, 149, 152, 153, 154, 158, 159, 160, 162, 165, 166, 167, 171, 172, 175, 176, 177, 191, 206, 211, 212, 213, 285, 300], "scalar_prefer": 54, "scale": [65, 98, 129, 140, 143, 144, 178, 179, 180, 185, 303, 309], "scalefactor": [65, 98, 140, 142, 143, 144, 299], "scaleord": [65, 98, 140, 142, 143, 144], "scan": [305, 309], "scenario": [64, 293], "scf": 190, "schaefer": 303, "schedul": 190, "scheme": 112, "schneider": 303, "schnere": 303, "schwarz": [6, 152, 167], "scienc": 303, "scipi": [16, 65, 98, 125, 139, 140, 141, 143, 144, 185, 295], "scott": 303, "scratch": 305, "se": 303, "search": [197, 198, 313], "second": [2, 66, 84, 153, 159, 175, 191, 209, 226, 253, 254, 256, 257, 261, 262, 263, 297, 311], "section": [151, 212, 213, 280, 307, 314], "see": [2, 15, 27, 28, 29, 31, 32, 35, 36, 44, 45, 46, 65, 66, 85, 90, 92, 94, 98, 125, 140, 141, 143, 144, 146, 147, 188, 190, 246, 247, 248, 249, 250, 292, 296, 300, 301, 302, 308, 309, 310, 311, 313, 314, 315], "seen": 6, "segment": [88, 209, 245, 308], "select": [140, 146, 310], "self": 253, "sensit": [122, 127, 128], "sep": 303, "separ": [144, 188, 191, 280, 287, 302, 308], "sequenti": [183, 186, 187], "seri": [6, 303, 304], "serv": 307, "set": [6, 20, 27, 45, 46, 64, 86, 87, 88, 89, 90, 92, 94, 111, 125, 131, 132, 135, 141, 146, 147, 148, 153, 159, 175, 183, 184, 185, 186, 187, 188, 195, 205, 235, 243, 248, 250, 258, 259, 260, 270, 274, 280, 286, 287, 292, 293, 294, 297, 302, 304, 310, 313], "set_axis_off": 297, "set_titl": 297, "set_xtick": 2, "set_xticklabel": 2, "set_ylabel": 2, "set_ylim": 2, "set_yscal": 2, "seven": 309, "sever": [6, 16, 45, 295, 296, 297, 300, 304, 308, 311, 313], "shadi": 305, "shape": [7, 62, 129, 130, 231, 235, 236, 237, 239, 241, 243, 244, 246, 248, 249, 250, 258, 259, 297, 303, 304, 310], "shapeindex": [129, 309], "share": [92, 93, 94, 105, 256, 257, 258, 259, 289, 296, 311], "sharp": [297, 303], "she96": [303, 305], "shewchuk": [16, 137, 139, 303], "shi": 305, "shift": [7, 211], "shirlei": [242, 243, 303], "shortcom": 308, "shorter": 188, "shortest": [185, 215], "shoud": [65, 98], "should": [20, 27, 64, 65, 85, 87, 91, 97, 98, 102, 104, 120, 121, 134, 139, 140, 143, 146, 147, 148, 149, 154, 160, 172, 176, 192, 224, 228, 230, 231, 235, 241, 242, 243, 246, 247, 248, 249, 250, 258, 259, 273, 278, 282, 285, 293, 300, 305, 310], "shouldn": [237, 239], "show": [2, 69, 296, 297, 307], "show_edg": [2, 85, 202, 203, 205, 206, 207, 208, 209, 212, 213], "show_empti": 196, "shown": [310, 311], "shrinkag": [141, 147], "si": 303, "si15": [303, 305], "sici": 303, "side": [106, 140, 142, 143, 146, 148, 149, 234, 235, 311], "siggraph": [231, 242, 243, 247, 248, 250, 255, 303], "sigma_max": 181, "sigma_min": 181, "sign": [26, 140, 142, 143, 146, 148, 149, 163, 164, 166, 171, 172, 192, 309, 310, 314], "signific": [2, 143], "significantli": [247, 248, 250, 278, 282, 285], "similar": 308, "similarli": [302, 311], "simpl": [273, 297], "simplex": 90, "simplexmethod": 223, "simpli": [216, 266, 285, 310], "simul": [1, 304], "simultan": [141, 147, 183, 186, 187], "sin": [152, 158, 162, 165, 167, 206], "sinc": [1, 297, 302, 308, 313, 315], "singl": [7, 54, 87, 89, 90, 97, 102, 120, 123, 124, 126, 130, 140, 142, 143, 144, 145, 146, 148, 149, 250, 286, 287, 299, 311, 313], "situat": 308, "six": [202, 205, 207, 210], "size": [5, 6, 65, 87, 89, 98, 111, 125, 141, 147, 188, 190, 191, 192, 199, 202, 205, 206, 207, 208, 209, 210, 211, 223, 286, 287, 294, 313], "skelet": 305, "skew": [63, 79, 122, 127, 128, 189, 216, 227, 228, 229, 230], "slice": [144, 280, 299], "slice0": 144, "slightli": [207, 208, 210, 247, 248, 250], "sliver": 223, "slow": 149, "slower": [273, 297], "small": [84, 147, 235, 237, 239, 246, 247, 248, 249, 250, 253, 254, 256, 257, 258, 259, 280, 295, 314, 315], "smaller": [199, 313], "smart": 186, "smartlaplaciansmooth": 190, "smooth": [2, 141, 147, 183, 184, 186, 187, 190, 303, 312], "smooth_kwarg": 190, "smoother": 190, "smoothspher": 2, "snap": [146, 148], "snap2surf": [146, 148], "snapgrid2surf": [146, 148], "so": [53, 125, 144, 153, 154, 155, 186, 188, 302, 308, 310, 311, 313, 314], "societi": 303, "softwar": [302, 303, 305], "sohn": 303, "solid": [105, 106, 303], "solid2edg": [91, 92, 95, 99, 100, 103, 110, 113, 116, 118, 292, 296], "solid2fac": [93, 94, 96, 101, 114, 119, 296], "solid2tet": [90, 97, 102, 120], "solv": [185, 309, 310, 314, 315], "some": [20, 53, 64, 73, 188, 193, 212, 213, 293, 297, 305, 307, 309], "soo": 303, "sophist": 1, "sort": [109, 188, 268, 280, 281, 286, 287, 311], "sourc": [2, 5, 6, 7, 20, 21, 25, 26, 27, 47, 48, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294], "sp": [152, 158, 162, 165, 167], "space": [6, 304, 313], "span": 192, "spars": [185, 194], "spatial": [39, 136, 139, 313], "spec": 303, "specfi": 26, "special": [304, 310], "specif": [6, 7, 145, 295, 296, 298, 302, 305, 307], "specifi": [27, 63, 64, 73, 85, 87, 89, 91, 98, 105, 125, 139, 140, 142, 143, 145, 146, 148, 149, 151, 156, 157, 166, 183, 184, 185, 186, 187, 190, 191, 192, 198, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 225, 241, 246, 249, 266, 271, 272, 277, 282, 291, 293, 313], "speed": [278, 282, 285], "spent": 297, "sphere": [2, 85, 90, 213, 297, 300, 302, 309], "spheric": [129, 309], "sphinx": [2, 5, 6, 7, 10], "split": [84, 102, 104, 139, 190, 191, 281, 297, 308], "splitfeatur": 62, "spread": 184, "spring": [27, 141, 147, 184, 185, 303, 304, 312], "springer": 303, "spuriou": 309, "sqrt": [2, 309], "squar": [2, 88, 89, 208, 210, 309], "stack": [65, 98, 145, 299], "stage": 82, "standard": [64, 125, 141, 293, 304, 311], "star": 310, "start": [7, 27, 242, 243, 247, 248, 250, 280, 305, 310, 313], "state": [63, 308], "statist": [282, 285], "statu": 311, "step": [190, 206, 211, 297, 310], "steve": 303, "stiff": [27, 184, 185, 315], "stiffnessfactor": [27, 185], "still": [19, 212, 213], "stl": [71, 301], "storag": [247, 248, 250, 303], "store": [20, 63, 117, 143, 144, 149, 188, 191, 299, 302, 311], "str": [20, 26, 27, 54, 63, 64, 65, 71, 73, 76, 85, 86, 87, 88, 89, 90, 91, 97, 98, 102, 105, 109, 111, 120, 125, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 163, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 223, 225, 237, 239, 246, 249, 253, 266, 273, 278, 282, 285, 286, 289, 292, 293], "straight": [7, 297, 313], "strategi": [85, 192, 313], "stretch": 309, "strict": 267, "strictli": [27, 184, 207, 208, 210, 228, 230, 246, 249, 315], "string": [26, 54, 73, 144, 188, 190, 191, 285], "strive": 305, "structur": [77, 111, 192, 193, 195, 200, 237, 239, 244, 246, 249, 268, 278, 282, 285, 296, 303, 305, 310, 313], "sub": [225, 304], "subdivid": [27, 195, 313], "subdivis": [85, 192], "subject": 6, "sublist": 280, "submit": 7, "subplot": [2, 297], "subsequ": 302, "subseri": 303, "substitut": 1, "suffer": 297, "suffici": [90, 235, 237, 239, 247, 248, 250, 256, 257, 258, 259, 314, 315], "suit": 63, "suitabl": [105, 292], "sum": [2, 6, 225], "sum_": 315, "super": 310, "suppli": [199, 289, 305], "support": [1, 20, 71, 105, 109, 145, 282, 285, 301, 305], "sure": [310, 313], "surf": [20, 26, 27, 64, 74, 85, 90, 105, 204, 206, 211, 214, 266, 292, 293], "surf1": [83, 84], "surf1intersect": 254, "surf2": [83, 84], "surf2intersect": 254, "surf2octre": 253, "surf2tri": [246, 249], "surf2voxel": 302, "surfac": [1, 2, 6, 18, 20, 22, 27, 33, 34, 38, 45, 46, 49, 50, 51, 64, 83, 84, 85, 90, 93, 105, 106, 107, 109, 110, 111, 121, 122, 125, 127, 128, 140, 141, 146, 147, 148, 149, 150, 151, 152, 158, 162, 165, 167, 170, 171, 172, 174, 183, 184, 186, 187, 188, 199, 202, 204, 205, 206, 209, 211, 214, 224, 237, 239, 246, 249, 253, 254, 264, 266, 269, 278, 282, 284, 285, 289, 293, 294, 297, 298, 300, 303, 305, 308], "surface2edg": 105, "surface2octre": [237, 239, 246, 249, 278, 282, 285, 313], "surfacemesh": [2, 5, 150, 151, 152, 158, 162, 165, 167, 170, 174, 297, 300], "surfacenodeoptim": 2, "surfconn": [27, 33, 53, 93, 107, 109, 111, 122, 127, 128, 199, 233, 237, 239, 246, 249, 253, 264, 269, 278, 284], "surfconn1": [254, 282, 285], "surfconn2": [254, 282, 285], "surfcoord": 111, "sw05": [85, 192, 193, 303, 313], "sweep": [8, 9, 10, 306], "sydnei": 305, "symbol": [85, 121, 152, 155, 158, 161, 162, 165, 167, 177], "symfun": 173, "symfun1": [155, 161, 177], "symfun2": [155, 161, 177], "symmetr": [153, 154, 155, 297], "sympi": [121, 147, 152, 155, 158, 161, 162, 165, 167, 177, 295, 297], "symposium": 303, "system": [125, 274, 309, 313, 315], "t": [27, 40, 42, 64, 74, 93, 109, 110, 146, 171, 172, 173, 184, 186, 188, 231, 237, 239, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 278, 282, 284, 285, 289, 293, 307, 309, 310, 311, 313, 314, 315], "t_": 314, "t_i": 314, "t_j": 310, "t_p": 310, "tabl": [296, 308, 310], "take": [6, 73, 156, 157, 191, 209, 302, 310], "taken": [54, 105, 106, 191, 308, 313], "tami": 303, "tandfonlin": 303, "tangent": [141, 147, 187], "tangenti": [2, 141, 147, 186, 187], "tangentialsurfac": 186, "target": [186, 188, 189, 190, 191], "task": 305, "taubin": 5, "td": 314, "techniqu": 303, "teeth": 305, "temporarili": 225, "term": [282, 285, 302, 311], "termin": [183, 184, 186, 187, 310, 313], "teseo": 303, "tessel": 303, "test": [109, 231, 234, 235, 236, 237, 239, 241, 244, 246, 249, 250, 255, 256, 257, 258, 259, 303, 308, 313], "tet": [90, 91, 105, 108, 142, 148, 206, 207, 211, 225, 266, 292, 311], "tet10nodeconn": 112, "tet4nodeconn": [112, 115], "tetconn": [97, 102, 108, 120], "tetconn1to14": 120, "tetconn1to2": 102, "tetconn1to24": 97, "tetconn1to3": 120, "tetconn1to36": 120, "tetconn1to4": 102, "tetconn1to5": 97, "tetconn1to6": 97, "tetcontract": 190, "tetcoord": 108, "tetcoords1to14": 120, "tetcoords1to2": 102, "tetcoords1to24": 97, "tetcoords1to3": 120, "tetcoords1to36": 120, "tetcoords1to4": 102, "tetcoords1to5": 97, "tetcoords1to6": 97, "tetflip": 190, "tetgen": [303, 305], "tetmesh": [6, 297, 300], "tetnodeconn": 90, "tetnodecoord": 90, "tetopt": 27, "tetradehdr": 112, "tetradehedr": 112, "tetrahedr": [27, 64, 90, 91, 97, 102, 105, 112, 113, 114, 115, 120, 132, 142, 148, 188, 190, 191, 206, 207, 211, 216, 223, 229, 261, 283, 293, 297, 298, 303, 305, 310, 311], "tetrahedra": [85, 90, 97, 102, 108, 120, 140, 146, 148, 211, 229, 297, 298, 304, 311], "tetrahedron": [261, 298, 310], "tetraher": 1, "tetsplit": 190, "th": [303, 315], "tha": 310, "than": [18, 26, 64, 65, 73, 76, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 113, 114, 116, 118, 119, 120, 125, 140, 141, 142, 143, 144, 146, 147, 148, 149, 183, 184, 186, 187, 188, 191, 192, 193, 199, 225, 247, 248, 250, 266, 267, 269, 278, 282, 285, 293, 296, 297, 305, 308, 309, 310, 311, 313], "thei": [6, 40, 42, 54, 87, 91, 109, 141, 147, 239, 268, 280, 281, 286, 296, 298, 302, 304, 308, 309, 311, 313], "them": [84, 205, 295, 302, 310, 313], "theme": 305, "theorema": 309, "theori": [1, 15, 305, 310], "therefor": 309, "theta_resolut": [203, 204, 212, 213], "thi": [1, 5, 6, 7, 16, 18, 20, 26, 27, 39, 49, 53, 54, 63, 64, 74, 84, 85, 88, 90, 91, 97, 102, 108, 109, 110, 117, 120, 122, 125, 127, 128, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 158, 162, 165, 166, 167, 171, 172, 174, 184, 190, 191, 192, 193, 199, 202, 204, 205, 206, 207, 208, 210, 211, 212, 213, 226, 237, 239, 242, 243, 246, 247, 248, 249, 250, 256, 257, 258, 259, 266, 270, 285, 293, 297, 298, 300, 302, 305, 307, 308, 309, 310, 311, 313, 314, 315], "thick": [27, 171, 172], "thick_fun": 172, "thicken": 172, "thickenf": 6, "thieri": 303, "thing": 302, "third": [136, 139, 261, 262, 263], "thoroughli": 310, "those": [73, 267, 275, 302, 310, 311, 313, 314], "though": [6, 297], "thousand": 313, "three": [5, 87, 117, 121, 140, 142, 143, 146, 148, 149, 150, 151, 154, 155, 160, 161, 170, 172, 174, 176, 177, 178, 179, 180, 191, 198, 207, 211, 212, 213, 224, 234, 247, 255, 256, 257, 278, 296, 299, 300, 302, 304, 309, 310, 311, 313, 314], "threhsold": 54, "threshold": [26, 65, 85, 86, 87, 88, 89, 90, 98, 140, 141, 142, 143, 146, 147, 148, 149, 192, 269, 297, 304, 308, 309], "threshold_dir": [140, 142], "threshold_direct": [26, 65, 98, 140, 142, 143, 146, 148, 149, 297], "thrich": 303, "through": [85, 87, 146, 148, 149, 188, 266, 296, 297, 301, 308, 311], "throughout": [300, 305], "thu": [97, 102, 108, 112, 120, 141, 147, 188, 309], "thurrnerwuthrich98": [273, 303], "tiff": [65, 98, 145, 299], "tifffil": 299, "tight_layout": 297, "tim": [1, 305], "time": [183, 186, 187, 188, 190, 247, 248, 250, 302, 307, 310, 314], "times3": 314, "timothi": 303, "tissu": [303, 305], "todo": [91, 105, 267, 285, 289], "togeth": [66, 275, 297], "toj": 7, "tol": [60, 66, 83, 139, 267, 268, 278, 282, 285], "toler": [66, 83, 84, 85, 90, 183, 184, 186, 187, 246, 249, 253, 254, 267, 268, 278, 282, 285], "toma": 303, "too": 125, "tool": [13, 14, 15, 17, 18, 256, 257, 258, 259, 303, 305], "toolbox": 305, "top": [6, 9, 306], "topolog": [34, 38, 303, 308], "topologi": [8, 9, 10, 306, 311], "toru": 300, "total": [4, 9, 11, 27, 212, 213, 214, 306], "touch": 310, "toward": [141, 147, 309, 310], "tpm": [8, 9, 10, 152, 158, 162, 165, 167, 306], "tpmss": 6, "trace": 297, "trade": 311, "transact": 303, "transfer": [20, 90], "transit": 193, "travers": [310, 311, 313], "treat": [87, 91, 105, 141, 144, 147, 310, 315], "tree": 313, "tri": [91, 104, 105, 146, 198, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 231, 235, 238, 240, 248, 250, 263, 266, 297, 304], "tri1": [256, 257, 258, 259], "tri2": [256, 257, 258, 259], "triangl": [2, 16, 64, 88, 89, 90, 122, 127, 128, 134, 136, 139, 198, 199, 212, 213, 230, 231, 234, 235, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 262, 263, 264, 266, 267, 293, 295, 298, 303, 305, 308, 310, 313], "triangleboxintersect": 231, "triangluar": 285, "triangul": [1, 122, 127, 128, 131, 132, 134, 136, 137, 140, 146, 303, 308], "triangular": [27, 64, 84, 88, 89, 91, 101, 104, 105, 114, 116, 119, 199, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 223, 224, 230, 237, 239, 246, 249, 253, 264, 282, 284, 285, 293, 296, 305], "triconn": 104, "tricoord": [234, 247, 255], "trimesh": 305, "trimetr": 297, "trinorm": [231, 255], "tripli": [6, 152, 158, 162, 165, 167], "trough": 129, "true": [2, 20, 27, 54, 63, 66, 69, 76, 85, 86, 87, 88, 89, 90, 92, 93, 94, 105, 106, 108, 125, 133, 135, 141, 145, 146, 147, 148, 152, 158, 162, 165, 167, 183, 184, 185, 186, 187, 188, 190, 191, 198, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 225, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 268, 275, 280, 281, 282, 285, 297], "truli": 6, "trumbor": [247, 248, 250, 303, 314], "tube": [174, 213], "tupl": [54, 85, 87, 89, 98, 140, 142, 143, 144, 145, 146, 148, 149, 185, 192, 207, 232, 242, 299], "twin": 310, "twist": 206, "twist_cent": 206, "two": [2, 54, 83, 84, 86, 88, 89, 90, 93, 94, 136, 139, 153, 154, 155, 159, 160, 161, 175, 176, 177, 191, 205, 232, 242, 254, 256, 257, 258, 259, 266, 268, 269, 275, 280, 296, 297, 299, 309, 310, 311, 313], "type": [20, 26, 63, 64, 65, 67, 68, 71, 74, 83, 85, 90, 91, 93, 95, 96, 99, 100, 101, 103, 104, 105, 107, 110, 113, 114, 116, 117, 118, 119, 123, 124, 126, 129, 130, 131, 132, 134, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 183, 184, 186, 187, 188, 190, 191, 192, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 239, 241, 242, 243, 244, 247, 250, 255, 256, 257, 258, 260, 264, 265, 266, 267, 270, 272, 273, 277, 278, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 297, 299, 301, 305, 313], "typic": [2, 97, 102, 108, 120], "u": [280, 281, 297, 314], "uedg": 92, "ufac": 94, "ultim": 314, "un": 311, "unambigu": [64, 293, 311], "unattach": 34, "unchang": [97, 102, 112, 120, 268, 272, 299, 309], "unclos": [105, 110, 111, 297], "underbrac": 309, "undergon": 109, "understand": [305, 307], "unexpect": 111, "unidirect": 314, "uniform": [2, 90, 148, 191, 270, 294, 304], "union": [83, 90, 176, 297, 300, 305], "union_fun": 176, "union_sym": 177, "union_v": 175, "unionf": [85, 297], "uniqu": [34, 92, 94, 266, 281, 308, 310], "unit": [2, 122, 125, 127, 128, 141, 242, 243, 247, 248, 250, 273, 300, 309, 315], "unitless": 309, "univers": 305, "unknown": 309, "unless": 292, "unload": 185, "unnecessari": 302, "unpack": [140, 142, 143, 146, 148, 149, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213], "unsign": 164, "until": [183, 184, 186, 187, 188, 195, 199, 313, 315], "unus": 188, "up": [64, 293, 299, 304], "updat": [63, 185, 266, 268, 311], "upon": 305, "upper": [54, 150, 207, 208, 210, 231, 232, 236, 242, 243, 255, 314], "url": 303, "us": [1, 6, 7, 16, 18, 20, 26, 27, 34, 38, 45, 54, 65, 85, 87, 88, 89, 90, 91, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 108, 109, 111, 113, 114, 116, 118, 119, 120, 125, 137, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 167, 175, 176, 177, 183, 184, 186, 187, 188, 190, 191, 192, 193, 206, 209, 223, 226, 227, 229, 235, 237, 239, 246, 247, 248, 249, 250, 256, 257, 258, 259, 266, 268, 269, 273, 277, 278, 280, 281, 282, 285, 286, 294, 295, 296, 297, 299, 300, 301, 302, 304, 305, 307, 308, 309, 310, 311, 313, 314, 315], "usag": 311, "user": [302, 305, 307], "util": [76, 90, 97, 108, 109, 120, 122, 125, 127, 128, 214, 224, 250, 295, 297, 299, 301, 302, 311], "uv_1": 314, "v": [34, 85, 146, 148, 149, 192, 225, 229, 283, 284, 289, 310, 314], "v_0": 314, "v_1": 314, "v_2": 314, "val": [117, 156], "valid": [237, 239, 267, 305, 310, 311], "valu": [18, 26, 27, 54, 83, 86, 87, 88, 89, 90, 117, 123, 124, 125, 126, 130, 140, 142, 143, 146, 148, 149, 153, 154, 155, 156, 157, 159, 160, 161, 163, 164, 166, 171, 172, 175, 176, 177, 185, 192, 235, 237, 239, 247, 248, 250, 256, 257, 258, 259, 267, 268, 272, 277, 278, 282, 285, 286, 287, 297, 302, 308, 309, 311, 314], "van": [123, 129, 130, 303], "vari": [6, 207, 208, 210, 296], "variabl": [154, 155, 160, 161, 172, 176, 177, 277, 300], "varieti": [76, 296, 299, 301, 304, 305, 308], "variou": [81, 301, 302, 305, 311, 313], "vast": 297, "vdot": 309, "vector": [1, 5, 20, 33, 45, 46, 85, 109, 122, 127, 128, 141, 147, 151, 152, 154, 158, 160, 162, 165, 167, 172, 176, 191, 210, 211, 222, 224, 226, 231, 232, 234, 235, 237, 239, 242, 243, 244, 246, 247, 248, 249, 250, 255, 258, 259, 264, 273, 278, 303, 309, 311, 314], "vector_func": [152, 158, 162, 165, 167], "vectoriz": 300, "verbos": [2, 20, 63, 145, 188, 189, 190, 191, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 282, 285], "veri": [305, 307], "verifi": [74, 285, 305, 311], "versa": 313, "version": [2, 76, 90, 231, 250, 273, 305, 311], "vertebr": 305, "vertex": [34, 303, 310, 311], "vertexvalu": 87, "vertic": [34, 85, 87, 89, 112, 140, 141, 142, 146, 147, 148, 192, 193, 198, 231, 234, 235, 247, 248, 250, 255, 256, 257, 258, 259, 261, 262, 263, 308, 310, 313], "via": [2, 137, 141], "viabl": 188, "vice": 313, "victoria": 303, "view": [96, 101, 114, 119, 264, 297, 309], "visibl": [273, 310], "vision": 303, "vispi": 295, "visual": [295, 297, 303], "vivian": 305, "vo": 304, "vol": [20, 26, 64, 74, 85, 90, 105, 214, 266, 293, 297], "volum": [20, 33, 34, 38, 63, 64, 74, 85, 90, 97, 107, 108, 110, 120, 141, 147, 187, 206, 211, 214, 223, 229, 266, 274, 283, 284, 293, 298, 300, 303, 305, 308, 310, 311], "volumetr": [297, 304], "von": 303, "voronoi": 303, "voxel": [65, 87, 98, 111, 117, 125, 140, 141, 143, 144, 149, 156, 157, 163, 164, 194, 200, 241, 270, 271, 294, 302], "voxel2octre": 313, "voxelconn": [98, 111, 117, 156, 157, 194, 200, 241, 270, 294], "voxelcoord": [98, 111, 117, 156, 157, 194, 200, 241, 270, 294], "voxeldata": 98, "voxelmesh": [299, 300], "voxelnodeconn": [86, 302], "voxelnodecoord": [86, 302], "voxels": [65, 98, 125, 141], "vsn91": [6, 303], "vtk": [71, 305], "vtu": [71, 301], "vv_2": 314, "w": [6, 7, 85, 140, 146, 148, 149, 150, 151, 152, 158, 162, 165, 167, 170, 174, 202, 203, 205, 206, 207, 208, 209, 212, 213, 297, 303, 309], "wa": [1, 188, 302, 305, 310], "wai": [102, 120, 122, 127, 128, 297, 300, 310, 314], "walk": 310, "wall": 205, "wang": 303, "warn": 74, "warren": 303, "wat81": [131, 303, 310], "watertight": 308, "watson": [131, 132, 139, 303], "wbms05": [242, 243, 303, 314], "we": [305, 309], "websit": 193, "wedg": [64, 90, 91, 102, 105, 118, 119, 120, 206, 211, 216, 223, 293, 298, 308], "wedgeconn": 120, "wedgecoord": 120, "weight": [6, 273], "weights1": 6, "weights2": 6, "weights3": 6, "weights4": 6, "weingarten": 309, "well": [16, 109, 146, 148, 223, 295, 302, 305, 307], "were": [188, 191], "what": [108, 207, 208, 210, 267, 289, 297, 308], "when": [20, 64, 96, 101, 114, 119, 178, 179, 180, 183, 184, 186, 187, 188, 247, 248, 250, 264, 268, 293, 296, 297, 298, 307, 309, 310, 313], "where": [2, 18, 112, 146, 148, 149, 184, 191, 192, 207, 208, 210, 253, 256, 257, 258, 259, 279, 296, 300, 304, 308, 309, 310, 311, 314, 315], "whether": [54, 66, 85, 87, 88, 89, 90, 125, 186, 192, 198, 214, 226, 236, 237, 239, 241, 246, 247, 248, 249, 250, 266, 269, 308, 309, 310, 311, 313, 314], "which": [1, 2, 5, 16, 54, 90, 91, 97, 108, 109, 111, 120, 121, 144, 146, 148, 149, 163, 164, 185, 188, 190, 191, 194, 201, 211, 225, 250, 278, 281, 296, 297, 299, 301, 304, 305, 307, 308, 309, 310, 313], "whichev": [64, 293], "while": [27, 183, 184, 186, 187, 296, 297, 300, 304, 305, 307, 309, 310, 311, 313], "white": [2, 5, 6], "who": 267, "whose": [178, 179, 180, 185, 310], "why": 307, "wide": 305, "width": 2, "wikipedia": 300, "wil": 188, "wild": 303, "wilei": 303, "william": [242, 243, 303, 314], "wirefram": 304, "within": [1, 27, 91, 105, 109, 146, 148, 156, 157, 188, 191, 192, 193, 199, 247, 248, 250, 278, 283, 284, 304, 310, 313, 314], "without": [141, 147, 184, 268, 295, 302, 309, 310], "won": [278, 282, 285, 289, 307], "word": 190, "work": [2, 111, 280, 296, 305, 307, 314], "worst": [79, 216, 217, 221, 222, 223, 227, 228, 229, 230], "would": 309, "wrap": [82, 125, 135, 270, 305], "wrapper": [136, 137, 305], "write": [20, 299, 301], "written": [20, 71, 145, 299, 305, 309], "www": [242, 243, 303], "x": [5, 6, 18, 85, 87, 90, 117, 121, 144, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 165, 167, 170, 172, 174, 176, 177, 178, 179, 180, 184, 191, 192, 197, 203, 204, 205, 206, 209, 210, 211, 213, 231, 232, 236, 242, 243, 255, 276, 299, 300, 303, 304, 309, 310, 314, 315], "x0": [107, 178, 294], "x1": [107, 150, 268, 270, 271, 283, 284, 285], "x2": [150, 285], "x3": 285, "x4": [282, 285], "x_": 314, "x_0": 309, "x_1": 309, "x_i": [309, 315], "x_iy_i": 309, "x_n": 309, "xifeng": 303, "xin": 54, "xlim": [231, 232, 236, 242, 243, 255], "xmax": [85, 146, 148, 149, 192, 202, 205, 207, 208, 210, 231, 236, 255, 314], "xmin": [85, 146, 148, 149, 192, 202, 205, 207, 208, 210, 231, 236, 255, 314], "xnew": 185, "xout": 54, "xy": [180, 276], "xz": [179, 276], "y": [5, 6, 18, 85, 87, 90, 117, 121, 144, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 165, 167, 170, 172, 174, 176, 177, 178, 179, 180, 184, 191, 192, 197, 203, 204, 205, 206, 209, 210, 211, 213, 231, 232, 236, 242, 243, 255, 276, 299, 300, 303, 304, 309, 310, 314], "y0": [107, 179, 294], "y1": [107, 150, 268, 270, 271, 283, 284, 285], "y2": [150, 285], "y3": 285, "y_": 314, "y_0": 309, "y_1": 309, "y_i": [309, 315], "y_n": 309, "yet": [40, 42, 192], "yixin": 303, "ylim": [231, 232, 236, 242, 243, 255], "ymax": [85, 146, 148, 149, 192, 202, 205, 207, 208, 210, 231, 236, 255, 314], "ymin": [85, 146, 148, 149, 192, 202, 205, 207, 208, 210, 231, 236, 255, 314], "yongji": 303, "you": [1, 302], "yutaka": 303, "yx": 117, "yz": [178, 276], "z": [5, 6, 18, 85, 87, 89, 90, 117, 121, 141, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 165, 167, 170, 172, 174, 176, 177, 178, 179, 180, 184, 191, 192, 197, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 231, 232, 236, 242, 243, 255, 276, 299, 300, 303, 309, 310, 314], "z0": [107, 180, 294], "z1": [107, 150, 268, 270, 271, 283, 284, 285], "z2": [150, 285], "z3": 285, "z_": 314, "z_0": 309, "z_1": 309, "z_i": [309, 315], "z_n": 309, "zbs03": [192, 303, 313], "zeitschrift": 303, "zero": [6, 18, 184, 206, 314], "zhang": [284, 303], "zhou": 303, "zip": [2, 5, 6, 7], "ziti": 7, "zlim": [231, 232, 236, 242, 243, 255], "zmax": [85, 146, 148, 149, 192, 202, 205, 207, 210, 231, 236, 255, 314], "zmin": [85, 146, 148, 149, 192, 202, 205, 207, 210, 231, 236, 255, 314], "zoom": [65, 98, 140, 143, 144], "zorin": 303, "\u00f6": 303, "\u00fc": 303}, "titles": ["API Reference", "Development", "Curvature Analysis", "Mesh Analysis Examples", "Computation times", "Implicit meshing", "Mixed-Topology TPMS", "Sweep Construction", "Mesh Generation Examples", "Computation times", "Examples", "Computation times", "mymesh.booleans", "mymesh.contour", "mymesh.converter", "mymesh.curvature", "mymesh.delaunay", "mymesh.image", "mymesh.implicit", "mymesh.improvement", "mymesh.mesh", "mymesh.mesh.mesh.AxisAlign", "mymesh.mesh.mesh.BoundaryConn", "mymesh.mesh.mesh.BoundaryNodes", "mymesh.mesh.mesh.Centroids", "mymesh.mesh.mesh.Clip", "mymesh.mesh.mesh.Contour", "mymesh.mesh.mesh.CreateBoundaryLayer", "mymesh.mesh.mesh.EdgeConn", "mymesh.mesh.mesh.EdgeElemConn", "mymesh.mesh.mesh.Edges", "mymesh.mesh.mesh.ElemConn", "mymesh.mesh.mesh.ElemNeighbors", "mymesh.mesh.mesh.ElemNormals", "mymesh.mesh.mesh.EulerCharacteristic", "mymesh.mesh.mesh.FaceConn", "mymesh.mesh.mesh.FaceElemConn", "mymesh.mesh.mesh.Faces", "mymesh.mesh.mesh.Genus", "mymesh.mesh.mesh.ND", "mymesh.mesh.mesh.NEdge", "mymesh.mesh.mesh.NElem", "mymesh.mesh.mesh.NFace", "mymesh.mesh.mesh.NNode", "mymesh.mesh.mesh.NodeNeighbors", "mymesh.mesh.mesh.NodeNormals", "mymesh.mesh.mesh.NodeNormalsMethod", "mymesh.mesh.mesh.RenumberFacesBySet", "mymesh.mesh.mesh.RenumberNodesBySet", "mymesh.mesh.mesh.SurfConn", "mymesh.mesh.mesh.SurfElemConn", "mymesh.mesh.mesh.SurfNodeNeighbors", "mymesh.mesh.mesh.SurfNodes", "mymesh.mesh.mesh.Surface", "mymesh.mesh.mesh.Threshold", "mymesh.mesh.mesh.addEdges", "mymesh.mesh.mesh.addElems", "mymesh.mesh.mesh.addFaces", "mymesh.mesh.mesh.addNodes", "mymesh.mesh.mesh.cells", "mymesh.mesh.mesh.cleanup", "mymesh.mesh.mesh.copy", "mymesh.mesh.mesh.getCurvature", "mymesh.mesh.mesh.getQuality", "mymesh.mesh.mesh.identify_type", "mymesh.mesh.mesh.imread", "mymesh.mesh.mesh.merge", "mymesh.mesh.mesh.meshio2mymesh", "mymesh.mesh.mesh.mymesh2meshio", "mymesh.mesh.mesh.plot", "mymesh.mesh.mesh.points", "mymesh.mesh.mesh.read", "mymesh.mesh.mesh.removeElems", "mymesh.mesh.mesh.reset", "mymesh.mesh.mesh.validate", "mymesh.mesh.mesh.view", "mymesh.mesh.mesh.write", "mymesh.octree", "mymesh.primitives", "mymesh.quality", "mymesh.rays", "mymesh.utils", "mymesh.visualize", "mymesh.booleans.MeshBooleans", "mymesh.booleans.SplitMesh", "mymesh.contour.Adaptive", "mymesh.contour.MarchingCubes", "mymesh.contour.MarchingCubesImage", "mymesh.contour.MarchingSquares", "mymesh.contour.MarchingSquaresImage", "mymesh.contour.MarchingTetrahedra", "mymesh.converter.EdgesByElement", "mymesh.converter.edges2unique", "mymesh.converter.faces2surface", "mymesh.converter.faces2unique", "mymesh.converter.hex2edges", "mymesh.converter.hex2faces", "mymesh.converter.hex2tet", "mymesh.converter.im2voxel", "mymesh.converter.polygon2edges", "mymesh.converter.pyramid2edges", "mymesh.converter.pyramid2faces", "mymesh.converter.pyramid2tet", "mymesh.converter.quad2edges", "mymesh.converter.quad2tri", "mymesh.converter.solid2edges", "mymesh.converter.solid2faces", "mymesh.converter.solid2surface", "mymesh.converter.solid2tets", "mymesh.converter.surf2dual", "mymesh.converter.surf2edges", "mymesh.converter.surf2voxel", "mymesh.converter.tet102tet4", "mymesh.converter.tet2edges", "mymesh.converter.tet2faces", "mymesh.converter.tet42tet10", "mymesh.converter.tri2edges", "mymesh.converter.voxel2im", "mymesh.converter.wedge2edges", "mymesh.converter.wedge2faces", "mymesh.converter.wedge2tet", "mymesh.curvature.AnalyticalCurvature", "mymesh.curvature.CubicFit", "mymesh.curvature.Curvedness", "mymesh.curvature.GaussianCurvature", "mymesh.curvature.ImageCurvature", "mymesh.curvature.MeanCurvature", "mymesh.curvature.NormCurve", "mymesh.curvature.QuadFit", "mymesh.curvature.ShapeCategory", "mymesh.curvature.ShapeIndex", "mymesh.delaunay.BowyerWatson2d", "mymesh.delaunay.BowyerWatson3d", "mymesh.delaunay.ConvexHull", "mymesh.delaunay.ConvexHullFanTriangulation", "mymesh.delaunay.ConvexHull_GiftWrapping", "mymesh.delaunay.SciPy", "mymesh.delaunay.Triangle", "mymesh.delaunay.TriangleSplittingTriangulation", "mymesh.delaunay.Triangulate", "mymesh.image.SurfaceMesh", "mymesh.image.SurfaceNodeOptimization", "mymesh.image.TetMesh", "mymesh.image.VoxelMesh", "mymesh.image.read", "mymesh.image.write", "mymesh.implicit.SurfaceMesh", "mymesh.implicit.SurfaceNodeOptimization", "mymesh.implicit.TetMesh", "mymesh.implicit.VoxelMesh", "mymesh.implicit.box", "mymesh.implicit.cylinder", "mymesh.implicit.diamond", "mymesh.implicit.diff", "mymesh.implicit.difff", "mymesh.implicit.diffs", "mymesh.implicit.grid2fun", "mymesh.implicit.grid2grad", "mymesh.implicit.gyroid", "mymesh.implicit.intersection", "mymesh.implicit.intersectionf", "mymesh.implicit.intersections", "mymesh.implicit.lidinoid", "mymesh.implicit.mesh2sdf", "mymesh.implicit.mesh2udf", "mymesh.implicit.neovius", "mymesh.implicit.offset", "mymesh.implicit.primitive", "mymesh.implicit.rMax", "mymesh.implicit.rMin", "mymesh.implicit.sphere", "mymesh.implicit.thicken", "mymesh.implicit.thickenf", "mymesh.implicit.thickens", "mymesh.implicit.torus", "mymesh.implicit.union", "mymesh.implicit.unionf", "mymesh.implicit.unions", "mymesh.implicit.xplane", "mymesh.implicit.yplane", "mymesh.implicit.zplane", "mymesh.improvement.GeoTransformSmoothing", "mymesh.improvement.GlobalLaplacianSmoothing", "mymesh.improvement.LocalLaplacianSmoothing", "mymesh.improvement.NodeSpringSmoothing", "mymesh.improvement.SegmentSpringSmoothing", "mymesh.improvement.SmartLaplacianSmoothing", "mymesh.improvement.TangentialLaplacianSmoothing", "mymesh.improvement.TetContract", "mymesh.improvement.TetFlip", "mymesh.improvement.TetImprove", "mymesh.improvement.TetSplit", "mymesh.octree.Function2Octree", "mymesh.octree.Octree2Dual", "mymesh.octree.Octree2Voxel", "mymesh.octree.Points2Octree", "mymesh.octree.Print", "mymesh.octree.SearchOctree", "mymesh.octree.SearchOctreeTri", "mymesh.octree.Surface2Octree", "mymesh.octree.Voxel2Octree", "mymesh.octree.getAllLeaf", "mymesh.primitives.Box", "mymesh.primitives.Circle", "mymesh.primitives.CirclePt", "mymesh.primitives.Cylinder", "mymesh.primitives.Extrude", "mymesh.primitives.Grid", "mymesh.primitives.Grid2D", "mymesh.primitives.Line", "mymesh.primitives.Plane", "mymesh.primitives.Revolve", "mymesh.primitives.Sphere", "mymesh.primitives.Torus", "mymesh.quality.Area", "mymesh.quality.AspectRatio", "mymesh.quality.InverseOrthogonalQuality", "mymesh.quality.InverseOrthogonality", "mymesh.quality.MaxDihedral", "mymesh.quality.MeanRatio", "mymesh.quality.MinDihedral", "mymesh.quality.OrthogonalQuality", "mymesh.quality.Orthogonality", "mymesh.quality.Skewness", "mymesh.quality.SurfDihedralAngles", "mymesh.quality.Volume", "mymesh.quality.dihedralAngles", "mymesh.quality.equiangular_skewness", "mymesh.quality.quad_skewness", "mymesh.quality.tet_vol_skewness", "mymesh.quality.tri_skewness", "mymesh.rays.BoxTrianglesIntersection", "mymesh.rays.PlaneBoxIntersection", "mymesh.rays.PlaneSurfIntersection", "mymesh.rays.PlaneTriangleIntersection", "mymesh.rays.PlaneTrianglesIntersection", "mymesh.rays.PointInBox", "mymesh.rays.PointInSurf", "mymesh.rays.PointInTri", "mymesh.rays.PointsInSurf", "mymesh.rays.PointsInTris", "mymesh.rays.PointsInVoxel", "mymesh.rays.RayBoxIntersection", "mymesh.rays.RayBoxesIntersection", "mymesh.rays.RayOctreeIntersection", "mymesh.rays.RaySegmentsIntersection", "mymesh.rays.RaySurfIntersection", "mymesh.rays.RayTriangleIntersection", "mymesh.rays.RayTrianglesIntersection", "mymesh.rays.RaysSurfIntersection", "mymesh.rays.RaysTrianglesIntersection", "mymesh.rays.SegmentSegmentIntersection", "mymesh.rays.SegmentsSegmentsIntersection", "mymesh.rays.SurfSelfIntersection", "mymesh.rays.SurfSurfIntersection", "mymesh.rays.TriangleBoxIntersection", "mymesh.rays.TriangleTriangleIntersection", "mymesh.rays.TriangleTriangleIntersectionPt", "mymesh.rays.TrianglesTrianglesIntersection", "mymesh.rays.TrianglesTrianglesIntersectionPts", "mymesh.utils.AABB", "mymesh.utils.BaryTet", "mymesh.utils.BaryTri", "mymesh.utils.BaryTris", "mymesh.utils.CalcFaceNormal", "mymesh.utils.Centroids", "mymesh.utils.CleanupDegenerateElements", "mymesh.utils.DeleteDegenerateElements", "mymesh.utils.DeleteDuplicateNodes", "mymesh.utils.DetectFeatures", "mymesh.utils.DilateVoxel", "mymesh.utils.ErodeVoxel", "mymesh.utils.ExtractRagged", "mymesh.utils.Face2NodeNormal", "mymesh.utils.MVBB", "mymesh.utils.MergeMesh", "mymesh.utils.MirrorMesh", "mymesh.utils.PadRagged", "mymesh.utils.Project2Surface", "mymesh.utils.RelabelNodes", "mymesh.utils.SortRaggedByLength", "mymesh.utils.SplitRaggedByLength", "mymesh.utils.SurfMapping", "mymesh.utils.TetMeshVol", "mymesh.utils.TriSurfVol", "mymesh.utils.ValueMapping", "mymesh.utils.getConnectedElements", "mymesh.utils.getConnectedNodes", "mymesh.utils.getElemConnectivity", "mymesh.utils.getElemNeighbors", "mymesh.utils.getNodeNeighborhood", "mymesh.utils.getNodeNeighborhoodByRadius", "mymesh.utils.getNodeNeighbors", "mymesh.utils.identify_type", "mymesh.utils.makePyramidLayer", "User Guide", "Connectivity Representations", "Constructive Solid Geometry", "Element Types", "Image-based Meshing", "Implicit Meshing", "File Input/Output", "Working with the <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">mesh</span></code> class", "References", "What is a mesh?", "MyMesh: General purpose, implicit, and image-based meshing in python", "Computation times", "Theory Guide", "Contour", "Curvature", "Delaunay Triangulation", "2\u21923 and 3\u21922 Flips", "Improvement", "Octree", "Rays", "Spring-based Smoothing"], "titleterms": {"2": 311, "2d": [78, 296, 304], "3": 311, "33": 308, "3d": [78, 304], "On": 302, "aabb": 260, "acknowledg": 305, "adapt": 85, "addedg": 55, "addelem": 56, "addfac": 57, "addnod": 58, "an": [5, 300], "analysi": [2, 3, 10], "analyt": 309, "analyticalcurvatur": 121, "api": 0, "area": 214, "aspectratio": 215, "axisalign": 21, "barytet": 261, "barytri": [262, 263], "base": [17, 299, 305, 309, 315], "boolean": [12, 83, 84], "boundaryconn": 22, "boundarynod": 23, "bowyer": 310, "bowyerwatson2d": 131, "bowyerwatson3d": 132, "box": [150, 202, 314], "boxtrianglesintersect": 231, "calcfacenorm": 264, "calcul": [2, 15, 79, 309], "caviti": 310, "cell": 59, "centroid": [24, 265], "circl": 203, "circlept": 204, "circumcircl": 310, "class": 302, "clean": 81, "cleanup": 60, "cleanupdegenerateel": 266, "clip": 25, "cloud": 313, "comput": [4, 9, 11, 306], "connect": [14, 81, 296], "construct": [7, 78, 297], "contour": [13, 26, 85, 86, 87, 88, 89, 90, 308], "convent": 309, "convers": [14, 15, 77], "convert": [14, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120], "convex": 16, "convexhul": 133, "convexhull_giftwrap": 135, "convexhullfantriangul": 134, "copi": 61, "core": 295, "creat": 5, "createboundarylay": 27, "creation": 77, "csg": 297, "cube": 308, "cubic": 309, "cubicfit": 122, "curvatur": [2, 15, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 309], "curved": [123, 309], "cylind": [151, 205], "data": 311, "defin": [5, 300], "definit": 313, "delaunai": [16, 131, 132, 133, 134, 135, 136, 137, 138, 139, 310], "deletedegenerateel": 267, "deleteduplicatenod": 268, "demand": 302, "depend": 295, "detectfeatur": 269, "develop": 1, "diamond": 152, "diff": [153, 155], "difff": 154, "dihedralangl": 226, "dilatevoxel": 270, "distanc": 313, "edg": [30, 311], "edgeconn": 28, "edgeelemconn": 29, "edges2uniqu": 92, "edgesbyel": 91, "elemconn": 31, "element": [14, 298, 311], "elemneighbor": 32, "elemnorm": 33, "equiangular_skew": 227, "erodevoxel": 271, "error": [2, 313], "euclidean": 313, "eulercharacterist": 34, "exampl": [3, 8, 10, 296], "explicit": 297, "extractrag": 272, "extrud": 206, "face": [37, 311], "face2nodenorm": 273, "faceconn": 35, "faceelemconn": 36, "faces2surfac": 93, "faces2uniqu": 94, "featur": 1, "file": [17, 301], "fit": 309, "flip": 311, "format": 310, "from": [77, 295], "function": [5, 18, 79, 300, 313], "function2octre": 192, "gaussian": 309, "gaussiancurvatur": 124, "gener": [8, 10, 17, 18, 305, 313], "genu": 38, "geometri": 297, "geotransformsmooth": 181, "get": 295, "getallleaf": 201, "getconnectedel": 286, "getconnectednod": 287, "getcurvatur": 62, "getelemconnect": 288, "getelemneighbor": 289, "getnodeneighbor": 292, "getnodeneighborhood": 290, "getnodeneighborhoodbyradiu": 291, "getqual": 63, "globallaplaciansmooth": 182, "grid": 207, "grid2d": 208, "grid2fun": 156, "grid2grad": 157, "guid": [295, 307], "gyroid": 158, "helper": 79, "hex2edg": 95, "hex2fac": 96, "hex2tet": 97, "hull": 16, "i": [300, 304], "identify_typ": [64, 293], "im2voxel": 98, "imag": [17, 140, 141, 142, 143, 144, 145, 299, 301, 305], "imagecurvatur": 125, "implicit": [5, 18, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 297, 300, 305, 313], "improv": [19, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 312], "imread": 65, "inclus": 314, "index": [295, 309], "initi": 310, "input": 301, "insert": 310, "insid": 80, "instal": 295, "interpret": 309, "intersect": [80, 159, 161, 314], "intersectionf": 160, "inverseorthogon": 217, "inverseorthogonalqu": 216, "io": 17, "lidinoid": 162, "line": [209, 304], "local": 19, "locallaplaciansmooth": 183, "locat": 310, "makepyramidlay": 294, "manipul": 81, "march": 308, "marchingcub": 86, "marchingcubesimag": 87, "marchingsquar": 88, "marchingsquaresimag": 89, "marchingtetrahedra": 90, "maxdihedr": 218, "mean": 309, "meancurvatur": 126, "meanratio": 219, "measur": [2, 81], "merg": 66, "mergemesh": 275, "mesh": [3, 5, 8, 10, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 81, 299, 300, 301, 302, 304, 305, 309, 313], "mesh2sdf": 163, "mesh2udf": 164, "meshboolean": 83, "meshio2mymesh": 67, "method": 20, "metric": [79, 309], "mindihedr": 220, "mirrormesh": 276, "miscellan": 81, "mix": 6, "modif": 312, "mvbb": 274, "mymesh": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 305], "mymesh2meshio": 68, "nd": 39, "nedg": 40, "need": 305, "nelem": 41, "neoviu": 165, "nface": 42, "nnode": 43, "node": [19, 312, 315], "nodeneighbor": 44, "nodenorm": 45, "nodenormalsmethod": 46, "nodespringsmooth": 184, "normcurv": 127, "object": 0, "octre": [77, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 313], "octree2du": 193, "octree2voxel": 194, "offset": 166, "oper": [12, 18], "option": 295, "orthogon": 222, "orthogonalqu": 221, "other": 18, "output": 301, "outsid": 80, "packag": 295, "padrag": 277, "plan": 1, "planar": 304, "plane": [210, 314], "planeboxintersect": 232, "planesurfintersect": 233, "planetriangleintersect": 234, "planetrianglesintersect": 235, "plot": 69, "point": [70, 310, 313, 314], "pointinbox": 236, "pointinsurf": 237, "pointintri": 238, "points2octre": 195, "pointsinsurf": 239, "pointsintri": 240, "pointsinvoxel": 241, "polygon2edg": 99, "primit": [78, 167, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213], "princip": 309, "print": 196, "procedur": 311, "project": 81, "project2surfac": 278, "properti": [20, 302], "purpos": 305, "pypi": 295, "pyramid2edg": 100, "pyramid2fac": 101, "pyramid2tet": 102, "python": [295, 305], "quad2edg": 103, "quad2tri": 104, "quad_skew": 228, "quadfit": 128, "quadrat": 309, "qualiti": [79, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230], "queri": 77, "rai": [80, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 314], "rayboxesintersect": 243, "rayboxintersect": 242, "rayoctreeintersect": 244, "raysegmentsintersect": 245, "rayssurfintersect": 249, "raystrianglesintersect": 250, "raysurfintersect": 246, "raytriangleintersect": 247, "raytrianglesintersect": 248, "read": [71, 144], "refer": [0, 303], "relabelnod": 279, "removeelem": 72, "renumberfacesbyset": 47, "renumbernodesbyset": 48, "reposit": [19, 312], "represent": 296, "reset": 73, "retriangul": 310, "revolv": 211, "rmax": 168, "rmin": 169, "roadmap": 1, "scipi": 136, "searchoctre": 197, "searchoctreetri": 198, "segment": 314, "segmentsegmentintersect": 251, "segmentspringsmooth": 185, "segmentssegmentsintersect": 252, "shape": [78, 309, 314], "shapecategori": 129, "shapeindex": 130, "skew": 223, "smartlaplaciansmooth": 186, "smooth": [5, 19, 315], "solid": 297, "solid2edg": 105, "solid2fac": 106, "solid2surfac": 107, "solid2tet": 108, "sortraggedbylength": 280, "sourc": 295, "sphere": [170, 212], "splitmesh": 84, "splitraggedbylength": 281, "spring": 315, "squar": 308, "start": 295, "statement": 305, "structur": 311, "submodul": 0, "summari": 305, "surf": 304, "surf2dual": 109, "surf2edg": 110, "surf2voxel": 111, "surfac": [5, 53, 81, 304, 309, 313, 314], "surface2octre": 199, "surfacemesh": [140, 146], "surfacenodeoptim": [141, 147], "surfconn": 49, "surfdihedralangl": 224, "surfelemconn": 50, "surfmap": 282, "surfnod": 52, "surfnodeneighbor": 51, "surfselfintersect": 253, "surfsurfintersect": 254, "sweep": 7, "tabl": 311, "tangentiallaplaciansmooth": 187, "test": [80, 310, 314], "tet102tet4": 112, "tet2edg": 113, "tet2fac": 114, "tet42tet10": 115, "tet_vol_skew": 229, "tetcontract": 188, "tetflip": 189, "tetimprov": 190, "tetmesh": [142, 148], "tetmeshvol": 283, "tetrahedr": 16, "tetrahedra": 308, "tetsplit": 191, "theori": 307, "thicken": [171, 173], "thickenf": 172, "threshold": 54, "time": [4, 9, 11, 306], "topolog": 312, "topologi": [6, 19], "toru": [174, 213], "tpm": 6, "tri2edg": 116, "tri_skew": 230, "triangl": [137, 314], "triangleboxintersect": 255, "trianglesplittingtriangul": 138, "trianglestrianglesintersect": 258, "trianglestrianglesintersectionpt": 259, "triangletriangleintersect": 256, "triangletriangleintersectionpt": 257, "triangul": [16, 139, 310], "trisurfvol": 284, "type": [14, 298, 304], "union": [175, 177], "unionf": 176, "unpack": 302, "up": 81, "user": 295, "util": [18, 77, 81, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294], "valid": 74, "valuemap": 285, "view": 75, "visual": 82, "vol": 304, "volum": [225, 304], "voxel": [304, 313], "voxel2im": 117, "voxel2octre": 200, "voxelmesh": [143, 149], "watson": 310, "wedge2edg": 118, "wedge2fac": 119, "wedge2tet": 120, "what": [300, 304], "work": 302, "write": [76, 145], "xplane": 178, "yplane": 179, "zplane": 180}})