Search.setIndex({"alltitles": {"2D Example": [[300, "d-example"]], "2D Planar Meshes": [[309, "d-planar-meshes"]], "2D to 3D Constructions": [[77, "d-to-3d-constructions"]], "2\u21923 and 3\u21922 Flips": [[316, null]], "3D Surfaces": [[309, "d-surfaces"]], "API Reference": [[0, null]], "Acknowledgements": [[310, "acknowledgements"]], "Analytical Curvature": [[314, "analytical-curvature"]], "Bowyer-Watson": [[315, "bowyer-watson"]], "Bowyer-Watson: Initialization": [[315, "bowyer-watson-initialization"]], "Bowyer-Watson: Point Insertion": [[315, "bowyer-watson-point-insertion"]], "Calculating Curvature": [[314, "calculating-curvature"]], "Cavity Formation": [[315, "cavity-formation"]], "Circumcircle Test": [[315, "circumcircle-test"]], "Clip()": [[307, "clip"]], "Computation times": [[4, null], [9, null], [11, null], [311, null]], "Connectivity Representations": [[300, null]], "Connectivity conversion": [[14, "connectivity-conversion"]], "Constructive Solid Geometry": [[301, null]], "Contour": [[313, null]], "Contour()": [[307, "contour"]], "Contouring": [[13, "contouring"]], "Conventions": [[314, "conventions"]], "Conversion From Octree": [[76, "conversion-from-octree"]], "Convex Hull": [[16, "convex-hull"]], "Core dependencies": [[305, "core-dependencies"]], "Creating a Surface": [[5, "creating-a-surface"]], "Cubic Surface Fitting": [[314, "cubic-surface-fitting"]], "Curvature": [[314, null]], "Curvature Analysis": [[2, null]], "Curvature Calculation": [[15, "curvature-calculation"]], "Curvature Conversion": [[15, "curvature-conversion"]], "Curvature Metrics": [[314, "curvature-metrics"]], "Curvature calculation": [[2, "curvature-calculation"]], "Curvedness": [[314, "curvedness"]], "Data Structure": [[316, "data-structure"]], "Defining an implicit function": [[5, "defining-an-implicit-function"]], "Defining implicit functions": [[304, "defining-implicit-functions"]], "Delaunay Triangulation": [[315, null]], "Dependencies": [[305, "dependencies"]], "Development": [[1, null]], "Edge Table": [[316, "id3"]], "Element Table": [[316, "id1"]], "Element Types": [[302, null]], "Element type conversion": [[14, "element-type-conversion"]], "Error Measurement": [[2, "error-measurement"]], "Euclidean Distance Error": [[318, "euclidean-distance-error"]], "Examples": [[10, null]], "Explicit CSG": [[301, "explicit-csg"]], "Face Table": [[316, "id2"]], "File IO": [[17, "file-io"]], "File Input/Output": [[306, null]], "Flipping Procedure": [[316, "flipping-procedure"]], "From meshes to meshes": [[307, "from-meshes-to-meshes"]], "Gaussian Curvature": [[314, "gaussian-curvature"]], "Generating Octrees": [[318, "generating-octrees"]], "Image files": [[306, "image-files"]], "Image-based Mesh Generation": [[17, "image-based-mesh-generation"]], "Image-based Meshing": [[303, null]], "Images in MyMesh": [[303, "images-in-mymesh"]], "Implicit CSG": [[301, "implicit-csg"]], "Implicit Function Octrees": [[318, "implicit-function-octrees"]], "Implicit Function Operators": [[18, "implicit-function-operators"]], "Implicit Functions": [[18, "implicit-functions"]], "Implicit Heart": [[5, null]], "Implicit Meshing": [[304, null]], "Importing MyMesh": [[299, "importing-mymesh"]], "Improvement": [[317, null]], "Inside/Outside Tests": [[79, "inside-outside-tests"]], "Installation": [[305, null]], "Installing from source:": [[305, "installing-from-source"]], "Interpretation": [[314, "interpretation"]], "Intersection Tests": [[79, "intersection-tests"]], "Line Meshes (Type='line')": [[309, "line-meshes-type-line"]], "Local mesh topology": [[19, "local-mesh-topology"]], "Marching Cubes": [[313, "marching-cubes"]], "Marching Cubes 33": [[313, "marching-cubes-33"]], "Marching Squares": [[313, "marching-squares"]], "Marching Tetrahedra": [[313, "marching-tetrahedra"]], "Mean Curvature": [[314, "mean-curvature"]], "Mesh Analysis Examples": [[3, null], [10, "mesh-analysis-examples"]], "Mesh Clean Up": [[80, "mesh-clean-up"]], "Mesh Connectivity": [[80, "mesh-connectivity"]], "Mesh Generation": [[18, "mesh-generation"]], "Mesh Generation Examples": [[8, null], [10, "mesh-generation-examples"]], "Mesh Manipulations": [[80, "mesh-manipulations"]], "Mesh Measurements": [[80, "mesh-measurements"]], "Mesh Types": [[309, "mesh-types"]], "Mesh files": [[306, "mesh-files"]], "Mesh smoothing/node repositioning": [[19, "mesh-smoothing-node-repositioning"]], "Mesh type conversion": [[14, "mesh-type-conversion"]], "Mesh-Based Curvature": [[314, "mesh-based-curvature"]], "Meshing Implicit Functions": [[304, "meshing-implicit-functions"]], "Methods": [[20, "methods"]], "Miscellaneous": [[80, "miscellaneous"]], "Mixed-Topology TPMS": [[6, null]], "MyMesh: General purpose, implicit, and image-based meshing in python": [[310, null]], "Node Repositioning": [[317, "node-repositioning"]], "Node Spring-based": [[320, "node-spring-based"]], "Objects": [[0, "objects"]], "Octree": [[318, null]], "Octree Creation": [[76, "octree-creation"]], "Octree Definition": [[318, "octree-definition"]], "Octree Querying": [[76, "octree-querying"]], "Octree Utilities": [[76, "octree-utilities"]], "On-demand properties": [[307, "on-demand-properties"]], "Operations": [[12, "operations"]], "Optional dependencies": [[305, "optional-dependencies"]], "Other Implicit Mesh Utilities": [[18, "other-implicit-mesh-utilities"]], "Package Overview": [[299, "package-overview"]], "Pasta Shapes": [[7, null]], "Plane-Box Intersection": [[319, "plane-box-intersection"]], "Plane-Shape Intersection Tests": [[319, "plane-shape-intersection-tests"]], "Plane-Triangle Intersection": [[319, "plane-triangle-intersection"]], "Point Cloud Octrees": [[318, "point-cloud-octrees"]], "Point Inclusion Tests": [[319, "point-inclusion-tests"]], "Point Location": [[315, "point-location"]], "Point in Surface": [[319, "point-in-surface"]], "Principal Curvatures": [[314, "principal-curvatures"]], "Properties": [[20, "properties"]], "Python Package Index (PyPI)": [[305, "python-package-index-pypi"]], "Quadratic Surface Fitting": [[314, "quadratic-surface-fitting"]], "Quality Calculation Helper Functions": [[78, "quality-calculation-helper-functions"]], "Quality Metrics": [[78, "quality-metrics"]], "Ray-Box Intersection": [[319, "ray-box-intersection"]], "Ray-Segment Intersection": [[319, "ray-segment-intersection"]], "Ray-Shape Intersection Tests": [[319, "ray-shape-intersection-tests"]], "Ray-Triangle Intersection": [[319, "ray-triangle-intersection"]], "Rays": [[319, null]], "References": [[308, null]], "Retriangulation": [[315, "retriangulation"]], "Roadmap & Planned features": [[1, "roadmap-planned-features"]], "Segment-Segment Intersection": [[319, "segment-segment-intersection"]], "Shape Index": [[314, "shape-index"]], "Shape-Shape Intersection Tests": [[319, "shape-shape-intersection-tests"]], "Shapes": [[77, "shapes"]], "Smoothing": [[5, "smoothing"]], "Spring-based Smoothing": [[320, null]], "Statement of need": [[310, "statement-of-need"]], "Submodules": [[0, "submodules"]], "Summary": [[310, "summary"]], "Surface Mesh Octrees": [[318, "surface-mesh-octrees"]], "Surface Meshes (Type='surf')": [[309, "surface-meshes-type-surf"]], "Surface Projection": [[80, "surface-projection"]], "Tetrahedralization": [[16, "tetrahedralization"]], "Theory Guide": [[312, null]], "Threshold()": [[307, "threshold"]], "Topological Modifications": [[317, "topological-modifications"]], "Triangle-Box Intersection": [[319, "triangle-box-intersection"]], "Triangle-Triangle Intersection": [[319, "triangle-triangle-intersection"]], "Triangulation": [[16, "triangulation"]], "Unpacking": [[307, "unpacking"]], "User Guide": [[299, null]], "Visualization": [[81, "visualization"]], "Visualization Utilities": [[81, "visualization-utilities"]], "Volume Meshes (Type='vol')": [[309, "volume-meshes-type-vol"]], "Voxel Meshes": [[309, "voxel-meshes"]], "Voxel Octrees": [[318, "voxel-octrees"]], "What is a mesh?": [[309, null]], "What is an implicit function?": [[304, "what-is-an-implicit-function"]], "Working with the mesh class": [[307, null]], "copy()": [[307, "copy"]], "mymesh.booleans": [[12, null]], "mymesh.booleans.MeshBooleans": [[82, null]], "mymesh.booleans.SplitMesh": [[83, null]], "mymesh.contour": [[13, null]], "mymesh.contour.Adaptive": [[84, null]], "mymesh.contour.MarchingCubes": [[85, null]], "mymesh.contour.MarchingCubesImage": [[86, null]], "mymesh.contour.MarchingSquares": [[87, null]], "mymesh.contour.MarchingSquaresImage": [[88, null]], "mymesh.contour.MarchingTetrahedra": [[89, null]], "mymesh.converter": [[14, null]], "mymesh.converter.EdgesByElement": [[90, null]], "mymesh.converter.edges2unique": [[91, null]], "mymesh.converter.faces2surface": [[92, null]], "mymesh.converter.faces2unique": [[93, null]], "mymesh.converter.hex2edges": [[94, null]], "mymesh.converter.hex2faces": [[95, null]], "mymesh.converter.hex2tet": [[96, null]], "mymesh.converter.im2voxel": [[97, null]], "mymesh.converter.polygon2edges": [[98, null]], "mymesh.converter.pyramid2edges": [[99, null]], "mymesh.converter.pyramid2faces": [[100, null]], "mymesh.converter.pyramid2tet": [[101, null]], "mymesh.converter.quad2edges": [[102, null]], "mymesh.converter.quad2tri": [[103, null]], "mymesh.converter.solid2edges": [[104, null]], "mymesh.converter.solid2faces": [[105, null]], "mymesh.converter.solid2surface": [[106, null]], "mymesh.converter.solid2tets": [[107, null]], "mymesh.converter.surf2dual": [[108, null]], "mymesh.converter.surf2edges": [[109, null]], "mymesh.converter.surf2voxel": [[110, null]], "mymesh.converter.tet102tet4": [[111, null]], "mymesh.converter.tet2edges": [[112, null]], "mymesh.converter.tet2faces": [[113, null]], "mymesh.converter.tet42tet10": [[114, null]], "mymesh.converter.tri2edges": [[115, null]], "mymesh.converter.voxel2im": [[116, null]], "mymesh.converter.wedge2edges": [[117, null]], "mymesh.converter.wedge2faces": [[118, null]], "mymesh.converter.wedge2tet": [[119, null]], "mymesh.curvature": [[15, null]], "mymesh.curvature.AnalyticalCurvature": [[120, null]], "mymesh.curvature.CubicFit": [[121, null]], "mymesh.curvature.Curvedness": [[122, null]], "mymesh.curvature.GaussianCurvature": [[123, null]], "mymesh.curvature.ImageCurvature": [[124, null]], "mymesh.curvature.MeanCurvature": [[125, null]], "mymesh.curvature.NormCurve": [[126, null]], "mymesh.curvature.QuadFit": [[127, null]], "mymesh.curvature.ShapeCategory": [[128, null]], "mymesh.curvature.ShapeIndex": [[129, null]], "mymesh.delaunay": [[16, null]], "mymesh.delaunay.BowyerWatson2d": [[130, null]], "mymesh.delaunay.BowyerWatson3d": [[131, null]], "mymesh.delaunay.ConvexHull": [[132, null]], "mymesh.delaunay.ConvexHullFanTriangulation": [[133, null]], "mymesh.delaunay.ConvexHull_GiftWrapping": [[134, null]], "mymesh.delaunay.SciPy": [[135, null]], "mymesh.delaunay.Triangle": [[136, null]], "mymesh.delaunay.TriangleSplittingTriangulation": [[137, null]], "mymesh.delaunay.Triangulate": [[138, null]], "mymesh.image": [[17, null]], "mymesh.image.SurfaceMesh": [[139, null]], "mymesh.image.SurfaceNodeOptimization": [[140, null]], "mymesh.image.TetMesh": [[141, null]], "mymesh.image.VoxelMesh": [[142, null]], "mymesh.image.read": [[143, null]], "mymesh.image.write": [[144, null]], "mymesh.implicit": [[18, null]], "mymesh.implicit.SurfaceMesh": [[145, null]], "mymesh.implicit.SurfaceNodeOptimization": [[146, null]], "mymesh.implicit.TetMesh": [[147, null]], "mymesh.implicit.VoxelMesh": [[148, null]], "mymesh.implicit.box": [[149, null]], "mymesh.implicit.cylinder": [[150, null]], "mymesh.implicit.diamond": [[151, null]], "mymesh.implicit.diff": [[152, null]], "mymesh.implicit.difff": [[153, null]], "mymesh.implicit.diffs": [[154, null]], "mymesh.implicit.grid2fun": [[155, null]], "mymesh.implicit.grid2grad": [[156, null]], "mymesh.implicit.gyroid": [[157, null]], "mymesh.implicit.intersection": [[158, null]], "mymesh.implicit.intersectionf": [[159, null]], "mymesh.implicit.intersections": [[160, null]], "mymesh.implicit.lidinoid": [[161, null]], "mymesh.implicit.mesh2sdf": [[162, null]], "mymesh.implicit.mesh2udf": [[163, null]], "mymesh.implicit.neovius": [[164, null]], "mymesh.implicit.offset": [[165, null]], "mymesh.implicit.primitive": [[166, null]], "mymesh.implicit.rMax": [[167, null]], "mymesh.implicit.rMin": [[168, null]], "mymesh.implicit.sphere": [[169, null]], "mymesh.implicit.thicken": [[170, null]], "mymesh.implicit.thickenf": [[171, null]], "mymesh.implicit.thickens": [[172, null]], "mymesh.implicit.torus": [[173, null]], "mymesh.implicit.union": [[174, null]], "mymesh.implicit.unionf": [[175, null]], "mymesh.implicit.unions": [[176, null]], "mymesh.implicit.xplane": [[177, null]], "mymesh.implicit.yplane": [[178, null]], "mymesh.implicit.zplane": [[179, null]], "mymesh.improvement": [[19, null]], "mymesh.improvement.GeoTransformSmoothing": [[180, null]], "mymesh.improvement.GlobalLaplacianSmoothing": [[181, null]], "mymesh.improvement.LocalLaplacianSmoothing": [[182, null]], "mymesh.improvement.NodeSpringSmoothing": [[183, null]], "mymesh.improvement.SegmentSpringSmoothing": [[184, null]], "mymesh.improvement.SmartLaplacianSmoothing": [[185, null]], "mymesh.improvement.TangentialLaplacianSmoothing": [[186, null]], "mymesh.improvement.TetContract": [[187, null]], "mymesh.improvement.TetFlip": [[188, null]], "mymesh.improvement.TetImprove": [[189, null]], "mymesh.improvement.TetSplit": [[190, null]], "mymesh.mesh": [[20, null]], "mymesh.mesh.mesh.BoundaryConn": [[21, null]], "mymesh.mesh.mesh.BoundaryNodes": [[22, null]], "mymesh.mesh.mesh.Centroids": [[23, null]], "mymesh.mesh.mesh.Clip": [[24, null]], "mymesh.mesh.mesh.Contour": [[25, null]], "mymesh.mesh.mesh.CreateBoundaryLayer": [[26, null]], "mymesh.mesh.mesh.EdgeConn": [[27, null]], "mymesh.mesh.mesh.EdgeElemConn": [[28, null]], "mymesh.mesh.mesh.Edges": [[29, null]], "mymesh.mesh.mesh.ElemConn": [[30, null]], "mymesh.mesh.mesh.ElemNeighbors": [[31, null]], "mymesh.mesh.mesh.ElemNormals": [[32, null]], "mymesh.mesh.mesh.EulerCharacteristic": [[33, null]], "mymesh.mesh.mesh.FaceConn": [[34, null]], "mymesh.mesh.mesh.FaceElemConn": [[35, null]], "mymesh.mesh.mesh.Faces": [[36, null]], "mymesh.mesh.mesh.Genus": [[37, null]], "mymesh.mesh.mesh.ND": [[38, null]], "mymesh.mesh.mesh.NEdge": [[39, null]], "mymesh.mesh.mesh.NElem": [[40, null]], "mymesh.mesh.mesh.NFace": [[41, null]], "mymesh.mesh.mesh.NNode": [[42, null]], "mymesh.mesh.mesh.NodeNeighbors": [[43, null]], "mymesh.mesh.mesh.NodeNormals": [[44, null]], "mymesh.mesh.mesh.NodeNormalsMethod": [[45, null]], "mymesh.mesh.mesh.RenumberFacesBySet": [[46, null]], "mymesh.mesh.mesh.RenumberNodesBySet": [[47, null]], "mymesh.mesh.mesh.SurfConn": [[48, null]], "mymesh.mesh.mesh.SurfElemConn": [[49, null]], "mymesh.mesh.mesh.SurfNodeNeighbors": [[50, null]], "mymesh.mesh.mesh.SurfNodes": [[51, null]], "mymesh.mesh.mesh.Surface": [[52, null]], "mymesh.mesh.mesh.Threshold": [[53, null]], "mymesh.mesh.mesh.addEdges": [[54, null]], "mymesh.mesh.mesh.addElems": [[55, null]], "mymesh.mesh.mesh.addFaces": [[56, null]], "mymesh.mesh.mesh.addNodes": [[57, null]], "mymesh.mesh.mesh.cells": [[58, null]], "mymesh.mesh.mesh.cleanup": [[59, null]], "mymesh.mesh.mesh.copy": [[60, null]], "mymesh.mesh.mesh.getCurvature": [[61, null]], "mymesh.mesh.mesh.getQuality": [[62, null]], "mymesh.mesh.mesh.identify_type": [[63, null]], "mymesh.mesh.mesh.imread": [[64, null]], "mymesh.mesh.mesh.merge": [[65, null]], "mymesh.mesh.mesh.meshio2mymesh": [[66, null]], "mymesh.mesh.mesh.mymesh2meshio": [[67, null]], "mymesh.mesh.mesh.plot": [[68, null]], "mymesh.mesh.mesh.points": [[69, null]], "mymesh.mesh.mesh.read": [[70, null]], "mymesh.mesh.mesh.removeElems": [[71, null]], "mymesh.mesh.mesh.reset": [[72, null]], "mymesh.mesh.mesh.validate": [[73, null]], "mymesh.mesh.mesh.view": [[74, null]], "mymesh.mesh.mesh.write": [[75, null]], "mymesh.octree": [[76, null]], "mymesh.octree.Function2Octree": [[191, null]], "mymesh.octree.Octree2Dual": [[192, null]], "mymesh.octree.Octree2Voxel": [[193, null]], "mymesh.octree.Points2Octree": [[194, null]], "mymesh.octree.Print": [[195, null]], "mymesh.octree.SearchOctree": [[196, null]], "mymesh.octree.SearchOctreeTri": [[197, null]], "mymesh.octree.Surface2Octree": [[198, null]], "mymesh.octree.Voxel2Octree": [[199, null]], "mymesh.octree.getAllLeaf": [[200, null]], "mymesh.primitives": [[77, null]], "mymesh.primitives.Box": [[201, null]], "mymesh.primitives.Circle": [[202, null]], "mymesh.primitives.CirclePt": [[203, null]], "mymesh.primitives.Cylinder": [[204, null]], "mymesh.primitives.Extrude": [[205, null]], "mymesh.primitives.Grid": [[206, null]], "mymesh.primitives.Grid2D": [[207, null]], "mymesh.primitives.Line": [[208, null]], "mymesh.primitives.Plane": [[209, null]], "mymesh.primitives.Revolve": [[210, null]], "mymesh.primitives.Sphere": [[211, null]], "mymesh.primitives.Torus": [[212, null]], "mymesh.quality": [[78, null]], "mymesh.quality.Area": [[213, null]], "mymesh.quality.AspectRatio": [[214, null]], "mymesh.quality.InverseOrthogonalQuality": [[215, null]], "mymesh.quality.InverseOrthogonality": [[216, null]], "mymesh.quality.MaxDihedral": [[217, null]], "mymesh.quality.MeanRatio": [[218, null]], "mymesh.quality.MinDihedral": [[219, null]], "mymesh.quality.OrthogonalQuality": [[220, null]], "mymesh.quality.Orthogonality": [[221, null]], "mymesh.quality.Skewness": [[222, null]], "mymesh.quality.SurfDihedralAngles": [[223, null]], "mymesh.quality.Volume": [[224, null]], "mymesh.quality.dihedralAngles": [[225, null]], "mymesh.quality.equiangular_skewness": [[226, null]], "mymesh.quality.quad_skewness": [[227, null]], "mymesh.quality.tet_vol_skewness": [[228, null]], "mymesh.quality.tri_skewness": [[229, null]], "mymesh.rays": [[79, null]], "mymesh.rays.BoxTrianglesIntersection": [[230, null]], "mymesh.rays.PlaneBoxIntersection": [[231, null]], "mymesh.rays.PlaneSurfIntersection": [[232, null]], "mymesh.rays.PlaneTriangleIntersection": [[233, null]], "mymesh.rays.PlaneTrianglesIntersection": [[234, null]], "mymesh.rays.PointInBox": [[235, null]], "mymesh.rays.PointInSurf": [[236, null]], "mymesh.rays.PointInTri": [[237, null]], "mymesh.rays.PointsInSurf": [[238, null]], "mymesh.rays.PointsInTris": [[239, null]], "mymesh.rays.PointsInVoxel": [[240, null]], "mymesh.rays.RayBoxIntersection": [[241, null]], "mymesh.rays.RayBoxesIntersection": [[242, null]], "mymesh.rays.RayOctreeIntersection": [[243, null]], "mymesh.rays.RaySegmentsIntersection": [[244, null]], "mymesh.rays.RaySurfIntersection": [[245, null]], "mymesh.rays.RayTriangleIntersection": [[246, null]], "mymesh.rays.RayTrianglesIntersection": [[247, null]], "mymesh.rays.RaysSurfIntersection": [[248, null]], "mymesh.rays.RaysTrianglesIntersection": [[249, null]], "mymesh.rays.SegmentSegmentIntersection": [[250, null]], "mymesh.rays.SegmentsSegmentsIntersection": [[251, null]], "mymesh.rays.SurfSelfIntersection": [[252, null]], "mymesh.rays.SurfSurfIntersection": [[253, null]], "mymesh.rays.TriangleBoxIntersection": [[254, null]], "mymesh.rays.TriangleTriangleIntersection": [[255, null]], "mymesh.rays.TriangleTriangleIntersectionPt": [[256, null]], "mymesh.rays.TrianglesTrianglesIntersection": [[257, null]], "mymesh.rays.TrianglesTrianglesIntersectionPts": [[258, null]], "mymesh.utils": [[80, null]], "mymesh.utils.AABB": [[259, null]], "mymesh.utils.BaryTet": [[260, null]], "mymesh.utils.BaryTri": [[261, null]], "mymesh.utils.BaryTris": [[262, null]], "mymesh.utils.CalcFaceNormal": [[263, null]], "mymesh.utils.Centroids": [[264, null]], "mymesh.utils.CleanupDegenerateElements": [[265, null]], "mymesh.utils.DeleteDegenerateElements": [[266, null]], "mymesh.utils.DeleteDuplicateNodes": [[267, null]], "mymesh.utils.DetectFeatures": [[268, null]], "mymesh.utils.DilateVoxel": [[269, null]], "mymesh.utils.ErodeVoxel": [[270, null]], "mymesh.utils.ExtractRagged": [[271, null]], "mymesh.utils.Face2NodeNormal": [[272, null]], "mymesh.utils.MVBB": [[273, null]], "mymesh.utils.MergeMesh": [[274, null]], "mymesh.utils.MirrorMesh": [[275, null]], "mymesh.utils.PadRagged": [[276, null]], "mymesh.utils.Project2Surface": [[277, null]], "mymesh.utils.RelabelNodes": [[278, null]], "mymesh.utils.SortRaggedByLength": [[279, null]], "mymesh.utils.SplitRaggedByLength": [[280, null]], "mymesh.utils.SurfMapping": [[281, null]], "mymesh.utils.TetMeshVol": [[282, null]], "mymesh.utils.TriSurfVol": [[283, null]], "mymesh.utils.ValueMapping": [[284, null]], "mymesh.utils.getConnectedElements": [[285, null]], "mymesh.utils.getConnectedNodes": [[286, null]], "mymesh.utils.getElemConnectivity": [[287, null]], "mymesh.utils.getElemNeighbors": [[288, null]], "mymesh.utils.getNodeNeighborhood": [[289, null]], "mymesh.utils.getNodeNeighborhoodByRadius": [[290, null]], "mymesh.utils.getNodeNeighbors": [[291, null]], "mymesh.utils.identify_type": [[292, null]], "mymesh.utils.makePyramidLayer": [[293, null]], "mymesh.visualize": [[81, null]], "mymesh.visualize.FaceColor": [[294, null]], "mymesh.visualize.GetTheme": [[295, null]], "mymesh.visualize.ParseColor": [[296, null]], "mymesh.visualize.View": [[297, null]], "mymesh.visualize.set_vispy_backend": [[298, null]]}, "docnames": ["api", "dev", "examples/MeshAnalysis/demo_curvature", "examples/MeshAnalysis/index", "examples/MeshAnalysis/sg_execution_times", "examples/MeshGeneration/demo_heart", "examples/MeshGeneration/demo_mixed-top", "examples/MeshGeneration/demo_pasta", "examples/MeshGeneration/index", "examples/MeshGeneration/sg_execution_times", "examples/index", "examples/sg_execution_times", "generated/mymesh.booleans", "generated/mymesh.contour", "generated/mymesh.converter", "generated/mymesh.curvature", "generated/mymesh.delaunay", "generated/mymesh.image", "generated/mymesh.implicit", "generated/mymesh.improvement", "generated/mymesh.mesh", "generated/mymesh.mesh.mesh.BoundaryConn", "generated/mymesh.mesh.mesh.BoundaryNodes", "generated/mymesh.mesh.mesh.Centroids", "generated/mymesh.mesh.mesh.Clip", "generated/mymesh.mesh.mesh.Contour", "generated/mymesh.mesh.mesh.CreateBoundaryLayer", "generated/mymesh.mesh.mesh.EdgeConn", "generated/mymesh.mesh.mesh.EdgeElemConn", "generated/mymesh.mesh.mesh.Edges", "generated/mymesh.mesh.mesh.ElemConn", "generated/mymesh.mesh.mesh.ElemNeighbors", "generated/mymesh.mesh.mesh.ElemNormals", "generated/mymesh.mesh.mesh.EulerCharacteristic", "generated/mymesh.mesh.mesh.FaceConn", "generated/mymesh.mesh.mesh.FaceElemConn", "generated/mymesh.mesh.mesh.Faces", "generated/mymesh.mesh.mesh.Genus", "generated/mymesh.mesh.mesh.ND", "generated/mymesh.mesh.mesh.NEdge", "generated/mymesh.mesh.mesh.NElem", "generated/mymesh.mesh.mesh.NFace", "generated/mymesh.mesh.mesh.NNode", "generated/mymesh.mesh.mesh.NodeNeighbors", "generated/mymesh.mesh.mesh.NodeNormals", "generated/mymesh.mesh.mesh.NodeNormalsMethod", "generated/mymesh.mesh.mesh.RenumberFacesBySet", "generated/mymesh.mesh.mesh.RenumberNodesBySet", "generated/mymesh.mesh.mesh.SurfConn", "generated/mymesh.mesh.mesh.SurfElemConn", "generated/mymesh.mesh.mesh.SurfNodeNeighbors", "generated/mymesh.mesh.mesh.SurfNodes", "generated/mymesh.mesh.mesh.Surface", "generated/mymesh.mesh.mesh.Threshold", "generated/mymesh.mesh.mesh.addEdges", "generated/mymesh.mesh.mesh.addElems", "generated/mymesh.mesh.mesh.addFaces", "generated/mymesh.mesh.mesh.addNodes", "generated/mymesh.mesh.mesh.cells", "generated/mymesh.mesh.mesh.cleanup", "generated/mymesh.mesh.mesh.copy", "generated/mymesh.mesh.mesh.getCurvature", "generated/mymesh.mesh.mesh.getQuality", "generated/mymesh.mesh.mesh.identify_type", "generated/mymesh.mesh.mesh.imread", "generated/mymesh.mesh.mesh.merge", "generated/mymesh.mesh.mesh.meshio2mymesh", "generated/mymesh.mesh.mesh.mymesh2meshio", "generated/mymesh.mesh.mesh.plot", "generated/mymesh.mesh.mesh.points", "generated/mymesh.mesh.mesh.read", "generated/mymesh.mesh.mesh.removeElems", "generated/mymesh.mesh.mesh.reset", "generated/mymesh.mesh.mesh.validate", "generated/mymesh.mesh.mesh.view", "generated/mymesh.mesh.mesh.write", "generated/mymesh.octree", "generated/mymesh.primitives", "generated/mymesh.quality", "generated/mymesh.rays", "generated/mymesh.utils", "generated/mymesh.visualize", "generated/submodules/mymesh.booleans.MeshBooleans", "generated/submodules/mymesh.booleans.SplitMesh", "generated/submodules/mymesh.contour.Adaptive", "generated/submodules/mymesh.contour.MarchingCubes", "generated/submodules/mymesh.contour.MarchingCubesImage", "generated/submodules/mymesh.contour.MarchingSquares", "generated/submodules/mymesh.contour.MarchingSquaresImage", "generated/submodules/mymesh.contour.MarchingTetrahedra", "generated/submodules/mymesh.converter.EdgesByElement", "generated/submodules/mymesh.converter.edges2unique", "generated/submodules/mymesh.converter.faces2surface", "generated/submodules/mymesh.converter.faces2unique", "generated/submodules/mymesh.converter.hex2edges", "generated/submodules/mymesh.converter.hex2faces", "generated/submodules/mymesh.converter.hex2tet", "generated/submodules/mymesh.converter.im2voxel", "generated/submodules/mymesh.converter.polygon2edges", "generated/submodules/mymesh.converter.pyramid2edges", "generated/submodules/mymesh.converter.pyramid2faces", "generated/submodules/mymesh.converter.pyramid2tet", "generated/submodules/mymesh.converter.quad2edges", "generated/submodules/mymesh.converter.quad2tri", "generated/submodules/mymesh.converter.solid2edges", "generated/submodules/mymesh.converter.solid2faces", "generated/submodules/mymesh.converter.solid2surface", "generated/submodules/mymesh.converter.solid2tets", "generated/submodules/mymesh.converter.surf2dual", "generated/submodules/mymesh.converter.surf2edges", "generated/submodules/mymesh.converter.surf2voxel", "generated/submodules/mymesh.converter.tet102tet4", "generated/submodules/mymesh.converter.tet2edges", "generated/submodules/mymesh.converter.tet2faces", "generated/submodules/mymesh.converter.tet42tet10", "generated/submodules/mymesh.converter.tri2edges", "generated/submodules/mymesh.converter.voxel2im", "generated/submodules/mymesh.converter.wedge2edges", "generated/submodules/mymesh.converter.wedge2faces", "generated/submodules/mymesh.converter.wedge2tet", "generated/submodules/mymesh.curvature.AnalyticalCurvature", "generated/submodules/mymesh.curvature.CubicFit", "generated/submodules/mymesh.curvature.Curvedness", "generated/submodules/mymesh.curvature.GaussianCurvature", "generated/submodules/mymesh.curvature.ImageCurvature", "generated/submodules/mymesh.curvature.MeanCurvature", "generated/submodules/mymesh.curvature.NormCurve", "generated/submodules/mymesh.curvature.QuadFit", "generated/submodules/mymesh.curvature.ShapeCategory", "generated/submodules/mymesh.curvature.ShapeIndex", "generated/submodules/mymesh.delaunay.BowyerWatson2d", "generated/submodules/mymesh.delaunay.BowyerWatson3d", "generated/submodules/mymesh.delaunay.ConvexHull", "generated/submodules/mymesh.delaunay.ConvexHullFanTriangulation", "generated/submodules/mymesh.delaunay.ConvexHull_GiftWrapping", "generated/submodules/mymesh.delaunay.SciPy", "generated/submodules/mymesh.delaunay.Triangle", "generated/submodules/mymesh.delaunay.TriangleSplittingTriangulation", "generated/submodules/mymesh.delaunay.Triangulate", "generated/submodules/mymesh.image.SurfaceMesh", "generated/submodules/mymesh.image.SurfaceNodeOptimization", "generated/submodules/mymesh.image.TetMesh", "generated/submodules/mymesh.image.VoxelMesh", "generated/submodules/mymesh.image.read", "generated/submodules/mymesh.image.write", "generated/submodules/mymesh.implicit.SurfaceMesh", "generated/submodules/mymesh.implicit.SurfaceNodeOptimization", "generated/submodules/mymesh.implicit.TetMesh", "generated/submodules/mymesh.implicit.VoxelMesh", "generated/submodules/mymesh.implicit.box", "generated/submodules/mymesh.implicit.cylinder", "generated/submodules/mymesh.implicit.diamond", "generated/submodules/mymesh.implicit.diff", "generated/submodules/mymesh.implicit.difff", "generated/submodules/mymesh.implicit.diffs", "generated/submodules/mymesh.implicit.grid2fun", "generated/submodules/mymesh.implicit.grid2grad", "generated/submodules/mymesh.implicit.gyroid", "generated/submodules/mymesh.implicit.intersection", "generated/submodules/mymesh.implicit.intersectionf", "generated/submodules/mymesh.implicit.intersections", "generated/submodules/mymesh.implicit.lidinoid", "generated/submodules/mymesh.implicit.mesh2sdf", "generated/submodules/mymesh.implicit.mesh2udf", "generated/submodules/mymesh.implicit.neovius", "generated/submodules/mymesh.implicit.offset", "generated/submodules/mymesh.implicit.primitive", "generated/submodules/mymesh.implicit.rMax", "generated/submodules/mymesh.implicit.rMin", "generated/submodules/mymesh.implicit.sphere", "generated/submodules/mymesh.implicit.thicken", "generated/submodules/mymesh.implicit.thickenf", "generated/submodules/mymesh.implicit.thickens", "generated/submodules/mymesh.implicit.torus", "generated/submodules/mymesh.implicit.union", "generated/submodules/mymesh.implicit.unionf", "generated/submodules/mymesh.implicit.unions", "generated/submodules/mymesh.implicit.xplane", "generated/submodules/mymesh.implicit.yplane", "generated/submodules/mymesh.implicit.zplane", "generated/submodules/mymesh.improvement.GeoTransformSmoothing", "generated/submodules/mymesh.improvement.GlobalLaplacianSmoothing", "generated/submodules/mymesh.improvement.LocalLaplacianSmoothing", "generated/submodules/mymesh.improvement.NodeSpringSmoothing", "generated/submodules/mymesh.improvement.SegmentSpringSmoothing", "generated/submodules/mymesh.improvement.SmartLaplacianSmoothing", "generated/submodules/mymesh.improvement.TangentialLaplacianSmoothing", "generated/submodules/mymesh.improvement.TetContract", "generated/submodules/mymesh.improvement.TetFlip", "generated/submodules/mymesh.improvement.TetImprove", "generated/submodules/mymesh.improvement.TetSplit", "generated/submodules/mymesh.octree.Function2Octree", "generated/submodules/mymesh.octree.Octree2Dual", "generated/submodules/mymesh.octree.Octree2Voxel", "generated/submodules/mymesh.octree.Points2Octree", "generated/submodules/mymesh.octree.Print", "generated/submodules/mymesh.octree.SearchOctree", "generated/submodules/mymesh.octree.SearchOctreeTri", "generated/submodules/mymesh.octree.Surface2Octree", "generated/submodules/mymesh.octree.Voxel2Octree", "generated/submodules/mymesh.octree.getAllLeaf", "generated/submodules/mymesh.primitives.Box", "generated/submodules/mymesh.primitives.Circle", "generated/submodules/mymesh.primitives.CirclePt", "generated/submodules/mymesh.primitives.Cylinder", "generated/submodules/mymesh.primitives.Extrude", "generated/submodules/mymesh.primitives.Grid", "generated/submodules/mymesh.primitives.Grid2D", "generated/submodules/mymesh.primitives.Line", "generated/submodules/mymesh.primitives.Plane", "generated/submodules/mymesh.primitives.Revolve", "generated/submodules/mymesh.primitives.Sphere", "generated/submodules/mymesh.primitives.Torus", "generated/submodules/mymesh.quality.Area", "generated/submodules/mymesh.quality.AspectRatio", "generated/submodules/mymesh.quality.InverseOrthogonalQuality", "generated/submodules/mymesh.quality.InverseOrthogonality", "generated/submodules/mymesh.quality.MaxDihedral", "generated/submodules/mymesh.quality.MeanRatio", "generated/submodules/mymesh.quality.MinDihedral", "generated/submodules/mymesh.quality.OrthogonalQuality", "generated/submodules/mymesh.quality.Orthogonality", "generated/submodules/mymesh.quality.Skewness", "generated/submodules/mymesh.quality.SurfDihedralAngles", "generated/submodules/mymesh.quality.Volume", "generated/submodules/mymesh.quality.dihedralAngles", "generated/submodules/mymesh.quality.equiangular_skewness", "generated/submodules/mymesh.quality.quad_skewness", "generated/submodules/mymesh.quality.tet_vol_skewness", "generated/submodules/mymesh.quality.tri_skewness", "generated/submodules/mymesh.rays.BoxTrianglesIntersection", "generated/submodules/mymesh.rays.PlaneBoxIntersection", "generated/submodules/mymesh.rays.PlaneSurfIntersection", "generated/submodules/mymesh.rays.PlaneTriangleIntersection", "generated/submodules/mymesh.rays.PlaneTrianglesIntersection", "generated/submodules/mymesh.rays.PointInBox", "generated/submodules/mymesh.rays.PointInSurf", "generated/submodules/mymesh.rays.PointInTri", "generated/submodules/mymesh.rays.PointsInSurf", "generated/submodules/mymesh.rays.PointsInTris", "generated/submodules/mymesh.rays.PointsInVoxel", "generated/submodules/mymesh.rays.RayBoxIntersection", "generated/submodules/mymesh.rays.RayBoxesIntersection", "generated/submodules/mymesh.rays.RayOctreeIntersection", "generated/submodules/mymesh.rays.RaySegmentsIntersection", "generated/submodules/mymesh.rays.RaySurfIntersection", "generated/submodules/mymesh.rays.RayTriangleIntersection", "generated/submodules/mymesh.rays.RayTrianglesIntersection", "generated/submodules/mymesh.rays.RaysSurfIntersection", "generated/submodules/mymesh.rays.RaysTrianglesIntersection", "generated/submodules/mymesh.rays.SegmentSegmentIntersection", "generated/submodules/mymesh.rays.SegmentsSegmentsIntersection", "generated/submodules/mymesh.rays.SurfSelfIntersection", "generated/submodules/mymesh.rays.SurfSurfIntersection", "generated/submodules/mymesh.rays.TriangleBoxIntersection", "generated/submodules/mymesh.rays.TriangleTriangleIntersection", "generated/submodules/mymesh.rays.TriangleTriangleIntersectionPt", "generated/submodules/mymesh.rays.TrianglesTrianglesIntersection", "generated/submodules/mymesh.rays.TrianglesTrianglesIntersectionPts", "generated/submodules/mymesh.utils.AABB", "generated/submodules/mymesh.utils.BaryTet", "generated/submodules/mymesh.utils.BaryTri", "generated/submodules/mymesh.utils.BaryTris", "generated/submodules/mymesh.utils.CalcFaceNormal", "generated/submodules/mymesh.utils.Centroids", "generated/submodules/mymesh.utils.CleanupDegenerateElements", "generated/submodules/mymesh.utils.DeleteDegenerateElements", "generated/submodules/mymesh.utils.DeleteDuplicateNodes", "generated/submodules/mymesh.utils.DetectFeatures", "generated/submodules/mymesh.utils.DilateVoxel", "generated/submodules/mymesh.utils.ErodeVoxel", "generated/submodules/mymesh.utils.ExtractRagged", "generated/submodules/mymesh.utils.Face2NodeNormal", "generated/submodules/mymesh.utils.MVBB", "generated/submodules/mymesh.utils.MergeMesh", "generated/submodules/mymesh.utils.MirrorMesh", "generated/submodules/mymesh.utils.PadRagged", "generated/submodules/mymesh.utils.Project2Surface", "generated/submodules/mymesh.utils.RelabelNodes", "generated/submodules/mymesh.utils.SortRaggedByLength", "generated/submodules/mymesh.utils.SplitRaggedByLength", "generated/submodules/mymesh.utils.SurfMapping", "generated/submodules/mymesh.utils.TetMeshVol", "generated/submodules/mymesh.utils.TriSurfVol", "generated/submodules/mymesh.utils.ValueMapping", "generated/submodules/mymesh.utils.getConnectedElements", "generated/submodules/mymesh.utils.getConnectedNodes", "generated/submodules/mymesh.utils.getElemConnectivity", "generated/submodules/mymesh.utils.getElemNeighbors", "generated/submodules/mymesh.utils.getNodeNeighborhood", "generated/submodules/mymesh.utils.getNodeNeighborhoodByRadius", "generated/submodules/mymesh.utils.getNodeNeighbors", "generated/submodules/mymesh.utils.identify_type", "generated/submodules/mymesh.utils.makePyramidLayer", "generated/submodules/mymesh.visualize.FaceColor", "generated/submodules/mymesh.visualize.GetTheme", "generated/submodules/mymesh.visualize.ParseColor", "generated/submodules/mymesh.visualize.View", "generated/submodules/mymesh.visualize.set_vispy_backend", "guide", "guide/connectivity", "guide/csg", "guide/elem_types", "guide/image_meshing", "guide/implicit_meshing", "guide/installation", "guide/io", "guide/mesh_class", "guide/ref", "guide/what_mesh", "index", "sg_execution_times", "theory", "theory/contour", "theory/curvature", "theory/delaunay", "theory/flips23", "theory/improvement", "theory/octree", "theory/rays", "theory/springsmooth"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["api.rst", "dev.rst", "examples/MeshAnalysis/demo_curvature.rst", "examples/MeshAnalysis/index.rst", "examples/MeshAnalysis/sg_execution_times.rst", "examples/MeshGeneration/demo_heart.rst", "examples/MeshGeneration/demo_mixed-top.rst", "examples/MeshGeneration/demo_pasta.rst", "examples/MeshGeneration/index.rst", "examples/MeshGeneration/sg_execution_times.rst", "examples/index.rst", "examples/sg_execution_times.rst", "generated/mymesh.booleans.rst", "generated/mymesh.contour.rst", "generated/mymesh.converter.rst", "generated/mymesh.curvature.rst", "generated/mymesh.delaunay.rst", "generated/mymesh.image.rst", "generated/mymesh.implicit.rst", "generated/mymesh.improvement.rst", "generated/mymesh.mesh.rst", "generated/mymesh.mesh.mesh.BoundaryConn.rst", "generated/mymesh.mesh.mesh.BoundaryNodes.rst", "generated/mymesh.mesh.mesh.Centroids.rst", "generated/mymesh.mesh.mesh.Clip.rst", "generated/mymesh.mesh.mesh.Contour.rst", "generated/mymesh.mesh.mesh.CreateBoundaryLayer.rst", "generated/mymesh.mesh.mesh.EdgeConn.rst", "generated/mymesh.mesh.mesh.EdgeElemConn.rst", "generated/mymesh.mesh.mesh.Edges.rst", "generated/mymesh.mesh.mesh.ElemConn.rst", "generated/mymesh.mesh.mesh.ElemNeighbors.rst", "generated/mymesh.mesh.mesh.ElemNormals.rst", "generated/mymesh.mesh.mesh.EulerCharacteristic.rst", "generated/mymesh.mesh.mesh.FaceConn.rst", "generated/mymesh.mesh.mesh.FaceElemConn.rst", "generated/mymesh.mesh.mesh.Faces.rst", "generated/mymesh.mesh.mesh.Genus.rst", "generated/mymesh.mesh.mesh.ND.rst", "generated/mymesh.mesh.mesh.NEdge.rst", "generated/mymesh.mesh.mesh.NElem.rst", "generated/mymesh.mesh.mesh.NFace.rst", "generated/mymesh.mesh.mesh.NNode.rst", "generated/mymesh.mesh.mesh.NodeNeighbors.rst", "generated/mymesh.mesh.mesh.NodeNormals.rst", "generated/mymesh.mesh.mesh.NodeNormalsMethod.rst", "generated/mymesh.mesh.mesh.RenumberFacesBySet.rst", "generated/mymesh.mesh.mesh.RenumberNodesBySet.rst", "generated/mymesh.mesh.mesh.SurfConn.rst", "generated/mymesh.mesh.mesh.SurfElemConn.rst", "generated/mymesh.mesh.mesh.SurfNodeNeighbors.rst", "generated/mymesh.mesh.mesh.SurfNodes.rst", "generated/mymesh.mesh.mesh.Surface.rst", "generated/mymesh.mesh.mesh.Threshold.rst", "generated/mymesh.mesh.mesh.addEdges.rst", "generated/mymesh.mesh.mesh.addElems.rst", "generated/mymesh.mesh.mesh.addFaces.rst", "generated/mymesh.mesh.mesh.addNodes.rst", "generated/mymesh.mesh.mesh.cells.rst", "generated/mymesh.mesh.mesh.cleanup.rst", "generated/mymesh.mesh.mesh.copy.rst", "generated/mymesh.mesh.mesh.getCurvature.rst", "generated/mymesh.mesh.mesh.getQuality.rst", "generated/mymesh.mesh.mesh.identify_type.rst", "generated/mymesh.mesh.mesh.imread.rst", "generated/mymesh.mesh.mesh.merge.rst", "generated/mymesh.mesh.mesh.meshio2mymesh.rst", "generated/mymesh.mesh.mesh.mymesh2meshio.rst", "generated/mymesh.mesh.mesh.plot.rst", "generated/mymesh.mesh.mesh.points.rst", "generated/mymesh.mesh.mesh.read.rst", "generated/mymesh.mesh.mesh.removeElems.rst", "generated/mymesh.mesh.mesh.reset.rst", "generated/mymesh.mesh.mesh.validate.rst", "generated/mymesh.mesh.mesh.view.rst", "generated/mymesh.mesh.mesh.write.rst", "generated/mymesh.octree.rst", "generated/mymesh.primitives.rst", "generated/mymesh.quality.rst", "generated/mymesh.rays.rst", "generated/mymesh.utils.rst", "generated/mymesh.visualize.rst", "generated/submodules/mymesh.booleans.MeshBooleans.rst", "generated/submodules/mymesh.booleans.SplitMesh.rst", "generated/submodules/mymesh.contour.Adaptive.rst", "generated/submodules/mymesh.contour.MarchingCubes.rst", "generated/submodules/mymesh.contour.MarchingCubesImage.rst", "generated/submodules/mymesh.contour.MarchingSquares.rst", "generated/submodules/mymesh.contour.MarchingSquaresImage.rst", "generated/submodules/mymesh.contour.MarchingTetrahedra.rst", "generated/submodules/mymesh.converter.EdgesByElement.rst", "generated/submodules/mymesh.converter.edges2unique.rst", "generated/submodules/mymesh.converter.faces2surface.rst", "generated/submodules/mymesh.converter.faces2unique.rst", "generated/submodules/mymesh.converter.hex2edges.rst", "generated/submodules/mymesh.converter.hex2faces.rst", "generated/submodules/mymesh.converter.hex2tet.rst", "generated/submodules/mymesh.converter.im2voxel.rst", "generated/submodules/mymesh.converter.polygon2edges.rst", "generated/submodules/mymesh.converter.pyramid2edges.rst", "generated/submodules/mymesh.converter.pyramid2faces.rst", "generated/submodules/mymesh.converter.pyramid2tet.rst", "generated/submodules/mymesh.converter.quad2edges.rst", "generated/submodules/mymesh.converter.quad2tri.rst", "generated/submodules/mymesh.converter.solid2edges.rst", "generated/submodules/mymesh.converter.solid2faces.rst", "generated/submodules/mymesh.converter.solid2surface.rst", "generated/submodules/mymesh.converter.solid2tets.rst", "generated/submodules/mymesh.converter.surf2dual.rst", "generated/submodules/mymesh.converter.surf2edges.rst", "generated/submodules/mymesh.converter.surf2voxel.rst", "generated/submodules/mymesh.converter.tet102tet4.rst", "generated/submodules/mymesh.converter.tet2edges.rst", "generated/submodules/mymesh.converter.tet2faces.rst", "generated/submodules/mymesh.converter.tet42tet10.rst", "generated/submodules/mymesh.converter.tri2edges.rst", "generated/submodules/mymesh.converter.voxel2im.rst", "generated/submodules/mymesh.converter.wedge2edges.rst", "generated/submodules/mymesh.converter.wedge2faces.rst", "generated/submodules/mymesh.converter.wedge2tet.rst", "generated/submodules/mymesh.curvature.AnalyticalCurvature.rst", "generated/submodules/mymesh.curvature.CubicFit.rst", "generated/submodules/mymesh.curvature.Curvedness.rst", "generated/submodules/mymesh.curvature.GaussianCurvature.rst", "generated/submodules/mymesh.curvature.ImageCurvature.rst", "generated/submodules/mymesh.curvature.MeanCurvature.rst", "generated/submodules/mymesh.curvature.NormCurve.rst", "generated/submodules/mymesh.curvature.QuadFit.rst", "generated/submodules/mymesh.curvature.ShapeCategory.rst", "generated/submodules/mymesh.curvature.ShapeIndex.rst", "generated/submodules/mymesh.delaunay.BowyerWatson2d.rst", "generated/submodules/mymesh.delaunay.BowyerWatson3d.rst", "generated/submodules/mymesh.delaunay.ConvexHull.rst", "generated/submodules/mymesh.delaunay.ConvexHullFanTriangulation.rst", "generated/submodules/mymesh.delaunay.ConvexHull_GiftWrapping.rst", "generated/submodules/mymesh.delaunay.SciPy.rst", "generated/submodules/mymesh.delaunay.Triangle.rst", "generated/submodules/mymesh.delaunay.TriangleSplittingTriangulation.rst", "generated/submodules/mymesh.delaunay.Triangulate.rst", "generated/submodules/mymesh.image.SurfaceMesh.rst", "generated/submodules/mymesh.image.SurfaceNodeOptimization.rst", "generated/submodules/mymesh.image.TetMesh.rst", "generated/submodules/mymesh.image.VoxelMesh.rst", "generated/submodules/mymesh.image.read.rst", "generated/submodules/mymesh.image.write.rst", "generated/submodules/mymesh.implicit.SurfaceMesh.rst", "generated/submodules/mymesh.implicit.SurfaceNodeOptimization.rst", "generated/submodules/mymesh.implicit.TetMesh.rst", "generated/submodules/mymesh.implicit.VoxelMesh.rst", "generated/submodules/mymesh.implicit.box.rst", "generated/submodules/mymesh.implicit.cylinder.rst", "generated/submodules/mymesh.implicit.diamond.rst", "generated/submodules/mymesh.implicit.diff.rst", "generated/submodules/mymesh.implicit.difff.rst", "generated/submodules/mymesh.implicit.diffs.rst", "generated/submodules/mymesh.implicit.grid2fun.rst", "generated/submodules/mymesh.implicit.grid2grad.rst", "generated/submodules/mymesh.implicit.gyroid.rst", "generated/submodules/mymesh.implicit.intersection.rst", "generated/submodules/mymesh.implicit.intersectionf.rst", "generated/submodules/mymesh.implicit.intersections.rst", "generated/submodules/mymesh.implicit.lidinoid.rst", "generated/submodules/mymesh.implicit.mesh2sdf.rst", "generated/submodules/mymesh.implicit.mesh2udf.rst", "generated/submodules/mymesh.implicit.neovius.rst", "generated/submodules/mymesh.implicit.offset.rst", "generated/submodules/mymesh.implicit.primitive.rst", "generated/submodules/mymesh.implicit.rMax.rst", "generated/submodules/mymesh.implicit.rMin.rst", "generated/submodules/mymesh.implicit.sphere.rst", "generated/submodules/mymesh.implicit.thicken.rst", "generated/submodules/mymesh.implicit.thickenf.rst", "generated/submodules/mymesh.implicit.thickens.rst", "generated/submodules/mymesh.implicit.torus.rst", "generated/submodules/mymesh.implicit.union.rst", "generated/submodules/mymesh.implicit.unionf.rst", "generated/submodules/mymesh.implicit.unions.rst", "generated/submodules/mymesh.implicit.xplane.rst", "generated/submodules/mymesh.implicit.yplane.rst", "generated/submodules/mymesh.implicit.zplane.rst", "generated/submodules/mymesh.improvement.GeoTransformSmoothing.rst", "generated/submodules/mymesh.improvement.GlobalLaplacianSmoothing.rst", "generated/submodules/mymesh.improvement.LocalLaplacianSmoothing.rst", "generated/submodules/mymesh.improvement.NodeSpringSmoothing.rst", "generated/submodules/mymesh.improvement.SegmentSpringSmoothing.rst", "generated/submodules/mymesh.improvement.SmartLaplacianSmoothing.rst", "generated/submodules/mymesh.improvement.TangentialLaplacianSmoothing.rst", "generated/submodules/mymesh.improvement.TetContract.rst", "generated/submodules/mymesh.improvement.TetFlip.rst", "generated/submodules/mymesh.improvement.TetImprove.rst", "generated/submodules/mymesh.improvement.TetSplit.rst", "generated/submodules/mymesh.octree.Function2Octree.rst", "generated/submodules/mymesh.octree.Octree2Dual.rst", "generated/submodules/mymesh.octree.Octree2Voxel.rst", "generated/submodules/mymesh.octree.Points2Octree.rst", "generated/submodules/mymesh.octree.Print.rst", "generated/submodules/mymesh.octree.SearchOctree.rst", "generated/submodules/mymesh.octree.SearchOctreeTri.rst", "generated/submodules/mymesh.octree.Surface2Octree.rst", "generated/submodules/mymesh.octree.Voxel2Octree.rst", "generated/submodules/mymesh.octree.getAllLeaf.rst", "generated/submodules/mymesh.primitives.Box.rst", "generated/submodules/mymesh.primitives.Circle.rst", "generated/submodules/mymesh.primitives.CirclePt.rst", "generated/submodules/mymesh.primitives.Cylinder.rst", "generated/submodules/mymesh.primitives.Extrude.rst", "generated/submodules/mymesh.primitives.Grid.rst", "generated/submodules/mymesh.primitives.Grid2D.rst", "generated/submodules/mymesh.primitives.Line.rst", "generated/submodules/mymesh.primitives.Plane.rst", "generated/submodules/mymesh.primitives.Revolve.rst", "generated/submodules/mymesh.primitives.Sphere.rst", "generated/submodules/mymesh.primitives.Torus.rst", "generated/submodules/mymesh.quality.Area.rst", "generated/submodules/mymesh.quality.AspectRatio.rst", "generated/submodules/mymesh.quality.InverseOrthogonalQuality.rst", "generated/submodules/mymesh.quality.InverseOrthogonality.rst", "generated/submodules/mymesh.quality.MaxDihedral.rst", "generated/submodules/mymesh.quality.MeanRatio.rst", "generated/submodules/mymesh.quality.MinDihedral.rst", "generated/submodules/mymesh.quality.OrthogonalQuality.rst", "generated/submodules/mymesh.quality.Orthogonality.rst", "generated/submodules/mymesh.quality.Skewness.rst", "generated/submodules/mymesh.quality.SurfDihedralAngles.rst", "generated/submodules/mymesh.quality.Volume.rst", "generated/submodules/mymesh.quality.dihedralAngles.rst", "generated/submodules/mymesh.quality.equiangular_skewness.rst", "generated/submodules/mymesh.quality.quad_skewness.rst", "generated/submodules/mymesh.quality.tet_vol_skewness.rst", "generated/submodules/mymesh.quality.tri_skewness.rst", "generated/submodules/mymesh.rays.BoxTrianglesIntersection.rst", "generated/submodules/mymesh.rays.PlaneBoxIntersection.rst", "generated/submodules/mymesh.rays.PlaneSurfIntersection.rst", "generated/submodules/mymesh.rays.PlaneTriangleIntersection.rst", "generated/submodules/mymesh.rays.PlaneTrianglesIntersection.rst", "generated/submodules/mymesh.rays.PointInBox.rst", "generated/submodules/mymesh.rays.PointInSurf.rst", "generated/submodules/mymesh.rays.PointInTri.rst", "generated/submodules/mymesh.rays.PointsInSurf.rst", "generated/submodules/mymesh.rays.PointsInTris.rst", "generated/submodules/mymesh.rays.PointsInVoxel.rst", "generated/submodules/mymesh.rays.RayBoxIntersection.rst", "generated/submodules/mymesh.rays.RayBoxesIntersection.rst", "generated/submodules/mymesh.rays.RayOctreeIntersection.rst", "generated/submodules/mymesh.rays.RaySegmentsIntersection.rst", "generated/submodules/mymesh.rays.RaySurfIntersection.rst", "generated/submodules/mymesh.rays.RayTriangleIntersection.rst", "generated/submodules/mymesh.rays.RayTrianglesIntersection.rst", "generated/submodules/mymesh.rays.RaysSurfIntersection.rst", "generated/submodules/mymesh.rays.RaysTrianglesIntersection.rst", "generated/submodules/mymesh.rays.SegmentSegmentIntersection.rst", "generated/submodules/mymesh.rays.SegmentsSegmentsIntersection.rst", "generated/submodules/mymesh.rays.SurfSelfIntersection.rst", "generated/submodules/mymesh.rays.SurfSurfIntersection.rst", "generated/submodules/mymesh.rays.TriangleBoxIntersection.rst", "generated/submodules/mymesh.rays.TriangleTriangleIntersection.rst", "generated/submodules/mymesh.rays.TriangleTriangleIntersectionPt.rst", "generated/submodules/mymesh.rays.TrianglesTrianglesIntersection.rst", "generated/submodules/mymesh.rays.TrianglesTrianglesIntersectionPts.rst", "generated/submodules/mymesh.utils.AABB.rst", "generated/submodules/mymesh.utils.BaryTet.rst", "generated/submodules/mymesh.utils.BaryTri.rst", "generated/submodules/mymesh.utils.BaryTris.rst", "generated/submodules/mymesh.utils.CalcFaceNormal.rst", "generated/submodules/mymesh.utils.Centroids.rst", "generated/submodules/mymesh.utils.CleanupDegenerateElements.rst", "generated/submodules/mymesh.utils.DeleteDegenerateElements.rst", "generated/submodules/mymesh.utils.DeleteDuplicateNodes.rst", "generated/submodules/mymesh.utils.DetectFeatures.rst", "generated/submodules/mymesh.utils.DilateVoxel.rst", "generated/submodules/mymesh.utils.ErodeVoxel.rst", "generated/submodules/mymesh.utils.ExtractRagged.rst", "generated/submodules/mymesh.utils.Face2NodeNormal.rst", "generated/submodules/mymesh.utils.MVBB.rst", "generated/submodules/mymesh.utils.MergeMesh.rst", "generated/submodules/mymesh.utils.MirrorMesh.rst", "generated/submodules/mymesh.utils.PadRagged.rst", "generated/submodules/mymesh.utils.Project2Surface.rst", "generated/submodules/mymesh.utils.RelabelNodes.rst", "generated/submodules/mymesh.utils.SortRaggedByLength.rst", "generated/submodules/mymesh.utils.SplitRaggedByLength.rst", "generated/submodules/mymesh.utils.SurfMapping.rst", "generated/submodules/mymesh.utils.TetMeshVol.rst", "generated/submodules/mymesh.utils.TriSurfVol.rst", "generated/submodules/mymesh.utils.ValueMapping.rst", "generated/submodules/mymesh.utils.getConnectedElements.rst", "generated/submodules/mymesh.utils.getConnectedNodes.rst", "generated/submodules/mymesh.utils.getElemConnectivity.rst", "generated/submodules/mymesh.utils.getElemNeighbors.rst", "generated/submodules/mymesh.utils.getNodeNeighborhood.rst", "generated/submodules/mymesh.utils.getNodeNeighborhoodByRadius.rst", "generated/submodules/mymesh.utils.getNodeNeighbors.rst", "generated/submodules/mymesh.utils.identify_type.rst", "generated/submodules/mymesh.utils.makePyramidLayer.rst", "generated/submodules/mymesh.visualize.FaceColor.rst", "generated/submodules/mymesh.visualize.GetTheme.rst", "generated/submodules/mymesh.visualize.ParseColor.rst", "generated/submodules/mymesh.visualize.View.rst", "generated/submodules/mymesh.visualize.set_vispy_backend.rst", "guide.rst", "guide/connectivity.rst", "guide/csg.rst", "guide/elem_types.rst", "guide/image_meshing.rst", "guide/implicit_meshing.rst", "guide/installation.rst", "guide/io.rst", "guide/mesh_class.rst", "guide/ref.rst", "guide/what_mesh.rst", "index.rst", "sg_execution_times.rst", "theory.rst", "theory/contour.rst", "theory/curvature.rst", "theory/delaunay.rst", "theory/flips23.rst", "theory/improvement.rst", "theory/octree.rst", "theory/rays.rst", "theory/springsmooth.rst"], "indexentries": {"aabb() (in module mymesh.utils)": [[259, "mymesh.utils.AABB", false]], "adaptive() (in module mymesh.contour)": [[84, "mymesh.contour.Adaptive", false]], "addedges() (mymesh.mesh.mesh method)": [[54, "mymesh.mesh.mesh.addEdges", false]], "addelems() (mymesh.mesh.mesh method)": [[55, "mymesh.mesh.mesh.addElems", false]], "addfaces() (mymesh.mesh.mesh method)": [[56, "mymesh.mesh.mesh.addFaces", false]], "addnodes() (mymesh.mesh.mesh method)": [[57, "mymesh.mesh.mesh.addNodes", false]], "analyticalcurvature() (in module mymesh.curvature)": [[120, "mymesh.curvature.AnalyticalCurvature", false]], "area() (in module mymesh.quality)": [[213, "mymesh.quality.Area", false]], "aspectratio() (in module mymesh.quality)": [[214, "mymesh.quality.AspectRatio", false]], "barytet() (in module mymesh.utils)": [[260, "mymesh.utils.BaryTet", false]], "barytri() (in module mymesh.utils)": [[261, "mymesh.utils.BaryTri", false]], "barytris() (in module mymesh.utils)": [[262, "mymesh.utils.BaryTris", false]], "boundaryconn (mymesh.mesh.mesh property)": [[21, "mymesh.mesh.mesh.BoundaryConn", false]], "boundarynodes (mymesh.mesh.mesh property)": [[22, "mymesh.mesh.mesh.BoundaryNodes", false]], "bowyerwatson2d() (in module mymesh.delaunay)": [[130, "mymesh.delaunay.BowyerWatson2d", false]], "bowyerwatson3d() (in module mymesh.delaunay)": [[131, "mymesh.delaunay.BowyerWatson3d", false]], "box() (in module mymesh.implicit)": [[149, "mymesh.implicit.box", false]], "box() (in module mymesh.primitives)": [[201, "mymesh.primitives.Box", false]], "boxtrianglesintersection() (in module mymesh.rays)": [[230, "mymesh.rays.BoxTrianglesIntersection", false]], "calcfacenormal() (in module mymesh.utils)": [[263, "mymesh.utils.CalcFaceNormal", false]], "cells (mymesh.mesh.mesh property)": [[58, "mymesh.mesh.mesh.cells", false]], "centroids (mymesh.mesh.mesh property)": [[23, "mymesh.mesh.mesh.Centroids", false]], "centroids() (in module mymesh.utils)": [[264, "mymesh.utils.Centroids", false]], "circle() (in module mymesh.primitives)": [[202, "mymesh.primitives.Circle", false]], "circlept() (in module mymesh.primitives)": [[203, "mymesh.primitives.CirclePt", false]], "cleanup() (mymesh.mesh.mesh method)": [[59, "mymesh.mesh.mesh.cleanup", false]], "cleanupdegenerateelements() (in module mymesh.utils)": [[265, "mymesh.utils.CleanupDegenerateElements", false]], "clip() (mymesh.mesh.mesh method)": [[24, "mymesh.mesh.mesh.Clip", false]], "contour() (mymesh.mesh.mesh method)": [[25, "mymesh.mesh.mesh.Contour", false]], "convexhull() (in module mymesh.delaunay)": [[132, "mymesh.delaunay.ConvexHull", false]], "convexhull_giftwrapping() (in module mymesh.delaunay)": [[134, "mymesh.delaunay.ConvexHull_GiftWrapping", false]], "convexhullfantriangulation() (in module mymesh.delaunay)": [[133, "mymesh.delaunay.ConvexHullFanTriangulation", false]], "copy() (mymesh.mesh.mesh method)": [[60, "mymesh.mesh.mesh.copy", false]], "createboundarylayer() (mymesh.mesh.mesh method)": [[26, "mymesh.mesh.mesh.CreateBoundaryLayer", false]], "cubicfit() (in module mymesh.curvature)": [[121, "mymesh.curvature.CubicFit", false]], "curvedness() (in module mymesh.curvature)": [[122, "mymesh.curvature.Curvedness", false]], "cylinder() (in module mymesh.implicit)": [[150, "mymesh.implicit.cylinder", false]], "cylinder() (in module mymesh.primitives)": [[204, "mymesh.primitives.Cylinder", false]], "deletedegenerateelements() (in module mymesh.utils)": [[266, "mymesh.utils.DeleteDegenerateElements", false]], "deleteduplicatenodes() (in module mymesh.utils)": [[267, "mymesh.utils.DeleteDuplicateNodes", false]], "detectfeatures() (in module mymesh.utils)": [[268, "mymesh.utils.DetectFeatures", false]], "diamond() (in module mymesh.implicit)": [[151, "mymesh.implicit.diamond", false]], "diff() (in module mymesh.implicit)": [[152, "mymesh.implicit.diff", false]], "difff() (in module mymesh.implicit)": [[153, "mymesh.implicit.difff", false]], "diffs() (in module mymesh.implicit)": [[154, "mymesh.implicit.diffs", false]], "dihedralangles() (in module mymesh.quality)": [[225, "mymesh.quality.dihedralAngles", false]], "dilatevoxel() (in module mymesh.utils)": [[269, "mymesh.utils.DilateVoxel", false]], "edgeconn (mymesh.mesh.mesh property)": [[27, "mymesh.mesh.mesh.EdgeConn", false]], "edgeelemconn (mymesh.mesh.mesh property)": [[28, "mymesh.mesh.mesh.EdgeElemConn", false]], "edges (mymesh.mesh.mesh property)": [[29, "mymesh.mesh.mesh.Edges", false]], "edges2unique() (in module mymesh.converter)": [[91, "mymesh.converter.edges2unique", false]], "edgesbyelement() (in module mymesh.converter)": [[90, "mymesh.converter.EdgesByElement", false]], "edgesets (mymesh.mesh attribute)": [[20, "mymesh.mesh.EdgeSets", false]], "elemconn (mymesh.mesh.mesh property)": [[30, "mymesh.mesh.mesh.ElemConn", false]], "elemdata (mymesh.mesh attribute)": [[20, "mymesh.mesh.ElemData", false]], "elemneighbors (mymesh.mesh.mesh property)": [[31, "mymesh.mesh.mesh.ElemNeighbors", false]], "elemnormals (mymesh.mesh.mesh property)": [[32, "mymesh.mesh.mesh.ElemNormals", false]], "elemsets (mymesh.mesh attribute)": [[20, "mymesh.mesh.ElemSets", false]], "equiangular_skewness() (in module mymesh.quality)": [[226, "mymesh.quality.equiangular_skewness", false]], "erodevoxel() (in module mymesh.utils)": [[270, "mymesh.utils.ErodeVoxel", false]], "eulercharacteristic (mymesh.mesh.mesh property)": [[33, "mymesh.mesh.mesh.EulerCharacteristic", false]], "extractragged() (in module mymesh.utils)": [[271, "mymesh.utils.ExtractRagged", false]], "extrude() (in module mymesh.primitives)": [[205, "mymesh.primitives.Extrude", false]], "face2nodenormal() (in module mymesh.utils)": [[272, "mymesh.utils.Face2NodeNormal", false]], "facecolor() (in module mymesh.visualize)": [[294, "mymesh.visualize.FaceColor", false]], "faceconn (mymesh.mesh.mesh property)": [[34, "mymesh.mesh.mesh.FaceConn", false]], "faceelemconn (mymesh.mesh.mesh property)": [[35, "mymesh.mesh.mesh.FaceElemConn", false]], "faces (mymesh.mesh.mesh property)": [[36, "mymesh.mesh.mesh.Faces", false]], "faces2surface() (in module mymesh.converter)": [[92, "mymesh.converter.faces2surface", false]], "faces2unique() (in module mymesh.converter)": [[93, "mymesh.converter.faces2unique", false]], "facesets (mymesh.mesh attribute)": [[20, "mymesh.mesh.FaceSets", false]], "function2octree() (in module mymesh.octree)": [[191, "mymesh.octree.Function2Octree", false]], "gaussiancurvature() (in module mymesh.curvature)": [[123, "mymesh.curvature.GaussianCurvature", false]], "genus (mymesh.mesh.mesh property)": [[37, "mymesh.mesh.mesh.Genus", false]], "geotransformsmoothing() (in module mymesh.improvement)": [[180, "mymesh.improvement.GeoTransformSmoothing", false]], "getallleaf() (in module mymesh.octree)": [[200, "mymesh.octree.getAllLeaf", false]], "getconnectedelements() (in module mymesh.utils)": [[285, "mymesh.utils.getConnectedElements", false]], "getconnectednodes() (in module mymesh.utils)": [[286, "mymesh.utils.getConnectedNodes", false]], "getcurvature() (mymesh.mesh.mesh method)": [[61, "mymesh.mesh.mesh.getCurvature", false]], "getelemconnectivity() (in module mymesh.utils)": [[287, "mymesh.utils.getElemConnectivity", false]], "getelemneighbors() (in module mymesh.utils)": [[288, "mymesh.utils.getElemNeighbors", false]], "getnodeneighborhood() (in module mymesh.utils)": [[289, "mymesh.utils.getNodeNeighborhood", false]], "getnodeneighborhoodbyradius() (in module mymesh.utils)": [[290, "mymesh.utils.getNodeNeighborhoodByRadius", false]], "getnodeneighbors() (in module mymesh.utils)": [[291, "mymesh.utils.getNodeNeighbors", false]], "getquality() (mymesh.mesh.mesh method)": [[62, "mymesh.mesh.mesh.getQuality", false]], "gettheme() (in module mymesh.visualize)": [[295, "mymesh.visualize.GetTheme", false]], "globallaplaciansmoothing() (in module mymesh.improvement)": [[181, "mymesh.improvement.GlobalLaplacianSmoothing", false]], "grid() (in module mymesh.primitives)": [[206, "mymesh.primitives.Grid", false]], "grid2d() (in module mymesh.primitives)": [[207, "mymesh.primitives.Grid2D", false]], "grid2fun() (in module mymesh.implicit)": [[155, "mymesh.implicit.grid2fun", false]], "grid2grad() (in module mymesh.implicit)": [[156, "mymesh.implicit.grid2grad", false]], "gyroid() (in module mymesh.implicit)": [[157, "mymesh.implicit.gyroid", false]], "hex2edges() (in module mymesh.converter)": [[94, "mymesh.converter.hex2edges", false]], "hex2faces() (in module mymesh.converter)": [[95, "mymesh.converter.hex2faces", false]], "hex2tet() (in module mymesh.converter)": [[96, "mymesh.converter.hex2tet", false]], "identify_type() (in module mymesh.utils)": [[292, "mymesh.utils.identify_type", false]], "identify_type() (mymesh.mesh.mesh method)": [[63, "mymesh.mesh.mesh.identify_type", false]], "im2voxel() (in module mymesh.converter)": [[97, "mymesh.converter.im2voxel", false]], "imagecurvature() (in module mymesh.curvature)": [[124, "mymesh.curvature.ImageCurvature", false]], "imread() (mymesh.mesh.mesh method)": [[64, "mymesh.mesh.mesh.imread", false]], "intersection() (in module mymesh.implicit)": [[158, "mymesh.implicit.intersection", false]], "intersectionf() (in module mymesh.implicit)": [[159, "mymesh.implicit.intersectionf", false]], "intersections() (in module mymesh.implicit)": [[160, "mymesh.implicit.intersections", false]], "inverseorthogonality() (in module mymesh.quality)": [[216, "mymesh.quality.InverseOrthogonality", false]], "inverseorthogonalquality() (in module mymesh.quality)": [[215, "mymesh.quality.InverseOrthogonalQuality", false]], "lidinoid() (in module mymesh.implicit)": [[161, "mymesh.implicit.lidinoid", false]], "line() (in module mymesh.primitives)": [[208, "mymesh.primitives.Line", false]], "locallaplaciansmoothing() (in module mymesh.improvement)": [[182, "mymesh.improvement.LocalLaplacianSmoothing", false]], "makepyramidlayer() (in module mymesh.utils)": [[293, "mymesh.utils.makePyramidLayer", false]], "marchingcubes() (in module mymesh.contour)": [[85, "mymesh.contour.MarchingCubes", false]], "marchingcubesimage() (in module mymesh.contour)": [[86, "mymesh.contour.MarchingCubesImage", false]], "marchingsquares() (in module mymesh.contour)": [[87, "mymesh.contour.MarchingSquares", false]], "marchingsquaresimage() (in module mymesh.contour)": [[88, "mymesh.contour.MarchingSquaresImage", false]], "marchingtetrahedra() (in module mymesh.contour)": [[89, "mymesh.contour.MarchingTetrahedra", false]], "maxdihedral() (in module mymesh.quality)": [[217, "mymesh.quality.MaxDihedral", false]], "meancurvature() (in module mymesh.curvature)": [[125, "mymesh.curvature.MeanCurvature", false]], "meanratio() (in module mymesh.quality)": [[218, "mymesh.quality.MeanRatio", false]], "merge() (mymesh.mesh.mesh method)": [[65, "mymesh.mesh.mesh.merge", false]], "mergemesh() (in module mymesh.utils)": [[274, "mymesh.utils.MergeMesh", false]], "mesh (class in mymesh)": [[20, "mymesh.mesh", false]], "mesh2sdf() (in module mymesh.implicit)": [[162, "mymesh.implicit.mesh2sdf", false]], "mesh2udf() (in module mymesh.implicit)": [[163, "mymesh.implicit.mesh2udf", false]], "meshbooleans() (in module mymesh.booleans)": [[82, "mymesh.booleans.MeshBooleans", false]], "meshio2mymesh() (mymesh.mesh.mesh method)": [[66, "mymesh.mesh.mesh.meshio2mymesh", false]], "mindihedral() (in module mymesh.quality)": [[219, "mymesh.quality.MinDihedral", false]], "mirrormesh() (in module mymesh.utils)": [[275, "mymesh.utils.MirrorMesh", false]], "module": [[0, "module-mymesh", false], [12, "module-mymesh.booleans", false], [13, "module-mymesh.contour", false], [14, "module-mymesh.converter", false], [15, "module-mymesh.curvature", false], [16, "module-mymesh.delaunay", false], [17, "module-mymesh.image", false], [18, "module-mymesh.implicit", false], [19, "module-mymesh.improvement", false], [76, "module-mymesh.octree", false], [77, "module-mymesh.primitives", false], [78, "module-mymesh.quality", false], [79, "module-mymesh.rays", false], [80, "module-mymesh.utils", false], [81, "module-mymesh.visualize", false]], "mvbb() (in module mymesh.utils)": [[273, "mymesh.utils.MVBB", false]], "mymesh": [[0, "module-mymesh", false]], "mymesh.booleans": [[12, "module-mymesh.booleans", false]], "mymesh.contour": [[13, "module-mymesh.contour", false]], "mymesh.converter": [[14, "module-mymesh.converter", false]], "mymesh.curvature": [[15, "module-mymesh.curvature", false]], "mymesh.delaunay": [[16, "module-mymesh.delaunay", false]], "mymesh.image": [[17, "module-mymesh.image", false]], "mymesh.implicit": [[18, "module-mymesh.implicit", false]], "mymesh.improvement": [[19, "module-mymesh.improvement", false]], "mymesh.octree": [[76, "module-mymesh.octree", false]], "mymesh.primitives": [[77, "module-mymesh.primitives", false]], "mymesh.quality": [[78, "module-mymesh.quality", false]], "mymesh.rays": [[79, "module-mymesh.rays", false]], "mymesh.utils": [[80, "module-mymesh.utils", false]], "mymesh.visualize": [[81, "module-mymesh.visualize", false]], "mymesh2meshio() (mymesh.mesh.mesh method)": [[67, "mymesh.mesh.mesh.mymesh2meshio", false]], "nd (mymesh.mesh.mesh property)": [[38, "mymesh.mesh.mesh.ND", false]], "nedge (mymesh.mesh.mesh property)": [[39, "mymesh.mesh.mesh.NEdge", false]], "nelem (mymesh.mesh.mesh property)": [[40, "mymesh.mesh.mesh.NElem", false]], "neovius() (in module mymesh.implicit)": [[164, "mymesh.implicit.neovius", false]], "nface (mymesh.mesh.mesh property)": [[41, "mymesh.mesh.mesh.NFace", false]], "nnode (mymesh.mesh.mesh property)": [[42, "mymesh.mesh.mesh.NNode", false]], "nodedata (mymesh.mesh attribute)": [[20, "mymesh.mesh.NodeData", false]], "nodeneighbors (mymesh.mesh.mesh property)": [[43, "mymesh.mesh.mesh.NodeNeighbors", false]], "nodenormals (mymesh.mesh.mesh property)": [[44, "mymesh.mesh.mesh.NodeNormals", false]], "nodenormalsmethod (mymesh.mesh.mesh property)": [[45, "mymesh.mesh.mesh.NodeNormalsMethod", false]], "nodesets (mymesh.mesh attribute)": [[20, "mymesh.mesh.NodeSets", false]], "nodespringsmoothing() (in module mymesh.improvement)": [[183, "mymesh.improvement.NodeSpringSmoothing", false]], "normcurve() (in module mymesh.curvature)": [[126, "mymesh.curvature.NormCurve", false]], "octree2dual() (in module mymesh.octree)": [[192, "mymesh.octree.Octree2Dual", false]], "octree2voxel() (in module mymesh.octree)": [[193, "mymesh.octree.Octree2Voxel", false]], "offset() (in module mymesh.implicit)": [[165, "mymesh.implicit.offset", false]], "orthogonality() (in module mymesh.quality)": [[221, "mymesh.quality.Orthogonality", false]], "orthogonalquality() (in module mymesh.quality)": [[220, "mymesh.quality.OrthogonalQuality", false]], "padragged() (in module mymesh.utils)": [[276, "mymesh.utils.PadRagged", false]], "parsecolor() (in module mymesh.visualize)": [[296, "mymesh.visualize.ParseColor", false]], "plane() (in module mymesh.primitives)": [[209, "mymesh.primitives.Plane", false]], "planeboxintersection() (in module mymesh.rays)": [[231, "mymesh.rays.PlaneBoxIntersection", false]], "planesurfintersection() (in module mymesh.rays)": [[232, "mymesh.rays.PlaneSurfIntersection", false]], "planetriangleintersection() (in module mymesh.rays)": [[233, "mymesh.rays.PlaneTriangleIntersection", false]], "planetrianglesintersection() (in module mymesh.rays)": [[234, "mymesh.rays.PlaneTrianglesIntersection", false]], "plot() (mymesh.mesh.mesh method)": [[68, "mymesh.mesh.mesh.plot", false]], "pointinbox() (in module mymesh.rays)": [[235, "mymesh.rays.PointInBox", false]], "pointinsurf() (in module mymesh.rays)": [[236, "mymesh.rays.PointInSurf", false]], "pointintri() (in module mymesh.rays)": [[237, "mymesh.rays.PointInTri", false]], "points (mymesh.mesh.mesh property)": [[69, "mymesh.mesh.mesh.points", false]], "points2octree() (in module mymesh.octree)": [[194, "mymesh.octree.Points2Octree", false]], "pointsinsurf() (in module mymesh.rays)": [[238, "mymesh.rays.PointsInSurf", false]], "pointsintris() (in module mymesh.rays)": [[239, "mymesh.rays.PointsInTris", false]], "pointsinvoxel() (in module mymesh.rays)": [[240, "mymesh.rays.PointsInVoxel", false]], "polygon2edges() (in module mymesh.converter)": [[98, "mymesh.converter.polygon2edges", false]], "primitive() (in module mymesh.implicit)": [[166, "mymesh.implicit.primitive", false]], "print() (in module mymesh.octree)": [[195, "mymesh.octree.Print", false]], "project2surface() (in module mymesh.utils)": [[277, "mymesh.utils.Project2Surface", false]], "pyramid2edges() (in module mymesh.converter)": [[99, "mymesh.converter.pyramid2edges", false]], "pyramid2faces() (in module mymesh.converter)": [[100, "mymesh.converter.pyramid2faces", false]], "pyramid2tet() (in module mymesh.converter)": [[101, "mymesh.converter.pyramid2tet", false]], "quad2edges() (in module mymesh.converter)": [[102, "mymesh.converter.quad2edges", false]], "quad2tri() (in module mymesh.converter)": [[103, "mymesh.converter.quad2tri", false]], "quad_skewness() (in module mymesh.quality)": [[227, "mymesh.quality.quad_skewness", false]], "quadfit() (in module mymesh.curvature)": [[127, "mymesh.curvature.QuadFit", false]], "rayboxesintersection() (in module mymesh.rays)": [[242, "mymesh.rays.RayBoxesIntersection", false]], "rayboxintersection() (in module mymesh.rays)": [[241, "mymesh.rays.RayBoxIntersection", false]], "rayoctreeintersection() (in module mymesh.rays)": [[243, "mymesh.rays.RayOctreeIntersection", false]], "raysegmentsintersection() (in module mymesh.rays)": [[244, "mymesh.rays.RaySegmentsIntersection", false]], "rayssurfintersection() (in module mymesh.rays)": [[248, "mymesh.rays.RaysSurfIntersection", false]], "raystrianglesintersection() (in module mymesh.rays)": [[249, "mymesh.rays.RaysTrianglesIntersection", false]], "raysurfintersection() (in module mymesh.rays)": [[245, "mymesh.rays.RaySurfIntersection", false]], "raytriangleintersection() (in module mymesh.rays)": [[246, "mymesh.rays.RayTriangleIntersection", false]], "raytrianglesintersection() (in module mymesh.rays)": [[247, "mymesh.rays.RayTrianglesIntersection", false]], "read() (in module mymesh.image)": [[143, "mymesh.image.read", false]], "read() (mymesh.mesh.mesh method)": [[70, "mymesh.mesh.mesh.read", false]], "relabelnodes() (in module mymesh.utils)": [[278, "mymesh.utils.RelabelNodes", false]], "removeelems() (mymesh.mesh.mesh method)": [[71, "mymesh.mesh.mesh.removeElems", false]], "renumberfacesbyset() (mymesh.mesh.mesh method)": [[46, "mymesh.mesh.mesh.RenumberFacesBySet", false]], "renumbernodesbyset() (mymesh.mesh.mesh method)": [[47, "mymesh.mesh.mesh.RenumberNodesBySet", false]], "reset() (mymesh.mesh.mesh method)": [[72, "mymesh.mesh.mesh.reset", false]], "revolve() (in module mymesh.primitives)": [[210, "mymesh.primitives.Revolve", false]], "rmax() (in module mymesh.implicit)": [[167, "mymesh.implicit.rMax", false]], "rmin() (in module mymesh.implicit)": [[168, "mymesh.implicit.rMin", false]], "scipy() (in module mymesh.delaunay)": [[135, "mymesh.delaunay.SciPy", false]], "searchoctree() (in module mymesh.octree)": [[196, "mymesh.octree.SearchOctree", false]], "searchoctreetri() (in module mymesh.octree)": [[197, "mymesh.octree.SearchOctreeTri", false]], "segmentsegmentintersection() (in module mymesh.rays)": [[250, "mymesh.rays.SegmentSegmentIntersection", false]], "segmentspringsmoothing() (in module mymesh.improvement)": [[184, "mymesh.improvement.SegmentSpringSmoothing", false]], "segmentssegmentsintersection() (in module mymesh.rays)": [[251, "mymesh.rays.SegmentsSegmentsIntersection", false]], "set_vispy_backend() (in module mymesh.visualize)": [[298, "mymesh.visualize.set_vispy_backend", false]], "shapecategory() (in module mymesh.curvature)": [[128, "mymesh.curvature.ShapeCategory", false]], "shapeindex() (in module mymesh.curvature)": [[129, "mymesh.curvature.ShapeIndex", false]], "skewness() (in module mymesh.quality)": [[222, "mymesh.quality.Skewness", false]], "smartlaplaciansmoothing() (in module mymesh.improvement)": [[185, "mymesh.improvement.SmartLaplacianSmoothing", false]], "solid2edges() (in module mymesh.converter)": [[104, "mymesh.converter.solid2edges", false]], "solid2faces() (in module mymesh.converter)": [[105, "mymesh.converter.solid2faces", false]], "solid2surface() (in module mymesh.converter)": [[106, "mymesh.converter.solid2surface", false]], "solid2tets() (in module mymesh.converter)": [[107, "mymesh.converter.solid2tets", false]], "sortraggedbylength() (in module mymesh.utils)": [[279, "mymesh.utils.SortRaggedByLength", false]], "sphere() (in module mymesh.implicit)": [[169, "mymesh.implicit.sphere", false]], "sphere() (in module mymesh.primitives)": [[211, "mymesh.primitives.Sphere", false]], "splitmesh() (in module mymesh.booleans)": [[83, "mymesh.booleans.SplitMesh", false]], "splitraggedbylength() (in module mymesh.utils)": [[280, "mymesh.utils.SplitRaggedByLength", false]], "surf2dual() (in module mymesh.converter)": [[108, "mymesh.converter.surf2dual", false]], "surf2edges() (in module mymesh.converter)": [[109, "mymesh.converter.surf2edges", false]], "surf2voxel() (in module mymesh.converter)": [[110, "mymesh.converter.surf2voxel", false]], "surface (mymesh.mesh.mesh property)": [[52, "mymesh.mesh.mesh.Surface", false]], "surface2octree() (in module mymesh.octree)": [[198, "mymesh.octree.Surface2Octree", false]], "surfacemesh() (in module mymesh.image)": [[139, "mymesh.image.SurfaceMesh", false]], "surfacemesh() (in module mymesh.implicit)": [[145, "mymesh.implicit.SurfaceMesh", false]], "surfacenodeoptimization() (in module mymesh.image)": [[140, "mymesh.image.SurfaceNodeOptimization", false]], "surfacenodeoptimization() (in module mymesh.implicit)": [[146, "mymesh.implicit.SurfaceNodeOptimization", false]], "surfconn (mymesh.mesh.mesh property)": [[48, "mymesh.mesh.mesh.SurfConn", false]], "surfdihedralangles() (in module mymesh.quality)": [[223, "mymesh.quality.SurfDihedralAngles", false]], "surfelemconn (mymesh.mesh.mesh property)": [[49, "mymesh.mesh.mesh.SurfElemConn", false]], "surfmapping() (in module mymesh.utils)": [[281, "mymesh.utils.SurfMapping", false]], "surfnodeneighbors (mymesh.mesh.mesh property)": [[50, "mymesh.mesh.mesh.SurfNodeNeighbors", false]], "surfnodes (mymesh.mesh.mesh property)": [[51, "mymesh.mesh.mesh.SurfNodes", false]], "surfselfintersection() (in module mymesh.rays)": [[252, "mymesh.rays.SurfSelfIntersection", false]], "surfsurfintersection() (in module mymesh.rays)": [[253, "mymesh.rays.SurfSurfIntersection", false]], "tangentiallaplaciansmoothing() (in module mymesh.improvement)": [[186, "mymesh.improvement.TangentialLaplacianSmoothing", false]], "tet102tet4() (in module mymesh.converter)": [[111, "mymesh.converter.tet102tet4", false]], "tet2edges() (in module mymesh.converter)": [[112, "mymesh.converter.tet2edges", false]], "tet2faces() (in module mymesh.converter)": [[113, "mymesh.converter.tet2faces", false]], "tet42tet10() (in module mymesh.converter)": [[114, "mymesh.converter.tet42tet10", false]], "tet_vol_skewness() (in module mymesh.quality)": [[228, "mymesh.quality.tet_vol_skewness", false]], "tetcontract() (in module mymesh.improvement)": [[187, "mymesh.improvement.TetContract", false]], "tetflip() (in module mymesh.improvement)": [[188, "mymesh.improvement.TetFlip", false]], "tetimprove() (in module mymesh.improvement)": [[189, "mymesh.improvement.TetImprove", false]], "tetmesh() (in module mymesh.image)": [[141, "mymesh.image.TetMesh", false]], "tetmesh() (in module mymesh.implicit)": [[147, "mymesh.implicit.TetMesh", false]], "tetmeshvol() (in module mymesh.utils)": [[282, "mymesh.utils.TetMeshVol", false]], "tetsplit() (in module mymesh.improvement)": [[190, "mymesh.improvement.TetSplit", false]], "thicken() (in module mymesh.implicit)": [[170, "mymesh.implicit.thicken", false]], "thickenf() (in module mymesh.implicit)": [[171, "mymesh.implicit.thickenf", false]], "thickens() (in module mymesh.implicit)": [[172, "mymesh.implicit.thickens", false]], "threshold() (mymesh.mesh.mesh method)": [[53, "mymesh.mesh.mesh.Threshold", false]], "torus() (in module mymesh.implicit)": [[173, "mymesh.implicit.torus", false]], "torus() (in module mymesh.primitives)": [[212, "mymesh.primitives.Torus", false]], "tri2edges() (in module mymesh.converter)": [[115, "mymesh.converter.tri2edges", false]], "tri_skewness() (in module mymesh.quality)": [[229, "mymesh.quality.tri_skewness", false]], "triangle() (in module mymesh.delaunay)": [[136, "mymesh.delaunay.Triangle", false]], "triangleboxintersection() (in module mymesh.rays)": [[254, "mymesh.rays.TriangleBoxIntersection", false]], "trianglesplittingtriangulation() (in module mymesh.delaunay)": [[137, "mymesh.delaunay.TriangleSplittingTriangulation", false]], "trianglestrianglesintersection() (in module mymesh.rays)": [[257, "mymesh.rays.TrianglesTrianglesIntersection", false]], "trianglestrianglesintersectionpts() (in module mymesh.rays)": [[258, "mymesh.rays.TrianglesTrianglesIntersectionPts", false]], "triangletriangleintersection() (in module mymesh.rays)": [[255, "mymesh.rays.TriangleTriangleIntersection", false]], "triangletriangleintersectionpt() (in module mymesh.rays)": [[256, "mymesh.rays.TriangleTriangleIntersectionPt", false]], "triangulate() (in module mymesh.delaunay)": [[138, "mymesh.delaunay.Triangulate", false]], "trisurfvol() (in module mymesh.utils)": [[283, "mymesh.utils.TriSurfVol", false]], "union() (in module mymesh.implicit)": [[174, "mymesh.implicit.union", false]], "unionf() (in module mymesh.implicit)": [[175, "mymesh.implicit.unionf", false]], "unions() (in module mymesh.implicit)": [[176, "mymesh.implicit.unions", false]], "validate() (mymesh.mesh.mesh method)": [[73, "mymesh.mesh.mesh.validate", false]], "valuemapping() (in module mymesh.utils)": [[284, "mymesh.utils.ValueMapping", false]], "view() (in module mymesh.visualize)": [[297, "mymesh.visualize.View", false]], "view() (mymesh.mesh.mesh method)": [[74, "mymesh.mesh.mesh.view", false]], "volume() (in module mymesh.quality)": [[224, "mymesh.quality.Volume", false]], "voxel2im() (in module mymesh.converter)": [[116, "mymesh.converter.voxel2im", false]], "voxel2octree() (in module mymesh.octree)": [[199, "mymesh.octree.Voxel2Octree", false]], "voxelmesh() (in module mymesh.image)": [[142, "mymesh.image.VoxelMesh", false]], "voxelmesh() (in module mymesh.implicit)": [[148, "mymesh.implicit.VoxelMesh", false]], "wedge2edges() (in module mymesh.converter)": [[117, "mymesh.converter.wedge2edges", false]], "wedge2faces() (in module mymesh.converter)": [[118, "mymesh.converter.wedge2faces", false]], "wedge2tet() (in module mymesh.converter)": [[119, "mymesh.converter.wedge2tet", false]], "write() (in module mymesh.image)": [[144, "mymesh.image.write", false]], "write() (mymesh.mesh.mesh method)": [[75, "mymesh.mesh.mesh.write", false]], "xplane() (in module mymesh.implicit)": [[177, "mymesh.implicit.xplane", false]], "yplane() (in module mymesh.implicit)": [[178, "mymesh.implicit.yplane", false]], "zplane() (in module mymesh.implicit)": [[179, "mymesh.implicit.zplane", false]]}, "objects": {"": [[0, 0, 0, "-", "mymesh"]], "mymesh": [[12, 0, 0, "-", "booleans"], [13, 0, 0, "-", "contour"], [14, 0, 0, "-", "converter"], [15, 0, 0, "-", "curvature"], [16, 0, 0, "-", "delaunay"], [17, 0, 0, "-", "image"], [18, 0, 0, "-", "implicit"], [19, 0, 0, "-", "improvement"], [20, 2, 1, "", "mesh"], [76, 0, 0, "-", "octree"], [77, 0, 0, "-", "primitives"], [78, 0, 0, "-", "quality"], [79, 0, 0, "-", "rays"], [80, 0, 0, "-", "utils"], [81, 0, 0, "-", "visualize"]], "mymesh.booleans": [[82, 1, 1, "", "MeshBooleans"], [83, 1, 1, "", "SplitMesh"]], "mymesh.contour": [[84, 1, 1, "", "Adaptive"], [85, 1, 1, "", "MarchingCubes"], [86, 1, 1, "", "MarchingCubesImage"], [87, 1, 1, "", "MarchingSquares"], [88, 1, 1, "", "MarchingSquaresImage"], [89, 1, 1, "", "MarchingTetrahedra"]], "mymesh.converter": [[90, 1, 1, "", "EdgesByElement"], [91, 1, 1, "", "edges2unique"], [92, 1, 1, "", "faces2surface"], [93, 1, 1, "", "faces2unique"], [94, 1, 1, "", "hex2edges"], [95, 1, 1, "", "hex2faces"], [96, 1, 1, "", "hex2tet"], [97, 1, 1, "", "im2voxel"], [98, 1, 1, "", "polygon2edges"], [99, 1, 1, "", "pyramid2edges"], [100, 1, 1, "", "pyramid2faces"], [101, 1, 1, "", "pyramid2tet"], [102, 1, 1, "", "quad2edges"], [103, 1, 1, "", "quad2tri"], [104, 1, 1, "", "solid2edges"], [105, 1, 1, "", "solid2faces"], [106, 1, 1, "", "solid2surface"], [107, 1, 1, "", "solid2tets"], [108, 1, 1, "", "surf2dual"], [109, 1, 1, "", "surf2edges"], [110, 1, 1, "", "surf2voxel"], [111, 1, 1, "", "tet102tet4"], [112, 1, 1, "", "tet2edges"], [113, 1, 1, "", "tet2faces"], [114, 1, 1, "", "tet42tet10"], [115, 1, 1, "", "tri2edges"], [116, 1, 1, "", "voxel2im"], [117, 1, 1, "", "wedge2edges"], [118, 1, 1, "", "wedge2faces"], [119, 1, 1, "", "wedge2tet"]], "mymesh.curvature": [[120, 1, 1, "", "AnalyticalCurvature"], [121, 1, 1, "", "CubicFit"], [122, 1, 1, "", "Curvedness"], [123, 1, 1, "", "GaussianCurvature"], [124, 1, 1, "", "ImageCurvature"], [125, 1, 1, "", "MeanCurvature"], [126, 1, 1, "", "NormCurve"], [127, 1, 1, "", "QuadFit"], [128, 1, 1, "", "ShapeCategory"], [129, 1, 1, "", "ShapeIndex"]], "mymesh.delaunay": [[130, 1, 1, "", "BowyerWatson2d"], [131, 1, 1, "", "BowyerWatson3d"], [132, 1, 1, "", "ConvexHull"], [133, 1, 1, "", "ConvexHullFanTriangulation"], [134, 1, 1, "", "ConvexHull_GiftWrapping"], [135, 1, 1, "", "SciPy"], [136, 1, 1, "", "Triangle"], [137, 1, 1, "", "TriangleSplittingTriangulation"], [138, 1, 1, "", "Triangulate"]], "mymesh.image": [[139, 1, 1, "", "SurfaceMesh"], [140, 1, 1, "", "SurfaceNodeOptimization"], [141, 1, 1, "", "TetMesh"], [142, 1, 1, "", "VoxelMesh"], [143, 1, 1, "", "read"], [144, 1, 1, "", "write"]], "mymesh.implicit": [[145, 1, 1, "", "SurfaceMesh"], [146, 1, 1, "", "SurfaceNodeOptimization"], [147, 1, 1, "", "TetMesh"], [148, 1, 1, "", "VoxelMesh"], [149, 1, 1, "", "box"], [150, 1, 1, "", "cylinder"], [151, 1, 1, "", "diamond"], [152, 1, 1, "", "diff"], [153, 1, 1, "", "difff"], [154, 1, 1, "", "diffs"], [155, 1, 1, "", "grid2fun"], [156, 1, 1, "", "grid2grad"], [157, 1, 1, "", "gyroid"], [158, 1, 1, "", "intersection"], [159, 1, 1, "", "intersectionf"], [160, 1, 1, "", "intersections"], [161, 1, 1, "", "lidinoid"], [162, 1, 1, "", "mesh2sdf"], [163, 1, 1, "", "mesh2udf"], [164, 1, 1, "", "neovius"], [165, 1, 1, "", "offset"], [166, 1, 1, "", "primitive"], [167, 1, 1, "", "rMax"], [168, 1, 1, "", "rMin"], [169, 1, 1, "", "sphere"], [170, 1, 1, "", "thicken"], [171, 1, 1, "", "thickenf"], [172, 1, 1, "", "thickens"], [173, 1, 1, "", "torus"], [174, 1, 1, "", "union"], [175, 1, 1, "", "unionf"], [176, 1, 1, "", "unions"], [177, 1, 1, "", "xplane"], [178, 1, 1, "", "yplane"], [179, 1, 1, "", "zplane"]], "mymesh.improvement": [[180, 1, 1, "", "GeoTransformSmoothing"], [181, 1, 1, "", "GlobalLaplacianSmoothing"], [182, 1, 1, "", "LocalLaplacianSmoothing"], [183, 1, 1, "", "NodeSpringSmoothing"], [184, 1, 1, "", "SegmentSpringSmoothing"], [185, 1, 1, "", "SmartLaplacianSmoothing"], [186, 1, 1, "", "TangentialLaplacianSmoothing"], [187, 1, 1, "", "TetContract"], [188, 1, 1, "", "TetFlip"], [189, 1, 1, "", "TetImprove"], [190, 1, 1, "", "TetSplit"]], "mymesh.mesh": [[20, 3, 1, "", "EdgeSets"], [20, 3, 1, "", "ElemData"], [20, 3, 1, "", "ElemSets"], [20, 3, 1, "", "FaceSets"], [20, 3, 1, "", "NodeData"], [20, 3, 1, "", "NodeSets"]], "mymesh.mesh.mesh": [[21, 4, 1, "", "BoundaryConn"], [22, 4, 1, "", "BoundaryNodes"], [23, 4, 1, "", "Centroids"], [24, 5, 1, "", "Clip"], [25, 5, 1, "", "Contour"], [26, 5, 1, "", "CreateBoundaryLayer"], [27, 4, 1, "", "EdgeConn"], [28, 4, 1, "", "EdgeElemConn"], [29, 4, 1, "", "Edges"], [30, 4, 1, "", "ElemConn"], [31, 4, 1, "", "ElemNeighbors"], [32, 4, 1, "", "ElemNormals"], [33, 4, 1, "", "EulerCharacteristic"], [34, 4, 1, "", "FaceConn"], [35, 4, 1, "", "FaceElemConn"], [36, 4, 1, "", "Faces"], [37, 4, 1, "", "Genus"], [38, 4, 1, "", "ND"], [39, 4, 1, "", "NEdge"], [40, 4, 1, "", "NElem"], [41, 4, 1, "", "NFace"], [42, 4, 1, "", "NNode"], [43, 4, 1, "", "NodeNeighbors"], [44, 4, 1, "", "NodeNormals"], [45, 4, 1, "", "NodeNormalsMethod"], [46, 5, 1, "", "RenumberFacesBySet"], [47, 5, 1, "", "RenumberNodesBySet"], [48, 4, 1, "", "SurfConn"], [49, 4, 1, "", "SurfElemConn"], [50, 4, 1, "", "SurfNodeNeighbors"], [51, 4, 1, "", "SurfNodes"], [52, 4, 1, "", "Surface"], [53, 5, 1, "", "Threshold"], [54, 5, 1, "", "addEdges"], [55, 5, 1, "", "addElems"], [56, 5, 1, "", "addFaces"], [57, 5, 1, "", "addNodes"], [58, 4, 1, "", "cells"], [59, 5, 1, "", "cleanup"], [60, 5, 1, "", "copy"], [61, 5, 1, "", "getCurvature"], [62, 5, 1, "", "getQuality"], [63, 5, 1, "", "identify_type"], [64, 5, 1, "", "imread"], [65, 5, 1, "", "merge"], [66, 5, 1, "", "meshio2mymesh"], [67, 5, 1, "", "mymesh2meshio"], [68, 5, 1, "", "plot"], [69, 4, 1, "", "points"], [70, 5, 1, "", "read"], [71, 5, 1, "", "removeElems"], [72, 5, 1, "", "reset"], [73, 5, 1, "", "validate"], [74, 5, 1, "", "view"], [75, 5, 1, "", "write"]], "mymesh.octree": [[191, 1, 1, "", "Function2Octree"], [192, 1, 1, "", "Octree2Dual"], [193, 1, 1, "", "Octree2Voxel"], [194, 1, 1, "", "Points2Octree"], [195, 1, 1, "", "Print"], [196, 1, 1, "", "SearchOctree"], [197, 1, 1, "", "SearchOctreeTri"], [198, 1, 1, "", "Surface2Octree"], [199, 1, 1, "", "Voxel2Octree"], [200, 1, 1, "", "getAllLeaf"]], "mymesh.primitives": [[201, 1, 1, "", "Box"], [202, 1, 1, "", "Circle"], [203, 1, 1, "", "CirclePt"], [204, 1, 1, "", "Cylinder"], [205, 1, 1, "", "Extrude"], [206, 1, 1, "", "Grid"], [207, 1, 1, "", "Grid2D"], [208, 1, 1, "", "Line"], [209, 1, 1, "", "Plane"], [210, 1, 1, "", "Revolve"], [211, 1, 1, "", "Sphere"], [212, 1, 1, "", "Torus"]], "mymesh.quality": [[213, 1, 1, "", "Area"], [214, 1, 1, "", "AspectRatio"], [215, 1, 1, "", "InverseOrthogonalQuality"], [216, 1, 1, "", "InverseOrthogonality"], [217, 1, 1, "", "MaxDihedral"], [218, 1, 1, "", "MeanRatio"], [219, 1, 1, "", "MinDihedral"], [220, 1, 1, "", "OrthogonalQuality"], [221, 1, 1, "", "Orthogonality"], [222, 1, 1, "", "Skewness"], [223, 1, 1, "", "SurfDihedralAngles"], [224, 1, 1, "", "Volume"], [225, 1, 1, "", "dihedralAngles"], [226, 1, 1, "", "equiangular_skewness"], [227, 1, 1, "", "quad_skewness"], [228, 1, 1, "", "tet_vol_skewness"], [229, 1, 1, "", "tri_skewness"]], "mymesh.rays": [[230, 1, 1, "", "BoxTrianglesIntersection"], [231, 1, 1, "", "PlaneBoxIntersection"], [232, 1, 1, "", "PlaneSurfIntersection"], [233, 1, 1, "", "PlaneTriangleIntersection"], [234, 1, 1, "", "PlaneTrianglesIntersection"], [235, 1, 1, "", "PointInBox"], [236, 1, 1, "", "PointInSurf"], [237, 1, 1, "", "PointInTri"], [238, 1, 1, "", "PointsInSurf"], [239, 1, 1, "", "PointsInTris"], [240, 1, 1, "", "PointsInVoxel"], [241, 1, 1, "", "RayBoxIntersection"], [242, 1, 1, "", "RayBoxesIntersection"], [243, 1, 1, "", "RayOctreeIntersection"], [244, 1, 1, "", "RaySegmentsIntersection"], [245, 1, 1, "", "RaySurfIntersection"], [246, 1, 1, "", "RayTriangleIntersection"], [247, 1, 1, "", "RayTrianglesIntersection"], [248, 1, 1, "", "RaysSurfIntersection"], [249, 1, 1, "", "RaysTrianglesIntersection"], [250, 1, 1, "", "SegmentSegmentIntersection"], [251, 1, 1, "", "SegmentsSegmentsIntersection"], [252, 1, 1, "", "SurfSelfIntersection"], [253, 1, 1, "", "SurfSurfIntersection"], [254, 1, 1, "", "TriangleBoxIntersection"], [255, 1, 1, "", "TriangleTriangleIntersection"], [256, 1, 1, "", "TriangleTriangleIntersectionPt"], [257, 1, 1, "", "TrianglesTrianglesIntersection"], [258, 1, 1, "", "TrianglesTrianglesIntersectionPts"]], "mymesh.utils": [[259, 1, 1, "", "AABB"], [260, 1, 1, "", "BaryTet"], [261, 1, 1, "", "BaryTri"], [262, 1, 1, "", "BaryTris"], [263, 1, 1, "", "CalcFaceNormal"], [264, 1, 1, "", "Centroids"], [265, 1, 1, "", "CleanupDegenerateElements"], [266, 1, 1, "", "DeleteDegenerateElements"], [267, 1, 1, "", "DeleteDuplicateNodes"], [268, 1, 1, "", "DetectFeatures"], [269, 1, 1, "", "DilateVoxel"], [270, 1, 1, "", "ErodeVoxel"], [271, 1, 1, "", "ExtractRagged"], [272, 1, 1, "", "Face2NodeNormal"], [273, 1, 1, "", "MVBB"], [274, 1, 1, "", "MergeMesh"], [275, 1, 1, "", "MirrorMesh"], [276, 1, 1, "", "PadRagged"], [277, 1, 1, "", "Project2Surface"], [278, 1, 1, "", "RelabelNodes"], [279, 1, 1, "", "SortRaggedByLength"], [280, 1, 1, "", "SplitRaggedByLength"], [281, 1, 1, "", "SurfMapping"], [282, 1, 1, "", "TetMeshVol"], [283, 1, 1, "", "TriSurfVol"], [284, 1, 1, "", "ValueMapping"], [285, 1, 1, "", "getConnectedElements"], [286, 1, 1, "", "getConnectedNodes"], [287, 1, 1, "", "getElemConnectivity"], [288, 1, 1, "", "getElemNeighbors"], [289, 1, 1, "", "getNodeNeighborhood"], [290, 1, 1, "", "getNodeNeighborhoodByRadius"], [291, 1, 1, "", "getNodeNeighbors"], [292, 1, 1, "", "identify_type"], [293, 1, 1, "", "makePyramidLayer"]], "mymesh.visualize": [[294, 1, 1, "", "FaceColor"], [295, 1, 1, "", "GetTheme"], [296, 1, 1, "", "ParseColor"], [297, 1, 1, "", "View"], [298, 1, 1, "", "set_vispy_backend"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "method", "Python method"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:property", "5": "py:method"}, "terms": {"": [5, 16, 53, 84, 108, 124, 136, 138, 151, 152, 157, 158, 161, 164, 165, 166, 170, 174, 189, 190, 197, 241, 242, 256, 258, 268, 299, 302, 306, 309, 310, 314, 315, 316, 318], "0": [2, 4, 5, 6, 7, 9, 11, 18, 24, 64, 78, 84, 85, 86, 87, 88, 89, 96, 97, 101, 116, 119, 128, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 157, 161, 164, 166, 167, 168, 169, 173, 177, 178, 179, 180, 181, 183, 184, 191, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 215, 216, 220, 221, 222, 226, 227, 228, 229, 234, 236, 238, 246, 247, 249, 250, 251, 255, 256, 257, 258, 266, 267, 268, 279, 280, 297, 299, 300, 301, 302, 303, 304, 307, 308, 310, 311, 313, 314, 315, 319, 320], "00": [4, 9, 11, 311], "000": 11, "001": 266, "002": 308, "0020": 134, "005": 308, "00529": 308, "00843": 308, "01": 191, "0181": 308, "01880": 308, "019": 308, "0190": 134, "02": 268, "024": 308, "0262": 308, "03": 268, "03581": 308, "0363": 308, "04": [4, 6, 9, 311], "04828841": 236, "05": [5, 9, 139, 145, 146, 147, 148, 149, 151, 157, 161, 164, 166, 201, 206, 207, 301, 304, 308, 311], "06": [246, 308], "08": [82, 138, 236, 238], "085": 9, "08831v2": 131, "1": [2, 4, 5, 6, 7, 24, 25, 26, 61, 64, 78, 84, 86, 88, 89, 96, 97, 101, 116, 119, 124, 128, 134, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 157, 161, 164, 166, 169, 173, 177, 178, 179, 181, 183, 184, 189, 191, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 214, 215, 216, 220, 221, 222, 226, 227, 228, 229, 241, 242, 267, 268, 270, 271, 274, 276, 279, 280, 281, 284, 288, 293, 296, 297, 299, 300, 301, 302, 303, 304, 307, 308, 310, 313, 314, 315, 316, 319, 320], "10": [2, 26, 59, 63, 82, 89, 111, 114, 134, 182, 186, 187, 194, 202, 203, 230, 241, 242, 246, 247, 249, 254, 255, 256, 257, 258, 279, 280, 292, 308, 313, 319], "100": [185, 205], "1002": 308, "1007": [26, 308], "1016": [134, 308], "10487472": [255, 256, 257, 258, 308], "10487487": 308, "1056": 308, "1080": [255, 256, 257, 258, 308], "10867651": [255, 256, 257, 258, 308], "1093": 308, "1097": 308, "11": [9, 313], "1111": 308, "1145": [82, 230, 241, 242, 246, 247, 249, 254, 308], "1148": 308, "115": 308, "1198555": [230, 241, 242, 246, 247, 249, 254, 308], "1198746": [246, 247, 249, 308], "1198747": [230, 254, 308], "1198748": [241, 242, 308], "12": [83, 89, 237, 239, 266, 267, 301, 308, 313], "123811": 308, "126": 308, "13": 313, "13th": 308, "14": [7, 65, 232, 234, 244, 245, 247, 248, 249, 252, 253, 255, 256, 257, 258, 267, 313], "1445": 7, "1467": 308, "14th": 308, "15": [310, 311, 313], "150": 308, "15904": [82, 308], "15922": [82, 308], "16": 313, "160": 308, "161": 308, "162": 308, "163": 308, "1641": 308, "1652": 308, "166": 308, "167": 308, "169": 308, "170": 308, "172": 308, "179": 266, "18": [26, 134, 190, 308], "180": 266, "1805": 131, "19": 308, "1908": 308, "195": 308, "1973": 134, "1981": 308, "1986": 308, "1987": 308, "1991": 308, "1992": [122, 128, 129, 308], "1994": 308, "1995": 308, "1996": 308, "1997": [255, 256, 257, 258, 308], "1998": 308, "1d": [145, 147, 148, 309], "1e": [59, 65, 82, 83, 89, 138, 146, 182, 183, 185, 186, 232, 234, 236, 237, 238, 239, 244, 245, 246, 247, 248, 249, 252, 253, 255, 256, 257, 258, 266, 267], "1to14": 119, "1to2": 101, "1to20": 101, "1to24": [96, 101], "1to2c": 101, "1to3": 119, "1to36": 119, "1to3c": 119, "1to4": 101, "1to5": 96, "1to6": 96, "2": [2, 5, 7, 37, 84, 86, 89, 101, 103, 116, 119, 128, 134, 135, 138, 143, 145, 147, 167, 168, 170, 171, 180, 188, 190, 191, 202, 203, 204, 205, 210, 211, 212, 230, 242, 254, 255, 256, 257, 258, 267, 268, 274, 279, 280, 281, 284, 292, 293, 300, 301, 302, 303, 304, 308, 313, 314, 315, 317, 319], "20": [183, 202, 203, 204, 211, 212, 301, 308], "2000": [184, 308], "20000330": 308, "2001": [283, 308], "2002": [26, 308], "2003": 308, "2004": [121, 126, 127, 308], "2005": [120, 124, 230, 241, 242, 246, 247, 249, 254, 308], "2008": 308, "201": 308, "2010": 308, "2015": 308, "2016": 308, "2018": 308, "2020": 308, "2024": [308, 310], "203": 308, "21": [134, 308], "22": 308, "220": 308, "222": 308, "23": 308, "24": 308, "25": [6, 7, 173, 187, 189, 204, 212, 255, 256, 257, 258, 268, 301, 308], "256": 313, "2629697": 308, "286": 308, "291": 308, "2d": [20, 88, 104, 106, 116, 130, 134, 144, 150, 205, 209, 210, 242, 249, 276, 283, 299, 302, 303, 308], "2exi": 314, "2fxy": 314, "2x_ii": 314, "2x_iy_i": 314, "2y": 314, "2y_0": 314, "2y_1": 314, "2y_i": 314, "2y_n": 314, "3": [5, 9, 63, 89, 90, 101, 104, 115, 119, 128, 134, 135, 138, 144, 173, 183, 188, 190, 230, 233, 234, 235, 236, 238, 240, 243, 245, 247, 248, 249, 252, 257, 258, 265, 266, 267, 279, 280, 292, 300, 301, 302, 303, 304, 308, 313, 314, 315, 317, 319], "30": [255, 256, 257, 258, 308], "31156525": 236, "3197517": 308, "32": [184, 308], "3201353": 308, "324": 308, "33": [84, 85, 86, 139, 145, 308], "3333333333333333": 181, "336156": 308, "338193": 308, "338200": 308, "3386569": 308, "3392385": 308, "349": 308, "35": 2, "36": 7, "368": 308, "37": 308, "37401": 308, "37422": 308, "376": 308, "39": 308, "3c647": 308, "3d": [18, 64, 86, 96, 97, 101, 106, 107, 116, 119, 124, 131, 143, 144, 145, 147, 169, 173, 196, 205, 206, 210, 230, 231, 235, 236, 238, 240, 241, 242, 243, 245, 246, 247, 248, 249, 252, 254, 283, 299, 302, 303, 308], "3dx": 314, "3e3": 308, "3gy": 314, "3x3": 197, "3x_i": 314, "3y_i": 314, "4": [2, 5, 7, 90, 101, 102, 103, 104, 111, 112, 113, 114, 119, 128, 144, 187, 188, 190, 265, 267, 279, 280, 291, 300, 301, 302, 303, 308, 311, 313], "407": 308, "412": 308, "43": 308, "45": 308, "46": 308, "5": [5, 6, 7, 63, 64, 84, 90, 97, 99, 100, 101, 104, 119, 128, 139, 142, 143, 145, 146, 147, 187, 189, 191, 198, 208, 211, 267, 279, 280, 292, 300, 302, 307, 313, 314, 316], "50": 212, "50040": 308, "55": [7, 241, 242, 308], "557": 308, "561": [5, 9, 311], "564": 308, "569": 2, "58": 308, "6": [63, 84, 90, 104, 117, 118, 119, 128, 145, 147, 148, 182, 184, 185, 186, 191, 246, 279, 280, 292, 300, 302, 308, 313, 316, 319], "60": [241, 242, 308], "63": 308, "632": 308, "647": [184, 308], "658": 308, "66": [26, 308], "660": [2, 4, 311], "668": [184, 308], "7": [7, 84, 89, 128, 279, 280, 302, 308, 313], "724": [6, 9, 311], "73": 134, "745": 311, "781606": 308, "781653": 308, "7823": 308, "7830": 308, "79": [26, 308], "8": [6, 63, 82, 90, 94, 95, 96, 104, 128, 236, 238, 279, 280, 292, 302, 308, 313, 318], "80": 5, "800": [7, 9, 311], "82": 266, "83": 308, "8659": 308, "8856": 308, "9": [5, 7, 149, 222, 279, 280, 300, 301, 304, 308, 313], "90020": 134, "90076": 308, "92": 308, "94924906": 236, "966131": 308, "966134": 308, "A": [11, 26, 63, 96, 101, 114, 119, 122, 128, 129, 134, 213, 230, 241, 242, 281, 292, 301, 303, 307, 308, 309, 310, 313, 314, 315, 316], "As": [310, 315, 316], "At": 192, "By": [6, 45, 72, 84, 85, 86, 87, 88, 89, 92, 124, 145, 146, 147, 182, 183, 185, 186, 204, 205, 206, 207, 208, 209, 210, 265, 297, 302, 314], "For": [2, 27, 28, 30, 31, 32, 33, 34, 35, 37, 43, 81, 86, 87, 88, 89, 96, 101, 104, 105, 119, 140, 143, 144, 145, 146, 147, 151, 157, 161, 164, 165, 166, 170, 171, 182, 183, 185, 186, 210, 213, 214, 215, 216, 220, 221, 222, 224, 236, 238, 246, 247, 249, 265, 269, 284, 285, 286, 288, 297, 301, 303, 304, 307, 313, 314, 316, 318, 319, 320], "If": [1, 20, 24, 25, 26, 39, 41, 45, 48, 53, 62, 64, 68, 72, 73, 75, 85, 86, 87, 88, 89, 91, 92, 93, 97, 104, 105, 107, 108, 124, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 177, 178, 179, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 196, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 224, 228, 238, 246, 252, 253, 255, 256, 257, 258, 274, 281, 284, 285, 286, 288, 293, 297, 298, 301, 315, 319], "In": [63, 126, 127, 246, 247, 249, 271, 276, 279, 280, 284, 292, 297, 300, 301, 304, 309, 310, 314, 315], "It": [26, 104, 185, 304, 310, 314, 315, 316, 318], "No": [85, 86, 87, 88, 89], "Not": [96, 101, 119, 288], "On": [134, 308], "One": [307, 313], "Or": 299, "Such": 6, "That": 234, "The": [2, 5, 18, 20, 26, 60, 83, 84, 86, 88, 91, 93, 96, 104, 105, 107, 108, 110, 119, 133, 142, 145, 146, 147, 148, 156, 170, 171, 173, 184, 187, 190, 191, 194, 198, 204, 211, 212, 265, 267, 269, 270, 272, 275, 280, 281, 285, 286, 293, 298, 300, 306, 307, 309, 310, 312, 313, 314, 315, 316, 318, 319], "There": [44, 299, 307, 310, 316], "These": [7, 108, 249, 279, 280, 299, 301, 309, 313, 315], "To": [2, 6, 33, 136, 293, 305, 307, 310, 315, 316], "Will": [90, 104, 230, 236, 238, 254, 277, 281, 284], "With": [249, 279], "_": [2, 314], "_ax": 68, "_description_": [191, 249, 297], "_i": [314, 320], "_j": 320, "_mesh": [66, 67], "_type_": [191, 249, 297], "a1": 301, "a2": 301, "a3": 301, "a_i": [314, 315], "a_x": 315, "ab": [63, 225, 292, 308], "abil": [139, 141, 142, 145, 147, 148, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212], "abl": [153, 159, 171, 175], "about": [108, 173, 212, 275], "abov": [18, 148, 177, 178, 179, 190, 222, 313, 316], "absenc": 302, "academ": [1, 308], "acceler": [236, 238, 245, 248, 249], "accept": 304, "access": [75, 279, 307, 310], "accomplish": 314, "accord": [278, 309], "accordingli": 274, "accur": [2, 6, 316], "achiev": [183, 301, 307, 320], "acm": [82, 230, 241, 242, 246, 247, 249, 254, 308], "across": [1, 315], "activ": [20, 316], "actual": [170, 171], "ad": [96, 101, 107, 119, 184, 187, 190, 315, 316], "adapt": [190, 191, 308], "add": [104, 142, 183, 184, 315], "addit": [2, 89, 91, 93, 145, 147, 148, 279, 288, 309, 313, 314, 316], "addition": [73, 305, 306, 307], "adjac": [31, 43, 85, 86, 87, 88, 89, 182, 185, 186, 223, 255, 256, 257, 258, 268, 279, 291, 313, 315], "admiss": 319, "adopt": [304, 314], "adrian": [308, 315], "advanc": 301, "advantag": [307, 314], "after": [182, 185, 186, 187, 189, 190, 319], "ag073671": 310, "against": 318, "ahead": 315, "ai": 221, "aid": 308, "aim": [301, 310, 312], "akenin": [230, 254, 308], "al": [190, 319], "alec": 308, "alexand": 308, "algorithm": [16, 85, 86, 87, 88, 89, 130, 131, 134, 138, 192, 231, 241, 242, 246, 247, 249, 299, 308, 310, 312, 313, 315, 319], "alia": [58, 69], "alias": [52, 307], "align": [96, 101, 107, 119, 204, 231, 241, 242, 259, 273, 314, 319], "all": [6, 53, 62, 63, 64, 72, 81, 88, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 110, 112, 113, 115, 117, 118, 119, 124, 145, 147, 148, 182, 183, 185, 186, 187, 195, 200, 214, 216, 220, 221, 280, 281, 284, 292, 299, 300, 303, 305, 307, 310, 311, 314, 315, 316, 319], "all_nod": 53, "allevi": 301, "allow": [1, 140, 145, 185, 297, 302, 310, 314, 315, 318, 320], "alohner08": [272, 308], "alon": 314, "along": [24, 26, 83, 85, 86, 87, 88, 89, 143, 177, 178, 179, 210, 211, 277, 301, 307, 313, 319], "alpha": [2, 167, 168, 260, 261, 262, 277, 281, 296, 297], "alpha_0": 315, "alreadi": 48, "also": [5, 6, 15, 104, 208, 210, 255, 256, 257, 258, 278, 303, 310, 313, 315, 316, 320], "alter": [140, 146], "altern": [63, 110, 292, 298, 299, 315], "alwai": [279, 312], "am": 104, "ambigu": [63, 292, 302, 313], "amd": 308, "american": 308, "ami": 308, "amoller05": [230, 254, 308], "among": 315, "amount": [165, 205, 279], "an": [18, 20, 25, 53, 64, 73, 74, 75, 84, 85, 87, 89, 97, 109, 110, 116, 120, 135, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 152, 153, 154, 155, 156, 158, 159, 160, 163, 170, 171, 174, 175, 176, 183, 184, 187, 189, 190, 191, 192, 193, 194, 198, 199, 204, 211, 214, 230, 231, 233, 234, 236, 238, 241, 242, 243, 245, 246, 248, 254, 255, 256, 257, 258, 265, 266, 268, 272, 277, 281, 284, 288, 289, 290, 297, 298, 300, 302, 305, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320], "analog": 309, "analogi": [183, 184, 308], "analysi": [4, 299, 300, 309, 310, 311], "analyt": 2, "analyticalcurvatur": 2, "analyz": [3, 10, 310], "andr": 310, "andrea": 308, "angl": [45, 187, 189, 210, 217, 219, 221, 222, 223, 225, 266, 268, 272], "anglestep": 210, "angletol": 266, "ani": [1, 7, 26, 53, 63, 70, 73, 109, 110, 140, 146, 148, 155, 156, 187, 224, 233, 234, 288, 292, 301, 304, 306, 307, 310, 315, 318], "anisotrop": 206, "annual": 308, "anoth": [182, 185, 186, 192, 267, 281, 284, 300, 301, 313], "anyth": 314, "apart": [183, 267], "api": [310, 312], "appear": [63, 274, 292], "appli": [86, 88, 183, 184, 308, 320], "applic": [75, 301, 308, 310], "approach": [6, 63, 191, 277, 281, 284, 292, 301, 313, 315], "appropri": [73, 75, 301, 310], "approxim": [6, 84, 126, 139, 141, 145, 146, 147, 151, 157, 161, 164, 166, 201, 208, 308, 313], "ar": [2, 5, 6, 16, 18, 19, 33, 44, 52, 62, 63, 72, 73, 85, 86, 87, 88, 89, 90, 95, 100, 104, 107, 108, 110, 111, 113, 118, 121, 124, 126, 127, 138, 140, 142, 143, 144, 145, 146, 147, 148, 152, 153, 154, 158, 159, 160, 174, 175, 176, 182, 183, 185, 186, 187, 190, 191, 198, 208, 233, 234, 238, 240, 245, 246, 247, 248, 252, 263, 265, 267, 272, 279, 280, 281, 288, 291, 292, 297, 299, 300, 301, 302, 303, 304, 305, 307, 309, 310, 312, 313, 314, 315, 316, 318, 320], "arang": 205, "arbitrarili": [63, 292], "arcco": [2, 225], "arctan": 314, "area": 222, "aren": [63, 92, 108, 183, 292, 316], "arg": [145, 147, 148, 191], "argument": [5, 68, 72, 74, 120, 145, 147, 148, 155, 156, 189], "ariella": 310, "aris": [2, 309], "around": [269, 289, 290, 314], "arrai": [2, 20, 22, 51, 64, 68, 84, 85, 86, 87, 88, 91, 93, 97, 101, 116, 119, 121, 124, 126, 127, 130, 131, 135, 136, 139, 140, 141, 142, 143, 144, 145, 147, 148, 183, 187, 190, 191, 192, 198, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 236, 241, 242, 246, 247, 249, 252, 254, 255, 256, 257, 258, 265, 267, 271, 276, 277, 297, 301, 303, 304, 316], "array_lik": [20, 24, 25, 53, 68, 84, 85, 87, 89, 101, 103, 108, 110, 111, 114, 116, 119, 124, 130, 131, 135, 136, 138, 139, 141, 142, 144, 145, 146, 147, 148, 150, 162, 163, 169, 173, 182, 183, 185, 186, 187, 189, 190, 191, 194, 196, 197, 198, 199, 202, 203, 205, 208, 210, 211, 212, 213, 217, 219, 223, 224, 225, 228, 230, 231, 233, 234, 235, 236, 238, 240, 241, 242, 243, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 265, 273, 278, 280, 287, 291, 297], "articl": 308, "artifici": 308, "arxiv": [131, 308], "ascii": 75, "aspect": [62, 214], "aspectratio": [62, 78], "assert": 73, "assess": [191, 313, 318], "assign": [183, 184, 293], "associ": [20, 116, 274, 284, 300, 318], "assum": [85, 86, 87, 88, 89, 90, 104, 111, 143, 152, 153, 154, 158, 159, 160, 174, 175, 176, 185, 263, 269, 270, 291, 293, 302, 303, 304], "assumpt": 314, "attempt": [63, 144, 187, 292, 298], "attribut": [20, 307], "aubri": 308, "aug": 308, "auger": 310, "author": 312, "auto": [90, 104, 109, 190, 224, 291], "automat": [20, 213], "avail": [6, 62, 182, 183, 185, 186, 297, 298, 304, 312], "averag": [97, 185, 190, 272, 314, 315], "avoid": [63, 184, 292, 299, 307], "awai": 315, "ax": [2, 68, 86, 116, 143, 204, 211, 314, 319], "ax1": [2, 301], "ax2": [2, 301], "ax3": [2, 301], "ax4": 2, "axi": [6, 7, 68, 143, 173, 177, 178, 179, 202, 203, 204, 205, 210, 211, 212, 231, 241, 242, 252, 259, 319], "axis_step": 204, "b": [167, 168, 230, 233, 234, 246, 247, 249, 254, 255, 256, 257, 258, 301, 308, 314, 315, 316], "b978": 308, "b_i": 314, "b_x": 315, "b_y": 315, "backend": 298, "background": [124, 145, 147, 268, 301], "bajaj": 308, "balanc": 307, "bar": [2, 320], "bari": [260, 261, 262], "barrier": 285, "barrierelem": 285, "barriernod": 286, "barru": [241, 242, 308], "baryarea": [237, 239], "barycentr": [260, 261, 262, 277, 281, 284, 315, 319], "barytri": 315, "baryweight": 181, "base": [1, 2, 25, 26, 38, 64, 84, 90, 97, 120, 121, 124, 126, 127, 135, 140, 146, 191, 192, 272, 283, 297, 301, 304, 306, 307, 308, 309, 313, 317, 318, 319], "basic": [16, 315], "bd02": [26, 308], "becaus": 6, "becom": [187, 320], "been": [2, 7, 39, 41, 107, 108, 187, 270, 313, 315], "befor": 187, "begin": [314, 315, 319], "behavior": 110, "behind": [312, 315], "being": [19, 53, 187, 214, 215, 216, 220, 221, 222, 226, 227, 228, 229, 246, 247, 249, 277, 300, 301, 304, 310, 314, 315, 318], "below": [148, 187, 300, 313], "belyaev": [146, 308], "ben": 308, "bend": 314, "benjamin": 308, "bent": 314, "best": [2, 78, 94, 95, 98, 99, 100, 102, 112, 113, 115, 117, 118, 215, 216, 220, 221, 222, 226, 227, 228, 229], "beta": [260, 261, 262, 277, 281], "beta_0": 315, "better": [126, 127, 284], "between": [1, 6, 83, 85, 86, 87, 88, 89, 91, 92, 93, 96, 101, 107, 119, 184, 187, 190, 191, 192, 210, 217, 219, 221, 223, 225, 230, 231, 233, 234, 241, 242, 243, 245, 246, 247, 248, 249, 253, 254, 258, 268, 300, 301, 302, 312, 318, 319, 320], "bf01313411": 308, "bfb0014497": 308, "bgcolor": [2, 5, 6, 7, 84, 139, 145, 147, 148, 149, 150, 151, 157, 161, 164, 166, 169, 173, 201, 202, 204, 205, 206, 207, 208, 211, 212, 268, 297, 301, 307], "bicub": [86, 88], "bidirect": [246, 247, 248, 249, 319], "big": [314, 315], "biggest": 314, "bilinear": [85, 86, 87, 88], "binari": [75, 313], "bioinformat": 308, "biomechan": [1, 308, 310], "bit": 5, "blackbox": 312, "blake": 310, "blo00": [183, 308, 320], "blo94": [89, 308, 313], "block": 307, "blom": [184, 308, 320], "bloomenth": [308, 313], "blue": 300, "bmatrix": [314, 319], "board": 1, "bolun": 308, "bone": [308, 314], "bong": 308, "bool": [20, 26, 53, 62, 65, 68, 75, 85, 86, 87, 88, 89, 91, 92, 93, 104, 105, 107, 124, 140, 142, 145, 146, 147, 182, 183, 184, 185, 186, 187, 189, 190, 195, 197, 204, 206, 207, 209, 214, 215, 216, 217, 219, 220, 221, 222, 224, 225, 230, 231, 233, 234, 235, 236, 238, 240, 241, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 267, 273, 274, 279, 280, 281, 284, 297], "boolean": [152, 153, 154, 158, 159, 160, 174, 175, 176, 242, 301, 310], "boston": 310, "both": [2, 19, 53, 63, 146, 170, 171, 184, 193, 246, 247, 248, 249, 292, 297, 309, 310, 314, 315, 316, 318, 319, 320], "bottasso": [26, 308], "boubekeur": 308, "bound": [5, 6, 24, 53, 68, 84, 145, 147, 148, 149, 155, 156, 191, 201, 204, 206, 207, 209, 230, 231, 241, 242, 254, 259, 273, 297, 315, 318, 319], "boundari": [21, 22, 25, 26, 85, 86, 87, 88, 124, 148, 190, 197, 240, 308, 309, 313, 315], "bow81": [130, 308, 315], "bowyer": [130, 131, 138, 308], "bowyerwatson": 138, "bowyerwatson2d": 315, "bowyerwatson3d": 315, "box": [24, 84, 206, 207, 208, 230, 231, 235, 241, 242, 254, 259, 273, 301, 304, 308, 318], "boxcent": [230, 254], "branch": 318, "break": 52, "bridg": 312, "bright": [124, 314], "brightobject": 124, "brute": [277, 281, 284], "bu": [7, 308], "bucati": 7, "build": [124, 310, 315], "built": [6, 304, 305], "bx": 314, "bx_0y_0": 314, "bx_1y_1": 314, "bx_ny_n": 314, "bxy": 314, "c": [26, 189, 230, 233, 234, 246, 247, 249, 254, 255, 256, 257, 258, 283, 308, 314, 315, 316], "c_i": 314, "c_x": 315, "c_y": 315, "cach": [72, 307], "cag": 308, "cagd": 308, "calcfacenorm": [121, 126, 127, 223], "calcul": [32, 37, 45, 108, 120, 121, 122, 123, 124, 125, 126, 127, 129, 146, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 238, 259, 263, 264, 272, 273, 282, 283, 301, 307, 315, 319], "call": [288, 307], "callabl": [153, 159, 171, 175, 190], "came": 90, "can": [2, 5, 6, 7, 20, 26, 44, 62, 68, 81, 86, 87, 88, 89, 90, 108, 110, 121, 124, 126, 127, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 155, 156, 187, 189, 190, 196, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 245, 248, 249, 267, 277, 279, 281, 284, 285, 286, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310, 313, 314, 315, 316, 318, 319, 320], "candid": 316, "cannot": 285, "cap": [128, 204, 314], "capabl": [1, 10, 16, 84, 299], "captur": 314, "care": [313, 318], "carefulli": 299, "case": [63, 96, 107, 119, 143, 255, 256, 257, 258, 284, 292, 300, 305, 309, 313, 314, 315], "cast": [79, 236, 238, 271], "categor": 128, "categori": 128, "ccw": 108, "cdot": 319, "cell": [67, 184, 307], "cellcent": 184, "center": [7, 24, 96, 101, 119, 150, 169, 173, 182, 184, 185, 186, 202, 203, 205, 210, 211, 212, 230, 254, 304, 313, 314, 315], "centric": [260, 261, 262], "centrod": 184, "centroid": [84, 108, 110, 148, 162, 192, 221, 307, 318], "certain": 144, "cgal": 310, "chalmer": 308, "chanc": [63, 292], "chandrajit": 308, "chang": [45, 52, 60, 191, 265, 313, 315, 316, 320], "channel": 303, "charact": 189, "characterist": [33, 37], "charl": 308, "che95": [85, 86, 308, 313], "check": [73, 246, 247, 248, 249, 265, 315, 316, 318, 319], "chen": 283, "chernyaev": [308, 313], "chi": [33, 37], "child": [96, 101, 107, 119, 318], "children": 318, "choic": [183, 236, 238, 315, 318], "choos": [246, 247, 249, 313], "chosen": [84, 297, 298, 301, 307], "ci": 221, "circl": [203, 212], "circular": [173, 204, 211, 212], "circumfer": [203, 204], "circumferenti": [202, 203, 211, 212], "citat": 312, "cite": 315, "class": [20, 76, 144, 299, 300, 306, 314], "classic": 301, "classif": 314, "classifi": [63, 89, 268, 292], "cleaner": 301, "cleanup": [53, 65, 86, 87, 88, 89, 187, 274], "cleanup_tol": 89, "cleanupdegenerateel": 7, "clear": [45, 72, 302, 310], "clim": [68, 297], "cline": [308, 313], "clockwis": [95, 100, 108, 113, 118, 133, 263, 315], "clone": 305, "close": [2, 89, 109, 110, 124, 204, 234, 236, 238, 246, 247, 249, 255, 256, 257, 258, 301, 309], "cmu": 308, "cnm": 308, "co": [151, 157, 161, 164, 166, 308], "coarsen": [64, 97, 139, 142, 143, 187], "code": [2, 5, 6, 7, 297, 307, 310], "collaps": 187, "collect": [299, 300, 309], "color": [2, 5, 7, 268, 294, 296, 297, 301, 310], "color_convert": [294, 297], "colorscal": 68, "colorspaci": [297, 305], "column": 135, "column_stack": 205, "com": 308, "combin": [6, 145, 249, 301, 304, 308, 313], "come": [305, 307], "comjnl": 308, "common": [306, 314, 316], "commonli": [6, 307, 309, 314], "commun": [308, 310], "compar": 2, "compat": [6, 145], "compil": 310, "complement": 314, "complet": 272, "complex": [7, 301, 304, 312, 316, 318], "compo": 309, "compon": [38, 314, 319], "comprehens": 310, "compris": 300, "comput": [1, 26, 44, 45, 89, 134, 142, 185, 230, 254, 285, 286, 301, 308, 309, 315, 319], "computation": 301, "concav": 314, "concern": 301, "conclud": 319, "concurr": 315, "condens": 308, "condit": [53, 304], "confer": 308, "configur": 316, "confirm": 73, "conflict": 299, "connect": [5, 20, 21, 27, 28, 30, 31, 34, 35, 43, 48, 49, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 126, 127, 130, 131, 133, 135, 136, 140, 146, 155, 156, 184, 185, 192, 193, 198, 199, 205, 213, 214, 215, 216, 217, 219, 220, 221, 222, 224, 226, 227, 228, 229, 236, 238, 240, 245, 248, 252, 253, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 275, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 302, 307, 309, 313, 314, 315, 316, 320], "connet": 89, "consid": [18, 25, 89, 124, 139, 141, 142, 145, 147, 148, 234, 246, 247, 249, 288, 304, 309, 314], "consider": [184, 308], "consist": [16, 101, 140, 146, 269, 270, 277, 293, 300, 309, 313, 314, 315, 319], "constant": [86, 88], "constitut": [6, 266, 288], "constrain": [1, 136, 305], "constraint": [136, 138], "construct": [7, 110, 202, 203, 245, 248, 249, 300, 308, 313, 314, 315, 318], "contain": [2, 20, 26, 63, 64, 68, 82, 90, 91, 93, 104, 139, 141, 142, 144, 145, 147, 148, 184, 192, 193, 194, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 224, 265, 267, 269, 270, 277, 281, 282, 283, 284, 285, 286, 291, 292, 293, 300, 303, 309, 310, 315, 316, 318], "continu": [1, 6, 96, 101, 107, 119, 152, 153, 154, 158, 159, 160, 174, 175, 176, 318], "contour": [124, 139, 145, 301, 308], "contract": [187, 189, 190], "contractit": 189, "contribut": [121, 126, 127, 310], "control": [6, 297, 320], "conveni": [307, 314], "convent": [18, 304, 309], "converg": [182, 183, 185, 186, 188], "convers": [64, 245, 248, 297, 310], "convert": [64, 66, 67, 81, 89, 124, 146, 155, 156, 192, 193, 205, 210, 224, 265, 267, 271, 291, 297, 300, 306, 307, 309], "convex": [133, 134, 309, 314, 316], "convolut": 140, "coolwarm": [2, 268], "coordin": [20, 24, 38, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 126, 127, 134, 135, 136, 138, 145, 147, 148, 149, 150, 151, 155, 156, 157, 161, 164, 166, 169, 173, 177, 178, 179, 184, 190, 191, 192, 193, 194, 196, 197, 198, 199, 203, 205, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 240, 241, 242, 243, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 307, 309, 314, 315, 316, 319, 320], "copi": [53, 140, 146, 185, 275], "coplanar": [203, 315], "core": 307, "corner": [88, 182, 183, 185, 186, 187, 259, 268, 273, 313, 314], "correct": [124, 308, 313], "correspond": [62, 72, 85, 86, 87, 92, 106, 116, 139, 142, 143, 170, 171, 177, 178, 179, 185, 189, 191, 198, 277, 281, 284, 300, 303, 314, 318, 319], "cosalpha": 2, "cosin": 221, "cost": [89, 142], "could": [1, 110, 148, 203, 205, 210, 309, 313, 316, 319], "count": [33, 255, 256, 257, 258], "counter": [95, 100, 108, 113, 118, 263, 315], "counterclockwis": [133, 134], "cours": [205, 230, 241, 242, 246, 247, 249, 254, 308, 316], "cover": 293, "creat": [1, 7, 20, 53, 60, 62, 63, 89, 110, 140, 146, 185, 187, 245, 248, 269, 275, 277, 281, 284, 292, 301, 307, 313, 315, 318], "creation": 318, "criteria": [185, 198, 318], "crop": [64, 97], "cross": [150, 211, 212, 315, 319], "csg": 304, "ct": [310, 314], "cube": [2, 84, 85, 86, 139, 145, 301, 308, 318], "cubic": [86, 88, 97, 121, 139, 145, 206, 269, 293, 308, 309], "cubicfit": [2, 126, 127, 314], "cuda": 1, "cup": [128, 314], "cupi": 1, "current": [16, 25, 26, 65, 182, 185, 186, 192, 266, 269, 284, 288, 310, 318], "curv": [120, 124, 308], "curvatur": [3, 4, 6, 10, 308, 310, 311], "curved": 61, "custom": 307, "cut": [24, 307], "cv2": 305, "cw": 108, "cy": 314, "cyl": 204, "cylind": [211, 212, 314], "cylindr": [150, 204, 314], "d": [1, 6, 26, 151, 190, 230, 233, 234, 246, 247, 249, 254, 255, 256, 257, 258, 301, 308, 310, 314, 316, 319], "daniel": 308, "dark": 124, "darker": 124, "data": [20, 53, 64, 67, 76, 86, 88, 97, 116, 124, 142, 143, 144, 193, 198, 236, 238, 243, 271, 274, 281, 297, 300, 301, 303, 308, 310, 315, 318], "date": 310, "david": [308, 315], "deal": 307, "dec": 308, "decid": [187, 297], "decompos": [96, 101, 107, 119, 313], "decomposit": [96, 101, 119], "decreas": 185, "def": [5, 304], "default": [18, 20, 24, 25, 26, 45, 53, 62, 64, 65, 68, 72, 75, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 97, 101, 104, 105, 107, 108, 110, 119, 124, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 177, 178, 179, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 224, 225, 230, 234, 236, 238, 240, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 286, 288, 291, 293, 297, 298, 302, 304], "defect": 301, "defin": [25, 29, 36, 77, 85, 86, 87, 88, 89, 111, 162, 163, 275, 281, 284, 300, 307, 309, 314, 315], "definit": 307, "deform": [183, 320], "defualt": 284, "deg": 62, "degener": [63, 86, 87, 88, 192, 265, 266, 292], "degre": [62, 187, 189, 266, 268], "delaunai": [1, 305, 308], "delaunau": 308, "delet": [265, 266, 274, 315], "deleteduplicatenod": [89, 265], "delta": 260, "delval": 271, "demand": 301, "demo": 310, "demo_curvatur": [2, 4, 311], "demo_heart": [5, 9, 311], "demo_mix": [6, 9, 311], "demo_pasta": [7, 9, 311], "demonstr": 7, "deni": 308, "denot": [85, 86, 87, 88, 89, 210, 297], "depend": [1, 6, 107, 170, 171, 265, 301, 310, 314], "depict": 316, "depth": [84, 191, 194, 198, 318], "describ": [18, 84, 145, 146, 147, 148, 190, 191, 314, 315], "descript": 310, "design": [6, 302, 308, 310], "destruct": [140, 146], "det": [315, 319], "detail": [44, 45, 91, 93, 291, 301, 304, 306, 310], "detect": [90, 104, 140, 146, 191, 230, 231, 233, 234, 241, 242, 246, 247, 249, 254], "detectfeatur": [182, 183, 185, 186, 187, 189], "determin": [20, 39, 41, 53, 62, 65, 86, 87, 88, 89, 96, 107, 110, 119, 124, 148, 185, 187, 191, 193, 213, 221, 225, 234, 236, 238, 240, 246, 247, 248, 249, 255, 256, 257, 258, 266, 267, 268, 272, 279, 287, 288, 291, 297, 313, 315, 318, 319], "detomi": [26, 308], "deuteranomali": 297, "develop": [16, 81, 310, 315], "deviat": [2, 124, 140, 206, 207, 209], "diagon": 313, "diamond": 6, "dicom": [64, 97, 144, 303, 305], "dict": [62, 145, 147, 148, 182, 183, 185, 186, 189, 315], "dictionari": [20, 62, 145, 147, 148, 316], "diff": 301, "diff_fun": 153, "diff_sym": [154, 160], "diff_val": 152, "differ": [8, 10, 20, 82, 84, 104, 109, 140, 146, 152, 153, 154, 160, 189, 233, 234, 265, 297, 300, 301, 304, 309, 310, 314], "differen": [187, 190], "differenti": [84, 146, 151, 152, 153, 154, 157, 158, 159, 160, 161, 164, 166, 174, 175, 176], "difff": 301, "difficult": [301, 310, 315], "dihedr": [62, 217, 219, 223, 225, 268], "dimens": [38, 135, 138, 303, 304], "dimension": [85, 87, 138, 303, 308, 309, 315, 318], "dimetr": 297, "direct": [2, 84, 108, 145, 147, 148, 170, 171, 177, 178, 179, 191, 204, 205, 206, 230, 231, 241, 242, 246, 247, 248, 249, 254, 301, 308, 310, 314, 319], "direction": [124, 314], "directli": [2, 89, 94, 95, 96, 98, 99, 100, 101, 102, 112, 113, 115, 117, 118, 119, 139, 141, 142, 145, 147, 148, 185, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 299, 301, 303, 307, 310, 314, 315], "directori": [64, 97, 143, 144, 303, 305], "dirichlet": 308, "disadvantag": 314, "discard": [64, 97], "discuss": [312, 314, 315], "displac": [183, 184], "displai": [68, 187, 189, 190, 297], "distanc": [145, 147, 162, 163, 165, 170, 171, 173, 190, 191, 205, 212, 234, 245, 248, 267, 277, 281, 284, 308, 315, 320], "distort": [140, 146], "distribut": [5, 320], "divid": [198, 214, 314, 318], "divis": 308, "dl": [82, 308], "do": [185, 187, 307, 310], "document": 310, "doesn": [26, 109, 185, 187, 315, 318], "doi": [26, 82, 134, 230, 241, 242, 246, 247, 249, 254, 255, 256, 257, 258, 308], "domain": 309, "dome": 128, "domin": 210, "don": [73, 245, 248, 315], "done": [5, 299, 301], "doorn": [122, 128, 129, 308], "doubl": 53, "down": 303, "download": [2, 5, 6, 7, 305], "dramat": 1, "drawn": 315, "driven": 310, "dtype": [144, 271], "dual": [84, 108, 192, 308], "dualconn": [108, 192], "dualcoord": [108, 192], "dualgrid_method": 84, "due": [139, 141, 142, 145, 147, 148, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 315], "duplic": [65, 86, 87, 88, 105, 267, 274], "dure": [140, 146, 182, 183, 185, 186], "dx": [308, 314], "dx_0": 314, "dx_1": 314, "dx_n": 314, "dxnew": 184, "dynam": 308, "e": [2, 33, 85, 87, 91, 92, 93, 96, 101, 104, 105, 107, 116, 119, 143, 144, 187, 190, 192, 204, 210, 222, 230, 233, 234, 235, 246, 247, 249, 254, 255, 256, 257, 258, 300, 301, 303, 305, 308, 309, 310, 314, 315, 316, 319], "e0": 104, "e1": 104, "e10": 104, "e2": 104, "e3": 104, "e4": 104, "e5": 104, "e6": 104, "e7": 104, "e8": 104, "e9": 104, "e_": 319, "e_1": 319, "e_2": 319, "each": [20, 27, 28, 29, 30, 31, 34, 35, 36, 38, 43, 84, 85, 87, 88, 89, 90, 92, 97, 103, 104, 105, 107, 108, 114, 120, 121, 124, 126, 127, 145, 147, 148, 155, 156, 162, 163, 182, 184, 185, 186, 189, 190, 191, 194, 198, 206, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 234, 240, 242, 245, 247, 248, 249, 252, 257, 258, 267, 269, 270, 272, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 300, 302, 303, 307, 309, 313, 314, 315, 316, 318, 319], "earliest": 313, "easi": [307, 310], "easili": [6, 307, 316], "ebcb8b": 7, "ecosystem": 307, "ederror": [84, 191, 318], "edg": [20, 27, 28, 33, 39, 85, 86, 87, 88, 89, 90, 91, 94, 96, 98, 99, 101, 102, 104, 107, 109, 112, 114, 115, 117, 119, 124, 136, 138, 140, 146, 182, 183, 185, 186, 187, 189, 190, 202, 203, 214, 255, 256, 257, 258, 265, 268, 285, 288, 297, 300, 301, 302, 309, 313, 315, 319], "edgeconn": [90, 104, 300, 316], "edgeedg": [255, 256, 257, 258], "edgeelem": 104, "edgeelemconn": [300, 316], "edgemod": [86, 88], "edges2uniqu": 300, "edgeset": [20, 54], "edu": [7, 308], "educ": 312, "effici": [19, 63, 151, 157, 161, 164, 166, 241, 242, 246, 247, 249, 283, 292, 301, 305, 307, 308, 313, 315, 316, 318, 319], "effort": 301, "egregium": 314, "eigenvalu": 314, "eight": 318, "either": [25, 53, 63, 84, 85, 86, 87, 88, 89, 116, 124, 133, 140, 143, 145, 146, 153, 159, 171, 175, 187, 190, 201, 204, 205, 206, 207, 209, 210, 211, 212, 222, 265, 267, 292, 297, 300, 309, 310, 313], "elbow": 7, "elemconn": [108, 184, 272, 287, 288, 300], "elemdata": [20, 25, 53, 62, 64, 142, 187, 189, 190, 297], "element": [5, 6, 7, 20, 23, 24, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 40, 49, 53, 62, 63, 64, 67, 68, 73, 78, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 113, 115, 116, 117, 118, 119, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 155, 183, 184, 185, 187, 189, 190, 191, 192, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 236, 238, 241, 245, 248, 252, 253, 254, 263, 264, 265, 266, 267, 268, 269, 270, 272, 275, 277, 278, 281, 284, 285, 287, 288, 291, 292, 293, 297, 300, 301, 303, 307, 309, 310, 313, 314, 315, 318], "elemet": 118, "elemid": [71, 107, 277], "elemneighbor": [223, 285, 288, 300], "elemnorm": [223, 236, 238, 263, 272], "elemregion": 285, "elemset": [20, 55], "elemtyp": [89, 90, 104, 109, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 224, 268, 291, 301], "elia": 308, "elimin": [5, 318], "elis": [308, 310], "ellipsoid": [211, 212], "ellipt": [211, 314], "elsewher": 304, "embed": 314, "emploi": 312, "empti": [26, 63, 73, 193, 195, 292, 318], "enabl": [1, 151, 157, 161, 164, 166, 318], "encod": 318, "encount": 2, "end": [2, 5, 6, 7, 204, 314, 315, 319], "endpt_inclus": [250, 251], "energi": 308, "enforc": [206, 207, 209], "engin": [26, 308], "enhanc": [1, 305], "enough": [314, 315], "ensur": [136, 252, 313, 315, 316, 319], "entir": 26, "entiti": 300, "entri": [20, 25, 53, 62, 72, 86, 91, 93, 104, 139, 142, 187, 189, 190, 271, 297, 313, 316], "environ": 81, "ep": [63, 83, 191, 232, 234, 236, 237, 238, 239, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 292], "epsilon": 319, "equal": [2, 25, 139, 141, 142, 145, 147, 148, 184, 187, 190, 206, 207, 209, 266, 268, 279, 280, 297, 314, 318], "equat": [184, 314], "equiangular": [222, 226], "equilater": [222, 228], "equilibrium": [183, 320], "equival": [53, 111, 301, 307], "error": [73, 84, 121, 124, 126, 127, 191, 284, 301, 305, 313], "especi": 301, "essenti": [315, 318], "establish": [305, 307], "estim": 314, "et": [190, 319], "eta": 180, "etc": [265, 297], "euclidian": 191, "euler": [33, 37], "ev": 308, "evalu": [62, 84, 89, 120, 124, 140, 145, 147, 148, 151, 155, 156, 157, 161, 162, 163, 164, 166, 177, 178, 179, 190, 191, 301, 310, 313, 318], "even": [26, 297], "evenli": [5, 140, 146, 320], "everi": [184, 315, 316, 318], "ex": [104, 106, 223, 265, 267, 269, 270, 282, 283, 284, 293, 314], "ex_0": 314, "ex_1": 314, "ex_n": 314, "exact": [84, 318], "exact_h": [206, 207, 209], "exactli": [197, 206, 207, 209, 233, 234, 240, 255, 256, 257, 258, 267, 315, 318], "examin": 314, "exampl": [2, 4, 5, 6, 7, 9, 11, 84, 89, 96, 101, 119, 138, 139, 142, 145, 147, 148, 149, 150, 151, 157, 161, 164, 166, 169, 173, 201, 202, 204, 205, 208, 211, 212, 246, 247, 249, 267, 268, 279, 280, 303, 304, 306, 307, 310, 311, 313, 314, 316, 318, 319], "example_func": 304, "except": [279, 310], "exclus": 53, "exculd": [277, 281, 284], "execut": [4, 9, 11, 311], "exist": [26, 53, 73, 110, 143, 268, 301, 309, 310, 313, 315, 318], "expand": 315, "expans": 1, "expect": 81, "expens": 148, "experiment": 81, "explain": [192, 310], "explan": 312, "explicitli": [63, 292], "explor": 1, "expos": [104, 109, 140, 146, 309], "express": [151, 157, 161, 164, 166], "extend": [310, 313, 315], "extens": [75, 144, 303, 310], "exterior": [85, 86, 87, 88, 89], "extern": [310, 320], "extract": [13, 25, 85, 87, 89, 94, 95, 98, 99, 100, 102, 105, 106, 109, 112, 113, 115, 117, 118, 283, 310, 313], "extrud": [7, 209], "extrus": 205, "ezproxi": 308, "f": [6, 18, 33, 84, 145, 147, 148, 151, 157, 161, 164, 166, 171, 184, 189, 190, 191, 230, 233, 234, 246, 247, 249, 254, 255, 256, 257, 258, 304, 308, 314, 320], "f1": [153, 159, 175], "f2": [153, 159, 175], "face": [20, 26, 33, 34, 35, 41, 91, 92, 93, 95, 96, 100, 101, 104, 105, 113, 118, 119, 184, 217, 219, 221, 223, 263, 268, 272, 278, 288, 297, 300], "face2nodenorm": [44, 45, 121, 126, 127], "face2uniqu": 105, "face_alpha": [294, 297], "facecent": 184, "faceconn": [105, 300, 316], "faceelem": 105, "faceelemconn": [300, 316], "faces2surfac": 105, "faces2uniqu": 300, "faceset": [20, 26, 56], "facet": 308, "facilit": 316, "factor": [26, 64, 97, 139, 142, 143, 177, 178, 179, 184], "fail": [73, 281], "fall": [313, 319], "fals": [2, 53, 61, 64, 68, 85, 86, 87, 88, 89, 91, 92, 93, 97, 104, 105, 106, 107, 124, 137, 140, 142, 145, 146, 182, 183, 184, 185, 186, 188, 190, 195, 204, 206, 207, 209, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 230, 231, 233, 234, 236, 238, 241, 242, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 265, 266, 267, 273, 279, 280, 281, 284, 297, 301, 307], "famou": 313, "fan": 133, "far": [190, 315], "faraj": [190, 308], "fast": [230, 246, 247, 249, 254, 255, 256, 257, 258, 308], "faster": [246, 247, 249], "featur": [81, 140, 146, 182, 183, 185, 186, 187, 189, 190, 268, 283, 301, 307, 308, 310, 314, 316, 318], "featureangl": [187, 189], "featurenod": 181, "featureweight": 181, "feb": 308, "fi": 221, "field": [162, 163, 190, 198, 308, 313], "fig": [2, 68, 301], "fig1": [2, 301], "fig2": [2, 301], "fig3": [2, 301], "fig4": 2, "figsiz": 301, "figur": 68, "file": [4, 9, 11, 20, 64, 70, 75, 97, 139, 140, 141, 142, 143, 144, 303, 305, 310, 311], "filenam": [75, 144], "filetyp": [75, 144, 306], "fill": [87, 88, 110, 276, 313], "fill_valu": 155, "fillval": 276, "final": [138, 202, 203, 210, 319], "find": [1, 83, 184, 315, 316, 319], "finfo": [63, 292], "finit": [84, 134, 146, 301, 309], "finite_diff_step": 146, "first": [2, 63, 83, 111, 135, 143, 152, 158, 174, 187, 208, 225, 253, 255, 256, 260, 261, 262, 265, 274, 279, 285, 286, 292, 300, 301, 303, 307, 316, 318, 319], "fit": [121, 127], "fix": [26, 182, 183, 184, 185, 186, 187], "fixedg": [140, 146], "fixednod": [26, 140, 146, 181, 182, 183, 185, 186, 187], "fixednot": 184, "fixfeatur": [182, 183, 185, 186], "fixsurf": [182, 183, 185, 186], "flat": [203, 297], "fld979": 308, "flexibl": 302, "flip": [85, 86, 87, 88, 89, 188, 189, 317], "flippabl": 316, "float": [25, 26, 53, 63, 64, 65, 83, 84, 86, 88, 89, 97, 110, 122, 123, 124, 125, 129, 139, 140, 142, 143, 145, 146, 147, 149, 150, 169, 173, 177, 178, 179, 182, 183, 184, 185, 186, 187, 189, 190, 191, 198, 201, 202, 204, 205, 206, 207, 208, 209, 210, 234, 236, 238, 245, 246, 247, 248, 249, 252, 253, 255, 256, 257, 258, 260, 261, 262, 266, 267, 268, 275, 277, 281, 282, 283, 284, 290, 292, 293, 297, 301], "flow": [140, 146], "fluid": [184, 308], "focu": [304, 310], "focus": 310, "follow": [133, 190, 205, 210, 274, 281, 297, 299, 300, 304, 307, 313, 314, 315, 319], "forc": [183, 184, 277, 281, 284, 320], "foreground": [124, 314], "form": [84, 133, 134, 145, 147, 148, 191, 192, 247, 249, 304, 309, 315, 316], "format": [20, 84, 143, 145, 147, 148, 184, 191, 195, 230, 233, 234, 246, 247, 249, 254, 255, 256, 257, 258, 303, 306], "former": 72, "formula": [120, 124, 308], "forum": 308, "forward": [301, 318], "found": [72, 196, 301, 315], "four": [104, 207, 313, 315], "fourier": [6, 308], "fourth": 260, "frac": [314, 319, 320], "fractur": 310, "frad": 156, "frame": 314, "fre97": [185, 308], "freder": 308, "free": 183, "freenod": 146, "freitag": 308, "fring": 310, "from": [1, 2, 4, 5, 6, 7, 9, 11, 13, 33, 37, 74, 85, 87, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 111, 112, 113, 115, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 140, 146, 173, 183, 184, 187, 190, 193, 194, 202, 203, 205, 206, 207, 209, 210, 212, 215, 216, 220, 221, 222, 223, 226, 227, 228, 229, 234, 253, 263, 265, 266, 267, 270, 271, 274, 279, 280, 281, 284, 299, 300, 301, 303, 304, 306, 308, 309, 310, 311, 313, 314, 315, 316, 318], "ftb16": [190, 308], "ftetwild": 301, "full": [2, 5, 6, 7, 68, 74, 81, 124, 204, 210, 224, 300, 307, 308, 309, 318], "fulli": [191, 285, 286], "fulltext": 308, "fun": 155, "func": [64, 84, 89, 120, 145, 146, 147, 148, 149, 150, 151, 157, 161, 164, 166, 169, 173, 177, 178, 179, 191, 301, 304], "func1": 301, "func2": 301, "function": [2, 6, 13, 19, 63, 84, 89, 104, 108, 120, 139, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 185, 190, 191, 225, 236, 238, 265, 292, 301, 302, 303, 305, 306, 307, 310, 313, 314], "function2octre": [84, 318], "fund": 310, "fundament": 308, "further": [16, 191, 310, 318], "furthest": 315, "fusilli": 7, "futur": 16, "fval": [165, 170], "fval1": [152, 158, 174], "fval2": [152, 158, 174], "fx_0y_0": 314, "fx_1y_1": 314, "fx_ny_n": 314, "fxy": 314, "fy": 314, "g": [2, 37, 85, 87, 143, 144, 187, 190, 230, 233, 234, 235, 246, 247, 249, 254, 255, 256, 257, 258, 300, 301, 303, 308, 309, 310, 314], "galleri": [2, 5, 6, 7, 10, 311], "gamma": [260, 261, 262, 277, 281], "gamma_0": 315, "gao": 308, "gap": 312, "gauss": 314, "gaussian": [61, 120, 123, 124, 140], "gaussian_filt": [124, 140], "gaussian_sigma": [64, 97, 124, 140], "gaussiancurvatur": 314, "gem": 308, "gener": [2, 5, 6, 7, 26, 63, 68, 74, 77, 84, 85, 86, 87, 88, 89, 96, 101, 107, 110, 119, 126, 127, 133, 138, 139, 141, 142, 145, 147, 148, 162, 163, 190, 191, 193, 194, 198, 199, 201, 204, 206, 207, 208, 209, 211, 212, 236, 238, 241, 242, 245, 246, 247, 248, 249, 252, 269, 272, 277, 281, 284, 292, 293, 299, 301, 303, 304, 306, 307, 308], "genu": 304, "geometr": [96, 107, 119, 308, 314, 315], "geometri": [84, 145, 147, 148, 191, 205, 267, 268, 304, 308, 309], "geq": 319, "get": [45, 88, 140, 205, 210, 224, 288, 310], "get_arrai": 301, "get_imag": 301, "getelemconnect": 108, "getelemneighbor": 285, "getnodeneighbor": [121, 126, 127, 285, 286, 288, 307], "getthem": 297, "gi04": [121, 126, 127, 308, 314], "gift": 134, "giftwrap": 132, "github": 305, "give": [116, 289, 290, 314], "given": [64, 97, 138, 143, 144, 196, 252, 269, 297], "gmsh": 310, "go": [2, 5, 6, 7, 184, 307], "goal": 307, "gol05": [120, 124, 308, 314], "goldfeath": [121, 126, 127, 308, 314], "goldman": [120, 124, 308, 314], "gomiti": 7, "gpu": 1, "grad": [84, 191], "gradient": [84, 124, 140, 146, 156, 318], "grant": 310, "graphic": [255, 256, 257, 258, 301, 308, 309], "grayscal": [86, 88, 124, 297], "greater": [64, 85, 86, 87, 88, 89, 97, 139, 142, 143, 190, 266, 277, 281, 284, 314], "grid": [84, 85, 87, 89, 96, 116, 124, 147, 155, 156, 162, 163, 201, 207, 209, 268, 301, 307, 308, 309, 313], "grid2d": 87, "grid2fun": 124, "grit": 308, "group": [90, 280, 285, 286], "growth": 310, "guarante": 101, "guid": [1, 15, 191, 310], "gutierrez": 310, "gy": 314, "gy_0": 314, "gy_1": 314, "gy_n": 314, "gyroid": [6, 139, 145, 147, 148, 268], "h": [5, 6, 86, 88, 110, 139, 140, 141, 142, 145, 146, 147, 148, 187, 189, 190, 201, 206, 207, 208, 209, 230, 233, 234, 246, 247, 249, 254, 255, 256, 257, 258, 308, 314], "h_node": 190, "ha": [5, 7, 38, 63, 73, 89, 104, 105, 108, 246, 247, 249, 265, 269, 292, 299, 306, 310, 313, 315, 316, 319], "half": [211, 300, 315, 316], "halt": 191, "handl": [5, 63, 84, 86, 88, 124, 153, 159, 171, 175, 249, 292, 302, 315], "hang": 308, "harvei": 308, "hash": 316, "hasn": 108, "hat": 314, "have": [1, 2, 83, 89, 107, 187, 223, 230, 234, 242, 247, 249, 257, 258, 265, 266, 270, 299, 300, 303, 307, 313, 314, 315], "haven": [39, 41], "health": 310, "heap": 187, "hear": 1, "heart": [8, 9, 10, 311], "heavili": 1, "height": 293, "held": [26, 182, 183, 184, 185, 186, 187], "help": 312, "here": [301, 312, 314, 315, 316], "hex": [7, 90, 101, 104, 206, 265, 297], "hexahedr": [85, 94, 95, 96, 192, 193, 205, 206, 210, 215, 222, 240, 269, 270, 293, 309, 310], "hexahedra": [85, 192, 309], "hexahedron": [63, 292, 302], "hexconn": 96, "hexcoord": 96, "hi": 190, "hide": 297, "hierarch": 318, "high": [2, 301, 308], "higher": [185, 318], "highli": [121, 126, 127], "highlight": [10, 310], "hip": 310, "hner": 308, "hol10": [192, 308], "hold": [68, 140, 146, 183], "holder": 310, "holmlid": 308, "home": [2, 7], "how": [2, 7, 38, 86, 88, 265, 310, 312, 314, 315], "howev": [26, 52, 124, 138, 187, 301, 302, 313, 315], "hsw": [301, 308], "html": 308, "http": [26, 82, 131, 134, 136, 230, 241, 242, 246, 247, 249, 254, 255, 256, 257, 258, 308], "hu": 308, "hugh": 308, "hull": [133, 134, 137], "hx": [86, 97, 139, 142], "hy": [86, 97, 139, 142], "hyperbol": 314, "hz": [86, 97, 139, 142], "hzg": [190, 308], "i": [1, 2, 6, 18, 20, 25, 26, 29, 33, 36, 37, 38, 48, 53, 63, 64, 68, 72, 73, 81, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 104, 105, 107, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 152, 153, 154, 158, 159, 160, 170, 171, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 190, 191, 192, 194, 197, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 222, 225, 230, 231, 233, 234, 235, 236, 238, 240, 241, 242, 246, 247, 248, 249, 252, 254, 255, 256, 257, 258, 265, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 281, 284, 285, 286, 288, 291, 292, 293, 297, 300, 301, 302, 303, 305, 306, 307, 310, 312, 313, 314, 315, 316, 318, 319, 320], "id": [20, 22, 26, 51, 89, 92, 106, 107, 198, 223, 253, 265, 277, 278, 281], "idea": 312, "ident": [301, 307], "identif": [134, 301], "identifi": [5, 63, 65, 92, 182, 183, 185, 186, 187, 189, 190, 243, 245, 248, 252, 253, 268, 285, 286, 292, 315, 316], "identify_typ": [20, 213], "idx": [91, 93, 265, 267, 279, 280], "ignor": [135, 138, 147], "ij": 320, "im2voxel": [64, 124], "imag": [1, 2, 13, 64, 86, 88, 97, 116, 124, 297, 301, 305, 308, 309, 313, 314], "img": [64, 97, 139, 140, 141, 142, 143], "img_data": 297, "impath": 144, "imperfect": 301, "implement": [16, 25, 84, 191, 192, 288, 310, 312, 315], "implicit": [1, 2, 6, 8, 9, 10, 13, 84, 89, 120, 124, 139, 141, 142, 191, 268, 307, 308, 311, 313, 314], "implicitli": 304, "import": [2, 5, 6, 7, 81, 124, 306, 312, 314, 315], "improperli": 7, "improv": [1, 5, 16, 26, 277, 281, 284, 301, 310], "imshow": 301, "inaccur": 314, "inact": 316, "incircl": 315, "inclu": [255, 256, 257, 258], "includ": [6, 193, 195, 197, 240, 272, 279, 285, 289, 303, 304, 306, 308, 309, 310, 313, 314, 318], "includecollinear": [132, 134], "inclus": [53, 197, 235, 237, 239, 240, 315], "inconsequenti": 319, "increment": 315, "independ": [60, 314, 315], "index": [26, 61, 104, 105, 277, 278, 300, 313], "indic": [25, 29, 36, 53, 91, 93, 104, 105, 128, 129, 133, 134, 136, 138, 145, 147, 187, 189, 206, 245, 247, 248, 252, 265, 267, 279, 280, 281, 288, 300, 302, 309, 315], "individu": 1, "inf": [277, 281, 284], "infer": [302, 316], "infinit": 315, "influenc": [33, 60], "info": [27, 28, 30, 31, 34, 35, 43], "inform": [2, 20, 134, 187, 189, 310, 314, 316], "infti": 78, "inher": [190, 314], "initi": [89, 182, 184, 185, 186, 205, 210, 301, 310], "inner": 20, "inp": [70, 306], "inplac": [53, 140, 146, 185], "input": [5, 82, 84, 85, 86, 87, 88, 89, 96, 101, 111, 119, 140, 143, 144, 145, 152, 153, 154, 159, 171, 175, 185, 190, 204, 205, 210, 224, 265, 271, 273, 276, 303, 304, 307], "insid": [18, 25, 53, 85, 86, 87, 88, 89, 110, 139, 140, 141, 142, 145, 147, 148, 152, 153, 154, 158, 159, 160, 174, 175, 176, 192, 235, 236, 238, 240, 304, 313, 314, 315], "inspir": [190, 310, 313], "instal": 136, "instanc": 307, "instead": [139, 141, 142, 144, 145, 147, 148, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 272, 319], "institut": [308, 310], "instruct": 305, "int": [25, 26, 53, 64, 84, 85, 86, 87, 88, 89, 97, 124, 139, 140, 142, 143, 146, 177, 178, 179, 182, 183, 185, 186, 187, 189, 191, 194, 198, 202, 203, 204, 205, 208, 210, 211, 212, 270, 271, 276, 281, 284, 289, 297], "int16": 144, "integ": [139, 141, 142, 145, 147, 148, 202, 203], "intellig": 308, "intend": [301, 310, 312], "intens": [64, 97], "interact": [74, 297, 308], "interc": 314, "interesect": 252, "interest": [6, 314, 318], "interfac": [16, 83, 136, 138, 185, 187, 189, 190, 301, 310], "interfer": 315, "interior": [85, 86, 87, 88, 89, 109, 182, 183, 185, 186, 187, 309, 315], "intermedi": 307, "intern": [140, 146, 184, 225, 308], "interpol": [1, 2, 64, 85, 86, 87, 88, 89, 97, 139, 140, 141, 142, 143, 145, 147, 155, 156, 191, 281, 313, 318], "interpret": [315, 316], "interrant": [121, 126, 127, 308, 314], "intersect": [82, 83, 159, 230, 231, 233, 234, 236, 238, 241, 242, 243, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 301, 304, 308, 310, 315, 318], "intersection_fun": 159, "intersection_leav": 243, "intersection_v": 158, "intersectionf": 301, "intersectionpair": 252, "intersectionpoint": [252, 253], "intersectionpt": [245, 246, 247, 248, 258], "intins": 314, "introduc": [2, 301], "intuit": 314, "inv": [91, 93, 267, 279, 280], "invalid": [2, 96, 101, 107, 119, 315], "invari": 308, "invers": [2, 62, 140, 146, 183, 215, 216, 313], "inverseorthogon": [62, 78], "inverseorthogonalqu": [62, 78, 220], "invert": [7, 73, 187, 316], "involv": [1, 301, 315], "iortho": 216, "iorthoq": 215, "ipynb": [2, 5, 6, 7], "irregular": 2, "irrelev": 183, "isn": [145, 320], "iso": 297, "isocontour": 87, "isolin": [87, 313], "isometr": 297, "isosurfac": [13, 18, 25, 85, 86, 87, 88, 89, 120, 139, 140, 141, 145, 146, 147, 165, 170, 191, 308, 313, 314], "isotrop": [86, 88, 199], "isovalu": [84, 87, 139, 141, 142, 145, 147, 148, 313], "iss": 308, "issu": [73, 315], "iter": [2, 140, 146, 182, 183, 185, 186, 187, 188, 189, 272, 320], "itertool": 249, "its": [20, 96, 101, 107, 119, 182, 185, 186, 277, 307, 315, 316, 318, 320], "itself": [314, 319], "j": [122, 128, 129, 184, 308, 320], "jack": 308, "jacobson": 308, "jan": 308, "jarvi": 134, "jean": 308, "jm24": [6, 308, 310], "joe": 308, "john": 308, "join": 301, "jonathan": [16, 136, 308], "jonathon": 138, "josephson": [1, 308, 310], "joshua": 310, "journal": [184, 255, 256, 257, 258, 308, 315], "jpeg": 144, "jpg": 303, "jul": 308, "jule": 308, "jupyt": [2, 5, 6, 7], "jupyter_rfb": 305, "just": [142, 203], "k": [184, 241, 242, 308, 314], "k1a_smooth": 2, "k1a_spher": 2, "k1m_smooth": 2, "k1m_sphere": 2, "k2a_smooth": 2, "k2a_spher": 2, "k2m_smooth": 2, "k2m_sphere": 2, "k_": 320, "kappa_": 314, "kappa_1": [2, 314], "kappa_2": [2, 314], "keep": [24, 53, 72, 84, 139, 141, 142, 145, 147, 148, 183, 307], "kei": [26, 189, 310, 315, 316], "keith": 308, "kept": [110, 148, 265], "kernel": 140, "keyword": [145, 147, 148], "kf": 184, "know": 315, "known": 6, "koenderink": [122, 128, 129, 308], "ku": 184, "kvd92": [122, 128, 129, 308, 314], "kwarg": [68, 74, 145, 147, 148, 191], "l": [26, 191, 308], "l0overrid": 184, "lab": 310, "label": [2, 185, 187, 189, 190, 301], "laidlaw": 308, "lambda": [6, 89], "lambdifi": [151, 157, 161, 164, 166], "laplacian": [2, 5, 140, 146, 182, 183, 185, 186, 308], "larg": [142, 183, 301], "larger": [185, 309, 316, 318], "largest": [182, 183, 185, 186, 315], "last": 279, "later": [26, 307], "layer": [26, 269, 270, 293, 308], "layerconn": 269, "layercoord": 269, "lc87": [85, 86, 308, 313], "lead": [301, 313, 314, 315], "leaf": [193, 196, 197, 200, 243, 318], "least": [288, 314, 315], "leav": [200, 204, 315], "lectur": 308, "left": [314, 319], "legend": 2, "len": [2, 116, 205, 252, 279, 281, 284], "length": [20, 139, 141, 142, 145, 147, 148, 184, 187, 189, 190, 204, 214, 276, 279, 280, 297, 302], "leq": 319, "less": [18, 25, 63, 64, 85, 86, 87, 88, 89, 97, 139, 141, 142, 143, 145, 147, 148, 182, 183, 185, 186, 187, 191, 265, 268, 292, 314], "lessen": 312, "letter": 134, "level": [25, 85, 86, 87, 88, 89, 191, 192, 307, 318], "lexicograph": 303, "li": [315, 319], "lib": 308, "librari": [108, 308, 310], "lie": [2, 120, 140, 145, 146, 147, 204, 233, 234, 255, 256, 257, 258, 268, 316], "like": [96, 107, 119, 249, 310], "likewis": 316, "limit": [108, 235, 301, 310, 319], "line": [7, 20, 87, 88, 203, 205, 210, 292, 297, 302, 313, 315], "line_color": 297, "line_width": 297, "linear": [85, 86, 87, 88, 89, 139, 140, 141, 145, 147, 155, 156, 184, 191, 314, 318], "link": [52, 308, 315, 318], "linspac": 205, "list": [20, 24, 26, 27, 28, 29, 30, 31, 34, 35, 36, 43, 62, 65, 68, 72, 74, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 133, 134, 138, 143, 145, 147, 148, 155, 156, 162, 163, 184, 191, 192, 195, 197, 198, 200, 201, 204, 206, 207, 209, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 236, 238, 240, 241, 243, 245, 248, 253, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 297, 300, 307], "ller": 308, "load": [64, 303, 320], "local": [140, 146, 182, 183, 185, 186, 187, 189, 273, 314], "locallaplaciansmooth": 5, "locat": [18, 182, 183, 185, 186, 265, 267, 278], "lock": 307, "log": 2, "long": [6, 204], "longer": 318, "longest": [184, 214], "look": 314, "lookup": 313, "loop": [246, 247, 249], "loos": 310, "lorensen": [308, 313], "lori": 308, "loss": 301, "love": 1, "low": [2, 6, 301, 314], "lower": [53, 68, 149, 187, 230, 231, 235, 241, 242, 254, 307, 318, 319], "lth86": [301, 308], "lumetr": 309, "m": [25, 60, 62, 64, 66, 67, 70, 81, 140, 146, 162, 163, 167, 168, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 205, 210, 248, 252, 297, 304, 306, 307, 308, 320], "m1": [6, 301], "m2": [6, 301, 307], "m3": 6, "m4": 6, "macaroni": 7, "machin": [63, 292], "made": 309, "magnitud": [124, 314], "mai": [7, 52, 81, 96, 101, 107, 119, 144, 145, 147, 148, 183, 187, 192, 206, 207, 209, 210, 284, 300, 301, 304, 314, 316, 319], "main": [309, 313], "maintain": 1, "major": [173, 212, 301, 304], "make": [20, 206, 207, 209, 307, 310, 314], "mani": [19, 38, 63, 246, 247, 249, 292, 302, 307, 314], "manifold": [236, 238, 308], "manipul": [299, 310], "manufactur": 309, "map": [1, 277, 281, 284], "mappingmatrix": [277, 281, 284], "marc": 308, "march": [2, 84, 85, 86, 87, 88, 89, 139, 145, 147, 308], "marchingcub": [139, 145, 313], "marchingcubesimag": [124, 139, 145], "marchingsquar": 313, "marchingtetrahedra": [139, 145, 313], "mark": [315, 318], "marti": 310, "masknan": 2, "mat": 273, "match": [187, 190, 271], "materi": [187, 190, 308], "mathbf": 314, "mathemat": [304, 308], "matplotlib": [2, 68, 305], "matric": 184, "matrix": [86, 88, 116, 143, 273, 281, 284, 314, 319], "matter": [152, 153, 154, 236, 238, 308], "max": [61, 62, 184, 214, 215, 216, 217, 219, 220, 221, 222, 224, 319], "maxangl": 217, "maxdepth": [84, 191, 194, 198], "maxdihedr": [62, 225], "maximum": [26, 68, 84, 120, 121, 122, 123, 124, 125, 126, 127, 129, 145, 147, 148, 152, 153, 158, 159, 182, 183, 185, 186, 187, 189, 191, 194, 198, 215, 217, 314, 318], "maxit": [182, 183, 185, 186, 187], "maxprincip": [120, 121, 122, 123, 124, 125, 126, 127, 129], "mb": [4, 9, 11, 311], "mc": [84, 139, 145, 147], "mc33": [84, 139, 145], "me": 1, "mean": [2, 6, 60, 61, 62, 120, 124, 125, 185, 214, 215, 216, 217, 219, 220, 221, 222, 224, 307, 315, 316, 319], "meancurvatur": 314, "meaning": 124, "meanratio": [62, 78, 185], "measur": [6, 78, 314, 318], "mechan": 308, "mechanobiolog": [308, 310], "mechanobiologi": [1, 308, 310], "meet": [255, 256, 257, 258, 316], "mem": [4, 9, 11, 311], "memori": 316, "merg": [274, 293], "mergedconn": 274, "mergedcoord": 274, "mergedv": 274, "mergemesh": 293, "mesh": [1, 2, 5, 7, 12, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 126, 127, 139, 140, 141, 142, 145, 146, 147, 148, 155, 156, 162, 163, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 222, 223, 224, 226, 227, 228, 229, 236, 238, 240, 245, 248, 252, 253, 263, 265, 266, 267, 268, 269, 270, 274, 275, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 297, 299, 300, 301, 302, 305, 308, 312, 315, 316, 320], "mesh2": 65, "mesh2sdf": 1, "meshanalysi": [4, 311], "meshboolean": 301, "meshgener": [9, 311], "meshio": [66, 67, 70, 75, 305, 306, 310], "meshio2mymesh": 306, "meshpi": 310, "met": [194, 198], "meth": 65, "method": [2, 7, 8, 10, 16, 24, 25, 44, 45, 76, 84, 85, 86, 87, 88, 89, 96, 101, 107, 119, 124, 132, 138, 139, 140, 141, 145, 146, 147, 155, 156, 162, 182, 184, 185, 186, 190, 192, 222, 226, 228, 237, 239, 272, 285, 301, 306, 307, 308, 309, 313, 314, 320], "metric": [61, 62], "micro": 310, "middl": 5, "midpoint": [85, 86, 87, 88, 89, 114, 139, 141, 145, 147, 190, 313], "might": 299, "min": [61, 62, 184, 185, 188, 214, 215, 216, 217, 219, 220, 221, 222, 224, 281, 284, 319], "minangl": 219, "mind": 314, "mindepth": [84, 191], "mindihedr": [62, 225], "minim": [6, 63, 151, 157, 161, 164, 166, 292, 316], "minimum": [68, 84, 120, 121, 122, 123, 124, 125, 126, 127, 129, 145, 147, 148, 154, 160, 174, 175, 176, 185, 191, 198, 219, 221, 246, 247, 249, 273, 308, 314], "minor": [173, 212], "minprincip": [120, 121, 122, 123, 124, 125, 126, 127, 129], "minsiz": 198, "minut": [2, 5, 6, 7], "mirror": 275, "mirroredconn": 275, "mirroredcoord": 275, "mislabel": [63, 292], "mix": [8, 9, 10, 20, 89, 90, 104, 291, 302, 310, 311, 313], "mixed_el": [89, 145], "mixed_topology1": 6, "mixed_topology2": 6, "mixed_topology3": 6, "mixed_topology4": 6, "mm": 2, "mnew": [182, 183, 185, 186, 187, 189, 190], "mode": [53, 86, 88, 110, 124, 148, 193, 285, 288, 297, 307], "model": [301, 308, 310], "modif": 307, "modifi": [53, 185, 187, 301, 303, 307, 316], "modul": [1, 6, 16, 18, 299, 300, 306, 307], "mohebi": 310, "moller97": [255, 256, 257, 258, 308], "mollert05": [246, 247, 249, 308, 319], "more": [1, 2, 5, 27, 28, 30, 31, 34, 35, 43, 44, 45, 64, 81, 97, 139, 140, 142, 143, 146, 187, 189, 246, 247, 249, 265, 272, 301, 304, 306, 309, 310, 312, 320], "morgan": [308, 310], "morlei": [241, 242, 308], "moscow": 308, "most": [2, 63, 108, 187, 272, 285, 286, 291, 292, 297, 300, 308, 309, 310, 312, 313, 314, 315, 318], "mostvis": 272, "mostvisible_it": 272, "mostvisible_loop": 272, "movabl": 146, "move": [2, 140, 145, 146, 147, 182, 183, 185, 186, 190, 285, 307, 315], "movement": [182, 183, 185, 186], "mt": [84, 139, 145], "much": [2, 246, 247, 249, 301, 319], "multi": [284, 303, 308], "multichannel": [143, 144, 303], "multipl": [6, 65, 91, 104, 187, 189, 230, 246, 247, 249, 284, 300, 304, 307, 313], "must": [26, 53, 64, 83, 89, 97, 110, 136, 138, 139, 140, 142, 143, 145, 147, 183, 184, 187, 190, 198, 204, 249, 265, 303, 313, 315, 319], "mx3": [130, 131, 135, 136], "my": 1, "mymesh": [1, 2, 5, 6, 7, 10, 301, 302, 304, 305, 306, 307, 309, 312, 315], "mymesh2meshio": [81, 306], "m\u00f6ller": [230, 246, 247, 249, 254, 255, 256, 257, 258, 319], "n": [7, 11, 90, 104, 135, 138, 177, 178, 179, 183, 208, 230, 234, 238, 240, 242, 247, 249, 252, 257, 258, 289, 308, 314, 315], "n0": 104, "n1": [104, 106], "n2": [104, 106], "n3": 106, "n4": 106, "n5": 106, "n_i": 320, "name": [20, 26, 72, 75, 144, 297, 298, 299, 303, 309], "nan": [44, 252], "nation": 310, "natur": [312, 315, 318], "ndarrai": [64, 84, 85, 86, 87, 88, 89, 91, 93, 96, 97, 101, 110, 111, 114, 116, 119, 120, 121, 124, 126, 127, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 151, 152, 157, 158, 161, 164, 165, 166, 170, 174, 176, 183, 192, 193, 197, 209, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 234, 242, 245, 246, 247, 248, 252, 257, 258, 259, 261, 265, 267, 271, 273, 276, 277, 279, 280, 297], "ndimag": [64, 97, 124, 139, 140, 142, 143], "nearbi": 187, "necessari": [26, 124, 191, 315, 319, 320], "necessarili": [101, 107], "need": [108, 184, 246, 247, 249, 284, 301, 305, 307, 312, 313, 315, 316, 318], "neg": [25, 139, 141, 142, 145, 147, 148, 152, 153, 154, 158, 159, 160, 174, 175, 176, 177, 178, 179, 314, 315], "neglect": 111, "neighbor": [5, 31, 43, 50, 96, 101, 107, 119, 121, 126, 127, 182, 184, 185, 186, 221, 223, 285, 286, 288, 289, 290, 291, 300, 315, 316, 320], "neighborhood": [187, 289, 290, 314], "neilesh": 310, "neither": 208, "nelem": [63, 187, 189, 190, 292], "nesper": 308, "net": 320, "network": [26, 320], "never": 316, "nevertheless": 6, "new": [7, 85, 86, 87, 88, 89, 96, 101, 103, 107, 114, 119, 182, 183, 185, 186, 187, 190, 265, 267, 269, 278, 279, 301, 307, 313, 315], "newconn": [85, 86, 87, 88, 265, 267, 278], "newcoord": [85, 86, 87, 88, 96, 101, 119, 267, 278], "newedg": 54, "newfac": 56, "newid": 278, "newli": 315, "newnodeconn": 55, "newnodecoord": 57, "newvalu": 89, "next": [191, 315, 318], "nface": 294, "ni": 225, "nine": 128, "nj": 225, "nlayer": [26, 270], "nnode": 268, "nodal": [6, 25, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 115, 117, 118, 119, 121, 126, 127, 133, 155, 156, 184, 192, 213, 214, 215, 216, 217, 219, 220, 221, 222, 224, 226, 227, 228, 229, 263, 264, 266, 267, 268, 269, 270, 272, 274, 275, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 308], "node": [2, 5, 20, 21, 22, 26, 29, 30, 33, 36, 38, 42, 43, 44, 45, 48, 49, 50, 51, 53, 63, 64, 65, 67, 73, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 126, 127, 130, 131, 135, 136, 138, 140, 142, 146, 148, 155, 156, 162, 163, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 236, 238, 240, 243, 245, 248, 252, 253, 260, 261, 262, 265, 267, 268, 269, 270, 272, 274, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 297, 300, 302, 307, 309, 313, 314, 315, 316, 318], "nodeconn": [2, 20, 48, 52, 58, 63, 73, 84, 85, 87, 89, 90, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 112, 113, 115, 117, 118, 119, 130, 131, 133, 135, 136, 139, 141, 142, 145, 147, 148, 181, 184, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 226, 227, 228, 229, 264, 265, 266, 267, 270, 272, 275, 278, 282, 285, 286, 287, 288, 289, 290, 291, 292, 300, 307, 309], "nodeconn1": 274, "nodeconn2": 274, "nodecoord": [2, 20, 52, 69, 73, 84, 85, 87, 89, 90, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 124, 126, 127, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 145, 147, 148, 181, 184, 198, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 226, 227, 228, 229, 232, 236, 238, 245, 248, 252, 263, 264, 265, 266, 267, 268, 270, 272, 275, 277, 278, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 300, 301, 307, 309], "nodecoords1": [253, 274, 281, 284], "nodecoords2": [253, 274, 281, 284], "nodedata": [20, 25, 53, 64, 97, 142, 148, 297, 301], "nodeneighbor": [2, 121, 126, 127, 184, 286, 291, 300, 307], "nodeneighborhood": [121, 289, 290], "nodenorm": [2, 108, 121, 126, 127, 272], "nodenormalsmethod": 44, "noderegion": 286, "nodeset": [20, 57], "nodespringsmooth": [140, 146, 320], "nodev": [156, 162, 163, 274], "nodevals1": [274, 284], "nodevals2": [274, 284], "nodevalu": [85, 87, 89], "non": [44, 63, 73, 105, 138, 183, 184, 187, 190, 206, 207, 209, 272, 292, 300, 313, 314, 315, 316], "nondelaunai": 138, "none": [20, 24, 25, 26, 53, 54, 55, 56, 57, 62, 64, 68, 72, 84, 97, 108, 110, 124, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 155, 180, 182, 183, 184, 185, 186, 187, 189, 190, 191, 196, 198, 202, 203, 204, 205, 208, 210, 213, 228, 230, 236, 238, 245, 248, 252, 254, 271, 275, 277, 278, 281, 284, 285, 286, 288, 293, 294, 297], "nonetyp": [24, 26, 62, 72, 146, 183, 189, 196, 238, 245, 248, 297], "nor": 208, "nord": 310, "norm": 208, "normal": [24, 32, 44, 45, 108, 121, 126, 127, 140, 146, 177, 178, 179, 209, 221, 223, 225, 230, 231, 232, 233, 234, 236, 238, 254, 263, 272, 277, 307, 308, 314, 316], "notabl": 310, "note": [62, 90, 96, 101, 104, 107, 108, 119, 152, 153, 154, 201, 208, 269, 281, 284, 288, 301, 308, 315, 316], "notebook": [2, 5, 6, 7], "notion": 314, "notrim": 148, "noura": 308, "nov": 310, "novel": 308, "now": 314, "np": [2, 6, 7, 44, 63, 64, 84, 85, 86, 87, 88, 89, 91, 93, 96, 97, 101, 110, 111, 114, 116, 119, 120, 121, 124, 126, 127, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 151, 152, 157, 158, 161, 164, 165, 166, 170, 174, 176, 183, 192, 193, 197, 205, 209, 210, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 233, 234, 236, 238, 242, 245, 246, 247, 248, 249, 252, 254, 255, 256, 257, 258, 259, 261, 265, 267, 268, 271, 273, 276, 277, 279, 280, 281, 284, 292, 297], "npt": [281, 284], "nring": [61, 289], "numba": 305, "number": [7, 20, 26, 33, 38, 39, 40, 41, 42, 90, 104, 111, 140, 146, 182, 183, 185, 186, 187, 189, 190, 202, 203, 204, 208, 211, 212, 222, 265, 270, 280, 281, 284, 289, 297, 300, 302, 305, 307, 315, 320], "numer": [184, 308], "numpi": [1, 2, 6, 7, 85, 86, 87, 88, 91, 93, 97, 143, 144, 145, 147, 148, 151, 157, 161, 164, 166, 191, 271, 276, 297, 303, 304, 305], "nvidia": 1, "nx2": [20, 130], "nx3": [20, 121, 126, 127, 130, 131, 183, 194, 198, 245, 248, 259, 273], "nx4": 277, "o": [305, 308, 319], "o_x": 319, "ob01": [140, 146, 308], "obj": 306, "object": [52, 62, 63, 64, 66, 67, 70, 82, 84, 124, 139, 140, 141, 142, 145, 146, 147, 148, 162, 163, 182, 183, 185, 186, 191, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 283, 292, 297, 301, 304, 306, 307, 308, 310, 314], "obp03": [186, 308], "observ": 6, "obtain": [84, 86, 87, 91, 92, 93, 108, 121, 126, 127, 140, 146, 152, 153, 154, 158, 159, 160, 174, 175, 176, 288, 300, 301, 303, 304, 309, 313, 314], "occur": [7, 110, 124, 145, 319], "octre": [84, 110, 236, 238, 243, 245, 248, 249, 252, 277, 281, 284, 301], "octree2du": 84, "octree_ep": 84, "octree_strategi": 84, "octreenod": [110, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 236, 238, 243, 245, 248, 252, 277, 281, 284], "off": 316, "offer": [301, 304, 307], "offset": [170, 171, 210], "offset_v": 165, "often": [187, 190, 301, 313, 320], "ohtak": [146, 308], "old": [267, 278], "om": 303, "omit": 305, "onc": [265, 298, 315], "one": [24, 52, 60, 91, 93, 96, 101, 104, 105, 107, 119, 140, 182, 184, 185, 186, 194, 198, 230, 245, 246, 247, 248, 249, 281, 284, 288, 300, 307, 310, 313, 314, 315, 318], "ongo": 310, "onli": [24, 91, 93, 104, 105, 124, 135, 140, 143, 146, 182, 183, 184, 185, 186, 187, 190, 192, 193, 194, 198, 208, 236, 238, 246, 247, 248, 249, 265, 266, 270, 281, 284, 288, 297, 298, 300, 303, 305, 314, 315, 316, 318, 319], "onlinelibrari": 308, "onto": [2, 277, 315, 319], "opac": 297, "opaqu": 297, "open": [204, 309, 314], "opencv": [303, 305], "oper": [20, 52, 143, 152, 153, 154, 187, 189, 267, 279, 300, 301, 304, 307, 310, 312, 313], "opposit": [25, 139, 141, 142, 145, 147, 148, 304, 313, 314, 315], "optim": [6, 7, 26, 108, 140, 146, 214, 308, 310], "optimizetet": 26, "option": [1, 20, 24, 25, 26, 45, 53, 62, 64, 65, 68, 72, 73, 74, 75, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 101, 104, 105, 107, 108, 110, 119, 124, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 219, 220, 221, 222, 224, 225, 228, 230, 234, 236, 238, 240, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 286, 288, 291, 293, 297, 298], "order": [64, 95, 97, 100, 108, 113, 116, 118, 133, 134, 139, 142, 143, 152, 153, 154, 189, 265, 267, 279, 280, 303, 308, 309, 313, 314, 315, 316, 319], "org": [26, 82, 131, 134, 136, 230, 241, 242, 246, 247, 249, 254, 255, 256, 257, 258, 308], "organ": 299, "orient": [96, 101, 107, 119, 173, 209, 297, 300, 314, 315], "origin": [1, 60, 85, 86, 89, 91, 93, 106, 107, 140, 146, 187, 190, 265, 267, 279, 280, 307, 310, 312, 319], "ortho": 221, "orthogon": [62, 78, 215, 216, 220], "orthogonalqu": [62, 78], "orthopaed": 1, "orthoq": 220, "other": [20, 52, 60, 72, 101, 108, 140, 146, 170, 171, 187, 204, 224, 252, 265, 276, 299, 301, 304, 307, 310, 314, 315, 316, 319], "otherwis": [26, 53, 86, 89, 185, 187, 190, 193, 204, 205, 206, 207, 209, 210, 230, 231, 233, 234, 236, 238, 241, 242, 246, 254, 255, 257, 258, 303, 315], "oup": 308, "out": [53, 74, 271, 276, 279, 280], "outer": [309, 316], "output": [74, 110, 152, 153, 154, 158, 159, 160, 174, 175, 176, 271, 279, 280], "outsid": [18, 53, 95, 100, 113, 118, 236, 238, 263, 304, 313, 314], "outward": [314, 315], "over": [187, 205, 316], "overal": 315, "overdetermin": 314, "overhead": [63, 292], "overlap": [230, 254, 269, 308], "overrid": [144, 184], "overridden": [139, 145], "overview": 310, "p": [6, 166, 167, 168, 241, 242, 315], "p_": 315, "p_i": 315, "p_x": 315, "p_y": 315, "packag": [306, 307, 310], "pad": [86, 88, 124, 252, 271, 276], "page": 308, "pair": [225, 252, 257, 258, 316], "pairwis": 249, "pan": 297, "panozzo": 308, "paper": [315, 319], "paraboloid": 315, "param": 266, "paramet": [6, 20, 24, 25, 26, 53, 62, 64, 65, 66, 68, 70, 72, 75, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 240, 241, 242, 243, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 297, 298, 314, 319], "parent": [96, 101, 107, 119, 318], "parentid": 89, "parsecolor": 297, "part": [104, 105, 315], "partial": [26, 192, 314], "particular": [310, 314], "particularli": [6, 301, 310], "partit": [313, 318], "pasko": 308, "pass": [53, 74, 145, 147, 148, 187, 189, 265, 303, 310, 318], "past": 285, "pasta": [8, 9, 10, 311], "path": [70, 139, 140, 141, 142, 143, 144, 305, 315], "pdf": [82, 131, 308], "peel": 270, "peelconn": 270, "peelcoord": 270, "peeledconn": 270, "peeledcoord": 270, "penn": 7, "per": [64, 97, 139, 142, 143, 300, 314], "perform": [1, 2, 5, 26, 62, 64, 85, 86, 87, 88, 89, 140, 143, 146, 147, 148, 182, 183, 185, 186, 187, 189, 272, 297, 300, 301, 316, 318, 319], "pergamon": 308, "perhap": 318, "period": [6, 151, 157, 161, 164, 166], "permit": 187, "perpendicular": [202, 203], "peter": 308, "ph": 310, "phi_resolut": [211, 212], "physic": 308, "physik": 308, "pi": [7, 205, 210, 314], "pillow": 305, "pip": [136, 305], "pixel": [86, 88, 309], "place": [83, 84, 85, 86, 87, 88, 89, 114, 139, 140, 141, 145, 146, 147, 182, 183, 185, 186, 190, 192, 267, 313, 315], "placement": [2, 140, 146], "plan": 16, "planar": [63, 292], "plane": [24, 116, 134, 140, 146, 177, 178, 179, 186, 202, 203, 204, 231, 233, 234, 275, 297, 307, 309, 314], "pleas": 7, "plot": [2, 5, 6, 7, 74, 81, 84, 139, 145, 147, 148, 149, 150, 151, 157, 161, 164, 166, 169, 173, 201, 202, 204, 205, 206, 207, 208, 211, 212, 268, 297, 301, 307], "plt": [2, 301], "pm": 314, "pmatrix": 315, "png": [144, 303], "point": [6, 24, 124, 128, 130, 131, 133, 134, 136, 140, 145, 147, 155, 156, 162, 163, 194, 196, 202, 203, 204, 208, 209, 210, 211, 212, 231, 233, 234, 235, 236, 238, 240, 241, 242, 243, 245, 246, 247, 248, 249, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 273, 277, 281, 284, 301, 304, 307, 309, 313, 314], "points2octre": 318, "pole": [211, 212], "polygon": [90, 98, 104, 108, 308, 309, 315], "polyhedr": 308, "polyhedra": 309, "polyhedron": 316, "polytop": 308, "poor": 301, "popular": [315, 318], "posit": [25, 85, 86, 87, 88, 89, 116, 139, 140, 141, 142, 145, 146, 147, 148, 182, 183, 185, 186, 281, 314, 315, 319], "possibl": [63, 145, 147, 187, 189, 292, 313, 316], "possibli": 1, "potenti": [63, 269, 292, 316], "power": 310, "pp": 184, "practic": [94, 95, 98, 99, 100, 102, 112, 113, 115, 117, 118, 315], "pre": [77, 315], "preced": [72, 208], "precis": [63, 292], "precomput": [236, 238, 277, 281, 284], "predominantli": [202, 203], "prefer": 298, "prefix": 144, "prescrib": [165, 183], "present": [90, 104, 138, 187, 292, 297], "preserv": [187, 189, 190], "prevent": [33, 183], "previous": [45, 182, 185, 186, 245, 248, 315], "primal": 308, "primari": [20, 96, 107, 119], "primarili": [186, 225, 300, 301, 309], "primit": [6, 7, 85, 87, 89, 96, 268, 299, 301, 307], "princip": [2, 61, 120, 121, 122, 123, 124, 125, 126, 127, 129, 308], "print": [20, 62, 214, 215, 216, 217, 219, 220, 221, 222, 224, 281, 284], "priorit": 187, "problemat": 301, "proce": 319, "procedur": [26, 308, 315], "proceed": 308, "process": [134, 187, 301, 315, 318], "produc": [25, 284, 301, 303, 307], "progress": [187, 189, 190, 312], "project": [1, 136, 277, 281, 284, 310, 315, 319], "proper": [108, 303], "properli": [110, 316, 318], "properti": [21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 58, 69, 72, 96, 107, 119, 314], "propos": [191, 192, 313], "protanomali": 297, "provid": [1, 20, 53, 72, 89, 108, 110, 120, 124, 126, 127, 135, 138, 147, 183, 184, 185, 187, 190, 205, 206, 208, 228, 230, 238, 254, 274, 277, 281, 284, 285, 286, 306, 310, 312, 315], "pt": [24, 196, 209, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 260, 261, 262], "pt1": 208, "pt2": 208, "public": 308, "publish": [310, 315], "pure": [94, 95, 99, 100, 102, 112, 113, 115, 117, 118, 202, 203, 205, 210, 310], "purpos": [224, 305, 309, 312], "pv": 81, "pvmesh": 81, "py": [2, 4, 5, 6, 7, 9, 311], "pydicom": [303, 305], "pyglet": 298, "pymesh": 310, "pypi": 136, "pyplot": 2, "pyramid": [63, 90, 99, 100, 101, 104, 192, 210, 215, 222, 292, 293, 302], "pyramidconn": [101, 293], "pyramidcoord": [101, 293], "pyramidheight": 293, "python": [2, 5, 6, 7, 136, 303, 316], "pyvista": [81, 310], "qef": [191, 318], "qhull": 16, "qingnan": 308, "quad": [90, 101, 103, 104, 145, 201, 204, 207, 209, 210, 211, 212, 227, 265, 291, 302, 309], "quadfit": 314, "quadrat": [89, 127, 147, 191, 302, 318], "quadrilater": [63, 87, 89, 90, 95, 100, 102, 103, 104, 118, 201, 202, 203, 204, 205, 207, 209, 211, 212, 227, 292, 302, 313], "quak": 308, "qual": 62, "qualiti": [2, 5, 19, 62, 96, 107, 119, 185, 187, 189, 301, 305, 308, 310, 314, 316], "qualityfunc": 185, "qualitymetr": 188, "qualitys": 190, "qualitythreshold": 180, "queri": 316, "question": 1, "queue": 315, "quick": 307, "quit": 301, "r": [134, 140, 146, 152, 153, 154, 158, 159, 160, 173, 174, 175, 176, 212, 241, 242, 301, 304, 308, 319], "r_0": 319, "r_1": 319, "r_2": 319, "r_x": 319, "r_y": 319, "r_z": 319, "radial": [202, 203], "radial_resolut": [202, 203], "radian": [62, 205, 210], "radiu": [2, 150, 169, 173, 202, 211, 212, 290, 304, 315], "rag": [271, 276, 279, 280, 300], "rai": [301, 308, 318], "rainald": 308, "rais": [73, 305], "rand": [236, 238], "random": [63, 236, 238, 281, 284, 292], "randomli": 315, "rang": [145, 147, 215, 216, 220, 221, 222, 226, 227, 228, 229, 297, 314], "rare": [63, 292], "rather": [24, 75, 94, 95, 96, 98, 99, 100, 101, 102, 112, 113, 115, 117, 118, 119, 140, 142, 146, 192, 300, 301, 310, 313, 315, 316, 318], "ratio": [62, 214], "rayboxesintersect": 319, "rayboxintersect": 319, "rayssurfintersect": 249, "raystrianglesintersect": [246, 247, 319], "raytriangleintersect": [247, 249, 319], "raytrianglesintersect": [246, 249, 319], "re": [53, 267, 279, 280, 314, 315], "reach": [316, 318, 319], "read": [303, 306], "readabl": [70, 272, 310], "reader": 303, "real": [151, 157, 161, 164, 166], "reason": [6, 316], "recalcul": [184, 307, 316], "receiv": 44, "recogniz": 314, "recommend": [187, 190], "reconnect": 267, "reconstruct": 1, "record": 308, "recov": [279, 280], "rectangular": [201, 206, 207, 208, 252, 276, 300, 309], "rectilinear": [85, 87, 116], "red": [5, 300], "redistribut": [2, 140, 146, 183], "reduc": [91, 93, 140, 146, 185, 187, 265, 313], "redund": 316, "refer": [32, 60, 73, 89, 187, 190, 192, 297, 307, 310, 312, 314], "referenc": [33, 300, 307], "refin": [191, 198, 318], "regardless": [145, 204, 301, 314], "region": [87, 187, 189, 190, 285, 286, 318], "regist": 1, "registr": 1, "regulargridinterpol": 140, "rel": [145, 147, 260, 261, 262, 281], "relabel": 278, "relat": [16, 76, 91, 93], "relev": [288, 302, 315, 316], "reli": [301, 314, 318, 319], "relianc": 310, "remain": [6, 111, 267], "remesh": 308, "remov": [84, 86, 87, 88, 105, 139, 141, 142, 145, 146, 147, 148, 187, 190, 265, 267, 270, 271, 315, 316], "renumb": [187, 267, 274], "reorder": [279, 280], "repeat": [189, 301, 315, 318], "replac": 305, "report": 62, "reposit": [140, 146, 182, 185, 186, 320], "repositori": 305, "repres": [97, 231, 300, 304, 309, 316, 318], "represent": [6, 27, 28, 30, 31, 34, 35, 43, 52, 198, 199, 277, 281, 283, 284, 301, 316, 318], "request": 1, "requir": [89, 279, 288, 301, 305, 314, 316], "resampl": [64, 97, 139, 142, 143], "research": [1, 310], "resolut": [64, 97, 204, 301, 308, 318], "resolv": 313, "respect": [86, 212, 313, 314], "result": [2, 6, 83, 89, 96, 101, 107, 108, 119, 126, 127, 183, 202, 203, 206, 207, 209, 301, 314], "retriev": [196, 197, 200], "return": [5, 24, 25, 60, 62, 63, 64, 66, 67, 68, 70, 74, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 240, 241, 242, 243, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 297, 298, 301, 303, 304, 307], "return_anchor": [85, 87], "return_count": 91, "return_edgeconn": 104, "return_edgeelem": 104, "return_faceconn": 105, "return_faceelem": 105, "return_fig": [2, 68, 301], "return_gradi": [64, 97], "return_hul": 137, "return_id": [92, 107], "return_idx": [91, 93, 265, 267, 279, 280], "return_imag": 297, "return_intersect": [244, 250, 251], "return_inv": [91, 93, 267, 279, 280], "return_kf": 184, "return_mappingmatrix": 284, "return_matrix": 273, "return_nodedata": [64, 97, 142], "return_nodevalu": 89, "return_octre": [281, 284], "return_parentid": 89, "return_pt": [252, 253], "return_separ": 279, "return_surfelem": 106, "revers": [267, 279], "revolut": [210, 212], "revolv": 7, "rewritten": 90, "rfboutputcontext": [2, 5, 6, 7], "rgb": [143, 144, 303], "rgba": [144, 297, 303], "rho": 180, "richard": 308, "ridg": [5, 128], "right": [297, 314, 319], "ring": [289, 314], "risk": [140, 146], "rmax": [152, 153, 154, 158, 159, 160], "rmin": [174, 175, 176], "rmsd": 2, "rmsd_k1a_smooth": 2, "rmsd_k1a_spher": 2, "rmsd_k1m_smooth": 2, "rmsd_k1m_sphere": 2, "robust": [19, 241, 242, 308], "romain": 308, "ron": [120, 124, 308], "root": [2, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 243, 305, 318], "rotat": [205, 210, 212, 273, 297, 313], "row": [20, 267, 279, 280, 281, 300], "rrner": 308, "rule": 307, "run": [2, 5, 6, 7, 139, 141, 142, 145, 147, 148, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 305], "runner": [2, 7], "runtimewarn": 2, "russia": 308, "rut": 128, "s003660200006": [26, 308], "s00371": 308, "s1": [250, 251], "s10237": 308, "s2": [250, 251], "saddl": [128, 314], "same": [20, 48, 72, 101, 119, 146, 182, 185, 186, 265, 267, 299, 300, 307, 313, 315, 316, 318], "sampl": [63, 84, 120, 210, 211, 281, 284, 292, 303, 308, 318], "satisfi": 304, "save": 144, "scaffold": [308, 310], "scalar": [2, 20, 25, 53, 68, 84, 139, 141, 142, 145, 147, 148, 151, 152, 153, 157, 158, 159, 161, 164, 165, 166, 170, 171, 174, 175, 176, 190, 205, 210, 211, 212, 268, 284, 294, 295, 297, 304, 307], "scalar_prefer": [53, 297], "scale": [64, 97, 128, 139, 142, 143, 177, 178, 179, 184, 308, 314], "scalefactor": [64, 97, 139, 141, 142, 143, 303], "scaleord": [64, 97, 139, 141, 142, 143], "scan": [310, 314], "scenario": [63, 292], "scf": 189, "schaefer": 308, "schedul": 189, "scheme": 111, "schneider": 308, "schnere": 308, "schwarz": [6, 151, 166], "scienc": 308, "scipi": [16, 64, 97, 124, 138, 139, 140, 142, 143, 184, 305], "scott": 308, "scratch": 310, "script": [2, 5, 6, 7], "se": 308, "search": [196, 197, 318], "second": [2, 5, 6, 7, 65, 83, 152, 158, 174, 190, 208, 225, 252, 253, 255, 256, 260, 261, 262, 301, 316], "section": [150, 211, 212, 279, 312, 319], "see": [2, 15, 26, 27, 28, 30, 31, 34, 35, 43, 44, 45, 64, 65, 68, 74, 84, 89, 91, 93, 97, 124, 139, 140, 142, 143, 145, 146, 187, 189, 245, 246, 247, 248, 249, 291, 297, 300, 304, 306, 307, 313, 314, 315, 316, 318, 319, 320], "seen": 6, "segment": [87, 208, 244, 313], "select": [139, 145, 297, 298, 315], "self": 252, "sensit": [121, 126, 127], "sep": 308, "separ": [143, 187, 190, 279, 286, 307, 313], "sequenti": [182, 185, 186], "seri": [6, 308, 309], "serv": 312, "set": [6, 20, 26, 44, 45, 63, 85, 86, 87, 88, 89, 91, 93, 110, 124, 130, 131, 134, 140, 145, 146, 147, 152, 158, 174, 182, 183, 184, 185, 186, 187, 194, 204, 234, 242, 247, 249, 257, 258, 259, 269, 273, 279, 285, 286, 291, 292, 293, 297, 298, 301, 307, 309, 315, 318], "set_axis_off": 301, "set_titl": [2, 301], "set_xtick": 2, "set_xticklabel": 2, "set_ylabel": 2, "set_ylim": 2, "set_yscal": 2, "seven": 314, "sever": [6, 16, 44, 299, 300, 301, 304, 305, 307, 309, 313, 316, 318], "shade": 297, "shadi": 310, "shape": [8, 9, 10, 61, 128, 129, 230, 234, 235, 236, 238, 240, 242, 243, 245, 247, 248, 249, 257, 258, 301, 308, 309, 311, 315], "shapeindex": [128, 314], "share": [91, 92, 93, 104, 255, 256, 257, 258, 288, 300, 316], "sharp": [301, 308], "she96": [308, 310], "shewchuk": [16, 136, 138, 308], "shi": 310, "shift": [7, 210], "shirlei": [241, 242, 308], "shortcom": 313, "shorter": 187, "shortest": [184, 214], "shoud": [64, 97], "should": [20, 26, 63, 64, 84, 86, 90, 96, 97, 101, 103, 119, 120, 133, 138, 139, 142, 145, 146, 147, 148, 153, 159, 171, 175, 191, 223, 227, 229, 230, 234, 240, 241, 242, 245, 246, 247, 248, 249, 257, 258, 272, 277, 281, 284, 292, 297, 299, 304, 310, 315], "shouldn": [236, 238], "show": [2, 68, 297, 300, 301, 312], "show_edg": [2, 84, 201, 202, 204, 205, 206, 207, 208, 211, 212, 297, 307], "show_empti": 195, "show_fac": 297, "shown": [297, 315, 316], "shrinkag": [140, 146], "si": 308, "si15": [308, 310], "sici": 308, "side": [24, 105, 139, 141, 142, 145, 147, 148, 233, 234, 316], "siggraph": [230, 241, 242, 246, 247, 249, 254, 308], "sigma_max": 180, "sigma_min": 180, "sign": [25, 139, 141, 142, 145, 147, 148, 162, 163, 165, 170, 171, 191, 314, 315, 319], "signific": [2, 142], "significantli": [246, 247, 249, 277, 281, 284], "similar": 313, "similarli": [307, 316], "simpl": [272, 301], "simplex": 89, "simplexmethod": 222, "simpli": [215, 265, 284, 315], "simul": [1, 297, 309], "simultan": [140, 146, 182, 185, 186], "sin": [151, 157, 161, 164, 166, 205], "sinc": [1, 301, 307, 313, 318, 320], "singl": [7, 53, 86, 88, 89, 96, 101, 119, 122, 123, 125, 129, 139, 141, 142, 143, 144, 145, 147, 148, 249, 285, 286, 303, 316, 318], "situat": 313, "six": [201, 204, 206, 209], "size": [5, 6, 64, 86, 88, 97, 110, 124, 140, 146, 187, 189, 190, 191, 198, 201, 204, 205, 206, 207, 208, 209, 210, 222, 285, 286, 293, 318], "skelet": 310, "skew": [62, 78, 121, 126, 127, 188, 215, 226, 227, 228, 229], "slice": [143, 279, 303], "slice0": 143, "slightli": [206, 207, 209, 246, 247, 249], "sliver": 222, "slow": 148, "slower": [272, 301], "small": [83, 146, 234, 236, 238, 245, 246, 247, 248, 249, 252, 253, 255, 256, 257, 258, 279, 305, 319, 320], "smaller": [198, 318], "smart": 185, "smartlaplaciansmooth": 189, "smooth": [2, 140, 146, 182, 183, 185, 186, 189, 297, 308, 317], "smooth_kwarg": 189, "smoother": 189, "smoothspher": 2, "snap": [145, 147], "snap2surf": [145, 147], "snapgrid2surf": [145, 147], "so": [52, 124, 143, 152, 153, 154, 185, 187, 307, 313, 315, 316, 318, 319], "societi": 308, "softwar": [307, 308, 310], "sohn": 308, "solid": [104, 105, 297, 308], "solid2edg": [90, 91, 94, 98, 99, 102, 109, 112, 115, 117, 291, 300], "solid2fac": [92, 93, 95, 100, 113, 118, 300], "solid2tet": [89, 96, 101, 119], "solv": [184, 314, 315, 319, 320], "some": [20, 52, 63, 72, 187, 192, 211, 212, 292, 301, 310, 312, 314], "soo": 308, "soon": 305, "sophist": 1, "sort": [108, 187, 267, 279, 280, 285, 286, 316], "sourc": [2, 5, 6, 7, 20, 24, 25, 26, 46, 47, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298], "sp": [151, 157, 161, 164, 166], "space": [6, 309, 318], "span": 191, "spars": [184, 193], "spatial": [38, 135, 138, 318], "spec": 308, "specfi": 25, "special": [309, 315], "specif": [6, 7, 144, 300, 302, 305, 307, 310, 312], "specifi": [24, 26, 62, 63, 72, 84, 86, 88, 90, 97, 104, 124, 138, 139, 141, 142, 144, 145, 147, 148, 150, 155, 156, 165, 182, 183, 184, 185, 186, 189, 190, 191, 197, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 224, 240, 245, 248, 265, 270, 271, 276, 281, 290, 292, 297, 318], "speed": [277, 281, 284], "spent": 301, "sphere": [2, 84, 89, 212, 299, 301, 304, 307, 314], "spheric": [128, 314], "sphinx": [2, 5, 6, 7, 10], "split": [83, 101, 103, 138, 189, 190, 280, 301, 313], "splitfeatur": 61, "spread": 183, "spring": [26, 140, 146, 183, 184, 308, 309, 317], "springer": 308, "spuriou": 314, "sqrt": [2, 314], "squar": [2, 87, 88, 207, 209, 314], "src": [2, 7], "stabl": 81, "stack": [64, 97, 144, 303], "standard": [63, 124, 140, 292, 309, 316], "star": 315, "start": [7, 26, 241, 242, 246, 247, 249, 279, 310, 315, 318], "state": [62, 313], "static": 68, "statist": [281, 284], "statu": 316, "step": [189, 205, 210, 301, 315], "steve": 308, "stiff": [26, 183, 184, 320], "stiffnessfactor": [26, 184], "still": [19, 81, 211, 212], "stl": [70, 306], "storag": [246, 247, 249, 308], "store": [20, 62, 116, 142, 143, 148, 187, 190, 303, 307, 316], "str": [20, 25, 26, 53, 62, 63, 64, 70, 72, 75, 84, 85, 86, 87, 88, 89, 90, 96, 97, 101, 104, 108, 110, 119, 124, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 162, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 222, 224, 236, 238, 245, 248, 252, 265, 272, 277, 281, 284, 285, 288, 291, 292, 297, 298], "straight": [7, 301, 318], "strategi": [84, 191, 318], "stretch": 314, "strict": 266, "strictli": [26, 183, 206, 207, 209, 227, 229, 245, 248, 320], "string": [25, 53, 72, 143, 187, 189, 190, 284, 297], "strive": 310, "structur": [76, 110, 191, 192, 194, 199, 236, 238, 243, 245, 248, 267, 277, 281, 284, 300, 308, 310, 315, 318], "sub": [224, 309], "subdivid": [26, 194, 318], "subdivis": [84, 191], "subject": 6, "sublist": 279, "submit": 7, "submodul": 299, "subplot": [2, 301], "subsequ": 307, "subseri": 308, "substitut": 1, "suffer": 301, "suffici": [89, 234, 236, 238, 246, 247, 249, 255, 256, 257, 258, 319, 320], "suit": 62, "suitabl": [104, 291], "sum": [2, 6, 224], "sum_": 320, "super": 315, "suppli": [198, 288, 310], "support": [1, 20, 70, 104, 108, 144, 281, 284, 306, 310], "sure": [315, 318], "surf": [20, 25, 26, 63, 73, 84, 89, 104, 203, 205, 210, 213, 265, 291, 292, 307], "surf1": [82, 83], "surf1intersect": 253, "surf2": [82, 83], "surf2intersect": 253, "surf2octre": 252, "surf2tri": [245, 248], "surf2voxel": 307, "surfac": [1, 2, 6, 18, 20, 21, 22, 26, 32, 33, 37, 44, 45, 48, 49, 50, 51, 63, 82, 83, 84, 89, 92, 104, 105, 106, 108, 109, 110, 120, 121, 124, 126, 127, 139, 140, 145, 146, 147, 148, 149, 150, 151, 157, 161, 164, 166, 169, 170, 171, 173, 182, 183, 185, 186, 187, 198, 201, 203, 204, 205, 208, 210, 213, 223, 236, 238, 245, 248, 252, 253, 263, 265, 268, 277, 281, 283, 284, 288, 292, 293, 297, 301, 302, 304, 308, 310, 313], "surface2edg": 104, "surface2octre": [236, 238, 245, 248, 277, 281, 284, 318], "surfacemesh": [2, 5, 149, 150, 151, 157, 161, 164, 166, 169, 173, 301, 304], "surfacenodeoptim": 2, "surfconn": [26, 32, 52, 92, 106, 108, 110, 121, 126, 127, 198, 232, 236, 238, 245, 248, 252, 263, 268, 277, 283], "surfconn1": [253, 281, 284], "surfconn2": [253, 281, 284], "surfcoord": 110, "sw05": [84, 191, 192, 308, 318], "sweep": 7, "sydnei": 310, "symbol": [84, 120, 151, 154, 157, 160, 161, 164, 166, 176], "symfun": 172, "symfun1": [154, 160, 176], "symfun2": [154, 160, 176], "symmetr": [152, 153, 154, 301], "sympi": [120, 146, 151, 154, 157, 160, 161, 164, 166, 176, 301, 305], "symposium": 308, "system": [81, 124, 273, 314, 318, 320], "t": [26, 39, 41, 60, 63, 68, 73, 92, 108, 109, 145, 170, 171, 172, 183, 185, 187, 230, 236, 238, 245, 246, 247, 248, 249, 254, 255, 256, 257, 258, 277, 281, 283, 284, 288, 292, 307, 312, 314, 315, 316, 318, 319, 320], "t_": 319, "t_i": 319, "t_j": 315, "t_p": 315, "tabl": [300, 313, 315], "take": [6, 72, 155, 156, 190, 208, 307, 315], "taken": [53, 104, 105, 190, 313, 318], "tami": 308, "tandfonlin": 308, "tangent": [140, 146, 186], "tangenti": [2, 140, 146, 185, 186], "tangentialsurfac": 185, "target": [185, 187, 188, 189, 190], "task": 310, "taubin": 5, "td": 319, "techniqu": 308, "teeth": 310, "temporarili": 224, "term": [281, 284, 307, 316], "termin": [182, 183, 185, 186, 315, 318], "teseo": 308, "tessel": 308, "test": [108, 230, 233, 234, 235, 236, 238, 240, 243, 245, 248, 249, 254, 255, 256, 257, 258, 308, 313, 318], "tet": [89, 90, 104, 107, 141, 147, 205, 206, 210, 224, 265, 268, 291, 316], "tet10nodeconn": 111, "tet4nodeconn": [111, 114], "tetconn": [96, 101, 107, 119], "tetconn1to14": 119, "tetconn1to2": 101, "tetconn1to24": 96, "tetconn1to3": 119, "tetconn1to36": 119, "tetconn1to4": 101, "tetconn1to5": 96, "tetconn1to6": 96, "tetcontract": 189, "tetcoord": 107, "tetcoords1to14": 119, "tetcoords1to2": 101, "tetcoords1to24": 96, "tetcoords1to3": 119, "tetcoords1to36": 119, "tetcoords1to4": 101, "tetcoords1to5": 96, "tetcoords1to6": 96, "tetflip": 189, "tetgen": [308, 310], "tetmesh": [6, 268, 301, 304], "tetnodeconn": 89, "tetnodecoord": 89, "tetopt": 26, "tetradehdr": 111, "tetradehedr": 111, "tetrahedr": [26, 63, 89, 90, 96, 101, 104, 111, 112, 113, 114, 119, 131, 141, 147, 187, 189, 190, 205, 206, 210, 215, 222, 228, 260, 282, 292, 301, 302, 308, 310, 315, 316], "tetrahedra": [84, 89, 96, 101, 107, 119, 139, 145, 147, 210, 228, 301, 302, 309, 316], "tetrahedron": [260, 302, 315], "tetraher": 1, "tetsplit": 189, "th": [308, 320], "tha": 315, "than": [18, 25, 63, 64, 72, 75, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 112, 113, 115, 117, 118, 119, 124, 139, 140, 141, 142, 143, 145, 146, 147, 148, 182, 183, 185, 186, 187, 190, 191, 192, 198, 224, 246, 247, 249, 265, 266, 268, 277, 281, 284, 292, 300, 301, 310, 313, 314, 315, 316, 318], "thei": [6, 39, 41, 53, 86, 90, 108, 140, 146, 238, 267, 279, 280, 285, 299, 300, 302, 307, 309, 313, 314, 316, 318], "them": [83, 204, 305, 307, 315, 318], "theme": [295, 297, 310], "theorema": 314, "theoret": 2, "theori": [1, 15, 310, 315], "therefor": 314, "theta_resolut": [202, 203, 211, 212], "thi": [1, 5, 6, 7, 16, 18, 20, 24, 25, 26, 38, 48, 52, 53, 62, 63, 73, 83, 84, 87, 89, 90, 96, 101, 107, 108, 109, 116, 119, 121, 124, 126, 127, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 157, 161, 164, 165, 166, 170, 171, 173, 183, 189, 190, 191, 192, 198, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 225, 236, 238, 241, 242, 245, 246, 247, 248, 249, 255, 256, 257, 258, 265, 269, 284, 292, 297, 299, 301, 302, 304, 307, 310, 312, 313, 314, 315, 316, 318, 319, 320], "thick": [26, 170, 171], "thick_fun": 171, "thicken": 171, "thickenf": [6, 268], "thieri": 308, "thing": 307, "third": [135, 138, 260, 261, 262], "thoroughli": 315, "those": [72, 266, 274, 307, 315, 316, 318, 319], "though": [6, 301], "thousand": 318, "three": [5, 86, 116, 120, 139, 141, 142, 145, 147, 148, 149, 150, 153, 154, 159, 160, 169, 171, 173, 175, 176, 177, 178, 179, 190, 197, 206, 210, 211, 212, 223, 233, 246, 254, 255, 256, 277, 300, 303, 304, 307, 309, 314, 315, 316, 318, 319], "threhsold": 53, "threshold": [25, 64, 84, 85, 86, 87, 88, 89, 97, 139, 140, 141, 142, 145, 146, 147, 148, 191, 268, 301, 309, 313, 314], "threshold_dir": [139, 141], "threshold_direct": [25, 64, 97, 139, 141, 142, 145, 147, 148, 301, 307], "thrich": 308, "through": [24, 84, 86, 145, 147, 148, 187, 265, 300, 301, 306, 313, 316], "throughout": [304, 310], "thu": [96, 101, 107, 111, 119, 140, 146, 187, 314], "thurrnerwuthrich98": [272, 308], "tiff": [64, 97, 144, 303], "tifffil": 303, "tight_layout": 301, "tim": [1, 310], "time": [2, 5, 6, 7, 182, 185, 186, 187, 189, 246, 247, 249, 307, 315, 319], "times3": 319, "timothi": 308, "tissu": [308, 310], "todo": [90, 104, 266, 284, 288], "togeth": [65, 274, 301], "toj": 7, "tol": [59, 65, 82, 138, 266, 267, 277, 281, 284], "toler": [65, 82, 83, 84, 89, 182, 183, 185, 186, 245, 248, 252, 253, 266, 267, 277, 281, 284], "toma": 308, "too": 124, "tool": [13, 14, 15, 17, 18, 255, 256, 257, 258, 308, 310], "toolbox": 310, "top": [6, 9, 311], "topolog": [33, 37, 308, 313], "topologi": [8, 9, 10, 311, 316], "toru": 304, "total": [2, 4, 5, 6, 7, 9, 11, 26, 211, 212, 213, 311], "touch": 315, "toward": [140, 146, 314, 315], "tpm": [8, 9, 10, 151, 157, 161, 164, 166, 311], "tpmss": 6, "trace": 301, "trade": 316, "transact": 308, "transfer": [20, 89], "transit": 192, "transpar": 297, "travers": [315, 316, 318], "treat": [86, 90, 104, 140, 143, 146, 315, 320], "tree": 318, "tri": [90, 103, 104, 145, 197, 201, 202, 203, 204, 205, 207, 209, 210, 211, 212, 230, 234, 237, 239, 247, 249, 262, 265, 301, 309], "tri1": [255, 256, 257, 258], "tri2": [255, 256, 257, 258], "triangl": [2, 16, 63, 87, 88, 89, 121, 126, 127, 133, 135, 138, 197, 198, 211, 212, 229, 230, 233, 234, 245, 246, 247, 248, 249, 254, 255, 256, 257, 258, 261, 262, 263, 265, 266, 292, 302, 305, 308, 310, 313, 315, 318], "triangleboxintersect": 230, "triangluar": 284, "triangul": [1, 121, 126, 127, 130, 131, 133, 135, 136, 139, 145, 308, 313], "triangular": [26, 63, 83, 87, 88, 90, 100, 103, 104, 113, 115, 118, 198, 201, 202, 203, 204, 205, 207, 209, 210, 211, 212, 222, 223, 229, 236, 238, 245, 248, 252, 263, 281, 283, 284, 292, 300, 310], "triconn": 103, "tricoord": [233, 246, 254], "trimesh": 310, "trimetr": [297, 301, 307], "trinorm": [230, 254], "tripli": [6, 151, 157, 161, 164, 166], "tritanomali": 297, "trough": 128, "true": [2, 20, 26, 53, 62, 65, 68, 75, 84, 85, 86, 87, 88, 89, 91, 92, 93, 104, 105, 107, 124, 132, 134, 140, 144, 145, 146, 147, 151, 157, 161, 164, 166, 182, 183, 184, 185, 186, 187, 189, 190, 197, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 214, 215, 216, 217, 219, 220, 221, 222, 224, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 267, 274, 279, 280, 281, 284, 297, 301], "truli": 6, "trumbor": [246, 247, 249, 308, 319], "tube": [173, 212], "tupl": [53, 68, 84, 86, 88, 97, 139, 141, 142, 143, 144, 145, 147, 148, 184, 191, 206, 231, 241, 297, 303], "twin": 315, "twist": 205, "twist_cent": 205, "two": [2, 53, 68, 82, 83, 85, 87, 88, 89, 92, 93, 135, 138, 152, 153, 154, 158, 159, 160, 174, 175, 176, 190, 204, 231, 241, 253, 255, 256, 257, 258, 265, 267, 268, 274, 279, 300, 301, 303, 314, 315, 316, 318], "type": [20, 24, 25, 60, 62, 63, 64, 66, 67, 70, 73, 74, 82, 84, 89, 90, 92, 94, 95, 98, 99, 100, 102, 103, 104, 106, 109, 112, 113, 115, 116, 117, 118, 122, 123, 125, 128, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 182, 183, 185, 186, 187, 189, 190, 191, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 240, 241, 242, 243, 246, 249, 254, 255, 256, 257, 259, 263, 264, 265, 266, 269, 271, 272, 276, 277, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 297, 298, 300, 301, 303, 306, 307, 310, 318], "typic": [2, 96, 101, 107, 119], "u": [279, 280, 301, 319], "uedg": 91, "ufac": 93, "ultim": 319, "un": 316, "unambigu": [63, 292, 316], "unattach": 33, "unchang": [96, 101, 111, 119, 267, 271, 303, 314], "unclos": [104, 109, 110, 301], "underbrac": 314, "undergon": 108, "understand": [310, 312], "unexpect": 110, "unidirect": 319, "uniform": [2, 20, 89, 147, 190, 269, 293, 309], "union": [82, 89, 175, 301, 304, 310], "union_fun": 175, "union_sym": 176, "union_v": 174, "unionf": [84, 301], "uniqu": [33, 91, 93, 265, 280, 313, 315], "unit": [2, 121, 124, 126, 127, 140, 241, 242, 246, 247, 249, 272, 304, 314, 320], "unitless": 314, "univers": 310, "unknown": 314, "unless": 291, "unload": 184, "unnecessari": 307, "unpack": [139, 141, 142, 145, 147, 148, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212], "unsign": 163, "until": [182, 183, 185, 186, 187, 194, 198, 318, 320], "unus": 187, "up": [20, 63, 292, 297, 303, 309], "updat": [62, 184, 265, 267, 316], "upon": 310, "upper": [53, 68, 149, 206, 207, 209, 230, 231, 235, 241, 242, 254, 319], "url": 308, "us": [1, 6, 7, 16, 18, 20, 24, 25, 26, 33, 37, 44, 53, 64, 68, 84, 86, 87, 88, 89, 90, 94, 95, 96, 98, 99, 100, 101, 102, 104, 105, 107, 108, 110, 112, 113, 115, 117, 118, 119, 124, 136, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 166, 174, 175, 176, 182, 183, 185, 186, 187, 189, 190, 191, 192, 205, 208, 222, 225, 226, 228, 234, 236, 238, 245, 246, 247, 248, 249, 255, 256, 257, 258, 265, 267, 268, 272, 276, 277, 279, 280, 281, 284, 285, 293, 297, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320], "usag": 316, "user": [305, 307, 310, 312], "userwarn": 7, "util": [2, 7, 75, 89, 96, 107, 108, 119, 121, 124, 126, 127, 213, 223, 249, 301, 303, 305, 306, 307, 316], "uv_1": 319, "v": [33, 84, 145, 147, 148, 191, 224, 228, 282, 283, 288, 315, 319], "v_0": 319, "v_1": 319, "v_2": 319, "val": [116, 155], "valid": [236, 238, 266, 310, 315, 316], "valu": [2, 18, 25, 26, 53, 68, 82, 85, 86, 87, 88, 89, 116, 122, 123, 124, 125, 129, 139, 141, 142, 145, 147, 148, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 165, 170, 171, 174, 175, 176, 184, 191, 234, 236, 238, 246, 247, 249, 255, 256, 257, 258, 266, 267, 271, 276, 277, 281, 284, 285, 286, 297, 301, 307, 313, 314, 316, 319], "van": [122, 128, 129, 308], "vari": [6, 206, 207, 209, 300], "variabl": [153, 154, 159, 160, 171, 175, 176, 276, 299, 304], "varieti": [75, 300, 303, 306, 309, 310, 313], "variou": [80, 306, 307, 310, 316, 318], "vast": 301, "vdot": 314, "vector": [1, 5, 20, 24, 32, 44, 45, 84, 108, 121, 126, 127, 140, 146, 150, 151, 153, 157, 159, 161, 164, 166, 171, 175, 190, 209, 210, 221, 223, 225, 230, 231, 233, 234, 236, 238, 241, 242, 243, 245, 246, 247, 248, 249, 254, 257, 258, 263, 272, 277, 308, 314, 316, 319], "vector_func": [151, 157, 161, 164, 166], "vectoriz": 304, "verbos": [2, 20, 62, 144, 187, 188, 189, 190, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 281, 284], "veri": 310, "verifi": [73, 284, 310, 316], "versa": 318, "version": [2, 75, 89, 230, 249, 272, 310, 316], "vertebr": 310, "vertex": [33, 308, 315, 316], "vertexvalu": 86, "vertic": [33, 84, 86, 88, 111, 139, 140, 141, 145, 146, 147, 191, 192, 197, 230, 233, 234, 246, 247, 249, 254, 255, 256, 257, 258, 260, 261, 262, 313, 315, 318], "via": [2, 136, 140], "viabl": 187, "vice": 318, "victoria": 308, "view": [68, 95, 100, 113, 118, 263, 301, 307, 314], "visibl": [272, 315], "vision": [297, 308], "vispi": [297, 298, 305], "visual": [68, 74, 301, 305, 308], "vivian": 310, "vo": 309, "vol": [20, 25, 63, 73, 84, 89, 104, 213, 265, 292, 301], "volum": [5, 20, 32, 33, 37, 62, 63, 73, 84, 89, 96, 106, 107, 109, 119, 140, 146, 186, 205, 210, 213, 222, 228, 265, 273, 282, 283, 292, 302, 304, 308, 310, 313, 315, 316], "volumetr": [301, 309], "von": 308, "voronoi": 308, "voxel": [64, 86, 97, 110, 116, 124, 139, 140, 142, 143, 148, 155, 156, 162, 163, 193, 199, 240, 269, 270, 293, 307], "voxel2octre": 318, "voxelconn": [97, 110, 116, 155, 156, 193, 199, 240, 269, 293], "voxelcoord": [97, 110, 116, 155, 156, 193, 199, 240, 269, 293], "voxeldata": 97, "voxelmesh": [303, 304], "voxelnodeconn": [85, 307], "voxelnodecoord": [85, 307], "voxels": [64, 97, 124, 140], "vsn91": [6, 308], "vtk": [70, 310], "vtu": [70, 306], "vv_2": 319, "w": [6, 7, 84, 139, 145, 147, 148, 149, 150, 151, 157, 161, 164, 166, 169, 173, 201, 202, 204, 205, 206, 207, 208, 211, 212, 268, 301, 307, 308, 314], "wa": [1, 187, 298, 307, 310, 315], "wai": [101, 119, 121, 126, 127, 299, 301, 304, 315, 319], "walk": 315, "wall": 204, "wang": 308, "warn": [7, 73], "warren": 308, "wat81": [130, 308, 315], "watertight": 313, "watson": [130, 131, 138, 308], "wbms05": [241, 242, 308, 319], "we": [310, 314], "websit": 192, "wedg": [63, 89, 90, 101, 104, 117, 118, 119, 205, 210, 215, 222, 292, 302, 313], "wedgeconn": 119, "wedgecoord": 119, "weight": [6, 272], "weights1": 6, "weights2": 6, "weights3": 6, "weights4": 6, "weingarten": 314, "well": [16, 108, 145, 147, 222, 305, 307, 310, 312], "were": [187, 190], "what": [107, 206, 207, 209, 266, 288, 301, 313], "when": [20, 63, 95, 100, 113, 118, 177, 178, 179, 182, 183, 185, 186, 187, 246, 247, 249, 263, 267, 292, 300, 301, 302, 312, 314, 315, 318], "where": [2, 18, 20, 111, 145, 147, 148, 183, 190, 191, 206, 207, 209, 252, 255, 256, 257, 258, 278, 300, 304, 309, 313, 314, 315, 316, 319, 320], "whether": [53, 65, 84, 86, 87, 88, 89, 124, 185, 191, 197, 213, 225, 235, 236, 238, 240, 245, 246, 247, 248, 249, 265, 268, 297, 313, 314, 315, 316, 318, 319], "which": [1, 2, 5, 16, 53, 89, 90, 96, 107, 108, 110, 119, 120, 143, 145, 147, 148, 162, 163, 184, 187, 189, 190, 193, 200, 210, 224, 249, 277, 280, 297, 300, 301, 303, 306, 309, 310, 312, 313, 314, 315, 318], "whichev": [63, 292], "while": [26, 182, 183, 185, 186, 300, 301, 304, 309, 310, 312, 314, 315, 316, 318], "white": [2, 5, 6], "who": 266, "whose": [177, 178, 179, 184, 315], "why": 312, "wide": 310, "width": [2, 297], "wikipedia": 304, "wil": 187, "wild": 308, "wilei": 308, "william": [241, 242, 308, 319], "window": 297, "wirefram": [297, 309], "within": [1, 26, 90, 104, 108, 145, 147, 155, 156, 187, 190, 191, 192, 198, 246, 247, 249, 277, 282, 283, 309, 315, 318, 319], "without": [140, 146, 183, 267, 305, 307, 314, 315], "won": [60, 68, 277, 281, 284, 288, 307, 312], "word": 189, "work": [2, 7, 81, 110, 279, 300, 310, 312, 319], "worst": [78, 215, 216, 220, 221, 222, 226, 227, 228, 229], "would": 314, "wrap": [81, 124, 134, 269, 310], "wrapper": [135, 136, 310], "write": [20, 303, 306], "written": [20, 70, 144, 303, 310, 314], "www": [241, 242, 308], "x": [5, 6, 18, 84, 86, 89, 116, 120, 143, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 164, 166, 169, 171, 173, 175, 176, 177, 178, 179, 183, 190, 191, 196, 202, 203, 204, 205, 208, 209, 210, 212, 230, 231, 235, 241, 242, 254, 275, 297, 303, 304, 308, 309, 314, 315, 319, 320], "x0": [106, 177, 293], "x1": [106, 149, 267, 269, 270, 282, 283, 284], "x2": [149, 284], "x3": 284, "x4": [281, 284], "x_": 319, "x_0": 314, "x_1": 314, "x_i": [314, 320], "x_iy_i": 314, "x_n": 314, "xifeng": 308, "xin": 53, "xlim": [230, 231, 235, 241, 242, 254], "xmax": [84, 145, 147, 148, 191, 201, 204, 206, 207, 209, 230, 235, 254, 319], "xmin": [84, 145, 147, 148, 191, 201, 204, 206, 207, 209, 230, 235, 254, 319], "xnew": 184, "xout": 53, "xy": [179, 275, 297], "xz": [178, 275, 297], "y": [5, 6, 18, 84, 86, 89, 116, 120, 143, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 164, 166, 169, 171, 173, 175, 176, 177, 178, 179, 183, 190, 191, 196, 202, 203, 204, 205, 208, 209, 210, 212, 230, 231, 235, 241, 242, 254, 275, 297, 303, 304, 308, 309, 314, 315, 319], "y0": [106, 178, 293], "y1": [106, 149, 267, 269, 270, 282, 283, 284], "y2": [149, 284], "y3": 284, "y_": 319, "y_0": 314, "y_1": 314, "y_i": [314, 320], "y_n": 314, "yet": [7, 39, 41, 191], "yixin": 308, "ylim": [230, 231, 235, 241, 242, 254], "ymax": [84, 145, 147, 148, 191, 201, 204, 206, 207, 209, 230, 235, 254, 319], "ymin": [84, 145, 147, 148, 191, 201, 204, 206, 207, 209, 230, 235, 254, 319], "yongji": 308, "you": [1, 307], "yutaka": 308, "yx": 116, "yz": [177, 275], "z": [5, 6, 18, 84, 86, 88, 89, 116, 120, 140, 143, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 164, 166, 169, 171, 173, 175, 176, 177, 178, 179, 183, 190, 191, 196, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 230, 231, 235, 241, 242, 254, 275, 297, 303, 304, 308, 314, 315, 319], "z0": [106, 179, 293], "z1": [106, 149, 267, 269, 270, 282, 283, 284], "z2": [149, 284], "z3": 284, "z_": 319, "z_0": 314, "z_1": 314, "z_i": [314, 320], "z_n": 314, "zbs03": [191, 308, 318], "zeitschrift": 308, "zero": [6, 18, 183, 205, 268, 319], "zhang": [283, 308], "zhou": 308, "zip": [2, 5, 6, 7], "ziti": 7, "zlim": [230, 231, 235, 241, 242, 254], "zmax": [84, 145, 147, 148, 191, 201, 204, 206, 209, 230, 235, 254, 319], "zmin": [84, 145, 147, 148, 191, 201, 204, 206, 209, 230, 235, 254, 319], "zoom": [64, 97, 139, 142, 143], "zorin": 308, "\u00f6": 308, "\u00fc": 308}, "titles": ["API Reference", "Development", "Curvature Analysis", "Mesh Analysis Examples", "Computation times", "Implicit Heart", "Mixed-Topology TPMS", "Pasta Shapes", "Mesh Generation Examples", "Computation times", "Examples", "Computation times", "mymesh.booleans", "mymesh.contour", "mymesh.converter", "mymesh.curvature", "mymesh.delaunay", "mymesh.image", "mymesh.implicit", "mymesh.improvement", "mymesh.mesh", "mymesh.mesh.mesh.BoundaryConn", "mymesh.mesh.mesh.BoundaryNodes", "mymesh.mesh.mesh.Centroids", "mymesh.mesh.mesh.Clip", "mymesh.mesh.mesh.Contour", "mymesh.mesh.mesh.CreateBoundaryLayer", "mymesh.mesh.mesh.EdgeConn", "mymesh.mesh.mesh.EdgeElemConn", "mymesh.mesh.mesh.Edges", "mymesh.mesh.mesh.ElemConn", "mymesh.mesh.mesh.ElemNeighbors", "mymesh.mesh.mesh.ElemNormals", "mymesh.mesh.mesh.EulerCharacteristic", "mymesh.mesh.mesh.FaceConn", "mymesh.mesh.mesh.FaceElemConn", "mymesh.mesh.mesh.Faces", "mymesh.mesh.mesh.Genus", "mymesh.mesh.mesh.ND", "mymesh.mesh.mesh.NEdge", "mymesh.mesh.mesh.NElem", "mymesh.mesh.mesh.NFace", "mymesh.mesh.mesh.NNode", "mymesh.mesh.mesh.NodeNeighbors", "mymesh.mesh.mesh.NodeNormals", "mymesh.mesh.mesh.NodeNormalsMethod", "mymesh.mesh.mesh.RenumberFacesBySet", "mymesh.mesh.mesh.RenumberNodesBySet", "mymesh.mesh.mesh.SurfConn", "mymesh.mesh.mesh.SurfElemConn", "mymesh.mesh.mesh.SurfNodeNeighbors", "mymesh.mesh.mesh.SurfNodes", "mymesh.mesh.mesh.Surface", "mymesh.mesh.mesh.Threshold", "mymesh.mesh.mesh.addEdges", "mymesh.mesh.mesh.addElems", "mymesh.mesh.mesh.addFaces", "mymesh.mesh.mesh.addNodes", "mymesh.mesh.mesh.cells", "mymesh.mesh.mesh.cleanup", "mymesh.mesh.mesh.copy", "mymesh.mesh.mesh.getCurvature", "mymesh.mesh.mesh.getQuality", "mymesh.mesh.mesh.identify_type", "mymesh.mesh.mesh.imread", "mymesh.mesh.mesh.merge", "mymesh.mesh.mesh.meshio2mymesh", "mymesh.mesh.mesh.mymesh2meshio", "mymesh.mesh.mesh.plot", "mymesh.mesh.mesh.points", "mymesh.mesh.mesh.read", "mymesh.mesh.mesh.removeElems", "mymesh.mesh.mesh.reset", "mymesh.mesh.mesh.validate", "mymesh.mesh.mesh.view", "mymesh.mesh.mesh.write", "mymesh.octree", "mymesh.primitives", "mymesh.quality", "mymesh.rays", "mymesh.utils", "mymesh.visualize", "mymesh.booleans.MeshBooleans", "mymesh.booleans.SplitMesh", "mymesh.contour.Adaptive", "mymesh.contour.MarchingCubes", "mymesh.contour.MarchingCubesImage", "mymesh.contour.MarchingSquares", "mymesh.contour.MarchingSquaresImage", "mymesh.contour.MarchingTetrahedra", "mymesh.converter.EdgesByElement", "mymesh.converter.edges2unique", "mymesh.converter.faces2surface", "mymesh.converter.faces2unique", "mymesh.converter.hex2edges", "mymesh.converter.hex2faces", "mymesh.converter.hex2tet", "mymesh.converter.im2voxel", "mymesh.converter.polygon2edges", "mymesh.converter.pyramid2edges", "mymesh.converter.pyramid2faces", "mymesh.converter.pyramid2tet", "mymesh.converter.quad2edges", "mymesh.converter.quad2tri", "mymesh.converter.solid2edges", "mymesh.converter.solid2faces", "mymesh.converter.solid2surface", "mymesh.converter.solid2tets", "mymesh.converter.surf2dual", "mymesh.converter.surf2edges", "mymesh.converter.surf2voxel", "mymesh.converter.tet102tet4", "mymesh.converter.tet2edges", "mymesh.converter.tet2faces", "mymesh.converter.tet42tet10", "mymesh.converter.tri2edges", "mymesh.converter.voxel2im", "mymesh.converter.wedge2edges", "mymesh.converter.wedge2faces", "mymesh.converter.wedge2tet", "mymesh.curvature.AnalyticalCurvature", "mymesh.curvature.CubicFit", "mymesh.curvature.Curvedness", "mymesh.curvature.GaussianCurvature", "mymesh.curvature.ImageCurvature", "mymesh.curvature.MeanCurvature", "mymesh.curvature.NormCurve", "mymesh.curvature.QuadFit", "mymesh.curvature.ShapeCategory", "mymesh.curvature.ShapeIndex", "mymesh.delaunay.BowyerWatson2d", "mymesh.delaunay.BowyerWatson3d", "mymesh.delaunay.ConvexHull", "mymesh.delaunay.ConvexHullFanTriangulation", "mymesh.delaunay.ConvexHull_GiftWrapping", "mymesh.delaunay.SciPy", "mymesh.delaunay.Triangle", "mymesh.delaunay.TriangleSplittingTriangulation", "mymesh.delaunay.Triangulate", "mymesh.image.SurfaceMesh", "mymesh.image.SurfaceNodeOptimization", "mymesh.image.TetMesh", "mymesh.image.VoxelMesh", "mymesh.image.read", "mymesh.image.write", "mymesh.implicit.SurfaceMesh", "mymesh.implicit.SurfaceNodeOptimization", "mymesh.implicit.TetMesh", "mymesh.implicit.VoxelMesh", "mymesh.implicit.box", "mymesh.implicit.cylinder", "mymesh.implicit.diamond", "mymesh.implicit.diff", "mymesh.implicit.difff", "mymesh.implicit.diffs", "mymesh.implicit.grid2fun", "mymesh.implicit.grid2grad", "mymesh.implicit.gyroid", "mymesh.implicit.intersection", "mymesh.implicit.intersectionf", "mymesh.implicit.intersections", "mymesh.implicit.lidinoid", "mymesh.implicit.mesh2sdf", "mymesh.implicit.mesh2udf", "mymesh.implicit.neovius", "mymesh.implicit.offset", "mymesh.implicit.primitive", "mymesh.implicit.rMax", "mymesh.implicit.rMin", "mymesh.implicit.sphere", "mymesh.implicit.thicken", "mymesh.implicit.thickenf", "mymesh.implicit.thickens", "mymesh.implicit.torus", "mymesh.implicit.union", "mymesh.implicit.unionf", "mymesh.implicit.unions", "mymesh.implicit.xplane", "mymesh.implicit.yplane", "mymesh.implicit.zplane", "mymesh.improvement.GeoTransformSmoothing", "mymesh.improvement.GlobalLaplacianSmoothing", "mymesh.improvement.LocalLaplacianSmoothing", "mymesh.improvement.NodeSpringSmoothing", "mymesh.improvement.SegmentSpringSmoothing", "mymesh.improvement.SmartLaplacianSmoothing", "mymesh.improvement.TangentialLaplacianSmoothing", "mymesh.improvement.TetContract", "mymesh.improvement.TetFlip", "mymesh.improvement.TetImprove", "mymesh.improvement.TetSplit", "mymesh.octree.Function2Octree", "mymesh.octree.Octree2Dual", "mymesh.octree.Octree2Voxel", "mymesh.octree.Points2Octree", "mymesh.octree.Print", "mymesh.octree.SearchOctree", "mymesh.octree.SearchOctreeTri", "mymesh.octree.Surface2Octree", "mymesh.octree.Voxel2Octree", "mymesh.octree.getAllLeaf", "mymesh.primitives.Box", "mymesh.primitives.Circle", "mymesh.primitives.CirclePt", "mymesh.primitives.Cylinder", "mymesh.primitives.Extrude", "mymesh.primitives.Grid", "mymesh.primitives.Grid2D", "mymesh.primitives.Line", "mymesh.primitives.Plane", "mymesh.primitives.Revolve", "mymesh.primitives.Sphere", "mymesh.primitives.Torus", "mymesh.quality.Area", "mymesh.quality.AspectRatio", "mymesh.quality.InverseOrthogonalQuality", "mymesh.quality.InverseOrthogonality", "mymesh.quality.MaxDihedral", "mymesh.quality.MeanRatio", "mymesh.quality.MinDihedral", "mymesh.quality.OrthogonalQuality", "mymesh.quality.Orthogonality", "mymesh.quality.Skewness", "mymesh.quality.SurfDihedralAngles", "mymesh.quality.Volume", "mymesh.quality.dihedralAngles", "mymesh.quality.equiangular_skewness", "mymesh.quality.quad_skewness", "mymesh.quality.tet_vol_skewness", "mymesh.quality.tri_skewness", "mymesh.rays.BoxTrianglesIntersection", "mymesh.rays.PlaneBoxIntersection", "mymesh.rays.PlaneSurfIntersection", "mymesh.rays.PlaneTriangleIntersection", "mymesh.rays.PlaneTrianglesIntersection", "mymesh.rays.PointInBox", "mymesh.rays.PointInSurf", "mymesh.rays.PointInTri", "mymesh.rays.PointsInSurf", "mymesh.rays.PointsInTris", "mymesh.rays.PointsInVoxel", "mymesh.rays.RayBoxIntersection", "mymesh.rays.RayBoxesIntersection", "mymesh.rays.RayOctreeIntersection", "mymesh.rays.RaySegmentsIntersection", "mymesh.rays.RaySurfIntersection", "mymesh.rays.RayTriangleIntersection", "mymesh.rays.RayTrianglesIntersection", "mymesh.rays.RaysSurfIntersection", "mymesh.rays.RaysTrianglesIntersection", "mymesh.rays.SegmentSegmentIntersection", "mymesh.rays.SegmentsSegmentsIntersection", "mymesh.rays.SurfSelfIntersection", "mymesh.rays.SurfSurfIntersection", "mymesh.rays.TriangleBoxIntersection", "mymesh.rays.TriangleTriangleIntersection", "mymesh.rays.TriangleTriangleIntersectionPt", "mymesh.rays.TrianglesTrianglesIntersection", "mymesh.rays.TrianglesTrianglesIntersectionPts", "mymesh.utils.AABB", "mymesh.utils.BaryTet", "mymesh.utils.BaryTri", "mymesh.utils.BaryTris", "mymesh.utils.CalcFaceNormal", "mymesh.utils.Centroids", "mymesh.utils.CleanupDegenerateElements", "mymesh.utils.DeleteDegenerateElements", "mymesh.utils.DeleteDuplicateNodes", "mymesh.utils.DetectFeatures", "mymesh.utils.DilateVoxel", "mymesh.utils.ErodeVoxel", "mymesh.utils.ExtractRagged", "mymesh.utils.Face2NodeNormal", "mymesh.utils.MVBB", "mymesh.utils.MergeMesh", "mymesh.utils.MirrorMesh", "mymesh.utils.PadRagged", "mymesh.utils.Project2Surface", "mymesh.utils.RelabelNodes", "mymesh.utils.SortRaggedByLength", "mymesh.utils.SplitRaggedByLength", "mymesh.utils.SurfMapping", "mymesh.utils.TetMeshVol", "mymesh.utils.TriSurfVol", "mymesh.utils.ValueMapping", "mymesh.utils.getConnectedElements", "mymesh.utils.getConnectedNodes", "mymesh.utils.getElemConnectivity", "mymesh.utils.getElemNeighbors", "mymesh.utils.getNodeNeighborhood", "mymesh.utils.getNodeNeighborhoodByRadius", "mymesh.utils.getNodeNeighbors", "mymesh.utils.identify_type", "mymesh.utils.makePyramidLayer", "mymesh.visualize.FaceColor", "mymesh.visualize.GetTheme", "mymesh.visualize.ParseColor", "mymesh.visualize.View", "mymesh.visualize.set_vispy_backend", "User Guide", "Connectivity Representations", "Constructive Solid Geometry", "Element Types", "Image-based Meshing", "Implicit Meshing", "Installation", "File Input/Output", "Working with the <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">mesh</span></code> class", "References", "What is a mesh?", "MyMesh: General purpose, implicit, and image-based meshing in python", "Computation times", "Theory Guide", "Contour", "Curvature", "Delaunay Triangulation", "2\u21923 and 3\u21922 Flips", "Improvement", "Octree", "Rays", "Spring-based Smoothing"], "titleterms": {"2": 316, "2d": [77, 300, 309], "3": 316, "33": 313, "3d": [77, 309], "On": 307, "aabb": 259, "acknowledg": 310, "adapt": 84, "addedg": 54, "addelem": 55, "addfac": 56, "addnod": 57, "an": [5, 304], "analysi": [2, 3, 10], "analyt": 314, "analyticalcurvatur": 120, "api": 0, "area": 213, "aspectratio": 214, "barytet": 260, "barytri": [261, 262], "base": [17, 303, 310, 314, 320], "boolean": [12, 82, 83], "boundaryconn": 21, "boundarynod": 22, "bowyer": 315, "bowyerwatson2d": 130, "bowyerwatson3d": 131, "box": [149, 201, 319], "boxtrianglesintersect": 230, "calcfacenorm": 263, "calcul": [2, 15, 78, 314], "caviti": 315, "cell": 58, "centroid": [23, 264], "circl": 202, "circlept": 203, "circumcircl": 315, "class": 307, "clean": 80, "cleanup": 59, "cleanupdegenerateel": 265, "clip": [24, 307], "cloud": 318, "comput": [4, 9, 11, 311], "connect": [14, 80, 300], "construct": [77, 301], "contour": [13, 25, 84, 85, 86, 87, 88, 89, 307, 313], "convent": 314, "convers": [14, 15, 76], "convert": [14, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119], "convex": 16, "convexhul": 132, "convexhull_giftwrap": 134, "convexhullfantriangul": 133, "copi": [60, 307], "core": 305, "creat": 5, "createboundarylay": 26, "creation": 76, "csg": 301, "cube": 313, "cubic": 314, "cubicfit": 121, "curvatur": [2, 15, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 314], "curved": [122, 314], "cylind": [150, 204], "data": 316, "defin": [5, 304], "definit": 318, "delaunai": [16, 130, 131, 132, 133, 134, 135, 136, 137, 138, 315], "deletedegenerateel": 266, "deleteduplicatenod": 267, "demand": 307, "depend": 305, "detectfeatur": 268, "develop": 1, "diamond": 151, "diff": [152, 154], "difff": 153, "dihedralangl": 225, "dilatevoxel": 269, "distanc": 318, "edg": [29, 316], "edgeconn": 27, "edgeelemconn": 28, "edges2uniqu": 91, "edgesbyel": 90, "elemconn": 30, "element": [14, 302, 316], "elemneighbor": 31, "elemnorm": 32, "equiangular_skew": 226, "erodevoxel": 270, "error": [2, 318], "euclidean": 318, "eulercharacterist": 33, "exampl": [3, 8, 10, 300], "explicit": 301, "extractrag": 271, "extrud": 205, "face": [36, 316], "face2nodenorm": 272, "facecolor": 294, "faceconn": 34, "faceelemconn": 35, "faces2surfac": 92, "faces2uniqu": 93, "featur": 1, "file": [17, 306], "fit": 314, "flip": 316, "format": 315, "from": [76, 305, 307], "function": [5, 18, 78, 304, 318], "function2octre": 191, "gaussian": 314, "gaussiancurvatur": 123, "gener": [8, 10, 17, 18, 310, 318], "genu": 37, "geometri": 301, "geotransformsmooth": 180, "getallleaf": 200, "getconnectedel": 285, "getconnectednod": 286, "getcurvatur": 61, "getelemconnect": 287, "getelemneighbor": 288, "getnodeneighbor": 291, "getnodeneighborhood": 289, "getnodeneighborhoodbyradiu": 290, "getqual": 62, "getthem": 295, "globallaplaciansmooth": 181, "grid": 206, "grid2d": 207, "grid2fun": 155, "grid2grad": 156, "guid": [299, 312], "gyroid": 157, "heart": 5, "helper": 78, "hex2edg": 94, "hex2fac": 95, "hex2tet": 96, "hull": 16, "i": [304, 309], "identify_typ": [63, 292], "im2voxel": 97, "imag": [17, 139, 140, 141, 142, 143, 144, 303, 306, 310], "imagecurvatur": 124, "implicit": [5, 18, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 301, 304, 310, 318], "import": 299, "improv": [19, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 317], "imread": 64, "inclus": 319, "index": [305, 314], "initi": 315, "input": 306, "insert": 315, "insid": 79, "instal": 305, "interpret": 314, "intersect": [79, 158, 160, 319], "intersectionf": 159, "inverseorthogon": 216, "inverseorthogonalqu": 215, "io": 17, "lidinoid": 161, "line": [208, 309], "local": 19, "locallaplaciansmooth": 182, "locat": 315, "makepyramidlay": 293, "manipul": 80, "march": 313, "marchingcub": 85, "marchingcubesimag": 86, "marchingsquar": 87, "marchingsquaresimag": 88, "marchingtetrahedra": 89, "maxdihedr": 217, "mean": 314, "meancurvatur": 125, "meanratio": 218, "measur": [2, 80], "merg": 65, "mergemesh": 274, "mesh": [3, 8, 10, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 80, 303, 304, 306, 307, 309, 310, 314, 318], "mesh2sdf": 162, "mesh2udf": 163, "meshboolean": 82, "meshio2mymesh": 66, "method": 20, "metric": [78, 314], "mindihedr": 219, "mirrormesh": 275, "miscellan": 80, "mix": 6, "modif": 317, "mvbb": 273, "mymesh": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 303, 310], "mymesh2meshio": 67, "nd": 38, "nedg": 39, "need": 310, "nelem": 40, "neoviu": 164, "nface": 41, "nnode": 42, "node": [19, 317, 320], "nodeneighbor": 43, "nodenorm": 44, "nodenormalsmethod": 45, "nodespringsmooth": 183, "normcurv": 126, "object": 0, "octre": [76, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 318], "octree2du": 192, "octree2voxel": 193, "offset": 165, "oper": [12, 18], "option": 305, "orthogon": 221, "orthogonalqu": 220, "other": 18, "output": 306, "outsid": 79, "overview": 299, "packag": [299, 305], "padrag": 276, "parsecolor": 296, "pasta": 7, "plan": 1, "planar": 309, "plane": [209, 319], "planeboxintersect": 231, "planesurfintersect": 232, "planetriangleintersect": 233, "planetrianglesintersect": 234, "plot": 68, "point": [69, 315, 318, 319], "pointinbox": 235, "pointinsurf": 236, "pointintri": 237, "points2octre": 194, "pointsinsurf": 238, "pointsintri": 239, "pointsinvoxel": 240, "polygon2edg": 98, "primit": [77, 166, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212], "princip": 314, "print": 195, "procedur": 316, "project": 80, "project2surfac": 277, "properti": [20, 307], "purpos": 310, "pypi": 305, "pyramid2edg": 99, "pyramid2fac": 100, "pyramid2tet": 101, "python": [305, 310], "quad2edg": 102, "quad2tri": 103, "quad_skew": 227, "quadfit": 127, "quadrat": 314, "qualiti": [78, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "queri": 76, "rai": [79, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 319], "rayboxesintersect": 242, "rayboxintersect": 241, "rayoctreeintersect": 243, "raysegmentsintersect": 244, "rayssurfintersect": 248, "raystrianglesintersect": 249, "raysurfintersect": 245, "raytriangleintersect": 246, "raytrianglesintersect": 247, "read": [70, 143], "refer": [0, 308], "relabelnod": 278, "removeelem": 71, "renumberfacesbyset": 46, "renumbernodesbyset": 47, "reposit": [19, 317], "represent": 300, "reset": 72, "retriangul": 315, "revolv": 210, "rmax": 167, "rmin": 168, "roadmap": 1, "scipi": 135, "searchoctre": 196, "searchoctreetri": 197, "segment": 319, "segmentsegmentintersect": 250, "segmentspringsmooth": 184, "segmentssegmentsintersect": 251, "set_vispy_backend": 298, "shape": [7, 77, 314, 319], "shapecategori": 128, "shapeindex": 129, "skew": 222, "smartlaplaciansmooth": 185, "smooth": [5, 19, 320], "solid": 301, "solid2edg": 104, "solid2fac": 105, "solid2surfac": 106, "solid2tet": 107, "sortraggedbylength": 279, "sourc": 305, "sphere": [169, 211], "splitmesh": 83, "splitraggedbylength": 280, "spring": 320, "squar": 313, "statement": 310, "structur": 316, "submodul": 0, "summari": 310, "surf": 309, "surf2dual": 108, "surf2edg": 109, "surf2voxel": 110, "surfac": [5, 52, 80, 309, 314, 318, 319], "surface2octre": 198, "surfacemesh": [139, 145], "surfacenodeoptim": [140, 146], "surfconn": 48, "surfdihedralangl": 223, "surfelemconn": 49, "surfmap": 281, "surfnod": 51, "surfnodeneighbor": 50, "surfselfintersect": 252, "surfsurfintersect": 253, "tabl": 316, "tangentiallaplaciansmooth": 186, "test": [79, 315, 319], "tet102tet4": 111, "tet2edg": 112, "tet2fac": 113, "tet42tet10": 114, "tet_vol_skew": 228, "tetcontract": 187, "tetflip": 188, "tetimprov": 189, "tetmesh": [141, 147], "tetmeshvol": 282, "tetrahedr": 16, "tetrahedra": 313, "tetsplit": 190, "theori": 312, "thicken": [170, 172], "thickenf": 171, "threshold": [53, 307], "time": [4, 9, 11, 311], "topolog": 317, "topologi": [6, 19], "toru": [173, 212], "tpm": 6, "tri2edg": 115, "tri_skew": 229, "triangl": [136, 319], "triangleboxintersect": 254, "trianglesplittingtriangul": 137, "trianglestrianglesintersect": 257, "trianglestrianglesintersectionpt": 258, "triangletriangleintersect": 255, "triangletriangleintersectionpt": 256, "triangul": [16, 138, 315], "trisurfvol": 283, "type": [14, 302, 309], "union": [174, 176], "unionf": 175, "unpack": 307, "up": 80, "user": 299, "util": [18, 76, 80, 81, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293], "valid": 73, "valuemap": 284, "view": [74, 297], "visual": [81, 294, 295, 296, 297, 298], "vol": 309, "volum": [224, 309], "voxel": [309, 318], "voxel2im": 116, "voxel2octre": 199, "voxelmesh": [142, 148], "watson": 315, "wedge2edg": 117, "wedge2fac": 118, "wedge2tet": 119, "what": [304, 309], "work": 307, "write": [75, 144], "xplane": 177, "yplane": 178, "zplane": 179}})