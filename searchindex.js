Search.setIndex({"alltitles": {"2D Example": [[431, "d-example"]], "2D Planar Meshes": [[442, "d-planar-meshes"]], "2D to 3D Constructions": [[89, "d-to-3d-constructions"]], "2\u21923 and 3\u21922 Flips": [[452, null]], "3D Surfaces": [[442, "d-surfaces"]], "API Reference": [[0, null]], "Acknowledgements": [[443, "acknowledgements"]], "Analytical Curvature": [[449, "analytical-curvature"]], "Bowyer-Watson": [[450, "bowyer-watson"]], "Bowyer-Watson: Initialization": [[450, "bowyer-watson-initialization"]], "Bowyer-Watson: Point Insertion": [[450, "bowyer-watson-point-insertion"]], "Calculating Curvature": [[449, "calculating-curvature"]], "Cavity Formation": [[450, "cavity-formation"]], "Circumcircle Test": [[450, "circumcircle-test"]], "Clip()": [[440, "clip"]], "Computation times": [[4, null], [9, null], [11, null], [444, null]], "Connectivity Representations": [[431, null]], "Connectivity conversion": [[14, "connectivity-conversion"]], "Constructive Solid Geometry": [[432, null]], "Contour": [[448, null]], "Contour()": [[440, "contour"]], "Contouring": [[13, "contouring"]], "Conventions": [[449, "conventions"]], "Conversion From Octree": [[93, "conversion-from-octree"]], "Conversion From Quadtree": [[93, "conversion-from-quadtree"]], "Core dependencies": [[437, "core-dependencies"]], "Creating a Surface": [[5, "creating-a-surface"]], "Cubic Surface Fitting": [[449, "cubic-surface-fitting"]], "Curvature": [[449, null]], "Curvature Analysis": [[2, null]], "Curvature Calculation": [[15, "curvature-calculation"]], "Curvature Conversion": [[15, "curvature-conversion"]], "Curvature Metrics": [[449, "curvature-metrics"]], "Curvature calculation": [[2, "curvature-calculation"]], "Curvedness": [[449, "curvedness"]], "Data Structure": [[452, "data-structure"]], "Defining an implicit function": [[5, "defining-an-implicit-function"]], "Defining implicit functions": [[436, "defining-implicit-functions"]], "Delaunay Triangulation": [[450, null]], "Dependencies": [[437, "dependencies"]], "Development": [[1, null]], "Edge Contraction": [[451, null]], "Edge Table": [[452, "id3"]], "Element Table": [[452, "id1"]], "Element Types": [[433, null]], "Element type conversion": [[14, "element-type-conversion"]], "Error Measurement": [[2, "error-measurement"]], "Euclidean Distance Error": [[456, "euclidean-distance-error"]], "Examples": [[10, null], [443, "examples"]], "Explicit CSG": [[432, "explicit-csg"]], "Face Table": [[452, "id2"]], "File IO": [[19, "file-io"]], "File Input/Output": [[438, null]], "Flipping Procedure": [[452, "flipping-procedure"]], "From meshes to meshes": [[440, "from-meshes-to-meshes"]], "Functions": [[0, "functions"]], "Gaussian Curvature": [[449, "gaussian-curvature"]], "Generating Octrees": [[456, "generating-octrees"]], "Getting Started": [[434, null]], "Hulls": [[16, "hulls"]], "Image files": [[438, "image-files"]], "Image-based Mesh Generation": [[19, "image-based-mesh-generation"]], "Image-based Meshing": [[435, null]], "Images in MyMesh": [[435, "images-in-mymesh"]], "Implicit CSG": [[432, "implicit-csg"]], "Implicit Function Octrees": [[456, "implicit-function-octrees"]], "Implicit Function Operators": [[20, "implicit-function-operators"]], "Implicit Functions": [[20, "implicit-functions"]], "Implicit Heart": [[5, null]], "Implicit Meshing": [[436, null]], "Importing MyMesh": [[430, "importing-mymesh"]], "Improvement": [[454, null]], "Inside/Outside Tests": [[91, "inside-outside-tests"]], "Installation": [[437, null]], "Installing from source:": [[437, "installing-from-source"]], "Interpretation": [[449, "interpretation"]], "Intersection Tests": [[91, "intersection-tests"]], "Laplacian Smoothing": [[455, null]], "Line Meshes (Type='line')": [[442, "line-meshes-type-line"]], "Local mesh topology": [[21, "local-mesh-topology"]], "Marching Cubes": [[448, "marching-cubes"]], "Marching Cubes 33": [[448, "marching-cubes-33"]], "Marching Squares": [[448, "marching-squares"]], "Marching Tetrahedra": [[448, "marching-tetrahedra"]], "Mean Curvature": [[449, "mean-curvature"]], "Mesh Analysis Examples": [[3, null], [10, "mesh-analysis-examples"]], "Mesh Cleanup": [[94, "mesh-cleanup"]], "Mesh Connectivity": [[94, "mesh-connectivity"]], "Mesh Generation": [[20, "mesh-generation"]], "Mesh Generation Examples": [[8, null], [10, "mesh-generation-examples"]], "Mesh Manipulations": [[94, "mesh-manipulations"]], "Mesh Measurements": [[94, "mesh-measurements"]], "Mesh Types": [[442, "mesh-types"]], "Mesh files": [[438, "mesh-files"]], "Mesh smoothing/node repositioning": [[21, "mesh-smoothing-node-repositioning"]], "Mesh type conversion": [[14, "mesh-type-conversion"]], "Mesh-Based Curvature": [[449, "mesh-based-curvature"]], "Meshing Implicit Functions": [[436, "meshing-implicit-functions"]], "Methods": [[22, "methods"], [340, "methods"], [362, "methods"], [380, "methods"]], "Miscellaneous": [[94, "miscellaneous"]], "Mixed-Topology TPMS": [[6, null]], "MyMesh: General purpose, implicit, and image-based meshing in python": [[443, null]], "Node Repositioning": [[454, "node-repositioning"]], "Node Spring-based": [[458, "node-spring-based"]], "Objects": [[0, "objects"]], "Octree": [[93, "octree"], [456, null]], "Octree Creation": [[93, "octree-creation"]], "Octree Definition": [[456, "octree-definition"]], "Octree Querying": [[93, "octree-querying"]], "On-demand properties": [[440, "on-demand-properties"]], "Operations": [[12, "operations"]], "Optimization": [[92, "optimization"]], "Optional dependencies": [[437, "optional-dependencies"]], "Other Implicit Mesh Utilities": [[20, "other-implicit-mesh-utilities"]], "Package Overview": [[430, "package-overview"]], "Pasta Shapes": [[7, null]], "Plane-Box Intersection": [[457, "plane-box-intersection"]], "Plane-Shape Intersection Tests": [[457, "plane-shape-intersection-tests"]], "Plane-Triangle Intersection": [[457, "plane-triangle-intersection"]], "Point Cloud Octrees": [[456, "point-cloud-octrees"]], "Point Inclusion Tests": [[457, "point-inclusion-tests"]], "Point Location": [[450, "point-location"]], "Point in Boundary": [[457, "point-in-boundary"]], "Point in Surface": [[457, "point-in-surface"]], "Principal Curvatures": [[449, "principal-curvatures"]], "Properties": [[22, "properties"], [340, "properties"], [362, "properties"], [380, "properties"]], "Python Package Index (PyPI)": [[437, "python-package-index-pypi"]], "Quadratic Surface Fitting": [[449, "quadratic-surface-fitting"]], "Quadtree": [[93, "quadtree"]], "Quadtree Creation": [[93, "quadtree-creation"]], "Quality Calculation Helper Functions": [[90, "quality-calculation-helper-functions"]], "Quality Metrics": [[90, "quality-metrics"]], "Ray-Box Intersection": [[457, "ray-box-intersection"]], "Ray-Segment Intersection": [[457, "ray-segment-intersection"]], "Ray-Shape Intersection Tests": [[457, "ray-shape-intersection-tests"]], "Ray-Triangle Intersection": [[457, "ray-triangle-intersection"]], "Rays": [[457, null]], "References": [[441, null]], "Registration": [[92, "registration"]], "Retriangulation": [[450, "retriangulation"]], "Roadmap & Planned features": [[1, "roadmap-planned-features"]], "Segment-Segment Intersection": [[457, "segment-segment-intersection"]], "Shape Index": [[449, "shape-index"]], "Shape-Shape Intersection Tests": [[457, "shape-shape-intersection-tests"]], "Shapes": [[89, "shapes"]], "Similarity Metrics": [[92, "similarity-metrics"]], "Smart Laplacian Smoothing": [[455, "smart-laplacian-smoothing"]], "Smoothing": [[5, "smoothing"]], "Spring-based Smoothing": [[458, null]], "Statement of need": [[443, "statement-of-need"]], "Submodules": [[0, "submodules"]], "Summary": [[443, "summary"]], "Surface Mesh Octrees": [[456, "surface-mesh-octrees"]], "Surface Meshes (Type='surf')": [[442, "surface-meshes-type-surf"]], "Surface Projection": [[94, "surface-projection"]], "Surface Reconstruction": [[453, "surface-reconstruction"]], "Tangential Laplacian Smoothing": [[455, "tangential-laplacian-smoothing"]], "Tetrahedralization": [[16, "tetrahedralization"]], "Theory Guide": [[447, null]], "Threshold()": [[440, "threshold"]], "Tips for using MyMesh in MATLAB": [[439, "tips-for-using-mymesh-in-matlab"]], "Topological Modifications": [[454, "topological-modifications"]], "Transformation": [[92, "transformation"]], "Tree": [[93, "tree"]], "Tree Utilities": [[93, "tree-utilities"]], "Triangle-Box Intersection": [[457, "triangle-box-intersection"]], "Triangle-Triangle Intersection": [[457, "triangle-triangle-intersection"]], "Triangulation": [[16, "triangulation"]], "Unpacking": [[440, "unpacking"]], "User Guide": [[430, null]], "Using MyMesh in MATLAB": [[439, null]], "Visualization": [[92, "visualization"], [95, "visualization"]], "Visualization Utilities": [[95, "visualization-utilities"]], "Volume Meshes (Type='vol')": [[442, "volume-meshes-type-vol"]], "Voxel Meshes": [[442, "voxel-meshes"]], "Voxel Octrees": [[456, "voxel-octrees"]], "What do you want to do?": [[434, "what-do-you-want-to-do"]], "What is a mesh?": [[442, null]], "What is an implicit function?": [[436, "what-is-an-implicit-function"]], "Working with the mesh class": [[440, null]], "copy()": [[440, "copy"]], "implicit": [[453, null]], "mymesh.booleans": [[12, null]], "mymesh.booleans.MeshBooleans": [[96, null]], "mymesh.booleans.SplitMesh": [[97, null]], "mymesh.contour": [[13, null]], "mymesh.contour.Adaptive": [[98, null]], "mymesh.contour.MarchingCubes": [[99, null]], "mymesh.contour.MarchingCubesImage": [[100, null]], "mymesh.contour.MarchingElements": [[101, null]], "mymesh.contour.MarchingSquares": [[102, null]], "mymesh.contour.MarchingSquaresImage": [[103, null]], "mymesh.contour.MarchingTetrahedra": [[104, null]], "mymesh.contour.MarchingTriangles": [[105, null]], "mymesh.converter": [[14, null]], "mymesh.converter.EdgesByElement": [[106, null]], "mymesh.converter.edge2quadratic": [[107, null]], "mymesh.converter.edge32linear": [[108, null]], "mymesh.converter.edges2unique": [[109, null]], "mymesh.converter.faces2surface": [[110, null]], "mymesh.converter.faces2unique": [[111, null]], "mymesh.converter.hex202linear": [[112, null]], "mymesh.converter.hex2edges": [[113, null]], "mymesh.converter.hex2faces": [[114, null]], "mymesh.converter.hex2quadratic": [[115, null]], "mymesh.converter.hex2tet": [[116, null]], "mymesh.converter.hexsubdivide": [[117, null]], "mymesh.converter.im2voxel": [[118, null]], "mymesh.converter.linear2quadratic": [[119, null]], "mymesh.converter.mesh2im": [[120, null]], "mymesh.converter.polygon2edges": [[121, null]], "mymesh.converter.pyr132linear": [[122, null]], "mymesh.converter.pyr2quadratic": [[123, null]], "mymesh.converter.pyramid2edges": [[124, null]], "mymesh.converter.pyramid2faces": [[125, null]], "mymesh.converter.pyramid2tet": [[126, null]], "mymesh.converter.quad2edges": [[127, null]], "mymesh.converter.quad2quadratic": [[128, null]], "mymesh.converter.quad2tri": [[129, null]], "mymesh.converter.quad82linear": [[130, null]], "mymesh.converter.quadratic2linear": [[131, null]], "mymesh.converter.solid2edges": [[132, null]], "mymesh.converter.solid2faces": [[133, null]], "mymesh.converter.solid2surface": [[134, null]], "mymesh.converter.solid2tets": [[135, null]], "mymesh.converter.surf2dual": [[136, null]], "mymesh.converter.surf2edges": [[137, null]], "mymesh.converter.surf2tris": [[138, null]], "mymesh.converter.surf2voxel": [[139, null]], "mymesh.converter.tet102linear": [[140, null]], "mymesh.converter.tet2edges": [[141, null]], "mymesh.converter.tet2faces": [[142, null]], "mymesh.converter.tet2quadratic": [[143, null]], "mymesh.converter.tetsubdivide": [[144, null]], "mymesh.converter.tri2edges": [[145, null]], "mymesh.converter.tri2quadratic": [[146, null]], "mymesh.converter.tri62linear": [[147, null]], "mymesh.converter.voxel2im": [[148, null]], "mymesh.converter.wdg152linear": [[149, null]], "mymesh.converter.wdg2quadratic": [[150, null]], "mymesh.converter.wedge2edges": [[151, null]], "mymesh.converter.wedge2faces": [[152, null]], "mymesh.converter.wedge2tet": [[153, null]], "mymesh.curvature": [[15, null]], "mymesh.curvature.AnalyticalCurvature": [[154, null]], "mymesh.curvature.CubicFit": [[155, null]], "mymesh.curvature.Curvedness": [[156, null]], "mymesh.curvature.GaussianCurvature": [[157, null]], "mymesh.curvature.ImageCurvature": [[158, null]], "mymesh.curvature.MeanCurvature": [[159, null]], "mymesh.curvature.NormCurve": [[160, null]], "mymesh.curvature.QuadFit": [[161, null]], "mymesh.curvature.ShapeCategory": [[162, null]], "mymesh.curvature.ShapeIndex": [[163, null]], "mymesh.delaunay": [[16, null]], "mymesh.delaunay.Alpha2d": [[164, null]], "mymesh.delaunay.Alpha3d": [[165, null]], "mymesh.delaunay.AlphaPeel3d": [[166, null]], "mymesh.delaunay.AlphaShape": [[167, null]], "mymesh.delaunay.BowyerWatson2d": [[168, null]], "mymesh.delaunay.BowyerWatson3d": [[169, null]], "mymesh.delaunay.ConvexHull": [[170, null]], "mymesh.delaunay.FanTriangulation": [[171, null]], "mymesh.delaunay.GiftWrapping": [[172, null]], "mymesh.delaunay.SciPy": [[173, null]], "mymesh.delaunay.Tetrahedralize": [[174, null]], "mymesh.delaunay.Triangle": [[175, null]], "mymesh.delaunay.Triangulate": [[176, null]], "mymesh.demo_image": [[17, null], [445, null]], "mymesh.demo_mesh": [[18, null], [446, null]], "mymesh.image": [[19, null]], "mymesh.image.PixelMesh": [[177, null]], "mymesh.image.SurfaceMesh": [[178, null]], "mymesh.image.SurfaceNodeOptimization": [[179, null]], "mymesh.image.TetMesh": [[180, null]], "mymesh.image.VoxelMesh": [[181, null]], "mymesh.image.read": [[182, null]], "mymesh.image.write": [[183, null]], "mymesh.implicit": [[20, null]], "mymesh.implicit.SurfaceMesh": [[184, null]], "mymesh.implicit.SurfaceNodeOptimization": [[185, null]], "mymesh.implicit.TetMesh": [[186, null]], "mymesh.implicit.VoxelMesh": [[187, null]], "mymesh.implicit.box": [[188, null]], "mymesh.implicit.cylinder": [[189, null]], "mymesh.implicit.diamond": [[190, null]], "mymesh.implicit.diff": [[191, null]], "mymesh.implicit.difff": [[192, null]], "mymesh.implicit.diffs": [[193, null]], "mymesh.implicit.grid2fun": [[194, null]], "mymesh.implicit.grid2grad": [[195, null]], "mymesh.implicit.gyroid": [[196, null]], "mymesh.implicit.intersection": [[197, null]], "mymesh.implicit.intersectionf": [[198, null]], "mymesh.implicit.intersections": [[199, null]], "mymesh.implicit.lidinoid": [[200, null]], "mymesh.implicit.mesh2udf": [[201, null]], "mymesh.implicit.mixed_topology": [[202, null]], "mymesh.implicit.neovius": [[203, null]], "mymesh.implicit.offset": [[204, null]], "mymesh.implicit.plane": [[205, null]], "mymesh.implicit.primitive": [[206, null]], "mymesh.implicit.rMax": [[207, null]], "mymesh.implicit.rMin": [[208, null]], "mymesh.implicit.sphere": [[209, null]], "mymesh.implicit.thicken": [[210, null]], "mymesh.implicit.thickenf": [[211, null]], "mymesh.implicit.thickens": [[212, null]], "mymesh.implicit.torus": [[213, null]], "mymesh.implicit.tpms": [[214, null]], "mymesh.implicit.union": [[215, null]], "mymesh.implicit.unionf": [[216, null]], "mymesh.implicit.unions": [[217, null]], "mymesh.implicit.xplane": [[218, null]], "mymesh.implicit.yplane": [[219, null]], "mymesh.implicit.zplane": [[220, null]], "mymesh.improvement": [[21, null]], "mymesh.improvement.Contract": [[221, null]], "mymesh.improvement.GeoTransformSmoothing": [[222, null]], "mymesh.improvement.LocalLaplacianSmoothing": [[223, null]], "mymesh.improvement.NodeSpringSmoothing": [[224, null]], "mymesh.improvement.SegmentSpringSmoothing": [[225, null]], "mymesh.improvement.SmartLaplacianSmoothing": [[226, null]], "mymesh.improvement.TangentialLaplacianSmoothing": [[227, null]], "mymesh.improvement.TetFlip": [[228, null]], "mymesh.improvement.TetImprove": [[229, null]], "mymesh.improvement.TetSplit": [[230, null]], "mymesh.mesh": [[22, null]], "mymesh.mesh.mesh.Boundary": [[23, null]], "mymesh.mesh.mesh.BoundaryConn": [[24, null]], "mymesh.mesh.mesh.BoundaryNodes": [[25, null]], "mymesh.mesh.mesh.Centroids": [[26, null]], "mymesh.mesh.mesh.Clip": [[27, null]], "mymesh.mesh.mesh.Contour": [[28, null]], "mymesh.mesh.mesh.CreateBoundaryLayer": [[29, null]], "mymesh.mesh.mesh.Crop": [[30, null]], "mymesh.mesh.mesh.EdgeConn": [[31, null]], "mymesh.mesh.mesh.EdgeElemConn": [[32, null]], "mymesh.mesh.mesh.Edges": [[33, null]], "mymesh.mesh.mesh.ElemConn": [[34, null]], "mymesh.mesh.mesh.ElemNeighbors": [[35, null]], "mymesh.mesh.mesh.ElemNormals": [[36, null]], "mymesh.mesh.mesh.ElemType": [[37, null]], "mymesh.mesh.mesh.EulerCharacteristic": [[38, null]], "mymesh.mesh.mesh.FaceConn": [[39, null]], "mymesh.mesh.mesh.FaceElemConn": [[40, null]], "mymesh.mesh.mesh.Faces": [[41, null]], "mymesh.mesh.mesh.Genus": [[42, null]], "mymesh.mesh.mesh.MeshNodes": [[43, null]], "mymesh.mesh.mesh.Mirror": [[44, null]], "mymesh.mesh.mesh.ND": [[45, null]], "mymesh.mesh.mesh.NEdge": [[46, null]], "mymesh.mesh.mesh.NElem": [[47, null]], "mymesh.mesh.mesh.NFace": [[48, null]], "mymesh.mesh.mesh.NNode": [[49, null]], "mymesh.mesh.mesh.NodeNeighbors": [[50, null]], "mymesh.mesh.mesh.NodeNormals": [[51, null]], "mymesh.mesh.mesh.NodeNormalsMethod": [[52, null]], "mymesh.mesh.mesh.RenumberFacesBySet": [[53, null]], "mymesh.mesh.mesh.RenumberNodesBySet": [[54, null]], "mymesh.mesh.mesh.SurfConn": [[55, null]], "mymesh.mesh.mesh.SurfElemConn": [[56, null]], "mymesh.mesh.mesh.SurfNodeNeighbors": [[57, null]], "mymesh.mesh.mesh.SurfNodes": [[58, null]], "mymesh.mesh.mesh.Surface": [[59, null]], "mymesh.mesh.mesh.Threshold": [[60, null]], "mymesh.mesh.mesh.aabb": [[61, null]], "mymesh.mesh.mesh.addEdges": [[62, null]], "mymesh.mesh.mesh.addElems": [[63, null]], "mymesh.mesh.mesh.addFaces": [[64, null]], "mymesh.mesh.mesh.addNodes": [[65, null]], "mymesh.mesh.mesh.bounds": [[66, null]], "mymesh.mesh.mesh.cells": [[67, null]], "mymesh.mesh.mesh.cleanup": [[68, null]], "mymesh.mesh.mesh.copy": [[69, null]], "mymesh.mesh.mesh.getCurvature": [[70, null]], "mymesh.mesh.mesh.getQuality": [[71, null]], "mymesh.mesh.mesh.identify_type": [[72, null]], "mymesh.mesh.mesh.imread": [[73, null]], "mymesh.mesh.mesh.merge": [[74, null]], "mymesh.mesh.mesh.mesh2dmesh": [[75, null]], "mymesh.mesh.mesh.meshio2mymesh": [[76, null]], "mymesh.mesh.mesh.mvbb": [[77, null]], "mymesh.mesh.mesh.mymesh2meshio": [[78, null]], "mymesh.mesh.mesh.plot": [[79, null]], "mymesh.mesh.mesh.points": [[80, null]], "mymesh.mesh.mesh.read": [[81, null]], "mymesh.mesh.mesh.removeElems": [[82, null]], "mymesh.mesh.mesh.reset": [[83, null]], "mymesh.mesh.mesh.to_meshio": [[84, null]], "mymesh.mesh.mesh.to_pyvista": [[85, null]], "mymesh.mesh.mesh.validate": [[86, null]], "mymesh.mesh.mesh.view": [[87, null]], "mymesh.mesh.mesh.write": [[88, null]], "mymesh.primitives": [[89, null]], "mymesh.primitives.Box": [[231, null]], "mymesh.primitives.Circle": [[232, null]], "mymesh.primitives.CirclePt": [[233, null]], "mymesh.primitives.Cylinder": [[234, null]], "mymesh.primitives.Extrude": [[235, null]], "mymesh.primitives.Grid": [[236, null]], "mymesh.primitives.Grid2D": [[237, null]], "mymesh.primitives.Line": [[238, null]], "mymesh.primitives.Multiline": [[239, null]], "mymesh.primitives.Plane": [[240, null]], "mymesh.primitives.Revolve": [[241, null]], "mymesh.primitives.Sphere": [[242, null]], "mymesh.primitives.Torus": [[243, null]], "mymesh.quality": [[90, null]], "mymesh.quality.Area": [[244, null]], "mymesh.quality.AspectRatio": [[245, null]], "mymesh.quality.InverseOrthogonalQuality": [[246, null]], "mymesh.quality.InverseOrthogonality": [[247, null]], "mymesh.quality.MaxDihedral": [[248, null]], "mymesh.quality.MeanRatio": [[249, null]], "mymesh.quality.MinDihedral": [[250, null]], "mymesh.quality.OrthogonalQuality": [[251, null]], "mymesh.quality.Orthogonality": [[252, null]], "mymesh.quality.Skewness": [[253, null]], "mymesh.quality.SurfDihedralAngles": [[254, null]], "mymesh.quality.Volume": [[255, null]], "mymesh.quality.dihedralAngles": [[256, null]], "mymesh.quality.equiangular_skewness": [[257, null]], "mymesh.quality.quad_skewness": [[258, null]], "mymesh.quality.tet_circumradius": [[259, null]], "mymesh.quality.tet_vol_skewness": [[260, null]], "mymesh.quality.tet_volume": [[261, null]], "mymesh.quality.tri_area": [[262, null]], "mymesh.quality.tri_skewness": [[263, null]], "mymesh.rays": [[91, null]], "mymesh.rays.BoundaryBoundaryIntersection": [[264, null]], "mymesh.rays.BoxBoxIntersection": [[265, null]], "mymesh.rays.BoxTrianglesIntersection": [[266, null]], "mymesh.rays.PlaneBoxIntersection": [[267, null]], "mymesh.rays.PlaneSurfIntersection": [[268, null]], "mymesh.rays.PlaneTriangleIntersection": [[269, null]], "mymesh.rays.PlaneTrianglesIntersection": [[270, null]], "mymesh.rays.PointInBoundary": [[271, null]], "mymesh.rays.PointInBox": [[272, null]], "mymesh.rays.PointInBox2D": [[273, null]], "mymesh.rays.PointInSurf": [[274, null]], "mymesh.rays.PointInTet": [[275, null]], "mymesh.rays.PointInTri": [[276, null]], "mymesh.rays.PointsInSurf": [[277, null]], "mymesh.rays.PointsInTris": [[278, null]], "mymesh.rays.PointsInVoxel": [[279, null]], "mymesh.rays.RayBoundaryIntersection": [[280, null]], "mymesh.rays.RayBoxIntersection": [[281, null]], "mymesh.rays.RayBoxesIntersection": [[282, null]], "mymesh.rays.RayOctreeIntersection": [[283, null]], "mymesh.rays.RaySegmentIntersection": [[284, null]], "mymesh.rays.RaySegmentsIntersection": [[285, null]], "mymesh.rays.RaySurfIntersection": [[286, null]], "mymesh.rays.RayTriangleIntersection": [[287, null]], "mymesh.rays.RayTrianglesIntersection": [[288, null]], "mymesh.rays.RaysSurfIntersection": [[289, null]], "mymesh.rays.RaysTrianglesIntersection": [[290, null]], "mymesh.rays.SegmentBox2DIntersection": [[291, null]], "mymesh.rays.SegmentBoxIntersection": [[292, null]], "mymesh.rays.SegmentSegmentIntersection": [[293, null]], "mymesh.rays.SegmentsSegmentsIntersection": [[294, null]], "mymesh.rays.SurfSelfIntersection": [[295, null]], "mymesh.rays.SurfSurfIntersection": [[296, null]], "mymesh.rays.TriangleBoxIntersection": [[297, null]], "mymesh.rays.TriangleTriangleIntersection": [[298, null]], "mymesh.rays.TriangleTriangleIntersectionPt": [[299, null]], "mymesh.rays.TrianglesTrianglesIntersection": [[300, null]], "mymesh.rays.TrianglesTrianglesIntersectionPts": [[301, null]], "mymesh.register": [[92, null]], "mymesh.register.AxisAlignImage": [[302, null]], "mymesh.register.AxisAlignPoints": [[303, null]], "mymesh.register.ICP": [[304, null]], "mymesh.register.Image2Image": [[305, null]], "mymesh.register.ImageOverlay": [[306, null]], "mymesh.register.Mesh2Mesh": [[307, null]], "mymesh.register.Point2Point": [[308, null]], "mymesh.register.R2d": [[309, null]], "mymesh.register.R3d": [[310, null]], "mymesh.register.S2d": [[311, null]], "mymesh.register.S3d": [[312, null]], "mymesh.register.Sh2d": [[313, null]], "mymesh.register.Sh3d": [[314, null]], "mymesh.register.T2d": [[315, null]], "mymesh.register.T3d": [[316, null]], "mymesh.register.affine": [[317, null]], "mymesh.register.affine2d": [[318, null]], "mymesh.register.closest_point_MSE": [[319, null]], "mymesh.register.dice": [[320, null]], "mymesh.register.hausdorff": [[321, null]], "mymesh.register.jaccard": [[322, null]], "mymesh.register.mutual_information": [[323, null]], "mymesh.register.optimize": [[324, null]], "mymesh.register.rigid": [[325, null]], "mymesh.register.rigid2d": [[326, null]], "mymesh.register.rotation": [[327, null]], "mymesh.register.rotation2d": [[328, null]], "mymesh.register.similarity": [[329, null]], "mymesh.register.similarity2d": [[330, null]], "mymesh.register.symmetric_closest_point_MSE": [[331, null]], "mymesh.register.transform_image": [[332, null]], "mymesh.register.transform_points": [[333, null]], "mymesh.register.translation": [[334, null]], "mymesh.register.translation2d": [[335, null]], "mymesh.tree": [[93, null]], "mymesh.tree.Edges2Quadtree": [[336, null]], "mymesh.tree.Function2Octree": [[337, null]], "mymesh.tree.Octree2Dual": [[338, null]], "mymesh.tree.Octree2Voxel": [[339, null]], "mymesh.tree.OctreeNode": [[340, null]], "mymesh.tree.OctreeNode.ContainsBoxes": [[341, null]], "mymesh.tree.OctreeNode.ContainsPts": [[342, null]], "mymesh.tree.OctreeNode.ContainsTris": [[343, null]], "mymesh.tree.OctreeNode.PointInNode": [[344, null]], "mymesh.tree.OctreeNode.PointsInNode": [[345, null]], "mymesh.tree.OctreeNode.clearData": [[346, null]], "mymesh.tree.OctreeNode.getLevel": [[347, null]], "mymesh.tree.OctreeNode.getLimits": [[348, null]], "mymesh.tree.OctreeNode.getMaxDepth": [[349, null]], "mymesh.tree.OctreeNode.getVertices": [[350, null]], "mymesh.tree.OctreeNode.hasChildren": [[351, null]], "mymesh.tree.OctreeNode.makeChildren": [[352, null]], "mymesh.tree.OctreeNode.makeChildrenBoxes": [[353, null]], "mymesh.tree.OctreeNode.makeChildrenPts": [[354, null]], "mymesh.tree.OctreeNode.makeChildrenTris": [[355, null]], "mymesh.tree.OctreeNode.prune": [[356, null]], "mymesh.tree.Points2Octree": [[357, null]], "mymesh.tree.Points2Quadtree": [[358, null]], "mymesh.tree.Print": [[359, null]], "mymesh.tree.Quadtree2Dual": [[360, null]], "mymesh.tree.Quadtree2Pixel": [[361, null]], "mymesh.tree.QuadtreeNode": [[362, null]], "mymesh.tree.QuadtreeNode.ContainsEdges": [[363, null]], "mymesh.tree.QuadtreeNode.ContainsPts": [[364, null]], "mymesh.tree.QuadtreeNode.PointInNode": [[365, null]], "mymesh.tree.QuadtreeNode.PointsInNode": [[366, null]], "mymesh.tree.QuadtreeNode.clearData": [[367, null]], "mymesh.tree.QuadtreeNode.getLevel": [[368, null]], "mymesh.tree.QuadtreeNode.getLimits": [[369, null]], "mymesh.tree.QuadtreeNode.getMaxDepth": [[370, null]], "mymesh.tree.QuadtreeNode.getVertices": [[371, null]], "mymesh.tree.QuadtreeNode.hasChildren": [[372, null]], "mymesh.tree.QuadtreeNode.makeChildren": [[373, null]], "mymesh.tree.QuadtreeNode.makeChildrenEdges": [[374, null]], "mymesh.tree.QuadtreeNode.makeChildrenPts": [[375, null]], "mymesh.tree.QuadtreeNode.prune": [[376, null]], "mymesh.tree.SearchOctree": [[377, null]], "mymesh.tree.SearchOctreeTri": [[378, null]], "mymesh.tree.Surface2Octree": [[379, null]], "mymesh.tree.TreeNode": [[380, null]], "mymesh.tree.TreeNode.clearData": [[381, null]], "mymesh.tree.TreeNode.getLevel": [[382, null]], "mymesh.tree.TreeNode.getMaxDepth": [[383, null]], "mymesh.tree.TreeNode.hasChildren": [[384, null]], "mymesh.tree.TreeNode.prune": [[385, null]], "mymesh.tree.Voxel2Octree": [[386, null]], "mymesh.tree.getAllLeaf": [[387, null]], "mymesh.utils": [[94, null]], "mymesh.utils.AABB": [[388, null]], "mymesh.utils.BaryTet": [[389, null]], "mymesh.utils.BaryTri": [[390, null]], "mymesh.utils.BaryTris": [[391, null]], "mymesh.utils.CalcFaceNormal": [[392, null]], "mymesh.utils.Centroids": [[393, null]], "mymesh.utils.CleanupDegenerateElements": [[394, null]], "mymesh.utils.DeleteDegenerateElements": [[395, null]], "mymesh.utils.DeleteDuplicateNodes": [[396, null]], "mymesh.utils.DetectFeatures": [[397, null]], "mymesh.utils.DilateVoxel": [[398, null]], "mymesh.utils.ErodeVoxel": [[399, null]], "mymesh.utils.ExtractRagged": [[400, null]], "mymesh.utils.Face2NodeNormal": [[401, null]], "mymesh.utils.MVBB": [[402, null]], "mymesh.utils.MergeMesh": [[403, null]], "mymesh.utils.MirrorMesh": [[404, null]], "mymesh.utils.PadRagged": [[405, null]], "mymesh.utils.Project2Surface": [[406, null]], "mymesh.utils.RelabelNodes": [[407, null]], "mymesh.utils.SortRaggedByLength": [[408, null]], "mymesh.utils.SplitRaggedByLength": [[409, null]], "mymesh.utils.SurfMapping": [[410, null]], "mymesh.utils.TetMeshVol": [[411, null]], "mymesh.utils.TriSurfVol": [[412, null]], "mymesh.utils.ValueMapping": [[413, null]], "mymesh.utils.getConnectedElements": [[414, null]], "mymesh.utils.getConnectedNodes": [[415, null]], "mymesh.utils.getElemConnectivity": [[416, null]], "mymesh.utils.getElemNeighbors": [[417, null]], "mymesh.utils.getNodeNeighborhood": [[418, null]], "mymesh.utils.getNodeNeighborhoodByRadius": [[419, null]], "mymesh.utils.getNodeNeighbors": [[420, null]], "mymesh.utils.identify_elem": [[421, null]], "mymesh.utils.identify_type": [[422, null]], "mymesh.utils.makePyramidLayer": [[423, null]], "mymesh.visualize": [[95, null]], "mymesh.visualize.FaceColor": [[424, null]], "mymesh.visualize.GetTheme": [[425, null]], "mymesh.visualize.ParseColor": [[426, null]], "mymesh.visualize.Subplot": [[427, null]], "mymesh.visualize.View": [[428, null]], "mymesh.visualize.set_vispy_backend": [[429, null]]}, "docnames": ["api", "dev", "examples/MeshAnalysis/demo_curvature", "examples/MeshAnalysis/index", "examples/MeshAnalysis/sg_execution_times", "examples/MeshGeneration/demo_heart", "examples/MeshGeneration/demo_mixed-top", "examples/MeshGeneration/demo_pasta", "examples/MeshGeneration/index", "examples/MeshGeneration/sg_execution_times", "examples/index", "examples/sg_execution_times", "generated/mymesh.booleans", "generated/mymesh.contour", "generated/mymesh.converter", "generated/mymesh.curvature", "generated/mymesh.delaunay", "generated/mymesh.demo_image", "generated/mymesh.demo_mesh", "generated/mymesh.image", "generated/mymesh.implicit", "generated/mymesh.improvement", "generated/mymesh.mesh", "generated/mymesh.mesh.mesh.Boundary", "generated/mymesh.mesh.mesh.BoundaryConn", "generated/mymesh.mesh.mesh.BoundaryNodes", "generated/mymesh.mesh.mesh.Centroids", "generated/mymesh.mesh.mesh.Clip", "generated/mymesh.mesh.mesh.Contour", "generated/mymesh.mesh.mesh.CreateBoundaryLayer", "generated/mymesh.mesh.mesh.Crop", "generated/mymesh.mesh.mesh.EdgeConn", "generated/mymesh.mesh.mesh.EdgeElemConn", "generated/mymesh.mesh.mesh.Edges", "generated/mymesh.mesh.mesh.ElemConn", "generated/mymesh.mesh.mesh.ElemNeighbors", "generated/mymesh.mesh.mesh.ElemNormals", "generated/mymesh.mesh.mesh.ElemType", "generated/mymesh.mesh.mesh.EulerCharacteristic", "generated/mymesh.mesh.mesh.FaceConn", "generated/mymesh.mesh.mesh.FaceElemConn", "generated/mymesh.mesh.mesh.Faces", "generated/mymesh.mesh.mesh.Genus", "generated/mymesh.mesh.mesh.MeshNodes", "generated/mymesh.mesh.mesh.Mirror", "generated/mymesh.mesh.mesh.ND", "generated/mymesh.mesh.mesh.NEdge", "generated/mymesh.mesh.mesh.NElem", "generated/mymesh.mesh.mesh.NFace", "generated/mymesh.mesh.mesh.NNode", "generated/mymesh.mesh.mesh.NodeNeighbors", "generated/mymesh.mesh.mesh.NodeNormals", "generated/mymesh.mesh.mesh.NodeNormalsMethod", "generated/mymesh.mesh.mesh.RenumberFacesBySet", "generated/mymesh.mesh.mesh.RenumberNodesBySet", "generated/mymesh.mesh.mesh.SurfConn", "generated/mymesh.mesh.mesh.SurfElemConn", "generated/mymesh.mesh.mesh.SurfNodeNeighbors", "generated/mymesh.mesh.mesh.SurfNodes", "generated/mymesh.mesh.mesh.Surface", "generated/mymesh.mesh.mesh.Threshold", "generated/mymesh.mesh.mesh.aabb", "generated/mymesh.mesh.mesh.addEdges", "generated/mymesh.mesh.mesh.addElems", "generated/mymesh.mesh.mesh.addFaces", "generated/mymesh.mesh.mesh.addNodes", "generated/mymesh.mesh.mesh.bounds", "generated/mymesh.mesh.mesh.cells", "generated/mymesh.mesh.mesh.cleanup", "generated/mymesh.mesh.mesh.copy", "generated/mymesh.mesh.mesh.getCurvature", "generated/mymesh.mesh.mesh.getQuality", "generated/mymesh.mesh.mesh.identify_type", "generated/mymesh.mesh.mesh.imread", "generated/mymesh.mesh.mesh.merge", "generated/mymesh.mesh.mesh.mesh2dmesh", "generated/mymesh.mesh.mesh.meshio2mymesh", "generated/mymesh.mesh.mesh.mvbb", "generated/mymesh.mesh.mesh.mymesh2meshio", "generated/mymesh.mesh.mesh.plot", "generated/mymesh.mesh.mesh.points", "generated/mymesh.mesh.mesh.read", "generated/mymesh.mesh.mesh.removeElems", "generated/mymesh.mesh.mesh.reset", "generated/mymesh.mesh.mesh.to_meshio", "generated/mymesh.mesh.mesh.to_pyvista", "generated/mymesh.mesh.mesh.validate", "generated/mymesh.mesh.mesh.view", "generated/mymesh.mesh.mesh.write", "generated/mymesh.primitives", "generated/mymesh.quality", "generated/mymesh.rays", "generated/mymesh.register", "generated/mymesh.tree", "generated/mymesh.utils", "generated/mymesh.visualize", "generated/submodules/mymesh.booleans.MeshBooleans", "generated/submodules/mymesh.booleans.SplitMesh", "generated/submodules/mymesh.contour.Adaptive", "generated/submodules/mymesh.contour.MarchingCubes", "generated/submodules/mymesh.contour.MarchingCubesImage", "generated/submodules/mymesh.contour.MarchingElements", "generated/submodules/mymesh.contour.MarchingSquares", "generated/submodules/mymesh.contour.MarchingSquaresImage", "generated/submodules/mymesh.contour.MarchingTetrahedra", "generated/submodules/mymesh.contour.MarchingTriangles", "generated/submodules/mymesh.converter.EdgesByElement", "generated/submodules/mymesh.converter.edge2quadratic", "generated/submodules/mymesh.converter.edge32linear", "generated/submodules/mymesh.converter.edges2unique", "generated/submodules/mymesh.converter.faces2surface", "generated/submodules/mymesh.converter.faces2unique", "generated/submodules/mymesh.converter.hex202linear", "generated/submodules/mymesh.converter.hex2edges", "generated/submodules/mymesh.converter.hex2faces", "generated/submodules/mymesh.converter.hex2quadratic", "generated/submodules/mymesh.converter.hex2tet", "generated/submodules/mymesh.converter.hexsubdivide", "generated/submodules/mymesh.converter.im2voxel", "generated/submodules/mymesh.converter.linear2quadratic", "generated/submodules/mymesh.converter.mesh2im", "generated/submodules/mymesh.converter.polygon2edges", "generated/submodules/mymesh.converter.pyr132linear", "generated/submodules/mymesh.converter.pyr2quadratic", "generated/submodules/mymesh.converter.pyramid2edges", "generated/submodules/mymesh.converter.pyramid2faces", "generated/submodules/mymesh.converter.pyramid2tet", "generated/submodules/mymesh.converter.quad2edges", "generated/submodules/mymesh.converter.quad2quadratic", "generated/submodules/mymesh.converter.quad2tri", "generated/submodules/mymesh.converter.quad82linear", "generated/submodules/mymesh.converter.quadratic2linear", "generated/submodules/mymesh.converter.solid2edges", "generated/submodules/mymesh.converter.solid2faces", "generated/submodules/mymesh.converter.solid2surface", "generated/submodules/mymesh.converter.solid2tets", "generated/submodules/mymesh.converter.surf2dual", "generated/submodules/mymesh.converter.surf2edges", "generated/submodules/mymesh.converter.surf2tris", "generated/submodules/mymesh.converter.surf2voxel", "generated/submodules/mymesh.converter.tet102linear", "generated/submodules/mymesh.converter.tet2edges", "generated/submodules/mymesh.converter.tet2faces", "generated/submodules/mymesh.converter.tet2quadratic", "generated/submodules/mymesh.converter.tetsubdivide", "generated/submodules/mymesh.converter.tri2edges", "generated/submodules/mymesh.converter.tri2quadratic", "generated/submodules/mymesh.converter.tri62linear", "generated/submodules/mymesh.converter.voxel2im", "generated/submodules/mymesh.converter.wdg152linear", "generated/submodules/mymesh.converter.wdg2quadratic", "generated/submodules/mymesh.converter.wedge2edges", "generated/submodules/mymesh.converter.wedge2faces", "generated/submodules/mymesh.converter.wedge2tet", "generated/submodules/mymesh.curvature.AnalyticalCurvature", "generated/submodules/mymesh.curvature.CubicFit", "generated/submodules/mymesh.curvature.Curvedness", "generated/submodules/mymesh.curvature.GaussianCurvature", "generated/submodules/mymesh.curvature.ImageCurvature", "generated/submodules/mymesh.curvature.MeanCurvature", "generated/submodules/mymesh.curvature.NormCurve", "generated/submodules/mymesh.curvature.QuadFit", "generated/submodules/mymesh.curvature.ShapeCategory", "generated/submodules/mymesh.curvature.ShapeIndex", "generated/submodules/mymesh.delaunay.Alpha2d", "generated/submodules/mymesh.delaunay.Alpha3d", "generated/submodules/mymesh.delaunay.AlphaPeel3d", "generated/submodules/mymesh.delaunay.AlphaShape", "generated/submodules/mymesh.delaunay.BowyerWatson2d", "generated/submodules/mymesh.delaunay.BowyerWatson3d", "generated/submodules/mymesh.delaunay.ConvexHull", "generated/submodules/mymesh.delaunay.FanTriangulation", "generated/submodules/mymesh.delaunay.GiftWrapping", "generated/submodules/mymesh.delaunay.SciPy", "generated/submodules/mymesh.delaunay.Tetrahedralize", "generated/submodules/mymesh.delaunay.Triangle", "generated/submodules/mymesh.delaunay.Triangulate", "generated/submodules/mymesh.image.PixelMesh", "generated/submodules/mymesh.image.SurfaceMesh", "generated/submodules/mymesh.image.SurfaceNodeOptimization", "generated/submodules/mymesh.image.TetMesh", "generated/submodules/mymesh.image.VoxelMesh", "generated/submodules/mymesh.image.read", "generated/submodules/mymesh.image.write", "generated/submodules/mymesh.implicit.SurfaceMesh", "generated/submodules/mymesh.implicit.SurfaceNodeOptimization", "generated/submodules/mymesh.implicit.TetMesh", "generated/submodules/mymesh.implicit.VoxelMesh", "generated/submodules/mymesh.implicit.box", "generated/submodules/mymesh.implicit.cylinder", "generated/submodules/mymesh.implicit.diamond", "generated/submodules/mymesh.implicit.diff", "generated/submodules/mymesh.implicit.difff", "generated/submodules/mymesh.implicit.diffs", "generated/submodules/mymesh.implicit.grid2fun", "generated/submodules/mymesh.implicit.grid2grad", "generated/submodules/mymesh.implicit.gyroid", "generated/submodules/mymesh.implicit.intersection", "generated/submodules/mymesh.implicit.intersectionf", "generated/submodules/mymesh.implicit.intersections", "generated/submodules/mymesh.implicit.lidinoid", "generated/submodules/mymesh.implicit.mesh2udf", "generated/submodules/mymesh.implicit.mixed_topology", "generated/submodules/mymesh.implicit.neovius", "generated/submodules/mymesh.implicit.offset", "generated/submodules/mymesh.implicit.plane", "generated/submodules/mymesh.implicit.primitive", "generated/submodules/mymesh.implicit.rMax", "generated/submodules/mymesh.implicit.rMin", "generated/submodules/mymesh.implicit.sphere", "generated/submodules/mymesh.implicit.thicken", "generated/submodules/mymesh.implicit.thickenf", "generated/submodules/mymesh.implicit.thickens", "generated/submodules/mymesh.implicit.torus", "generated/submodules/mymesh.implicit.tpms", "generated/submodules/mymesh.implicit.union", "generated/submodules/mymesh.implicit.unionf", "generated/submodules/mymesh.implicit.unions", "generated/submodules/mymesh.implicit.xplane", "generated/submodules/mymesh.implicit.yplane", "generated/submodules/mymesh.implicit.zplane", "generated/submodules/mymesh.improvement.Contract", "generated/submodules/mymesh.improvement.GeoTransformSmoothing", "generated/submodules/mymesh.improvement.LocalLaplacianSmoothing", "generated/submodules/mymesh.improvement.NodeSpringSmoothing", "generated/submodules/mymesh.improvement.SegmentSpringSmoothing", "generated/submodules/mymesh.improvement.SmartLaplacianSmoothing", "generated/submodules/mymesh.improvement.TangentialLaplacianSmoothing", "generated/submodules/mymesh.improvement.TetFlip", "generated/submodules/mymesh.improvement.TetImprove", "generated/submodules/mymesh.improvement.TetSplit", "generated/submodules/mymesh.primitives.Box", "generated/submodules/mymesh.primitives.Circle", "generated/submodules/mymesh.primitives.CirclePt", "generated/submodules/mymesh.primitives.Cylinder", "generated/submodules/mymesh.primitives.Extrude", "generated/submodules/mymesh.primitives.Grid", "generated/submodules/mymesh.primitives.Grid2D", "generated/submodules/mymesh.primitives.Line", "generated/submodules/mymesh.primitives.Multiline", "generated/submodules/mymesh.primitives.Plane", "generated/submodules/mymesh.primitives.Revolve", "generated/submodules/mymesh.primitives.Sphere", "generated/submodules/mymesh.primitives.Torus", "generated/submodules/mymesh.quality.Area", "generated/submodules/mymesh.quality.AspectRatio", "generated/submodules/mymesh.quality.InverseOrthogonalQuality", "generated/submodules/mymesh.quality.InverseOrthogonality", "generated/submodules/mymesh.quality.MaxDihedral", "generated/submodules/mymesh.quality.MeanRatio", "generated/submodules/mymesh.quality.MinDihedral", "generated/submodules/mymesh.quality.OrthogonalQuality", "generated/submodules/mymesh.quality.Orthogonality", "generated/submodules/mymesh.quality.Skewness", "generated/submodules/mymesh.quality.SurfDihedralAngles", "generated/submodules/mymesh.quality.Volume", "generated/submodules/mymesh.quality.dihedralAngles", "generated/submodules/mymesh.quality.equiangular_skewness", "generated/submodules/mymesh.quality.quad_skewness", "generated/submodules/mymesh.quality.tet_circumradius", "generated/submodules/mymesh.quality.tet_vol_skewness", "generated/submodules/mymesh.quality.tet_volume", "generated/submodules/mymesh.quality.tri_area", "generated/submodules/mymesh.quality.tri_skewness", "generated/submodules/mymesh.rays.BoundaryBoundaryIntersection", "generated/submodules/mymesh.rays.BoxBoxIntersection", "generated/submodules/mymesh.rays.BoxTrianglesIntersection", "generated/submodules/mymesh.rays.PlaneBoxIntersection", "generated/submodules/mymesh.rays.PlaneSurfIntersection", "generated/submodules/mymesh.rays.PlaneTriangleIntersection", "generated/submodules/mymesh.rays.PlaneTrianglesIntersection", "generated/submodules/mymesh.rays.PointInBoundary", "generated/submodules/mymesh.rays.PointInBox", "generated/submodules/mymesh.rays.PointInBox2D", "generated/submodules/mymesh.rays.PointInSurf", "generated/submodules/mymesh.rays.PointInTet", "generated/submodules/mymesh.rays.PointInTri", "generated/submodules/mymesh.rays.PointsInSurf", "generated/submodules/mymesh.rays.PointsInTris", "generated/submodules/mymesh.rays.PointsInVoxel", "generated/submodules/mymesh.rays.RayBoundaryIntersection", "generated/submodules/mymesh.rays.RayBoxIntersection", "generated/submodules/mymesh.rays.RayBoxesIntersection", "generated/submodules/mymesh.rays.RayOctreeIntersection", "generated/submodules/mymesh.rays.RaySegmentIntersection", "generated/submodules/mymesh.rays.RaySegmentsIntersection", "generated/submodules/mymesh.rays.RaySurfIntersection", "generated/submodules/mymesh.rays.RayTriangleIntersection", "generated/submodules/mymesh.rays.RayTrianglesIntersection", "generated/submodules/mymesh.rays.RaysSurfIntersection", "generated/submodules/mymesh.rays.RaysTrianglesIntersection", "generated/submodules/mymesh.rays.SegmentBox2DIntersection", "generated/submodules/mymesh.rays.SegmentBoxIntersection", "generated/submodules/mymesh.rays.SegmentSegmentIntersection", "generated/submodules/mymesh.rays.SegmentsSegmentsIntersection", "generated/submodules/mymesh.rays.SurfSelfIntersection", "generated/submodules/mymesh.rays.SurfSurfIntersection", "generated/submodules/mymesh.rays.TriangleBoxIntersection", "generated/submodules/mymesh.rays.TriangleTriangleIntersection", "generated/submodules/mymesh.rays.TriangleTriangleIntersectionPt", "generated/submodules/mymesh.rays.TrianglesTrianglesIntersection", "generated/submodules/mymesh.rays.TrianglesTrianglesIntersectionPts", "generated/submodules/mymesh.register.AxisAlignImage", "generated/submodules/mymesh.register.AxisAlignPoints", "generated/submodules/mymesh.register.ICP", "generated/submodules/mymesh.register.Image2Image", "generated/submodules/mymesh.register.ImageOverlay", "generated/submodules/mymesh.register.Mesh2Mesh", "generated/submodules/mymesh.register.Point2Point", "generated/submodules/mymesh.register.R2d", "generated/submodules/mymesh.register.R3d", "generated/submodules/mymesh.register.S2d", "generated/submodules/mymesh.register.S3d", "generated/submodules/mymesh.register.Sh2d", "generated/submodules/mymesh.register.Sh3d", "generated/submodules/mymesh.register.T2d", "generated/submodules/mymesh.register.T3d", "generated/submodules/mymesh.register.affine", "generated/submodules/mymesh.register.affine2d", "generated/submodules/mymesh.register.closest_point_MSE", "generated/submodules/mymesh.register.dice", "generated/submodules/mymesh.register.hausdorff", "generated/submodules/mymesh.register.jaccard", "generated/submodules/mymesh.register.mutual_information", "generated/submodules/mymesh.register.optimize", "generated/submodules/mymesh.register.rigid", "generated/submodules/mymesh.register.rigid2d", "generated/submodules/mymesh.register.rotation", "generated/submodules/mymesh.register.rotation2d", "generated/submodules/mymesh.register.similarity", "generated/submodules/mymesh.register.similarity2d", "generated/submodules/mymesh.register.symmetric_closest_point_MSE", "generated/submodules/mymesh.register.transform_image", "generated/submodules/mymesh.register.transform_points", "generated/submodules/mymesh.register.translation", "generated/submodules/mymesh.register.translation2d", "generated/submodules/mymesh.tree.Edges2Quadtree", "generated/submodules/mymesh.tree.Function2Octree", "generated/submodules/mymesh.tree.Octree2Dual", "generated/submodules/mymesh.tree.Octree2Voxel", "generated/submodules/mymesh.tree.OctreeNode", "generated/submodules/mymesh.tree.OctreeNode.ContainsBoxes", "generated/submodules/mymesh.tree.OctreeNode.ContainsPts", "generated/submodules/mymesh.tree.OctreeNode.ContainsTris", "generated/submodules/mymesh.tree.OctreeNode.PointInNode", "generated/submodules/mymesh.tree.OctreeNode.PointsInNode", "generated/submodules/mymesh.tree.OctreeNode.clearData", "generated/submodules/mymesh.tree.OctreeNode.getLevel", "generated/submodules/mymesh.tree.OctreeNode.getLimits", "generated/submodules/mymesh.tree.OctreeNode.getMaxDepth", "generated/submodules/mymesh.tree.OctreeNode.getVertices", "generated/submodules/mymesh.tree.OctreeNode.hasChildren", "generated/submodules/mymesh.tree.OctreeNode.makeChildren", "generated/submodules/mymesh.tree.OctreeNode.makeChildrenBoxes", "generated/submodules/mymesh.tree.OctreeNode.makeChildrenPts", "generated/submodules/mymesh.tree.OctreeNode.makeChildrenTris", "generated/submodules/mymesh.tree.OctreeNode.prune", "generated/submodules/mymesh.tree.Points2Octree", "generated/submodules/mymesh.tree.Points2Quadtree", "generated/submodules/mymesh.tree.Print", "generated/submodules/mymesh.tree.Quadtree2Dual", "generated/submodules/mymesh.tree.Quadtree2Pixel", "generated/submodules/mymesh.tree.QuadtreeNode", "generated/submodules/mymesh.tree.QuadtreeNode.ContainsEdges", "generated/submodules/mymesh.tree.QuadtreeNode.ContainsPts", "generated/submodules/mymesh.tree.QuadtreeNode.PointInNode", "generated/submodules/mymesh.tree.QuadtreeNode.PointsInNode", "generated/submodules/mymesh.tree.QuadtreeNode.clearData", "generated/submodules/mymesh.tree.QuadtreeNode.getLevel", "generated/submodules/mymesh.tree.QuadtreeNode.getLimits", "generated/submodules/mymesh.tree.QuadtreeNode.getMaxDepth", "generated/submodules/mymesh.tree.QuadtreeNode.getVertices", "generated/submodules/mymesh.tree.QuadtreeNode.hasChildren", "generated/submodules/mymesh.tree.QuadtreeNode.makeChildren", "generated/submodules/mymesh.tree.QuadtreeNode.makeChildrenEdges", "generated/submodules/mymesh.tree.QuadtreeNode.makeChildrenPts", "generated/submodules/mymesh.tree.QuadtreeNode.prune", "generated/submodules/mymesh.tree.SearchOctree", "generated/submodules/mymesh.tree.SearchOctreeTri", "generated/submodules/mymesh.tree.Surface2Octree", "generated/submodules/mymesh.tree.TreeNode", "generated/submodules/mymesh.tree.TreeNode.clearData", "generated/submodules/mymesh.tree.TreeNode.getLevel", "generated/submodules/mymesh.tree.TreeNode.getMaxDepth", "generated/submodules/mymesh.tree.TreeNode.hasChildren", "generated/submodules/mymesh.tree.TreeNode.prune", "generated/submodules/mymesh.tree.Voxel2Octree", "generated/submodules/mymesh.tree.getAllLeaf", "generated/submodules/mymesh.utils.AABB", "generated/submodules/mymesh.utils.BaryTet", "generated/submodules/mymesh.utils.BaryTri", "generated/submodules/mymesh.utils.BaryTris", "generated/submodules/mymesh.utils.CalcFaceNormal", "generated/submodules/mymesh.utils.Centroids", "generated/submodules/mymesh.utils.CleanupDegenerateElements", "generated/submodules/mymesh.utils.DeleteDegenerateElements", "generated/submodules/mymesh.utils.DeleteDuplicateNodes", "generated/submodules/mymesh.utils.DetectFeatures", "generated/submodules/mymesh.utils.DilateVoxel", "generated/submodules/mymesh.utils.ErodeVoxel", "generated/submodules/mymesh.utils.ExtractRagged", "generated/submodules/mymesh.utils.Face2NodeNormal", "generated/submodules/mymesh.utils.MVBB", "generated/submodules/mymesh.utils.MergeMesh", "generated/submodules/mymesh.utils.MirrorMesh", "generated/submodules/mymesh.utils.PadRagged", "generated/submodules/mymesh.utils.Project2Surface", "generated/submodules/mymesh.utils.RelabelNodes", "generated/submodules/mymesh.utils.SortRaggedByLength", "generated/submodules/mymesh.utils.SplitRaggedByLength", "generated/submodules/mymesh.utils.SurfMapping", "generated/submodules/mymesh.utils.TetMeshVol", "generated/submodules/mymesh.utils.TriSurfVol", "generated/submodules/mymesh.utils.ValueMapping", "generated/submodules/mymesh.utils.getConnectedElements", "generated/submodules/mymesh.utils.getConnectedNodes", "generated/submodules/mymesh.utils.getElemConnectivity", "generated/submodules/mymesh.utils.getElemNeighbors", "generated/submodules/mymesh.utils.getNodeNeighborhood", "generated/submodules/mymesh.utils.getNodeNeighborhoodByRadius", "generated/submodules/mymesh.utils.getNodeNeighbors", "generated/submodules/mymesh.utils.identify_elem", "generated/submodules/mymesh.utils.identify_type", "generated/submodules/mymesh.utils.makePyramidLayer", "generated/submodules/mymesh.visualize.FaceColor", "generated/submodules/mymesh.visualize.GetTheme", "generated/submodules/mymesh.visualize.ParseColor", "generated/submodules/mymesh.visualize.Subplot", "generated/submodules/mymesh.visualize.View", "generated/submodules/mymesh.visualize.set_vispy_backend", "guide", "guide/connectivity", "guide/csg", "guide/elem_types", "guide/getting_started", "guide/image_meshing", "guide/implicit_meshing", "guide/installation", "guide/io", "guide/matlab", "guide/mesh_class", "guide/ref", "guide/what_mesh", "index", "sg_execution_times", "submodules/mymesh.demo_image", "submodules/mymesh.demo_mesh", "theory", "theory/contour", "theory/curvature", "theory/delaunay", "theory/edgecontract", "theory/flips23", "theory/implicit", "theory/improvement", "theory/laplaciansmooth", "theory/octree", "theory/rays", "theory/springsmooth"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["api.rst", "dev.rst", "examples/MeshAnalysis/demo_curvature.rst", "examples/MeshAnalysis/index.rst", "examples/MeshAnalysis/sg_execution_times.rst", "examples/MeshGeneration/demo_heart.rst", "examples/MeshGeneration/demo_mixed-top.rst", "examples/MeshGeneration/demo_pasta.rst", "examples/MeshGeneration/index.rst", "examples/MeshGeneration/sg_execution_times.rst", "examples/index.rst", "examples/sg_execution_times.rst", "generated/mymesh.booleans.rst", "generated/mymesh.contour.rst", "generated/mymesh.converter.rst", "generated/mymesh.curvature.rst", "generated/mymesh.delaunay.rst", "generated/mymesh.demo_image.rst", "generated/mymesh.demo_mesh.rst", "generated/mymesh.image.rst", "generated/mymesh.implicit.rst", "generated/mymesh.improvement.rst", "generated/mymesh.mesh.rst", "generated/mymesh.mesh.mesh.Boundary.rst", "generated/mymesh.mesh.mesh.BoundaryConn.rst", "generated/mymesh.mesh.mesh.BoundaryNodes.rst", "generated/mymesh.mesh.mesh.Centroids.rst", "generated/mymesh.mesh.mesh.Clip.rst", "generated/mymesh.mesh.mesh.Contour.rst", "generated/mymesh.mesh.mesh.CreateBoundaryLayer.rst", "generated/mymesh.mesh.mesh.Crop.rst", "generated/mymesh.mesh.mesh.EdgeConn.rst", "generated/mymesh.mesh.mesh.EdgeElemConn.rst", "generated/mymesh.mesh.mesh.Edges.rst", "generated/mymesh.mesh.mesh.ElemConn.rst", "generated/mymesh.mesh.mesh.ElemNeighbors.rst", "generated/mymesh.mesh.mesh.ElemNormals.rst", "generated/mymesh.mesh.mesh.ElemType.rst", "generated/mymesh.mesh.mesh.EulerCharacteristic.rst", "generated/mymesh.mesh.mesh.FaceConn.rst", "generated/mymesh.mesh.mesh.FaceElemConn.rst", "generated/mymesh.mesh.mesh.Faces.rst", "generated/mymesh.mesh.mesh.Genus.rst", "generated/mymesh.mesh.mesh.MeshNodes.rst", "generated/mymesh.mesh.mesh.Mirror.rst", "generated/mymesh.mesh.mesh.ND.rst", "generated/mymesh.mesh.mesh.NEdge.rst", "generated/mymesh.mesh.mesh.NElem.rst", "generated/mymesh.mesh.mesh.NFace.rst", "generated/mymesh.mesh.mesh.NNode.rst", "generated/mymesh.mesh.mesh.NodeNeighbors.rst", "generated/mymesh.mesh.mesh.NodeNormals.rst", "generated/mymesh.mesh.mesh.NodeNormalsMethod.rst", "generated/mymesh.mesh.mesh.RenumberFacesBySet.rst", "generated/mymesh.mesh.mesh.RenumberNodesBySet.rst", "generated/mymesh.mesh.mesh.SurfConn.rst", "generated/mymesh.mesh.mesh.SurfElemConn.rst", "generated/mymesh.mesh.mesh.SurfNodeNeighbors.rst", "generated/mymesh.mesh.mesh.SurfNodes.rst", "generated/mymesh.mesh.mesh.Surface.rst", "generated/mymesh.mesh.mesh.Threshold.rst", "generated/mymesh.mesh.mesh.aabb.rst", "generated/mymesh.mesh.mesh.addEdges.rst", "generated/mymesh.mesh.mesh.addElems.rst", "generated/mymesh.mesh.mesh.addFaces.rst", "generated/mymesh.mesh.mesh.addNodes.rst", "generated/mymesh.mesh.mesh.bounds.rst", "generated/mymesh.mesh.mesh.cells.rst", "generated/mymesh.mesh.mesh.cleanup.rst", "generated/mymesh.mesh.mesh.copy.rst", "generated/mymesh.mesh.mesh.getCurvature.rst", "generated/mymesh.mesh.mesh.getQuality.rst", "generated/mymesh.mesh.mesh.identify_type.rst", "generated/mymesh.mesh.mesh.imread.rst", "generated/mymesh.mesh.mesh.merge.rst", "generated/mymesh.mesh.mesh.mesh2dmesh.rst", "generated/mymesh.mesh.mesh.meshio2mymesh.rst", "generated/mymesh.mesh.mesh.mvbb.rst", "generated/mymesh.mesh.mesh.mymesh2meshio.rst", "generated/mymesh.mesh.mesh.plot.rst", "generated/mymesh.mesh.mesh.points.rst", "generated/mymesh.mesh.mesh.read.rst", "generated/mymesh.mesh.mesh.removeElems.rst", "generated/mymesh.mesh.mesh.reset.rst", "generated/mymesh.mesh.mesh.to_meshio.rst", "generated/mymesh.mesh.mesh.to_pyvista.rst", "generated/mymesh.mesh.mesh.validate.rst", "generated/mymesh.mesh.mesh.view.rst", "generated/mymesh.mesh.mesh.write.rst", "generated/mymesh.primitives.rst", "generated/mymesh.quality.rst", "generated/mymesh.rays.rst", "generated/mymesh.register.rst", "generated/mymesh.tree.rst", "generated/mymesh.utils.rst", "generated/mymesh.visualize.rst", "generated/submodules/mymesh.booleans.MeshBooleans.rst", "generated/submodules/mymesh.booleans.SplitMesh.rst", "generated/submodules/mymesh.contour.Adaptive.rst", "generated/submodules/mymesh.contour.MarchingCubes.rst", "generated/submodules/mymesh.contour.MarchingCubesImage.rst", "generated/submodules/mymesh.contour.MarchingElements.rst", "generated/submodules/mymesh.contour.MarchingSquares.rst", "generated/submodules/mymesh.contour.MarchingSquaresImage.rst", "generated/submodules/mymesh.contour.MarchingTetrahedra.rst", "generated/submodules/mymesh.contour.MarchingTriangles.rst", "generated/submodules/mymesh.converter.EdgesByElement.rst", "generated/submodules/mymesh.converter.edge2quadratic.rst", "generated/submodules/mymesh.converter.edge32linear.rst", "generated/submodules/mymesh.converter.edges2unique.rst", "generated/submodules/mymesh.converter.faces2surface.rst", "generated/submodules/mymesh.converter.faces2unique.rst", "generated/submodules/mymesh.converter.hex202linear.rst", "generated/submodules/mymesh.converter.hex2edges.rst", "generated/submodules/mymesh.converter.hex2faces.rst", "generated/submodules/mymesh.converter.hex2quadratic.rst", "generated/submodules/mymesh.converter.hex2tet.rst", "generated/submodules/mymesh.converter.hexsubdivide.rst", "generated/submodules/mymesh.converter.im2voxel.rst", "generated/submodules/mymesh.converter.linear2quadratic.rst", "generated/submodules/mymesh.converter.mesh2im.rst", "generated/submodules/mymesh.converter.polygon2edges.rst", "generated/submodules/mymesh.converter.pyr132linear.rst", "generated/submodules/mymesh.converter.pyr2quadratic.rst", "generated/submodules/mymesh.converter.pyramid2edges.rst", "generated/submodules/mymesh.converter.pyramid2faces.rst", "generated/submodules/mymesh.converter.pyramid2tet.rst", "generated/submodules/mymesh.converter.quad2edges.rst", "generated/submodules/mymesh.converter.quad2quadratic.rst", "generated/submodules/mymesh.converter.quad2tri.rst", "generated/submodules/mymesh.converter.quad82linear.rst", "generated/submodules/mymesh.converter.quadratic2linear.rst", "generated/submodules/mymesh.converter.solid2edges.rst", "generated/submodules/mymesh.converter.solid2faces.rst", "generated/submodules/mymesh.converter.solid2surface.rst", "generated/submodules/mymesh.converter.solid2tets.rst", "generated/submodules/mymesh.converter.surf2dual.rst", "generated/submodules/mymesh.converter.surf2edges.rst", "generated/submodules/mymesh.converter.surf2tris.rst", "generated/submodules/mymesh.converter.surf2voxel.rst", "generated/submodules/mymesh.converter.tet102linear.rst", "generated/submodules/mymesh.converter.tet2edges.rst", "generated/submodules/mymesh.converter.tet2faces.rst", "generated/submodules/mymesh.converter.tet2quadratic.rst", "generated/submodules/mymesh.converter.tetsubdivide.rst", "generated/submodules/mymesh.converter.tri2edges.rst", "generated/submodules/mymesh.converter.tri2quadratic.rst", "generated/submodules/mymesh.converter.tri62linear.rst", "generated/submodules/mymesh.converter.voxel2im.rst", "generated/submodules/mymesh.converter.wdg152linear.rst", "generated/submodules/mymesh.converter.wdg2quadratic.rst", "generated/submodules/mymesh.converter.wedge2edges.rst", "generated/submodules/mymesh.converter.wedge2faces.rst", "generated/submodules/mymesh.converter.wedge2tet.rst", "generated/submodules/mymesh.curvature.AnalyticalCurvature.rst", "generated/submodules/mymesh.curvature.CubicFit.rst", "generated/submodules/mymesh.curvature.Curvedness.rst", "generated/submodules/mymesh.curvature.GaussianCurvature.rst", "generated/submodules/mymesh.curvature.ImageCurvature.rst", "generated/submodules/mymesh.curvature.MeanCurvature.rst", "generated/submodules/mymesh.curvature.NormCurve.rst", "generated/submodules/mymesh.curvature.QuadFit.rst", "generated/submodules/mymesh.curvature.ShapeCategory.rst", "generated/submodules/mymesh.curvature.ShapeIndex.rst", "generated/submodules/mymesh.delaunay.Alpha2d.rst", "generated/submodules/mymesh.delaunay.Alpha3d.rst", "generated/submodules/mymesh.delaunay.AlphaPeel3d.rst", "generated/submodules/mymesh.delaunay.AlphaShape.rst", "generated/submodules/mymesh.delaunay.BowyerWatson2d.rst", "generated/submodules/mymesh.delaunay.BowyerWatson3d.rst", "generated/submodules/mymesh.delaunay.ConvexHull.rst", "generated/submodules/mymesh.delaunay.FanTriangulation.rst", "generated/submodules/mymesh.delaunay.GiftWrapping.rst", "generated/submodules/mymesh.delaunay.SciPy.rst", "generated/submodules/mymesh.delaunay.Tetrahedralize.rst", "generated/submodules/mymesh.delaunay.Triangle.rst", "generated/submodules/mymesh.delaunay.Triangulate.rst", "generated/submodules/mymesh.image.PixelMesh.rst", "generated/submodules/mymesh.image.SurfaceMesh.rst", "generated/submodules/mymesh.image.SurfaceNodeOptimization.rst", "generated/submodules/mymesh.image.TetMesh.rst", "generated/submodules/mymesh.image.VoxelMesh.rst", "generated/submodules/mymesh.image.read.rst", "generated/submodules/mymesh.image.write.rst", "generated/submodules/mymesh.implicit.SurfaceMesh.rst", "generated/submodules/mymesh.implicit.SurfaceNodeOptimization.rst", "generated/submodules/mymesh.implicit.TetMesh.rst", "generated/submodules/mymesh.implicit.VoxelMesh.rst", "generated/submodules/mymesh.implicit.box.rst", "generated/submodules/mymesh.implicit.cylinder.rst", "generated/submodules/mymesh.implicit.diamond.rst", "generated/submodules/mymesh.implicit.diff.rst", "generated/submodules/mymesh.implicit.difff.rst", "generated/submodules/mymesh.implicit.diffs.rst", "generated/submodules/mymesh.implicit.grid2fun.rst", "generated/submodules/mymesh.implicit.grid2grad.rst", "generated/submodules/mymesh.implicit.gyroid.rst", "generated/submodules/mymesh.implicit.intersection.rst", "generated/submodules/mymesh.implicit.intersectionf.rst", "generated/submodules/mymesh.implicit.intersections.rst", "generated/submodules/mymesh.implicit.lidinoid.rst", "generated/submodules/mymesh.implicit.mesh2udf.rst", "generated/submodules/mymesh.implicit.mixed_topology.rst", "generated/submodules/mymesh.implicit.neovius.rst", "generated/submodules/mymesh.implicit.offset.rst", "generated/submodules/mymesh.implicit.plane.rst", "generated/submodules/mymesh.implicit.primitive.rst", "generated/submodules/mymesh.implicit.rMax.rst", "generated/submodules/mymesh.implicit.rMin.rst", "generated/submodules/mymesh.implicit.sphere.rst", "generated/submodules/mymesh.implicit.thicken.rst", "generated/submodules/mymesh.implicit.thickenf.rst", "generated/submodules/mymesh.implicit.thickens.rst", "generated/submodules/mymesh.implicit.torus.rst", "generated/submodules/mymesh.implicit.tpms.rst", "generated/submodules/mymesh.implicit.union.rst", "generated/submodules/mymesh.implicit.unionf.rst", "generated/submodules/mymesh.implicit.unions.rst", "generated/submodules/mymesh.implicit.xplane.rst", "generated/submodules/mymesh.implicit.yplane.rst", "generated/submodules/mymesh.implicit.zplane.rst", "generated/submodules/mymesh.improvement.Contract.rst", "generated/submodules/mymesh.improvement.GeoTransformSmoothing.rst", "generated/submodules/mymesh.improvement.LocalLaplacianSmoothing.rst", "generated/submodules/mymesh.improvement.NodeSpringSmoothing.rst", "generated/submodules/mymesh.improvement.SegmentSpringSmoothing.rst", "generated/submodules/mymesh.improvement.SmartLaplacianSmoothing.rst", "generated/submodules/mymesh.improvement.TangentialLaplacianSmoothing.rst", "generated/submodules/mymesh.improvement.TetFlip.rst", "generated/submodules/mymesh.improvement.TetImprove.rst", "generated/submodules/mymesh.improvement.TetSplit.rst", "generated/submodules/mymesh.primitives.Box.rst", "generated/submodules/mymesh.primitives.Circle.rst", "generated/submodules/mymesh.primitives.CirclePt.rst", "generated/submodules/mymesh.primitives.Cylinder.rst", "generated/submodules/mymesh.primitives.Extrude.rst", "generated/submodules/mymesh.primitives.Grid.rst", "generated/submodules/mymesh.primitives.Grid2D.rst", "generated/submodules/mymesh.primitives.Line.rst", "generated/submodules/mymesh.primitives.Multiline.rst", "generated/submodules/mymesh.primitives.Plane.rst", "generated/submodules/mymesh.primitives.Revolve.rst", "generated/submodules/mymesh.primitives.Sphere.rst", "generated/submodules/mymesh.primitives.Torus.rst", "generated/submodules/mymesh.quality.Area.rst", "generated/submodules/mymesh.quality.AspectRatio.rst", "generated/submodules/mymesh.quality.InverseOrthogonalQuality.rst", "generated/submodules/mymesh.quality.InverseOrthogonality.rst", "generated/submodules/mymesh.quality.MaxDihedral.rst", "generated/submodules/mymesh.quality.MeanRatio.rst", "generated/submodules/mymesh.quality.MinDihedral.rst", "generated/submodules/mymesh.quality.OrthogonalQuality.rst", "generated/submodules/mymesh.quality.Orthogonality.rst", "generated/submodules/mymesh.quality.Skewness.rst", "generated/submodules/mymesh.quality.SurfDihedralAngles.rst", "generated/submodules/mymesh.quality.Volume.rst", "generated/submodules/mymesh.quality.dihedralAngles.rst", "generated/submodules/mymesh.quality.equiangular_skewness.rst", "generated/submodules/mymesh.quality.quad_skewness.rst", "generated/submodules/mymesh.quality.tet_circumradius.rst", "generated/submodules/mymesh.quality.tet_vol_skewness.rst", "generated/submodules/mymesh.quality.tet_volume.rst", "generated/submodules/mymesh.quality.tri_area.rst", "generated/submodules/mymesh.quality.tri_skewness.rst", "generated/submodules/mymesh.rays.BoundaryBoundaryIntersection.rst", "generated/submodules/mymesh.rays.BoxBoxIntersection.rst", "generated/submodules/mymesh.rays.BoxTrianglesIntersection.rst", "generated/submodules/mymesh.rays.PlaneBoxIntersection.rst", "generated/submodules/mymesh.rays.PlaneSurfIntersection.rst", "generated/submodules/mymesh.rays.PlaneTriangleIntersection.rst", "generated/submodules/mymesh.rays.PlaneTrianglesIntersection.rst", "generated/submodules/mymesh.rays.PointInBoundary.rst", "generated/submodules/mymesh.rays.PointInBox.rst", "generated/submodules/mymesh.rays.PointInBox2D.rst", "generated/submodules/mymesh.rays.PointInSurf.rst", "generated/submodules/mymesh.rays.PointInTet.rst", "generated/submodules/mymesh.rays.PointInTri.rst", "generated/submodules/mymesh.rays.PointsInSurf.rst", "generated/submodules/mymesh.rays.PointsInTris.rst", "generated/submodules/mymesh.rays.PointsInVoxel.rst", "generated/submodules/mymesh.rays.RayBoundaryIntersection.rst", "generated/submodules/mymesh.rays.RayBoxIntersection.rst", "generated/submodules/mymesh.rays.RayBoxesIntersection.rst", "generated/submodules/mymesh.rays.RayOctreeIntersection.rst", "generated/submodules/mymesh.rays.RaySegmentIntersection.rst", "generated/submodules/mymesh.rays.RaySegmentsIntersection.rst", "generated/submodules/mymesh.rays.RaySurfIntersection.rst", "generated/submodules/mymesh.rays.RayTriangleIntersection.rst", "generated/submodules/mymesh.rays.RayTrianglesIntersection.rst", "generated/submodules/mymesh.rays.RaysSurfIntersection.rst", "generated/submodules/mymesh.rays.RaysTrianglesIntersection.rst", "generated/submodules/mymesh.rays.SegmentBox2DIntersection.rst", "generated/submodules/mymesh.rays.SegmentBoxIntersection.rst", "generated/submodules/mymesh.rays.SegmentSegmentIntersection.rst", "generated/submodules/mymesh.rays.SegmentsSegmentsIntersection.rst", "generated/submodules/mymesh.rays.SurfSelfIntersection.rst", "generated/submodules/mymesh.rays.SurfSurfIntersection.rst", "generated/submodules/mymesh.rays.TriangleBoxIntersection.rst", "generated/submodules/mymesh.rays.TriangleTriangleIntersection.rst", "generated/submodules/mymesh.rays.TriangleTriangleIntersectionPt.rst", "generated/submodules/mymesh.rays.TrianglesTrianglesIntersection.rst", "generated/submodules/mymesh.rays.TrianglesTrianglesIntersectionPts.rst", "generated/submodules/mymesh.register.AxisAlignImage.rst", "generated/submodules/mymesh.register.AxisAlignPoints.rst", "generated/submodules/mymesh.register.ICP.rst", "generated/submodules/mymesh.register.Image2Image.rst", "generated/submodules/mymesh.register.ImageOverlay.rst", "generated/submodules/mymesh.register.Mesh2Mesh.rst", "generated/submodules/mymesh.register.Point2Point.rst", "generated/submodules/mymesh.register.R2d.rst", "generated/submodules/mymesh.register.R3d.rst", "generated/submodules/mymesh.register.S2d.rst", "generated/submodules/mymesh.register.S3d.rst", "generated/submodules/mymesh.register.Sh2d.rst", "generated/submodules/mymesh.register.Sh3d.rst", "generated/submodules/mymesh.register.T2d.rst", "generated/submodules/mymesh.register.T3d.rst", "generated/submodules/mymesh.register.affine.rst", "generated/submodules/mymesh.register.affine2d.rst", "generated/submodules/mymesh.register.closest_point_MSE.rst", "generated/submodules/mymesh.register.dice.rst", "generated/submodules/mymesh.register.hausdorff.rst", "generated/submodules/mymesh.register.jaccard.rst", "generated/submodules/mymesh.register.mutual_information.rst", "generated/submodules/mymesh.register.optimize.rst", "generated/submodules/mymesh.register.rigid.rst", "generated/submodules/mymesh.register.rigid2d.rst", "generated/submodules/mymesh.register.rotation.rst", "generated/submodules/mymesh.register.rotation2d.rst", "generated/submodules/mymesh.register.similarity.rst", "generated/submodules/mymesh.register.similarity2d.rst", "generated/submodules/mymesh.register.symmetric_closest_point_MSE.rst", "generated/submodules/mymesh.register.transform_image.rst", "generated/submodules/mymesh.register.transform_points.rst", "generated/submodules/mymesh.register.translation.rst", "generated/submodules/mymesh.register.translation2d.rst", "generated/submodules/mymesh.tree.Edges2Quadtree.rst", "generated/submodules/mymesh.tree.Function2Octree.rst", "generated/submodules/mymesh.tree.Octree2Dual.rst", "generated/submodules/mymesh.tree.Octree2Voxel.rst", "generated/submodules/mymesh.tree.OctreeNode.rst", "generated/submodules/mymesh.tree.OctreeNode.ContainsBoxes.rst", "generated/submodules/mymesh.tree.OctreeNode.ContainsPts.rst", "generated/submodules/mymesh.tree.OctreeNode.ContainsTris.rst", "generated/submodules/mymesh.tree.OctreeNode.PointInNode.rst", "generated/submodules/mymesh.tree.OctreeNode.PointsInNode.rst", "generated/submodules/mymesh.tree.OctreeNode.clearData.rst", "generated/submodules/mymesh.tree.OctreeNode.getLevel.rst", "generated/submodules/mymesh.tree.OctreeNode.getLimits.rst", "generated/submodules/mymesh.tree.OctreeNode.getMaxDepth.rst", "generated/submodules/mymesh.tree.OctreeNode.getVertices.rst", "generated/submodules/mymesh.tree.OctreeNode.hasChildren.rst", "generated/submodules/mymesh.tree.OctreeNode.makeChildren.rst", "generated/submodules/mymesh.tree.OctreeNode.makeChildrenBoxes.rst", "generated/submodules/mymesh.tree.OctreeNode.makeChildrenPts.rst", "generated/submodules/mymesh.tree.OctreeNode.makeChildrenTris.rst", "generated/submodules/mymesh.tree.OctreeNode.prune.rst", "generated/submodules/mymesh.tree.Points2Octree.rst", "generated/submodules/mymesh.tree.Points2Quadtree.rst", "generated/submodules/mymesh.tree.Print.rst", "generated/submodules/mymesh.tree.Quadtree2Dual.rst", "generated/submodules/mymesh.tree.Quadtree2Pixel.rst", "generated/submodules/mymesh.tree.QuadtreeNode.rst", "generated/submodules/mymesh.tree.QuadtreeNode.ContainsEdges.rst", "generated/submodules/mymesh.tree.QuadtreeNode.ContainsPts.rst", "generated/submodules/mymesh.tree.QuadtreeNode.PointInNode.rst", "generated/submodules/mymesh.tree.QuadtreeNode.PointsInNode.rst", "generated/submodules/mymesh.tree.QuadtreeNode.clearData.rst", "generated/submodules/mymesh.tree.QuadtreeNode.getLevel.rst", "generated/submodules/mymesh.tree.QuadtreeNode.getLimits.rst", "generated/submodules/mymesh.tree.QuadtreeNode.getMaxDepth.rst", "generated/submodules/mymesh.tree.QuadtreeNode.getVertices.rst", "generated/submodules/mymesh.tree.QuadtreeNode.hasChildren.rst", "generated/submodules/mymesh.tree.QuadtreeNode.makeChildren.rst", "generated/submodules/mymesh.tree.QuadtreeNode.makeChildrenEdges.rst", "generated/submodules/mymesh.tree.QuadtreeNode.makeChildrenPts.rst", "generated/submodules/mymesh.tree.QuadtreeNode.prune.rst", "generated/submodules/mymesh.tree.SearchOctree.rst", "generated/submodules/mymesh.tree.SearchOctreeTri.rst", "generated/submodules/mymesh.tree.Surface2Octree.rst", "generated/submodules/mymesh.tree.TreeNode.rst", "generated/submodules/mymesh.tree.TreeNode.clearData.rst", "generated/submodules/mymesh.tree.TreeNode.getLevel.rst", "generated/submodules/mymesh.tree.TreeNode.getMaxDepth.rst", "generated/submodules/mymesh.tree.TreeNode.hasChildren.rst", "generated/submodules/mymesh.tree.TreeNode.prune.rst", "generated/submodules/mymesh.tree.Voxel2Octree.rst", "generated/submodules/mymesh.tree.getAllLeaf.rst", "generated/submodules/mymesh.utils.AABB.rst", "generated/submodules/mymesh.utils.BaryTet.rst", "generated/submodules/mymesh.utils.BaryTri.rst", "generated/submodules/mymesh.utils.BaryTris.rst", "generated/submodules/mymesh.utils.CalcFaceNormal.rst", "generated/submodules/mymesh.utils.Centroids.rst", "generated/submodules/mymesh.utils.CleanupDegenerateElements.rst", "generated/submodules/mymesh.utils.DeleteDegenerateElements.rst", "generated/submodules/mymesh.utils.DeleteDuplicateNodes.rst", "generated/submodules/mymesh.utils.DetectFeatures.rst", "generated/submodules/mymesh.utils.DilateVoxel.rst", "generated/submodules/mymesh.utils.ErodeVoxel.rst", "generated/submodules/mymesh.utils.ExtractRagged.rst", "generated/submodules/mymesh.utils.Face2NodeNormal.rst", "generated/submodules/mymesh.utils.MVBB.rst", "generated/submodules/mymesh.utils.MergeMesh.rst", "generated/submodules/mymesh.utils.MirrorMesh.rst", "generated/submodules/mymesh.utils.PadRagged.rst", "generated/submodules/mymesh.utils.Project2Surface.rst", "generated/submodules/mymesh.utils.RelabelNodes.rst", "generated/submodules/mymesh.utils.SortRaggedByLength.rst", "generated/submodules/mymesh.utils.SplitRaggedByLength.rst", "generated/submodules/mymesh.utils.SurfMapping.rst", "generated/submodules/mymesh.utils.TetMeshVol.rst", "generated/submodules/mymesh.utils.TriSurfVol.rst", "generated/submodules/mymesh.utils.ValueMapping.rst", "generated/submodules/mymesh.utils.getConnectedElements.rst", "generated/submodules/mymesh.utils.getConnectedNodes.rst", "generated/submodules/mymesh.utils.getElemConnectivity.rst", "generated/submodules/mymesh.utils.getElemNeighbors.rst", "generated/submodules/mymesh.utils.getNodeNeighborhood.rst", "generated/submodules/mymesh.utils.getNodeNeighborhoodByRadius.rst", "generated/submodules/mymesh.utils.getNodeNeighbors.rst", "generated/submodules/mymesh.utils.identify_elem.rst", "generated/submodules/mymesh.utils.identify_type.rst", "generated/submodules/mymesh.utils.makePyramidLayer.rst", "generated/submodules/mymesh.visualize.FaceColor.rst", "generated/submodules/mymesh.visualize.GetTheme.rst", "generated/submodules/mymesh.visualize.ParseColor.rst", "generated/submodules/mymesh.visualize.Subplot.rst", "generated/submodules/mymesh.visualize.View.rst", "generated/submodules/mymesh.visualize.set_vispy_backend.rst", "guide.rst", "guide/connectivity.rst", "guide/csg.rst", "guide/elem_types.rst", "guide/getting_started.rst", "guide/image_meshing.rst", "guide/implicit_meshing.rst", "guide/installation.rst", "guide/io.rst", "guide/matlab.rst", "guide/mesh_class.rst", "guide/ref.rst", "guide/what_mesh.rst", "index.rst", "sg_execution_times.rst", "submodules/mymesh.demo_image.rst", "submodules/mymesh.demo_mesh.rst", "theory.rst", "theory/contour.rst", "theory/curvature.rst", "theory/delaunay.rst", "theory/edgecontract.rst", "theory/flips23.rst", "theory/implicit.rst", "theory/improvement.rst", "theory/laplaciansmooth.rst", "theory/octree.rst", "theory/rays.rst", "theory/springsmooth.rst"], "indexentries": {"aabb (mymesh.mesh.mesh property)": [[61, "mymesh.mesh.mesh.aabb", false]], "aabb() (in module mymesh.utils)": [[388, "mymesh.utils.AABB", false]], "adaptive() (in module mymesh.contour)": [[98, "mymesh.contour.Adaptive", false]], "addedges() (mymesh.mesh.mesh method)": [[62, "mymesh.mesh.mesh.addEdges", false]], "addelems() (mymesh.mesh.mesh method)": [[63, "mymesh.mesh.mesh.addElems", false]], "addfaces() (mymesh.mesh.mesh method)": [[64, "mymesh.mesh.mesh.addFaces", false]], "addnodes() (mymesh.mesh.mesh method)": [[65, "mymesh.mesh.mesh.addNodes", false]], "affine() (in module mymesh.register)": [[317, "mymesh.register.affine", false]], "affine2d() (in module mymesh.register)": [[318, "mymesh.register.affine2d", false]], "alpha2d() (in module mymesh.delaunay)": [[164, "mymesh.delaunay.Alpha2d", false]], "alpha3d() (in module mymesh.delaunay)": [[165, "mymesh.delaunay.Alpha3d", false]], "alphapeel3d() (in module mymesh.delaunay)": [[166, "mymesh.delaunay.AlphaPeel3d", false]], "alphashape() (in module mymesh.delaunay)": [[167, "mymesh.delaunay.AlphaShape", false]], "analyticalcurvature() (in module mymesh.curvature)": [[154, "mymesh.curvature.AnalyticalCurvature", false]], "area() (in module mymesh.quality)": [[244, "mymesh.quality.Area", false]], "aspectratio() (in module mymesh.quality)": [[245, "mymesh.quality.AspectRatio", false]], "axisalignimage() (in module mymesh.register)": [[302, "mymesh.register.AxisAlignImage", false]], "axisalignpoints() (in module mymesh.register)": [[303, "mymesh.register.AxisAlignPoints", false]], "barytet() (in module mymesh.utils)": [[389, "mymesh.utils.BaryTet", false]], "barytri() (in module mymesh.utils)": [[390, "mymesh.utils.BaryTri", false]], "barytris() (in module mymesh.utils)": [[391, "mymesh.utils.BaryTris", false]], "boundary (mymesh.mesh.mesh property)": [[23, "mymesh.mesh.mesh.Boundary", false]], "boundaryboundaryintersection() (in module mymesh.rays)": [[264, "mymesh.rays.BoundaryBoundaryIntersection", false]], "boundaryconn (mymesh.mesh.mesh property)": [[24, "mymesh.mesh.mesh.BoundaryConn", false]], "boundarynodes (mymesh.mesh.mesh property)": [[25, "mymesh.mesh.mesh.BoundaryNodes", false]], "bounds (mymesh.mesh.mesh property)": [[66, "mymesh.mesh.mesh.bounds", false]], "bowyerwatson2d() (in module mymesh.delaunay)": [[168, "mymesh.delaunay.BowyerWatson2d", false]], "bowyerwatson3d() (in module mymesh.delaunay)": [[169, "mymesh.delaunay.BowyerWatson3d", false]], "box() (in module mymesh.implicit)": [[188, "mymesh.implicit.box", false]], "box() (in module mymesh.primitives)": [[231, "mymesh.primitives.Box", false]], "boxboxintersection() (in module mymesh.rays)": [[265, "mymesh.rays.BoxBoxIntersection", false]], "boxtrianglesintersection() (in module mymesh.rays)": [[266, "mymesh.rays.BoxTrianglesIntersection", false]], "calcfacenormal() (in module mymesh.utils)": [[392, "mymesh.utils.CalcFaceNormal", false]], "cells (mymesh.mesh.mesh property)": [[67, "mymesh.mesh.mesh.cells", false]], "centroids (mymesh.mesh.mesh property)": [[26, "mymesh.mesh.mesh.Centroids", false]], "centroids() (in module mymesh.utils)": [[393, "mymesh.utils.Centroids", false]], "circle() (in module mymesh.primitives)": [[232, "mymesh.primitives.Circle", false]], "circlept() (in module mymesh.primitives)": [[233, "mymesh.primitives.CirclePt", false]], "cleanup() (mymesh.mesh.mesh method)": [[68, "mymesh.mesh.mesh.cleanup", false]], "cleanupdegenerateelements() (in module mymesh.utils)": [[394, "mymesh.utils.CleanupDegenerateElements", false]], "cleardata() (mymesh.tree.octreenode method)": [[346, "mymesh.tree.OctreeNode.clearData", false]], "cleardata() (mymesh.tree.quadtreenode method)": [[367, "mymesh.tree.QuadtreeNode.clearData", false]], "cleardata() (mymesh.tree.treenode method)": [[381, "mymesh.tree.TreeNode.clearData", false]], "clip() (mymesh.mesh.mesh method)": [[27, "mymesh.mesh.mesh.Clip", false]], "closest_point_mse() (in module mymesh.register)": [[319, "mymesh.register.closest_point_MSE", false]], "containsboxes() (mymesh.tree.octreenode method)": [[341, "mymesh.tree.OctreeNode.ContainsBoxes", false]], "containsedges() (mymesh.tree.quadtreenode method)": [[363, "mymesh.tree.QuadtreeNode.ContainsEdges", false]], "containspts() (mymesh.tree.octreenode method)": [[342, "mymesh.tree.OctreeNode.ContainsPts", false]], "containspts() (mymesh.tree.quadtreenode method)": [[364, "mymesh.tree.QuadtreeNode.ContainsPts", false]], "containstris() (mymesh.tree.octreenode method)": [[343, "mymesh.tree.OctreeNode.ContainsTris", false]], "contour() (mymesh.mesh.mesh method)": [[28, "mymesh.mesh.mesh.Contour", false]], "contract() (in module mymesh.improvement)": [[221, "mymesh.improvement.Contract", false]], "convexhull() (in module mymesh.delaunay)": [[170, "mymesh.delaunay.ConvexHull", false]], "copy() (mymesh.mesh.mesh method)": [[69, "mymesh.mesh.mesh.copy", false]], "createboundarylayer() (mymesh.mesh.mesh method)": [[29, "mymesh.mesh.mesh.CreateBoundaryLayer", false]], "crop() (mymesh.mesh.mesh method)": [[30, "mymesh.mesh.mesh.Crop", false]], "cubicfit() (in module mymesh.curvature)": [[155, "mymesh.curvature.CubicFit", false]], "curvedness() (in module mymesh.curvature)": [[156, "mymesh.curvature.Curvedness", false]], "cylinder() (in module mymesh.implicit)": [[189, "mymesh.implicit.cylinder", false]], "cylinder() (in module mymesh.primitives)": [[234, "mymesh.primitives.Cylinder", false]], "deletedegenerateelements() (in module mymesh.utils)": [[395, "mymesh.utils.DeleteDegenerateElements", false]], "deleteduplicatenodes() (in module mymesh.utils)": [[396, "mymesh.utils.DeleteDuplicateNodes", false]], "demo_image() (in module mymesh)": [[17, "mymesh.demo_image", false], [445, "mymesh.demo_image", false]], "demo_mesh() (in module mymesh)": [[18, "mymesh.demo_mesh", false], [446, "mymesh.demo_mesh", false]], "detectfeatures() (in module mymesh.utils)": [[397, "mymesh.utils.DetectFeatures", false]], "diamond() (in module mymesh.implicit)": [[190, "mymesh.implicit.diamond", false]], "dice() (in module mymesh.register)": [[320, "mymesh.register.dice", false]], "diff() (in module mymesh.implicit)": [[191, "mymesh.implicit.diff", false]], "difff() (in module mymesh.implicit)": [[192, "mymesh.implicit.difff", false]], "diffs() (in module mymesh.implicit)": [[193, "mymesh.implicit.diffs", false]], "dihedralangles() (in module mymesh.quality)": [[256, "mymesh.quality.dihedralAngles", false]], "dilatevoxel() (in module mymesh.utils)": [[398, "mymesh.utils.DilateVoxel", false]], "edge2quadratic() (in module mymesh.converter)": [[107, "mymesh.converter.edge2quadratic", false]], "edge32linear() (in module mymesh.converter)": [[108, "mymesh.converter.edge32linear", false]], "edgeconn (mymesh.mesh.mesh property)": [[31, "mymesh.mesh.mesh.EdgeConn", false]], "edgeelemconn (mymesh.mesh.mesh property)": [[32, "mymesh.mesh.mesh.EdgeElemConn", false]], "edges (mymesh.mesh.mesh property)": [[33, "mymesh.mesh.mesh.Edges", false]], "edges2quadtree() (in module mymesh.tree)": [[336, "mymesh.tree.Edges2Quadtree", false]], "edges2unique() (in module mymesh.converter)": [[109, "mymesh.converter.edges2unique", false]], "edgesbyelement() (in module mymesh.converter)": [[106, "mymesh.converter.EdgesByElement", false]], "edgesets (mymesh.mesh attribute)": [[22, "mymesh.mesh.EdgeSets", false]], "elemconn (mymesh.mesh.mesh property)": [[34, "mymesh.mesh.mesh.ElemConn", false]], "elemdata (mymesh.mesh attribute)": [[22, "mymesh.mesh.ElemData", false]], "elemneighbors (mymesh.mesh.mesh property)": [[35, "mymesh.mesh.mesh.ElemNeighbors", false]], "elemnormals (mymesh.mesh.mesh property)": [[36, "mymesh.mesh.mesh.ElemNormals", false]], "elemsets (mymesh.mesh attribute)": [[22, "mymesh.mesh.ElemSets", false]], "elemtype (mymesh.mesh.mesh property)": [[37, "mymesh.mesh.mesh.ElemType", false]], "equiangular_skewness() (in module mymesh.quality)": [[257, "mymesh.quality.equiangular_skewness", false]], "erodevoxel() (in module mymesh.utils)": [[399, "mymesh.utils.ErodeVoxel", false]], "eulercharacteristic (mymesh.mesh.mesh property)": [[38, "mymesh.mesh.mesh.EulerCharacteristic", false]], "extractragged() (in module mymesh.utils)": [[400, "mymesh.utils.ExtractRagged", false]], "extrude() (in module mymesh.primitives)": [[235, "mymesh.primitives.Extrude", false]], "face2nodenormal() (in module mymesh.utils)": [[401, "mymesh.utils.Face2NodeNormal", false]], "facecolor() (in module mymesh.visualize)": [[424, "mymesh.visualize.FaceColor", false]], "faceconn (mymesh.mesh.mesh property)": [[39, "mymesh.mesh.mesh.FaceConn", false]], "faceelemconn (mymesh.mesh.mesh property)": [[40, "mymesh.mesh.mesh.FaceElemConn", false]], "faces (mymesh.mesh.mesh property)": [[41, "mymesh.mesh.mesh.Faces", false]], "faces2surface() (in module mymesh.converter)": [[110, "mymesh.converter.faces2surface", false]], "faces2unique() (in module mymesh.converter)": [[111, "mymesh.converter.faces2unique", false]], "facesets (mymesh.mesh attribute)": [[22, "mymesh.mesh.FaceSets", false]], "fantriangulation() (in module mymesh.delaunay)": [[171, "mymesh.delaunay.FanTriangulation", false]], "function2octree() (in module mymesh.tree)": [[337, "mymesh.tree.Function2Octree", false]], "gaussiancurvature() (in module mymesh.curvature)": [[157, "mymesh.curvature.GaussianCurvature", false]], "genus (mymesh.mesh.mesh property)": [[42, "mymesh.mesh.mesh.Genus", false]], "geotransformsmoothing() (in module mymesh.improvement)": [[222, "mymesh.improvement.GeoTransformSmoothing", false]], "getallleaf() (in module mymesh.tree)": [[387, "mymesh.tree.getAllLeaf", false]], "getconnectedelements() (in module mymesh.utils)": [[414, "mymesh.utils.getConnectedElements", false]], "getconnectednodes() (in module mymesh.utils)": [[415, "mymesh.utils.getConnectedNodes", false]], "getcurvature() (mymesh.mesh.mesh method)": [[70, "mymesh.mesh.mesh.getCurvature", false]], "getelemconnectivity() (in module mymesh.utils)": [[416, "mymesh.utils.getElemConnectivity", false]], "getelemneighbors() (in module mymesh.utils)": [[417, "mymesh.utils.getElemNeighbors", false]], "getlevel() (mymesh.tree.octreenode method)": [[347, "mymesh.tree.OctreeNode.getLevel", false]], "getlevel() (mymesh.tree.quadtreenode method)": [[368, "mymesh.tree.QuadtreeNode.getLevel", false]], "getlevel() (mymesh.tree.treenode method)": [[382, "mymesh.tree.TreeNode.getLevel", false]], "getlimits() (mymesh.tree.octreenode method)": [[348, "mymesh.tree.OctreeNode.getLimits", false]], "getlimits() (mymesh.tree.quadtreenode method)": [[369, "mymesh.tree.QuadtreeNode.getLimits", false]], "getmaxdepth() (mymesh.tree.octreenode method)": [[349, "mymesh.tree.OctreeNode.getMaxDepth", false]], "getmaxdepth() (mymesh.tree.quadtreenode method)": [[370, "mymesh.tree.QuadtreeNode.getMaxDepth", false]], "getmaxdepth() (mymesh.tree.treenode method)": [[383, "mymesh.tree.TreeNode.getMaxDepth", false]], "getnodeneighborhood() (in module mymesh.utils)": [[418, "mymesh.utils.getNodeNeighborhood", false]], "getnodeneighborhoodbyradius() (in module mymesh.utils)": [[419, "mymesh.utils.getNodeNeighborhoodByRadius", false]], "getnodeneighbors() (in module mymesh.utils)": [[420, "mymesh.utils.getNodeNeighbors", false]], "getquality() (mymesh.mesh.mesh method)": [[71, "mymesh.mesh.mesh.getQuality", false]], "gettheme() (in module mymesh.visualize)": [[425, "mymesh.visualize.GetTheme", false]], "getvertices() (mymesh.tree.octreenode method)": [[350, "mymesh.tree.OctreeNode.getVertices", false]], "getvertices() (mymesh.tree.quadtreenode method)": [[371, "mymesh.tree.QuadtreeNode.getVertices", false]], "giftwrapping() (in module mymesh.delaunay)": [[172, "mymesh.delaunay.GiftWrapping", false]], "grid() (in module mymesh.primitives)": [[236, "mymesh.primitives.Grid", false]], "grid2d() (in module mymesh.primitives)": [[237, "mymesh.primitives.Grid2D", false]], "grid2fun() (in module mymesh.implicit)": [[194, "mymesh.implicit.grid2fun", false]], "grid2grad() (in module mymesh.implicit)": [[195, "mymesh.implicit.grid2grad", false]], "gyroid() (in module mymesh.implicit)": [[196, "mymesh.implicit.gyroid", false]], "haschildren() (mymesh.tree.octreenode method)": [[351, "mymesh.tree.OctreeNode.hasChildren", false]], "haschildren() (mymesh.tree.quadtreenode method)": [[372, "mymesh.tree.QuadtreeNode.hasChildren", false]], "haschildren() (mymesh.tree.treenode method)": [[384, "mymesh.tree.TreeNode.hasChildren", false]], "hausdorff() (in module mymesh.register)": [[321, "mymesh.register.hausdorff", false]], "hex202linear() (in module mymesh.converter)": [[112, "mymesh.converter.hex202linear", false]], "hex2edges() (in module mymesh.converter)": [[113, "mymesh.converter.hex2edges", false]], "hex2faces() (in module mymesh.converter)": [[114, "mymesh.converter.hex2faces", false]], "hex2quadratic() (in module mymesh.converter)": [[115, "mymesh.converter.hex2quadratic", false]], "hex2tet() (in module mymesh.converter)": [[116, "mymesh.converter.hex2tet", false]], "hexsubdivide() (in module mymesh.converter)": [[117, "mymesh.converter.hexsubdivide", false]], "icp() (in module mymesh.register)": [[304, "mymesh.register.ICP", false]], "identify_elem() (in module mymesh.utils)": [[421, "mymesh.utils.identify_elem", false]], "identify_type() (in module mymesh.utils)": [[422, "mymesh.utils.identify_type", false]], "identify_type() (mymesh.mesh.mesh method)": [[72, "mymesh.mesh.mesh.identify_type", false]], "im2voxel() (in module mymesh.converter)": [[118, "mymesh.converter.im2voxel", false]], "image2image() (in module mymesh.register)": [[305, "mymesh.register.Image2Image", false]], "imagecurvature() (in module mymesh.curvature)": [[158, "mymesh.curvature.ImageCurvature", false]], "imageoverlay() (in module mymesh.register)": [[306, "mymesh.register.ImageOverlay", false]], "imread() (mymesh.mesh.mesh method)": [[73, "mymesh.mesh.mesh.imread", false]], "intersection() (in module mymesh.implicit)": [[197, "mymesh.implicit.intersection", false]], "intersectionf() (in module mymesh.implicit)": [[198, "mymesh.implicit.intersectionf", false]], "intersections() (in module mymesh.implicit)": [[199, "mymesh.implicit.intersections", false]], "inverseorthogonality() (in module mymesh.quality)": [[247, "mymesh.quality.InverseOrthogonality", false]], "inverseorthogonalquality() (in module mymesh.quality)": [[246, "mymesh.quality.InverseOrthogonalQuality", false]], "jaccard() (in module mymesh.register)": [[322, "mymesh.register.jaccard", false]], "lidinoid() (in module mymesh.implicit)": [[200, "mymesh.implicit.lidinoid", false]], "line() (in module mymesh.primitives)": [[238, "mymesh.primitives.Line", false]], "linear2quadratic() (in module mymesh.converter)": [[119, "mymesh.converter.linear2quadratic", false]], "locallaplaciansmoothing() (in module mymesh.improvement)": [[223, "mymesh.improvement.LocalLaplacianSmoothing", false]], "makechildren() (mymesh.tree.octreenode method)": [[352, "mymesh.tree.OctreeNode.makeChildren", false]], "makechildren() (mymesh.tree.quadtreenode method)": [[373, "mymesh.tree.QuadtreeNode.makeChildren", false]], "makechildrenboxes() (mymesh.tree.octreenode method)": [[353, "mymesh.tree.OctreeNode.makeChildrenBoxes", false]], "makechildrenedges() (mymesh.tree.quadtreenode method)": [[374, "mymesh.tree.QuadtreeNode.makeChildrenEdges", false]], "makechildrenpts() (mymesh.tree.octreenode method)": [[354, "mymesh.tree.OctreeNode.makeChildrenPts", false]], "makechildrenpts() (mymesh.tree.quadtreenode method)": [[375, "mymesh.tree.QuadtreeNode.makeChildrenPts", false]], "makechildrentris() (mymesh.tree.octreenode method)": [[355, "mymesh.tree.OctreeNode.makeChildrenTris", false]], "makepyramidlayer() (in module mymesh.utils)": [[423, "mymesh.utils.makePyramidLayer", false]], "marchingcubes() (in module mymesh.contour)": [[99, "mymesh.contour.MarchingCubes", false]], "marchingcubesimage() (in module mymesh.contour)": [[100, "mymesh.contour.MarchingCubesImage", false]], "marchingelements() (in module mymesh.contour)": [[101, "mymesh.contour.MarchingElements", false]], "marchingsquares() (in module mymesh.contour)": [[102, "mymesh.contour.MarchingSquares", false]], "marchingsquaresimage() (in module mymesh.contour)": [[103, "mymesh.contour.MarchingSquaresImage", false]], "marchingtetrahedra() (in module mymesh.contour)": [[104, "mymesh.contour.MarchingTetrahedra", false]], "marchingtriangles() (in module mymesh.contour)": [[105, "mymesh.contour.MarchingTriangles", false]], "maxdihedral() (in module mymesh.quality)": [[248, "mymesh.quality.MaxDihedral", false]], "meancurvature() (in module mymesh.curvature)": [[159, "mymesh.curvature.MeanCurvature", false]], "meanratio() (in module mymesh.quality)": [[249, "mymesh.quality.MeanRatio", false]], "merge() (mymesh.mesh.mesh method)": [[74, "mymesh.mesh.mesh.merge", false]], "mergemesh() (in module mymesh.utils)": [[403, "mymesh.utils.MergeMesh", false]], "mesh (class in mymesh)": [[22, "mymesh.mesh", false]], "mesh2dmesh() (mymesh.mesh.mesh method)": [[75, "mymesh.mesh.mesh.mesh2dmesh", false]], "mesh2im() (in module mymesh.converter)": [[120, "mymesh.converter.mesh2im", false]], "mesh2mesh() (in module mymesh.register)": [[307, "mymesh.register.Mesh2Mesh", false]], "mesh2udf() (in module mymesh.implicit)": [[201, "mymesh.implicit.mesh2udf", false]], "meshbooleans() (in module mymesh.booleans)": [[96, "mymesh.booleans.MeshBooleans", false]], "meshio2mymesh() (mymesh.mesh.mesh method)": [[76, "mymesh.mesh.mesh.meshio2mymesh", false]], "meshnodes (mymesh.mesh.mesh property)": [[43, "mymesh.mesh.mesh.MeshNodes", false]], "mindihedral() (in module mymesh.quality)": [[250, "mymesh.quality.MinDihedral", false]], "mirror() (mymesh.mesh.mesh method)": [[44, "mymesh.mesh.mesh.Mirror", false]], "mirrormesh() (in module mymesh.utils)": [[404, "mymesh.utils.MirrorMesh", false]], "mixed_topology() (in module mymesh.implicit)": [[202, "mymesh.implicit.mixed_topology", false]], "module": [[0, "module-mymesh", false], [12, "module-mymesh.booleans", false], [13, "module-mymesh.contour", false], [14, "module-mymesh.converter", false], [15, "module-mymesh.curvature", false], [16, "module-mymesh.delaunay", false], [19, "module-mymesh.image", false], [20, "module-mymesh.implicit", false], [21, "module-mymesh.improvement", false], [89, "module-mymesh.primitives", false], [90, "module-mymesh.quality", false], [91, "module-mymesh.rays", false], [92, "module-mymesh.register", false], [93, "module-mymesh.tree", false], [94, "module-mymesh.utils", false], [95, "module-mymesh.visualize", false]], "multiline() (in module mymesh.primitives)": [[239, "mymesh.primitives.Multiline", false]], "mutual_information() (in module mymesh.register)": [[323, "mymesh.register.mutual_information", false]], "mvbb (mymesh.mesh.mesh property)": [[77, "mymesh.mesh.mesh.mvbb", false]], "mvbb() (in module mymesh.utils)": [[402, "mymesh.utils.MVBB", false]], "mymesh": [[0, "module-mymesh", false]], "mymesh.booleans": [[12, "module-mymesh.booleans", false]], "mymesh.contour": [[13, "module-mymesh.contour", false]], "mymesh.converter": [[14, "module-mymesh.converter", false]], "mymesh.curvature": [[15, "module-mymesh.curvature", false]], "mymesh.delaunay": [[16, "module-mymesh.delaunay", false]], "mymesh.image": [[19, "module-mymesh.image", false]], "mymesh.implicit": [[20, "module-mymesh.implicit", false]], "mymesh.improvement": [[21, "module-mymesh.improvement", false]], "mymesh.primitives": [[89, "module-mymesh.primitives", false]], "mymesh.quality": [[90, "module-mymesh.quality", false]], "mymesh.rays": [[91, "module-mymesh.rays", false]], "mymesh.register": [[92, "module-mymesh.register", false]], "mymesh.tree": [[93, "module-mymesh.tree", false]], "mymesh.utils": [[94, "module-mymesh.utils", false]], "mymesh.visualize": [[95, "module-mymesh.visualize", false]], "mymesh2meshio() (mymesh.mesh.mesh method)": [[78, "mymesh.mesh.mesh.mymesh2meshio", false]], "nd (mymesh.mesh.mesh property)": [[45, "mymesh.mesh.mesh.ND", false]], "nedge (mymesh.mesh.mesh property)": [[46, "mymesh.mesh.mesh.NEdge", false]], "nelem (mymesh.mesh.mesh property)": [[47, "mymesh.mesh.mesh.NElem", false]], "neovius() (in module mymesh.implicit)": [[203, "mymesh.implicit.neovius", false]], "nface (mymesh.mesh.mesh property)": [[48, "mymesh.mesh.mesh.NFace", false]], "nnode (mymesh.mesh.mesh property)": [[49, "mymesh.mesh.mesh.NNode", false]], "nodeconn (mymesh.mesh attribute)": [[22, "mymesh.mesh.NodeConn", false]], "nodecoords (mymesh.mesh attribute)": [[22, "mymesh.mesh.NodeCoords", false]], "nodedata (mymesh.mesh attribute)": [[22, "mymesh.mesh.NodeData", false]], "nodeneighbors (mymesh.mesh.mesh property)": [[50, "mymesh.mesh.mesh.NodeNeighbors", false]], "nodenormals (mymesh.mesh.mesh property)": [[51, "mymesh.mesh.mesh.NodeNormals", false]], "nodenormalsmethod (mymesh.mesh.mesh property)": [[52, "mymesh.mesh.mesh.NodeNormalsMethod", false]], "nodesets (mymesh.mesh attribute)": [[22, "mymesh.mesh.NodeSets", false]], "nodespringsmoothing() (in module mymesh.improvement)": [[224, "mymesh.improvement.NodeSpringSmoothing", false]], "normcurve() (in module mymesh.curvature)": [[160, "mymesh.curvature.NormCurve", false]], "octree2dual() (in module mymesh.tree)": [[338, "mymesh.tree.Octree2Dual", false]], "octree2voxel() (in module mymesh.tree)": [[339, "mymesh.tree.Octree2Voxel", false]], "octreenode (class in mymesh.tree)": [[340, "mymesh.tree.OctreeNode", false]], "offset() (in module mymesh.implicit)": [[204, "mymesh.implicit.offset", false]], "optimize() (in module mymesh.register)": [[324, "mymesh.register.optimize", false]], "orthogonality() (in module mymesh.quality)": [[252, "mymesh.quality.Orthogonality", false]], "orthogonalquality() (in module mymesh.quality)": [[251, "mymesh.quality.OrthogonalQuality", false]], "padragged() (in module mymesh.utils)": [[405, "mymesh.utils.PadRagged", false]], "parsecolor() (in module mymesh.visualize)": [[426, "mymesh.visualize.ParseColor", false]], "pixelmesh() (in module mymesh.image)": [[177, "mymesh.image.PixelMesh", false]], "plane() (in module mymesh.implicit)": [[205, "mymesh.implicit.plane", false]], "plane() (in module mymesh.primitives)": [[240, "mymesh.primitives.Plane", false]], "planeboxintersection() (in module mymesh.rays)": [[267, "mymesh.rays.PlaneBoxIntersection", false]], "planesurfintersection() (in module mymesh.rays)": [[268, "mymesh.rays.PlaneSurfIntersection", false]], "planetriangleintersection() (in module mymesh.rays)": [[269, "mymesh.rays.PlaneTriangleIntersection", false]], "planetrianglesintersection() (in module mymesh.rays)": [[270, "mymesh.rays.PlaneTrianglesIntersection", false]], "plot() (mymesh.mesh.mesh method)": [[79, "mymesh.mesh.mesh.plot", false]], "point2point() (in module mymesh.register)": [[308, "mymesh.register.Point2Point", false]], "pointinboundary() (in module mymesh.rays)": [[271, "mymesh.rays.PointInBoundary", false]], "pointinbox() (in module mymesh.rays)": [[272, "mymesh.rays.PointInBox", false]], "pointinbox2d() (in module mymesh.rays)": [[273, "mymesh.rays.PointInBox2D", false]], "pointinnode() (mymesh.tree.octreenode method)": [[344, "mymesh.tree.OctreeNode.PointInNode", false]], "pointinnode() (mymesh.tree.quadtreenode method)": [[365, "mymesh.tree.QuadtreeNode.PointInNode", false]], "pointinsurf() (in module mymesh.rays)": [[274, "mymesh.rays.PointInSurf", false]], "pointintet() (in module mymesh.rays)": [[275, "mymesh.rays.PointInTet", false]], "pointintri() (in module mymesh.rays)": [[276, "mymesh.rays.PointInTri", false]], "points (mymesh.mesh.mesh property)": [[80, "mymesh.mesh.mesh.points", false]], "points2octree() (in module mymesh.tree)": [[357, "mymesh.tree.Points2Octree", false]], "points2quadtree() (in module mymesh.tree)": [[358, "mymesh.tree.Points2Quadtree", false]], "pointsinnode() (mymesh.tree.octreenode method)": [[345, "mymesh.tree.OctreeNode.PointsInNode", false]], "pointsinnode() (mymesh.tree.quadtreenode method)": [[366, "mymesh.tree.QuadtreeNode.PointsInNode", false]], "pointsinsurf() (in module mymesh.rays)": [[277, "mymesh.rays.PointsInSurf", false]], "pointsintris() (in module mymesh.rays)": [[278, "mymesh.rays.PointsInTris", false]], "pointsinvoxel() (in module mymesh.rays)": [[279, "mymesh.rays.PointsInVoxel", false]], "polygon2edges() (in module mymesh.converter)": [[121, "mymesh.converter.polygon2edges", false]], "primitive() (in module mymesh.implicit)": [[206, "mymesh.implicit.primitive", false]], "print() (in module mymesh.tree)": [[359, "mymesh.tree.Print", false]], "project2surface() (in module mymesh.utils)": [[406, "mymesh.utils.Project2Surface", false]], "prune() (mymesh.tree.octreenode method)": [[356, "mymesh.tree.OctreeNode.prune", false]], "prune() (mymesh.tree.quadtreenode method)": [[376, "mymesh.tree.QuadtreeNode.prune", false]], "prune() (mymesh.tree.treenode method)": [[385, "mymesh.tree.TreeNode.prune", false]], "pyr132linear() (in module mymesh.converter)": [[122, "mymesh.converter.pyr132linear", false]], "pyr2quadratic() (in module mymesh.converter)": [[123, "mymesh.converter.pyr2quadratic", false]], "pyramid2edges() (in module mymesh.converter)": [[124, "mymesh.converter.pyramid2edges", false]], "pyramid2faces() (in module mymesh.converter)": [[125, "mymesh.converter.pyramid2faces", false]], "pyramid2tet() (in module mymesh.converter)": [[126, "mymesh.converter.pyramid2tet", false]], "quad2edges() (in module mymesh.converter)": [[127, "mymesh.converter.quad2edges", false]], "quad2quadratic() (in module mymesh.converter)": [[128, "mymesh.converter.quad2quadratic", false]], "quad2tri() (in module mymesh.converter)": [[129, "mymesh.converter.quad2tri", false]], "quad82linear() (in module mymesh.converter)": [[130, "mymesh.converter.quad82linear", false]], "quad_skewness() (in module mymesh.quality)": [[258, "mymesh.quality.quad_skewness", false]], "quadfit() (in module mymesh.curvature)": [[161, "mymesh.curvature.QuadFit", false]], "quadratic2linear() (in module mymesh.converter)": [[131, "mymesh.converter.quadratic2linear", false]], "quadtree2dual() (in module mymesh.tree)": [[360, "mymesh.tree.Quadtree2Dual", false]], "quadtree2pixel() (in module mymesh.tree)": [[361, "mymesh.tree.Quadtree2Pixel", false]], "quadtreenode (class in mymesh.tree)": [[362, "mymesh.tree.QuadtreeNode", false]], "r2d() (in module mymesh.register)": [[309, "mymesh.register.R2d", false]], "r3d() (in module mymesh.register)": [[310, "mymesh.register.R3d", false]], "rayboundaryintersection() (in module mymesh.rays)": [[280, "mymesh.rays.RayBoundaryIntersection", false]], "rayboxesintersection() (in module mymesh.rays)": [[282, "mymesh.rays.RayBoxesIntersection", false]], "rayboxintersection() (in module mymesh.rays)": [[281, "mymesh.rays.RayBoxIntersection", false]], "rayoctreeintersection() (in module mymesh.rays)": [[283, "mymesh.rays.RayOctreeIntersection", false]], "raysegmentintersection() (in module mymesh.rays)": [[284, "mymesh.rays.RaySegmentIntersection", false]], "raysegmentsintersection() (in module mymesh.rays)": [[285, "mymesh.rays.RaySegmentsIntersection", false]], "rayssurfintersection() (in module mymesh.rays)": [[289, "mymesh.rays.RaysSurfIntersection", false]], "raystrianglesintersection() (in module mymesh.rays)": [[290, "mymesh.rays.RaysTrianglesIntersection", false]], "raysurfintersection() (in module mymesh.rays)": [[286, "mymesh.rays.RaySurfIntersection", false]], "raytriangleintersection() (in module mymesh.rays)": [[287, "mymesh.rays.RayTriangleIntersection", false]], "raytrianglesintersection() (in module mymesh.rays)": [[288, "mymesh.rays.RayTrianglesIntersection", false]], "read() (in module mymesh.image)": [[182, "mymesh.image.read", false]], "read() (mymesh.mesh.mesh method)": [[81, "mymesh.mesh.mesh.read", false]], "relabelnodes() (in module mymesh.utils)": [[407, "mymesh.utils.RelabelNodes", false]], "removeelems() (mymesh.mesh.mesh method)": [[82, "mymesh.mesh.mesh.removeElems", false]], "renumberfacesbyset() (mymesh.mesh.mesh method)": [[53, "mymesh.mesh.mesh.RenumberFacesBySet", false]], "renumbernodesbyset() (mymesh.mesh.mesh method)": [[54, "mymesh.mesh.mesh.RenumberNodesBySet", false]], "reset() (mymesh.mesh.mesh method)": [[83, "mymesh.mesh.mesh.reset", false]], "revolve() (in module mymesh.primitives)": [[241, "mymesh.primitives.Revolve", false]], "rigid() (in module mymesh.register)": [[325, "mymesh.register.rigid", false]], "rigid2d() (in module mymesh.register)": [[326, "mymesh.register.rigid2d", false]], "rmax() (in module mymesh.implicit)": [[207, "mymesh.implicit.rMax", false]], "rmin() (in module mymesh.implicit)": [[208, "mymesh.implicit.rMin", false]], "rotation() (in module mymesh.register)": [[327, "mymesh.register.rotation", false]], "rotation2d() (in module mymesh.register)": [[328, "mymesh.register.rotation2d", false]], "s2d() (in module mymesh.register)": [[311, "mymesh.register.S2d", false]], "s3d() (in module mymesh.register)": [[312, "mymesh.register.S3d", false]], "scipy() (in module mymesh.delaunay)": [[173, "mymesh.delaunay.SciPy", false]], "searchoctree() (in module mymesh.tree)": [[377, "mymesh.tree.SearchOctree", false]], "searchoctreetri() (in module mymesh.tree)": [[378, "mymesh.tree.SearchOctreeTri", false]], "segmentbox2dintersection() (in module mymesh.rays)": [[291, "mymesh.rays.SegmentBox2DIntersection", false]], "segmentboxintersection() (in module mymesh.rays)": [[292, "mymesh.rays.SegmentBoxIntersection", false]], "segmentsegmentintersection() (in module mymesh.rays)": [[293, "mymesh.rays.SegmentSegmentIntersection", false]], "segmentspringsmoothing() (in module mymesh.improvement)": [[225, "mymesh.improvement.SegmentSpringSmoothing", false]], "segmentssegmentsintersection() (in module mymesh.rays)": [[294, "mymesh.rays.SegmentsSegmentsIntersection", false]], "set_vispy_backend() (in module mymesh.visualize)": [[429, "mymesh.visualize.set_vispy_backend", false]], "sh2d() (in module mymesh.register)": [[313, "mymesh.register.Sh2d", false]], "sh3d() (in module mymesh.register)": [[314, "mymesh.register.Sh3d", false]], "shapecategory() (in module mymesh.curvature)": [[162, "mymesh.curvature.ShapeCategory", false]], "shapeindex() (in module mymesh.curvature)": [[163, "mymesh.curvature.ShapeIndex", false]], "similarity() (in module mymesh.register)": [[329, "mymesh.register.similarity", false]], "similarity2d() (in module mymesh.register)": [[330, "mymesh.register.similarity2d", false]], "skewness() (in module mymesh.quality)": [[253, "mymesh.quality.Skewness", false]], "smartlaplaciansmoothing() (in module mymesh.improvement)": [[226, "mymesh.improvement.SmartLaplacianSmoothing", false]], "solid2edges() (in module mymesh.converter)": [[132, "mymesh.converter.solid2edges", false]], "solid2faces() (in module mymesh.converter)": [[133, "mymesh.converter.solid2faces", false]], "solid2surface() (in module mymesh.converter)": [[134, "mymesh.converter.solid2surface", false]], "solid2tets() (in module mymesh.converter)": [[135, "mymesh.converter.solid2tets", false]], "sortraggedbylength() (in module mymesh.utils)": [[408, "mymesh.utils.SortRaggedByLength", false]], "sphere() (in module mymesh.implicit)": [[209, "mymesh.implicit.sphere", false]], "sphere() (in module mymesh.primitives)": [[242, "mymesh.primitives.Sphere", false]], "splitmesh() (in module mymesh.booleans)": [[97, "mymesh.booleans.SplitMesh", false]], "splitraggedbylength() (in module mymesh.utils)": [[409, "mymesh.utils.SplitRaggedByLength", false]], "subplot() (in module mymesh.visualize)": [[427, "mymesh.visualize.Subplot", false]], "surf2dual() (in module mymesh.converter)": [[136, "mymesh.converter.surf2dual", false]], "surf2edges() (in module mymesh.converter)": [[137, "mymesh.converter.surf2edges", false]], "surf2tris() (in module mymesh.converter)": [[138, "mymesh.converter.surf2tris", false]], "surf2voxel() (in module mymesh.converter)": [[139, "mymesh.converter.surf2voxel", false]], "surface (mymesh.mesh.mesh property)": [[59, "mymesh.mesh.mesh.Surface", false]], "surface2octree() (in module mymesh.tree)": [[379, "mymesh.tree.Surface2Octree", false]], "surfacemesh() (in module mymesh.image)": [[178, "mymesh.image.SurfaceMesh", false]], "surfacemesh() (in module mymesh.implicit)": [[184, "mymesh.implicit.SurfaceMesh", false]], "surfacenodeoptimization() (in module mymesh.image)": [[179, "mymesh.image.SurfaceNodeOptimization", false]], "surfacenodeoptimization() (in module mymesh.implicit)": [[185, "mymesh.implicit.SurfaceNodeOptimization", false]], "surfconn (mymesh.mesh.mesh property)": [[55, "mymesh.mesh.mesh.SurfConn", false]], "surfdihedralangles() (in module mymesh.quality)": [[254, "mymesh.quality.SurfDihedralAngles", false]], "surfelemconn (mymesh.mesh.mesh property)": [[56, "mymesh.mesh.mesh.SurfElemConn", false]], "surfmapping() (in module mymesh.utils)": [[410, "mymesh.utils.SurfMapping", false]], "surfnodeneighbors (mymesh.mesh.mesh property)": [[57, "mymesh.mesh.mesh.SurfNodeNeighbors", false]], "surfnodes (mymesh.mesh.mesh property)": [[58, "mymesh.mesh.mesh.SurfNodes", false]], "surfselfintersection() (in module mymesh.rays)": [[295, "mymesh.rays.SurfSelfIntersection", false]], "surfsurfintersection() (in module mymesh.rays)": [[296, "mymesh.rays.SurfSurfIntersection", false]], "symmetric_closest_point_mse() (in module mymesh.register)": [[331, "mymesh.register.symmetric_closest_point_MSE", false]], "t2d() (in module mymesh.register)": [[315, "mymesh.register.T2d", false]], "t3d() (in module mymesh.register)": [[316, "mymesh.register.T3d", false]], "tangentiallaplaciansmoothing() (in module mymesh.improvement)": [[227, "mymesh.improvement.TangentialLaplacianSmoothing", false]], "tet102linear() (in module mymesh.converter)": [[140, "mymesh.converter.tet102linear", false]], "tet2edges() (in module mymesh.converter)": [[141, "mymesh.converter.tet2edges", false]], "tet2faces() (in module mymesh.converter)": [[142, "mymesh.converter.tet2faces", false]], "tet2quadratic() (in module mymesh.converter)": [[143, "mymesh.converter.tet2quadratic", false]], "tet_circumradius() (in module mymesh.quality)": [[259, "mymesh.quality.tet_circumradius", false]], "tet_vol_skewness() (in module mymesh.quality)": [[260, "mymesh.quality.tet_vol_skewness", false]], "tet_volume() (in module mymesh.quality)": [[261, "mymesh.quality.tet_volume", false]], "tetflip() (in module mymesh.improvement)": [[228, "mymesh.improvement.TetFlip", false]], "tetimprove() (in module mymesh.improvement)": [[229, "mymesh.improvement.TetImprove", false]], "tetmesh() (in module mymesh.image)": [[180, "mymesh.image.TetMesh", false]], "tetmesh() (in module mymesh.implicit)": [[186, "mymesh.implicit.TetMesh", false]], "tetmeshvol() (in module mymesh.utils)": [[411, "mymesh.utils.TetMeshVol", false]], "tetrahedralize() (in module mymesh.delaunay)": [[174, "mymesh.delaunay.Tetrahedralize", false]], "tetsplit() (in module mymesh.improvement)": [[230, "mymesh.improvement.TetSplit", false]], "tetsubdivide() (in module mymesh.converter)": [[144, "mymesh.converter.tetsubdivide", false]], "thicken() (in module mymesh.implicit)": [[210, "mymesh.implicit.thicken", false]], "thickenf() (in module mymesh.implicit)": [[211, "mymesh.implicit.thickenf", false]], "thickens() (in module mymesh.implicit)": [[212, "mymesh.implicit.thickens", false]], "threshold() (mymesh.mesh.mesh method)": [[60, "mymesh.mesh.mesh.Threshold", false]], "to_meshio() (mymesh.mesh.mesh method)": [[84, "mymesh.mesh.mesh.to_meshio", false]], "to_pyvista() (mymesh.mesh.mesh method)": [[85, "mymesh.mesh.mesh.to_pyvista", false]], "torus() (in module mymesh.implicit)": [[213, "mymesh.implicit.torus", false]], "torus() (in module mymesh.primitives)": [[243, "mymesh.primitives.Torus", false]], "tpms() (in module mymesh.implicit)": [[214, "mymesh.implicit.tpms", false]], "transform_image() (in module mymesh.register)": [[332, "mymesh.register.transform_image", false]], "transform_points() (in module mymesh.register)": [[333, "mymesh.register.transform_points", false]], "translation() (in module mymesh.register)": [[334, "mymesh.register.translation", false]], "translation2d() (in module mymesh.register)": [[335, "mymesh.register.translation2d", false]], "treenode (class in mymesh.tree)": [[380, "mymesh.tree.TreeNode", false]], "tri2edges() (in module mymesh.converter)": [[145, "mymesh.converter.tri2edges", false]], "tri2quadratic() (in module mymesh.converter)": [[146, "mymesh.converter.tri2quadratic", false]], "tri62linear() (in module mymesh.converter)": [[147, "mymesh.converter.tri62linear", false]], "tri_area() (in module mymesh.quality)": [[262, "mymesh.quality.tri_area", false]], "tri_skewness() (in module mymesh.quality)": [[263, "mymesh.quality.tri_skewness", false]], "triangle() (in module mymesh.delaunay)": [[175, "mymesh.delaunay.Triangle", false]], "triangleboxintersection() (in module mymesh.rays)": [[297, "mymesh.rays.TriangleBoxIntersection", false]], "trianglestrianglesintersection() (in module mymesh.rays)": [[300, "mymesh.rays.TrianglesTrianglesIntersection", false]], "trianglestrianglesintersectionpts() (in module mymesh.rays)": [[301, "mymesh.rays.TrianglesTrianglesIntersectionPts", false]], "triangletriangleintersection() (in module mymesh.rays)": [[298, "mymesh.rays.TriangleTriangleIntersection", false]], "triangletriangleintersectionpt() (in module mymesh.rays)": [[299, "mymesh.rays.TriangleTriangleIntersectionPt", false]], "triangulate() (in module mymesh.delaunay)": [[176, "mymesh.delaunay.Triangulate", false]], "trisurfvol() (in module mymesh.utils)": [[412, "mymesh.utils.TriSurfVol", false]], "type (mymesh.mesh attribute)": [[22, "mymesh.mesh.Type", false]], "union() (in module mymesh.implicit)": [[215, "mymesh.implicit.union", false]], "unionf() (in module mymesh.implicit)": [[216, "mymesh.implicit.unionf", false]], "unions() (in module mymesh.implicit)": [[217, "mymesh.implicit.unions", false]], "validate() (mymesh.mesh.mesh method)": [[86, "mymesh.mesh.mesh.validate", false]], "valuemapping() (in module mymesh.utils)": [[413, "mymesh.utils.ValueMapping", false]], "verbose (mymesh.mesh attribute)": [[22, "mymesh.mesh.verbose", false]], "view() (in module mymesh.visualize)": [[428, "mymesh.visualize.View", false]], "view() (mymesh.mesh.mesh method)": [[87, "mymesh.mesh.mesh.view", false]], "volume() (in module mymesh.quality)": [[255, "mymesh.quality.Volume", false]], "voxel2im() (in module mymesh.converter)": [[148, "mymesh.converter.voxel2im", false]], "voxel2octree() (in module mymesh.tree)": [[386, "mymesh.tree.Voxel2Octree", false]], "voxelmesh() (in module mymesh.image)": [[181, "mymesh.image.VoxelMesh", false]], "voxelmesh() (in module mymesh.implicit)": [[187, "mymesh.implicit.VoxelMesh", false]], "wdg152linear() (in module mymesh.converter)": [[149, "mymesh.converter.wdg152linear", false]], "wdg2quadratic() (in module mymesh.converter)": [[150, "mymesh.converter.wdg2quadratic", false]], "wedge2edges() (in module mymesh.converter)": [[151, "mymesh.converter.wedge2edges", false]], "wedge2faces() (in module mymesh.converter)": [[152, "mymesh.converter.wedge2faces", false]], "wedge2tet() (in module mymesh.converter)": [[153, "mymesh.converter.wedge2tet", false]], "write() (in module mymesh.image)": [[183, "mymesh.image.write", false]], "write() (mymesh.mesh.mesh method)": [[88, "mymesh.mesh.mesh.write", false]], "xplane() (in module mymesh.implicit)": [[218, "mymesh.implicit.xplane", false]], "yplane() (in module mymesh.implicit)": [[219, "mymesh.implicit.yplane", false]], "zplane() (in module mymesh.implicit)": [[220, "mymesh.implicit.zplane", false]]}, "objects": {"": [[0, 0, 0, "-", "mymesh"]], "mymesh": [[12, 0, 0, "-", "booleans"], [13, 0, 0, "-", "contour"], [14, 0, 0, "-", "converter"], [15, 0, 0, "-", "curvature"], [16, 0, 0, "-", "delaunay"], [445, 1, 1, "", "demo_image"], [446, 1, 1, "", "demo_mesh"], [19, 0, 0, "-", "image"], [20, 0, 0, "-", "implicit"], [21, 0, 0, "-", "improvement"], [22, 2, 1, "", "mesh"], [89, 0, 0, "-", "primitives"], [90, 0, 0, "-", "quality"], [91, 0, 0, "-", "rays"], [92, 0, 0, "-", "register"], [93, 0, 0, "-", "tree"], [94, 0, 0, "-", "utils"], [95, 0, 0, "-", "visualize"]], "mymesh.booleans": [[96, 1, 1, "", "MeshBooleans"], [97, 1, 1, "", "SplitMesh"]], "mymesh.contour": [[98, 1, 1, "", "Adaptive"], [99, 1, 1, "", "MarchingCubes"], [100, 1, 1, "", "MarchingCubesImage"], [101, 1, 1, "", "MarchingElements"], [102, 1, 1, "", "MarchingSquares"], [103, 1, 1, "", "MarchingSquaresImage"], [104, 1, 1, "", "MarchingTetrahedra"], [105, 1, 1, "", "MarchingTriangles"]], "mymesh.converter": [[106, 1, 1, "", "EdgesByElement"], [107, 1, 1, "", "edge2quadratic"], [108, 1, 1, "", "edge32linear"], [109, 1, 1, "", "edges2unique"], [110, 1, 1, "", "faces2surface"], [111, 1, 1, "", "faces2unique"], [112, 1, 1, "", "hex202linear"], [113, 1, 1, "", "hex2edges"], [114, 1, 1, "", "hex2faces"], [115, 1, 1, "", "hex2quadratic"], [116, 1, 1, "", "hex2tet"], [117, 1, 1, "", "hexsubdivide"], [118, 1, 1, "", "im2voxel"], [119, 1, 1, "", "linear2quadratic"], [120, 1, 1, "", "mesh2im"], [121, 1, 1, "", "polygon2edges"], [122, 1, 1, "", "pyr132linear"], [123, 1, 1, "", "pyr2quadratic"], [124, 1, 1, "", "pyramid2edges"], [125, 1, 1, "", "pyramid2faces"], [126, 1, 1, "", "pyramid2tet"], [127, 1, 1, "", "quad2edges"], [128, 1, 1, "", "quad2quadratic"], [129, 1, 1, "", "quad2tri"], [130, 1, 1, "", "quad82linear"], [131, 1, 1, "", "quadratic2linear"], [132, 1, 1, "", "solid2edges"], [133, 1, 1, "", "solid2faces"], [134, 1, 1, "", "solid2surface"], [135, 1, 1, "", "solid2tets"], [136, 1, 1, "", "surf2dual"], [137, 1, 1, "", "surf2edges"], [138, 1, 1, "", "surf2tris"], [139, 1, 1, "", "surf2voxel"], [140, 1, 1, "", "tet102linear"], [141, 1, 1, "", "tet2edges"], [142, 1, 1, "", "tet2faces"], [143, 1, 1, "", "tet2quadratic"], [144, 1, 1, "", "tetsubdivide"], [145, 1, 1, "", "tri2edges"], [146, 1, 1, "", "tri2quadratic"], [147, 1, 1, "", "tri62linear"], [148, 1, 1, "", "voxel2im"], [149, 1, 1, "", "wdg152linear"], [150, 1, 1, "", "wdg2quadratic"], [151, 1, 1, "", "wedge2edges"], [152, 1, 1, "", "wedge2faces"], [153, 1, 1, "", "wedge2tet"]], "mymesh.curvature": [[154, 1, 1, "", "AnalyticalCurvature"], [155, 1, 1, "", "CubicFit"], [156, 1, 1, "", "Curvedness"], [157, 1, 1, "", "GaussianCurvature"], [158, 1, 1, "", "ImageCurvature"], [159, 1, 1, "", "MeanCurvature"], [160, 1, 1, "", "NormCurve"], [161, 1, 1, "", "QuadFit"], [162, 1, 1, "", "ShapeCategory"], [163, 1, 1, "", "ShapeIndex"]], "mymesh.delaunay": [[164, 1, 1, "", "Alpha2d"], [165, 1, 1, "", "Alpha3d"], [166, 1, 1, "", "AlphaPeel3d"], [167, 1, 1, "", "AlphaShape"], [168, 1, 1, "", "BowyerWatson2d"], [169, 1, 1, "", "BowyerWatson3d"], [170, 1, 1, "", "ConvexHull"], [171, 1, 1, "", "FanTriangulation"], [172, 1, 1, "", "GiftWrapping"], [173, 1, 1, "", "SciPy"], [174, 1, 1, "", "Tetrahedralize"], [175, 1, 1, "", "Triangle"], [176, 1, 1, "", "Triangulate"]], "mymesh.image": [[177, 1, 1, "", "PixelMesh"], [178, 1, 1, "", "SurfaceMesh"], [179, 1, 1, "", "SurfaceNodeOptimization"], [180, 1, 1, "", "TetMesh"], [181, 1, 1, "", "VoxelMesh"], [182, 1, 1, "", "read"], [183, 1, 1, "", "write"]], "mymesh.implicit": [[184, 1, 1, "", "SurfaceMesh"], [185, 1, 1, "", "SurfaceNodeOptimization"], [186, 1, 1, "", "TetMesh"], [187, 1, 1, "", "VoxelMesh"], [188, 1, 1, "", "box"], [189, 1, 1, "", "cylinder"], [190, 1, 1, "", "diamond"], [191, 1, 1, "", "diff"], [192, 1, 1, "", "difff"], [193, 1, 1, "", "diffs"], [194, 1, 1, "", "grid2fun"], [195, 1, 1, "", "grid2grad"], [196, 1, 1, "", "gyroid"], [197, 1, 1, "", "intersection"], [198, 1, 1, "", "intersectionf"], [199, 1, 1, "", "intersections"], [200, 1, 1, "", "lidinoid"], [201, 1, 1, "", "mesh2udf"], [202, 1, 1, "", "mixed_topology"], [203, 1, 1, "", "neovius"], [204, 1, 1, "", "offset"], [205, 1, 1, "", "plane"], [206, 1, 1, "", "primitive"], [207, 1, 1, "", "rMax"], [208, 1, 1, "", "rMin"], [209, 1, 1, "", "sphere"], [210, 1, 1, "", "thicken"], [211, 1, 1, "", "thickenf"], [212, 1, 1, "", "thickens"], [213, 1, 1, "", "torus"], [214, 1, 1, "", "tpms"], [215, 1, 1, "", "union"], [216, 1, 1, "", "unionf"], [217, 1, 1, "", "unions"], [218, 1, 1, "", "xplane"], [219, 1, 1, "", "yplane"], [220, 1, 1, "", "zplane"]], "mymesh.improvement": [[221, 1, 1, "", "Contract"], [222, 1, 1, "", "GeoTransformSmoothing"], [223, 1, 1, "", "LocalLaplacianSmoothing"], [224, 1, 1, "", "NodeSpringSmoothing"], [225, 1, 1, "", "SegmentSpringSmoothing"], [226, 1, 1, "", "SmartLaplacianSmoothing"], [227, 1, 1, "", "TangentialLaplacianSmoothing"], [228, 1, 1, "", "TetFlip"], [229, 1, 1, "", "TetImprove"], [230, 1, 1, "", "TetSplit"]], "mymesh.mesh": [[22, 3, 1, "", "EdgeSets"], [22, 3, 1, "", "ElemData"], [22, 3, 1, "", "ElemSets"], [22, 3, 1, "", "FaceSets"], [22, 3, 1, "", "NodeConn"], [22, 3, 1, "", "NodeCoords"], [22, 3, 1, "", "NodeData"], [22, 3, 1, "", "NodeSets"], [22, 3, 1, "", "Type"], [22, 3, 1, "", "verbose"]], "mymesh.mesh.mesh": [[23, 4, 1, "", "Boundary"], [24, 4, 1, "", "BoundaryConn"], [25, 4, 1, "", "BoundaryNodes"], [26, 4, 1, "", "Centroids"], [27, 5, 1, "", "Clip"], [28, 5, 1, "", "Contour"], [29, 5, 1, "", "CreateBoundaryLayer"], [30, 5, 1, "", "Crop"], [31, 4, 1, "", "EdgeConn"], [32, 4, 1, "", "EdgeElemConn"], [33, 4, 1, "", "Edges"], [34, 4, 1, "", "ElemConn"], [35, 4, 1, "", "ElemNeighbors"], [36, 4, 1, "", "ElemNormals"], [37, 4, 1, "", "ElemType"], [38, 4, 1, "", "EulerCharacteristic"], [39, 4, 1, "", "FaceConn"], [40, 4, 1, "", "FaceElemConn"], [41, 4, 1, "", "Faces"], [42, 4, 1, "", "Genus"], [43, 4, 1, "", "MeshNodes"], [44, 5, 1, "", "Mirror"], [45, 4, 1, "", "ND"], [46, 4, 1, "", "NEdge"], [47, 4, 1, "", "NElem"], [48, 4, 1, "", "NFace"], [49, 4, 1, "", "NNode"], [50, 4, 1, "", "NodeNeighbors"], [51, 4, 1, "", "NodeNormals"], [52, 4, 1, "", "NodeNormalsMethod"], [53, 5, 1, "", "RenumberFacesBySet"], [54, 5, 1, "", "RenumberNodesBySet"], [55, 4, 1, "", "SurfConn"], [56, 4, 1, "", "SurfElemConn"], [57, 4, 1, "", "SurfNodeNeighbors"], [58, 4, 1, "", "SurfNodes"], [59, 4, 1, "", "Surface"], [60, 5, 1, "", "Threshold"], [61, 4, 1, "", "aabb"], [62, 5, 1, "", "addEdges"], [63, 5, 1, "", "addElems"], [64, 5, 1, "", "addFaces"], [65, 5, 1, "", "addNodes"], [66, 4, 1, "", "bounds"], [67, 4, 1, "", "cells"], [68, 5, 1, "", "cleanup"], [69, 5, 1, "", "copy"], [70, 5, 1, "", "getCurvature"], [71, 5, 1, "", "getQuality"], [72, 5, 1, "", "identify_type"], [73, 5, 1, "", "imread"], [74, 5, 1, "", "merge"], [75, 5, 1, "", "mesh2dmesh"], [76, 5, 1, "", "meshio2mymesh"], [77, 4, 1, "", "mvbb"], [78, 5, 1, "", "mymesh2meshio"], [79, 5, 1, "", "plot"], [80, 4, 1, "", "points"], [81, 5, 1, "", "read"], [82, 5, 1, "", "removeElems"], [83, 5, 1, "", "reset"], [84, 5, 1, "", "to_meshio"], [85, 5, 1, "", "to_pyvista"], [86, 5, 1, "", "validate"], [87, 5, 1, "", "view"], [88, 5, 1, "", "write"]], "mymesh.primitives": [[231, 1, 1, "", "Box"], [232, 1, 1, "", "Circle"], [233, 1, 1, "", "CirclePt"], [234, 1, 1, "", "Cylinder"], [235, 1, 1, "", "Extrude"], [236, 1, 1, "", "Grid"], [237, 1, 1, "", "Grid2D"], [238, 1, 1, "", "Line"], [239, 1, 1, "", "Multiline"], [240, 1, 1, "", "Plane"], [241, 1, 1, "", "Revolve"], [242, 1, 1, "", "Sphere"], [243, 1, 1, "", "Torus"]], "mymesh.quality": [[244, 1, 1, "", "Area"], [245, 1, 1, "", "AspectRatio"], [246, 1, 1, "", "InverseOrthogonalQuality"], [247, 1, 1, "", "InverseOrthogonality"], [248, 1, 1, "", "MaxDihedral"], [249, 1, 1, "", "MeanRatio"], [250, 1, 1, "", "MinDihedral"], [251, 1, 1, "", "OrthogonalQuality"], [252, 1, 1, "", "Orthogonality"], [253, 1, 1, "", "Skewness"], [254, 1, 1, "", "SurfDihedralAngles"], [255, 1, 1, "", "Volume"], [256, 1, 1, "", "dihedralAngles"], [257, 1, 1, "", "equiangular_skewness"], [258, 1, 1, "", "quad_skewness"], [259, 1, 1, "", "tet_circumradius"], [260, 1, 1, "", "tet_vol_skewness"], [261, 1, 1, "", "tet_volume"], [262, 1, 1, "", "tri_area"], [263, 1, 1, "", "tri_skewness"]], "mymesh.rays": [[264, 1, 1, "", "BoundaryBoundaryIntersection"], [265, 1, 1, "", "BoxBoxIntersection"], [266, 1, 1, "", "BoxTrianglesIntersection"], [267, 1, 1, "", "PlaneBoxIntersection"], [268, 1, 1, "", "PlaneSurfIntersection"], [269, 1, 1, "", "PlaneTriangleIntersection"], [270, 1, 1, "", "PlaneTrianglesIntersection"], [271, 1, 1, "", "PointInBoundary"], [272, 1, 1, "", "PointInBox"], [273, 1, 1, "", "PointInBox2D"], [274, 1, 1, "", "PointInSurf"], [275, 1, 1, "", "PointInTet"], [276, 1, 1, "", "PointInTri"], [277, 1, 1, "", "PointsInSurf"], [278, 1, 1, "", "PointsInTris"], [279, 1, 1, "", "PointsInVoxel"], [280, 1, 1, "", "RayBoundaryIntersection"], [281, 1, 1, "", "RayBoxIntersection"], [282, 1, 1, "", "RayBoxesIntersection"], [283, 1, 1, "", "RayOctreeIntersection"], [284, 1, 1, "", "RaySegmentIntersection"], [285, 1, 1, "", "RaySegmentsIntersection"], [286, 1, 1, "", "RaySurfIntersection"], [287, 1, 1, "", "RayTriangleIntersection"], [288, 1, 1, "", "RayTrianglesIntersection"], [289, 1, 1, "", "RaysSurfIntersection"], [290, 1, 1, "", "RaysTrianglesIntersection"], [291, 1, 1, "", "SegmentBox2DIntersection"], [292, 1, 1, "", "SegmentBoxIntersection"], [293, 1, 1, "", "SegmentSegmentIntersection"], [294, 1, 1, "", "SegmentsSegmentsIntersection"], [295, 1, 1, "", "SurfSelfIntersection"], [296, 1, 1, "", "SurfSurfIntersection"], [297, 1, 1, "", "TriangleBoxIntersection"], [298, 1, 1, "", "TriangleTriangleIntersection"], [299, 1, 1, "", "TriangleTriangleIntersectionPt"], [300, 1, 1, "", "TrianglesTrianglesIntersection"], [301, 1, 1, "", "TrianglesTrianglesIntersectionPts"]], "mymesh.register": [[302, 1, 1, "", "AxisAlignImage"], [303, 1, 1, "", "AxisAlignPoints"], [304, 1, 1, "", "ICP"], [305, 1, 1, "", "Image2Image"], [306, 1, 1, "", "ImageOverlay"], [307, 1, 1, "", "Mesh2Mesh"], [308, 1, 1, "", "Point2Point"], [309, 1, 1, "", "R2d"], [310, 1, 1, "", "R3d"], [311, 1, 1, "", "S2d"], [312, 1, 1, "", "S3d"], [313, 1, 1, "", "Sh2d"], [314, 1, 1, "", "Sh3d"], [315, 1, 1, "", "T2d"], [316, 1, 1, "", "T3d"], [317, 1, 1, "", "affine"], [318, 1, 1, "", "affine2d"], [319, 1, 1, "", "closest_point_MSE"], [320, 1, 1, "", "dice"], [321, 1, 1, "", "hausdorff"], [322, 1, 1, "", "jaccard"], [323, 1, 1, "", "mutual_information"], [324, 1, 1, "", "optimize"], [325, 1, 1, "", "rigid"], [326, 1, 1, "", "rigid2d"], [327, 1, 1, "", "rotation"], [328, 1, 1, "", "rotation2d"], [329, 1, 1, "", "similarity"], [330, 1, 1, "", "similarity2d"], [331, 1, 1, "", "symmetric_closest_point_MSE"], [332, 1, 1, "", "transform_image"], [333, 1, 1, "", "transform_points"], [334, 1, 1, "", "translation"], [335, 1, 1, "", "translation2d"]], "mymesh.tree": [[336, 1, 1, "", "Edges2Quadtree"], [337, 1, 1, "", "Function2Octree"], [338, 1, 1, "", "Octree2Dual"], [339, 1, 1, "", "Octree2Voxel"], [340, 2, 1, "", "OctreeNode"], [357, 1, 1, "", "Points2Octree"], [358, 1, 1, "", "Points2Quadtree"], [359, 1, 1, "", "Print"], [360, 1, 1, "", "Quadtree2Dual"], [361, 1, 1, "", "Quadtree2Pixel"], [362, 2, 1, "", "QuadtreeNode"], [377, 1, 1, "", "SearchOctree"], [378, 1, 1, "", "SearchOctreeTri"], [379, 1, 1, "", "Surface2Octree"], [380, 2, 1, "", "TreeNode"], [386, 1, 1, "", "Voxel2Octree"], [387, 1, 1, "", "getAllLeaf"]], "mymesh.tree.OctreeNode": [[341, 5, 1, "", "ContainsBoxes"], [342, 5, 1, "", "ContainsPts"], [343, 5, 1, "", "ContainsTris"], [344, 5, 1, "", "PointInNode"], [345, 5, 1, "", "PointsInNode"], [346, 5, 1, "", "clearData"], [347, 5, 1, "", "getLevel"], [348, 5, 1, "", "getLimits"], [349, 5, 1, "", "getMaxDepth"], [350, 5, 1, "", "getVertices"], [351, 5, 1, "", "hasChildren"], [352, 5, 1, "", "makeChildren"], [353, 5, 1, "", "makeChildrenBoxes"], [354, 5, 1, "", "makeChildrenPts"], [355, 5, 1, "", "makeChildrenTris"], [356, 5, 1, "", "prune"]], "mymesh.tree.QuadtreeNode": [[363, 5, 1, "", "ContainsEdges"], [364, 5, 1, "", "ContainsPts"], [365, 5, 1, "", "PointInNode"], [366, 5, 1, "", "PointsInNode"], [367, 5, 1, "", "clearData"], [368, 5, 1, "", "getLevel"], [369, 5, 1, "", "getLimits"], [370, 5, 1, "", "getMaxDepth"], [371, 5, 1, "", "getVertices"], [372, 5, 1, "", "hasChildren"], [373, 5, 1, "", "makeChildren"], [374, 5, 1, "", "makeChildrenEdges"], [375, 5, 1, "", "makeChildrenPts"], [376, 5, 1, "", "prune"]], "mymesh.tree.TreeNode": [[381, 5, 1, "", "clearData"], [382, 5, 1, "", "getLevel"], [383, 5, 1, "", "getMaxDepth"], [384, 5, 1, "", "hasChildren"], [385, 5, 1, "", "prune"]], "mymesh.utils": [[388, 1, 1, "", "AABB"], [389, 1, 1, "", "BaryTet"], [390, 1, 1, "", "BaryTri"], [391, 1, 1, "", "BaryTris"], [392, 1, 1, "", "CalcFaceNormal"], [393, 1, 1, "", "Centroids"], [394, 1, 1, "", "CleanupDegenerateElements"], [395, 1, 1, "", "DeleteDegenerateElements"], [396, 1, 1, "", "DeleteDuplicateNodes"], [397, 1, 1, "", "DetectFeatures"], [398, 1, 1, "", "DilateVoxel"], [399, 1, 1, "", "ErodeVoxel"], [400, 1, 1, "", "ExtractRagged"], [401, 1, 1, "", "Face2NodeNormal"], [402, 1, 1, "", "MVBB"], [403, 1, 1, "", "MergeMesh"], [404, 1, 1, "", "MirrorMesh"], [405, 1, 1, "", "PadRagged"], [406, 1, 1, "", "Project2Surface"], [407, 1, 1, "", "RelabelNodes"], [408, 1, 1, "", "SortRaggedByLength"], [409, 1, 1, "", "SplitRaggedByLength"], [410, 1, 1, "", "SurfMapping"], [411, 1, 1, "", "TetMeshVol"], [412, 1, 1, "", "TriSurfVol"], [413, 1, 1, "", "ValueMapping"], [414, 1, 1, "", "getConnectedElements"], [415, 1, 1, "", "getConnectedNodes"], [416, 1, 1, "", "getElemConnectivity"], [417, 1, 1, "", "getElemNeighbors"], [418, 1, 1, "", "getNodeNeighborhood"], [419, 1, 1, "", "getNodeNeighborhoodByRadius"], [420, 1, 1, "", "getNodeNeighbors"], [421, 1, 1, "", "identify_elem"], [422, 1, 1, "", "identify_type"], [423, 1, 1, "", "makePyramidLayer"]], "mymesh.visualize": [[424, 1, 1, "", "FaceColor"], [425, 1, 1, "", "GetTheme"], [426, 1, 1, "", "ParseColor"], [427, 1, 1, "", "Subplot"], [428, 1, 1, "", "View"], [429, 1, 1, "", "set_vispy_backend"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "method", "Python method"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:property", "5": "py:method"}, "terms": {"": [5, 16, 18, 60, 62, 63, 64, 65, 93, 98, 136, 158, 175, 176, 178, 190, 191, 196, 197, 200, 203, 204, 206, 210, 214, 215, 221, 229, 230, 281, 282, 287, 291, 292, 299, 301, 305, 306, 311, 312, 324, 378, 397, 421, 430, 433, 438, 439, 441, 442, 443, 446, 449, 450, 452, 456, 457], "0": [2, 4, 5, 6, 7, 9, 11, 17, 20, 27, 44, 73, 90, 98, 99, 100, 101, 102, 103, 104, 105, 116, 118, 120, 126, 148, 153, 162, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 196, 200, 203, 206, 207, 208, 209, 213, 218, 219, 220, 221, 222, 223, 224, 225, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 246, 247, 251, 252, 253, 257, 258, 260, 263, 264, 270, 271, 274, 277, 280, 284, 285, 287, 288, 290, 293, 294, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 322, 325, 326, 327, 328, 329, 330, 337, 340, 347, 353, 354, 355, 362, 368, 374, 375, 380, 382, 395, 396, 397, 408, 409, 421, 428, 430, 431, 432, 435, 436, 439, 440, 441, 444, 445, 448, 449, 450, 457, 458], "00": [4, 9, 11, 444], "000": 11, "00012": 441, "001": 395, "002": 441, "0020": 441, "005": 441, "00529": 441, "00843": 441, "01": [179, 313, 314, 337, 441], "012": 310, "0181": 441, "01880": 441, "019": 441, "0190": 441, "02": [314, 397], "024": 441, "0262": 441, "027": 441, "03": 397, "03581": 441, "0363": 441, "04": [6, 443], "04709701": 274, "05": [5, 9, 120, 184, 185, 186, 187, 188, 190, 196, 200, 203, 206, 221, 236, 237, 432, 436, 441, 444], "06": [287, 441], "078": [2, 4, 444], "08": [96, 174, 176, 271, 274, 277, 304], "08831": 441, "09": [9, 441, 444], "1": [2, 4, 5, 6, 7, 27, 28, 29, 44, 62, 63, 64, 70, 73, 90, 98, 100, 103, 104, 116, 118, 120, 126, 148, 153, 158, 162, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 196, 200, 202, 203, 206, 209, 213, 214, 218, 219, 220, 221, 223, 224, 225, 229, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 245, 246, 247, 251, 252, 253, 257, 258, 260, 263, 281, 282, 287, 291, 292, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 320, 322, 324, 325, 327, 328, 329, 330, 332, 337, 396, 397, 399, 400, 403, 405, 408, 409, 410, 413, 421, 423, 426, 428, 430, 431, 432, 435, 436, 439, 440, 441, 448, 449, 450, 452, 455, 457, 458], "10": [2, 5, 29, 68, 72, 96, 104, 105, 115, 120, 140, 143, 223, 227, 231, 232, 233, 234, 242, 243, 266, 281, 282, 287, 288, 290, 291, 292, 297, 298, 299, 300, 301, 357, 358, 408, 409, 422, 433, 441, 448, 457], "100": [178, 180, 181, 226, 235, 304, 305, 324], "1002": 441, "1007": [29, 441], "1016": 441, "10487472": [298, 299, 300, 301, 441], "10487487": 441, "1056": 441, "1080": [298, 299, 300, 301, 441], "10867651": [298, 299, 300, 301, 441], "1093": 441, "1097": 441, "11": 448, "1109": 441, "1111": 441, "1145": [96, 266, 281, 282, 287, 288, 290, 291, 292, 297, 441], "1148": 441, "115": 441, "117": 441, "1198555": [266, 281, 282, 287, 288, 290, 291, 292, 297, 441], "1198746": [287, 288, 290, 441], "1198747": [266, 297, 441], "1198748": [281, 282, 291, 292, 441], "12": [97, 104, 105, 275, 276, 278, 314, 395, 396, 432, 441, 448], "123811": 441, "126": 441, "13": [122, 123, 433, 448], "131": 441, "13th": 441, "14": [7, 74, 264, 268, 270, 280, 286, 288, 289, 290, 295, 296, 298, 299, 300, 301, 396, 448], "144": 441, "1467": 441, "14th": 441, "15": [9, 149, 150, 433, 448], "150": 441, "1571135649789292416": 441, "15904": [96, 441], "15922": [96, 441], "16": 448, "160": 441, "161": 441, "162": 441, "1620080402": 441, "163": 441, "1641": 441, "164360": 441, "164427": 441, "1652": 441, "166": 441, "167": 441, "169": 441, "170": 441, "172": 441, "179": 395, "18": [29, 230, 441], "180": 395, "1805": 441, "182": 441, "19": 441, "1908": 441, "1932409": 441, "1945": 441, "1948": 441, "195": 441, "1973": 441, "1974": 441, "1981": 441, "1986": 441, "1987": 441, "199": 441, "1991": 441, "1992": [156, 162, 163, 441], "1993": 441, "1994": 441, "1995": 441, "1996": 441, "1997": [298, 299, 300, 301, 441], "1998": 441, "1d": [184, 186, 187, 434, 442], "1e": [68, 74, 96, 97, 104, 105, 174, 176, 185, 223, 224, 226, 227, 264, 268, 270, 271, 274, 275, 276, 277, 278, 280, 286, 287, 288, 289, 290, 295, 296, 298, 299, 300, 301, 304, 324, 395, 396], "1to14": 153, "1to2": 126, "1to20": 126, "1to24": [116, 126, 144], "1to2c": 126, "1to3": 153, "1to36": 153, "1to3c": 153, "1to4": [126, 144], "1to5": 116, "1to6": 116, "2": [2, 5, 7, 42, 98, 100, 104, 107, 108, 126, 129, 148, 153, 162, 167, 168, 170, 173, 174, 176, 182, 184, 186, 189, 207, 208, 210, 211, 221, 222, 223, 228, 230, 232, 233, 234, 235, 241, 242, 243, 262, 266, 273, 280, 282, 284, 285, 293, 294, 297, 298, 299, 300, 301, 302, 303, 305, 306, 310, 317, 325, 327, 329, 333, 335, 336, 337, 348, 358, 363, 369, 374, 396, 397, 403, 408, 409, 410, 413, 422, 423, 428, 431, 432, 433, 435, 436, 441, 448, 449, 450, 454, 457], "20": [112, 115, 224, 232, 233, 234, 242, 243, 314, 324, 432, 433, 441], "2000": [225, 441], "20000330": 441, "2001": [412, 441], "2002": [29, 441], "2003": 441, "2004": [155, 160, 161, 441], "2005": [154, 158, 266, 281, 282, 287, 288, 290, 291, 292, 297, 441], "2008": 441, "2009": 441, "201": 441, "2010": 441, "2015": 441, "2016": 441, "2018": 441, "2019": 441, "2020": 441, "2024": 441, "2025": 443, "203": 441, "209": 441, "21": [314, 441], "216": 441, "22": 441, "220": 441, "221": 441, "222": 441, "23": [2, 4, 441, 444], "230": 441, "2307": 441, "24": [259, 441], "248": [7, 9, 444], "24th": 441, "25": [6, 7, 178, 180, 181, 213, 221, 229, 243, 298, 299, 300, 301, 397, 432, 441], "250": 305, "255": [17, 183, 305, 306, 445], "256": 448, "258734": 441, "258849": 441, "26": 441, "2629697": 441, "286": 441, "291": 441, "297": 441, "2d": [22, 62, 63, 64, 103, 132, 134, 148, 164, 167, 168, 170, 171, 172, 173, 176, 177, 183, 189, 235, 240, 241, 271, 280, 282, 290, 305, 326, 328, 335, 405, 412, 430, 434, 435, 441], "2exi": 449, "2fxy": 449, "2x_ii": 449, "2x_iy_i": 449, "2y": 449, "2y_0": 449, "2y_1": 449, "2y_i": 449, "2y_n": 449, "3": [2, 5, 9, 65, 72, 104, 107, 108, 126, 132, 133, 145, 146, 147, 153, 162, 168, 170, 171, 173, 174, 176, 183, 185, 213, 221, 223, 224, 228, 230, 231, 239, 259, 261, 262, 266, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 283, 284, 285, 286, 288, 289, 290, 293, 294, 295, 300, 301, 302, 303, 306, 324, 327, 328, 332, 333, 334, 335, 342, 343, 354, 355, 358, 364, 375, 391, 394, 395, 396, 408, 409, 422, 431, 432, 433, 435, 436, 441, 448, 449, 450, 454, 457], "30": [298, 299, 300, 301, 441], "302": 441, "31921582": 274, "3197517": 441, "32": [225, 441], "3201353": 441, "324": 441, "33": [98, 99, 100, 178, 184, 441], "336156": 441, "338193": 441, "338200": 441, "3386569": 441, "3392385": 441, "34": 441, "349": 441, "35": 2, "36": 7, "368": 441, "37": 441, "37401": 441, "37422": 441, "376": 441, "38": 444, "381": 441, "384": 441, "39": 441, "3c647": 441, "3d": [18, 20, 73, 100, 116, 118, 120, 126, 134, 135, 148, 153, 158, 165, 166, 167, 169, 170, 173, 174, 182, 183, 184, 186, 209, 213, 214, 235, 236, 241, 266, 267, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 295, 297, 305, 312, 325, 327, 334, 377, 412, 430, 434, 435, 441, 446], "3dx": 449, "3e3": 441, "3gy": 449, "3x3": [309, 311, 313, 315, 332, 378], "3x_i": 449, "3y_i": 449, "4": [2, 115, 119, 126, 127, 128, 129, 130, 132, 133, 140, 141, 142, 143, 144, 153, 162, 183, 221, 228, 230, 259, 261, 302, 303, 304, 307, 308, 325, 327, 333, 334, 350, 371, 394, 396, 408, 409, 420, 431, 432, 433, 435, 441, 444, 448], "402": 9, "407": 441, "412": 441, "43": 441, "45": 441, "46": 441, "481": 444, "4x4": [310, 312, 314, 316, 332], "5": [5, 6, 7, 72, 73, 98, 118, 120, 122, 123, 124, 125, 126, 132, 133, 153, 162, 177, 178, 180, 181, 182, 184, 185, 186, 221, 229, 238, 242, 302, 305, 307, 308, 336, 337, 379, 396, 408, 409, 422, 431, 433, 439, 440, 441, 448, 449, 452], "50": 243, "50040": 441, "501": 2, "544": [6, 9, 444], "55": [7, 281, 282, 291, 292, 441], "557": 441, "560840": 441, "564": 441, "58": 441, "595": 2, "5987": 441, "6": [72, 98, 132, 133, 146, 147, 149, 150, 151, 152, 153, 162, 184, 186, 187, 223, 225, 226, 227, 261, 287, 305, 307, 325, 326, 337, 408, 409, 422, 431, 433, 441, 448, 452, 457], "60": [281, 282, 291, 292, 441], "600": 428, "609": [5, 9, 444], "61941092": 274, "63": 441, "632": 441, "647": [225, 441], "658": 441, "66": [29, 441], "668": [225, 441], "679": 441, "696": 441, "7": [7, 98, 104, 162, 408, 409, 441, 448], "73": 441, "75": 287, "7721": 441, "781606": 441, "781653": 441, "7823": 441, "7830": 441, "79": [29, 441], "8": [6, 72, 96, 112, 113, 114, 116, 117, 128, 130, 132, 133, 162, 231, 271, 274, 277, 350, 408, 409, 422, 433, 441, 448, 456], "800": 428, "82": 395, "83": 441, "8659": 441, "8856": 441, "9": [6, 7, 188, 253, 408, 409, 431, 432, 436, 441, 448], "90020": 441, "90076": 441, "92": 441, "966131": 441, "966134": 441, "967": 441, "990": 441, "A": [2, 11, 28, 29, 72, 107, 115, 116, 123, 126, 128, 143, 146, 150, 153, 156, 162, 163, 202, 244, 259, 262, 266, 281, 282, 291, 292, 302, 305, 307, 308, 325, 327, 328, 334, 335, 410, 422, 432, 434, 435, 440, 441, 442, 443, 448, 449, 450, 452], "As": [18, 446, 450, 452], "At": [44, 338, 360], "BY": 324, "By": [6, 30, 44, 52, 83, 98, 99, 100, 101, 102, 103, 104, 105, 110, 158, 173, 184, 185, 186, 221, 223, 224, 226, 227, 234, 235, 236, 237, 238, 240, 241, 242, 271, 284, 285, 293, 294, 302, 305, 306, 324, 394, 421, 428, 449], "For": [2, 31, 32, 34, 35, 36, 38, 39, 40, 42, 50, 95, 100, 102, 103, 104, 116, 126, 132, 133, 153, 170, 179, 182, 183, 184, 185, 186, 190, 196, 200, 203, 204, 206, 210, 211, 223, 224, 226, 227, 234, 241, 244, 245, 246, 247, 251, 252, 253, 255, 271, 274, 277, 287, 288, 290, 302, 303, 307, 308, 309, 310, 324, 391, 394, 398, 413, 414, 415, 417, 421, 428, 432, 435, 436, 439, 440, 448, 449, 452, 455, 456, 457, 458], "If": [1, 22, 27, 28, 29, 30, 43, 44, 46, 48, 52, 55, 60, 62, 63, 64, 65, 71, 73, 79, 83, 86, 88, 96, 97, 99, 100, 101, 102, 103, 104, 105, 109, 110, 111, 118, 119, 120, 132, 133, 135, 136, 138, 155, 158, 164, 165, 166, 167, 168, 170, 171, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 218, 219, 220, 221, 223, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 259, 260, 264, 271, 277, 284, 285, 287, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 324, 332, 336, 337, 339, 346, 358, 361, 367, 377, 379, 381, 394, 403, 410, 413, 414, 415, 417, 423, 428, 429, 432, 434, 439, 450, 457], "In": [18, 72, 155, 160, 161, 275, 276, 278, 287, 288, 290, 400, 405, 408, 409, 413, 422, 428, 431, 432, 436, 442, 443, 446, 449, 450], "It": [29, 132, 226, 324, 436, 443, 449, 450, 452, 456], "No": [99, 100, 101, 102, 103, 104, 105, 352, 373], "Not": [116, 126, 153, 305, 307, 308, 417], "On": 441, "One": [324, 440, 441, 448], "Or": 430, "Such": 6, "That": 270, "The": [2, 5, 18, 20, 22, 29, 44, 69, 93, 97, 98, 100, 103, 109, 111, 116, 117, 120, 132, 133, 135, 136, 139, 144, 153, 177, 181, 184, 185, 186, 187, 195, 210, 211, 213, 221, 223, 225, 230, 234, 242, 243, 249, 302, 303, 305, 306, 321, 324, 332, 336, 337, 349, 357, 358, 370, 379, 383, 391, 394, 396, 398, 399, 401, 404, 409, 410, 414, 415, 423, 429, 431, 434, 438, 439, 440, 441, 442, 443, 446, 447, 448, 449, 450, 452, 454, 455, 456, 457], "There": [51, 132, 430, 434, 439, 440, 443, 452], "These": [7, 62, 63, 64, 65, 93, 136, 290, 324, 348, 350, 369, 408, 409, 430, 432, 433, 442, 448, 450, 455], "To": [2, 6, 38, 120, 175, 221, 234, 423, 437, 440, 443, 450, 452, 457], "Will": [132, 133, 266, 274, 277, 297, 406, 410, 413], "With": [290, 408], "_": [2, 437, 439, 449], "_ax": 79, "_description_": [222, 290, 337, 428], "_edg": 62, "_face": 64, "_i": [449, 455, 458], "_j": [455, 458], "_mesh": [76, 78, 84], "_type_": [222, 239, 290, 337, 428], "a1": 432, "a2": 432, "a3": 432, "a_i": [449, 450], "a_x": 450, "aa": 259, "ab": [72, 256, 422, 441], "abil": [177, 178, 180, 181, 184, 186, 187, 231, 234, 235, 236, 237, 238, 240, 241, 242, 243], "abl": [120, 192, 198, 211, 216], "about": [18, 136, 213, 243, 305, 309, 310, 314, 327, 404, 441, 446], "abov": [20, 105, 187, 214, 218, 219, 220, 230, 253, 337, 448, 452], "absolut": [349, 370, 383], "ac": 441, "academ": [1, 441], "acceler": [274, 277, 286, 289, 290], "accept": [436, 455], "access": [17, 18, 88, 101, 408, 440, 443, 445, 446], "accomplish": 449, "accord": [407, 442], "accordingli": 403, "account": 332, "accur": [2, 6, 441, 452], "achiev": [224, 432, 440, 458], "acknowledg": [18, 446], "acm": [96, 266, 281, 282, 287, 288, 290, 291, 292, 297, 441], "across": [1, 44, 450], "activ": [22, 452], "actual": [210, 211], "ad": [62, 63, 64, 65, 116, 126, 135, 153, 225, 230, 439, 450, 452, 454], "adapt": [230, 337, 441], "add": [62, 63, 64, 65, 132, 177, 181, 224, 225, 450], "addit": [2, 104, 109, 111, 184, 186, 187, 305, 307, 308, 324, 408, 417, 442, 448, 449, 452], "addition": [86, 437, 438, 440], "adjac": [35, 50, 99, 100, 101, 102, 103, 104, 105, 155, 223, 226, 227, 254, 298, 299, 300, 301, 397, 408, 420, 448, 450, 454], "admiss": 457, "adopt": [436, 449], "adrian": [441, 450], "advanc": [62, 64, 101, 432], "advantag": [440, 449], "affin": [302, 303, 304, 305, 307, 308, 325, 327, 328, 334, 335], "affine_transform": [302, 305, 332], "after": [63, 223, 226, 227, 229, 230, 302, 303, 457], "ag073671": 443, "against": 456, "agatho": 441, "ahead": 450, "ai": 252, "aid": 441, "aim": [432, 443, 447], "akenin": [266, 297, 441], "al": [230, 451, 457], "alec": 441, "alexand": 441, "algebra": 441, "algorithm": [16, 99, 100, 102, 103, 104, 105, 168, 169, 170, 172, 174, 176, 267, 281, 282, 287, 288, 290, 291, 292, 304, 305, 307, 324, 338, 360, 430, 441, 443, 447, 448, 450, 455, 457], "algorthim": 324, "alia": [67, 80, 84], "alias": [23, 59, 440], "align": [2, 61, 92, 116, 126, 135, 153, 234, 267, 281, 282, 291, 292, 302, 303, 305, 307, 308, 388, 402, 449, 457], "all": [6, 30, 43, 60, 63, 71, 72, 73, 83, 95, 101, 103, 104, 105, 113, 114, 116, 118, 121, 124, 125, 126, 127, 129, 132, 133, 135, 138, 139, 141, 142, 145, 151, 152, 153, 158, 184, 186, 187, 214, 223, 224, 226, 227, 245, 247, 251, 252, 305, 307, 308, 324, 332, 346, 347, 359, 367, 368, 381, 382, 387, 409, 410, 413, 422, 430, 431, 433, 435, 437, 439, 440, 443, 444, 449, 450, 452, 457], "all_nod": 60, "allevi": 432, "allow": [1, 175, 179, 184, 223, 226, 332, 428, 433, 449, 450, 456, 458], "allow_invers": 221, "alohner08": [401, 441], "alon": 449, "along": [27, 29, 97, 99, 100, 101, 102, 103, 104, 105, 182, 218, 219, 220, 223, 231, 234, 241, 242, 324, 406, 432, 440, 448, 457], "alpha": [2, 164, 165, 166, 167, 207, 208, 310, 325, 326, 327, 389, 390, 391, 406, 410, 426, 428, 434], "alpha_0": 450, "alphashap": 434, "alreadi": [55, 62, 63, 64, 302, 305, 306], "also": [5, 6, 15, 18, 119, 131, 132, 238, 241, 298, 299, 300, 301, 407, 433, 434, 435, 443, 446, 448, 450, 451, 452, 456, 458], "alter": [179, 185], "altern": [72, 139, 155, 422, 429, 430, 450], "alwai": [408, 447], "am": [132, 133], "ambigu": [72, 119, 155, 302, 303, 422, 433, 448], "amd": 441, "american": 441, "ami": 441, "amoller05": [266, 297, 441], "among": 450, "amount": [204, 235, 408, 439, 441], "amplitud": 441, "an": [20, 22, 28, 60, 73, 84, 86, 87, 88, 93, 98, 99, 102, 104, 105, 112, 118, 137, 139, 154, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 191, 192, 193, 194, 195, 197, 198, 199, 201, 204, 205, 210, 211, 215, 216, 217, 221, 224, 225, 229, 230, 234, 242, 245, 249, 266, 267, 269, 270, 274, 277, 278, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 324, 332, 333, 336, 337, 338, 339, 349, 352, 357, 358, 360, 361, 370, 373, 379, 383, 386, 394, 395, 397, 401, 406, 410, 413, 417, 418, 419, 428, 429, 431, 433, 434, 437, 439, 440, 441, 442, 443, 447, 448, 449, 450, 452, 454, 456, 457, 458], "analog": [93, 105, 442], "analogi": [224, 225, 441], "analysi": [4, 430, 431, 442, 443, 444], "analyt": 2, "analyticalcurvatur": 2, "analyz": [3, 10, 443], "andr": 443, "andrea": 441, "angel": [18, 446], "angl": [52, 221, 229, 241, 248, 250, 252, 253, 254, 256, 325, 326, 327, 328, 395, 397, 401], "anglestep": 241, "angletol": 395, "ani": [1, 7, 29, 30, 43, 60, 72, 81, 86, 93, 131, 137, 139, 179, 185, 187, 194, 195, 221, 255, 269, 270, 320, 322, 332, 351, 372, 384, 417, 422, 432, 436, 438, 440, 443, 450, 456], "anim": [18, 446], "anisotrop": 236, "annual": 441, "anoth": [18, 223, 226, 227, 271, 338, 396, 410, 413, 431, 432, 446, 448], "ansi": [246, 247, 251, 252], "anyth": [18, 446, 449], "apart": [224, 396], "api": [443, 447], "appear": [18, 72, 403, 422, 446], "append": [2, 62, 63, 64, 65, 117, 144], "appli": [18, 100, 103, 223, 224, 225, 305, 306, 307, 308, 332, 333, 441, 446, 458], "applic": [88, 164, 165, 166, 167, 324, 432, 441, 443, 455], "approach": [6, 72, 155, 324, 337, 406, 410, 413, 422, 432, 448, 450, 455], "appropri": [86, 88, 101, 432, 439, 443], "approxim": [6, 98, 160, 178, 180, 184, 185, 186, 190, 196, 200, 203, 206, 238, 239, 324, 441, 448], "ar": [2, 5, 6, 16, 17, 18, 20, 21, 23, 30, 38, 43, 44, 51, 59, 60, 62, 63, 64, 71, 72, 83, 86, 93, 96, 99, 100, 101, 102, 103, 104, 105, 108, 112, 114, 117, 120, 122, 125, 130, 131, 132, 133, 135, 136, 139, 140, 142, 144, 147, 149, 152, 155, 158, 160, 161, 167, 168, 170, 171, 173, 176, 177, 179, 181, 182, 183, 184, 185, 186, 187, 191, 192, 193, 197, 198, 199, 214, 215, 216, 217, 221, 223, 224, 226, 227, 230, 238, 239, 259, 261, 262, 269, 270, 275, 276, 277, 278, 279, 280, 286, 287, 288, 289, 295, 302, 305, 306, 307, 308, 324, 325, 326, 327, 328, 332, 334, 335, 336, 337, 341, 342, 343, 348, 350, 352, 363, 364, 369, 373, 379, 387, 392, 394, 396, 401, 408, 409, 410, 417, 420, 422, 428, 430, 431, 432, 433, 434, 435, 436, 437, 440, 442, 443, 445, 446, 447, 448, 449, 450, 452, 454, 455, 456, 457, 458], "arang": [43, 235], "arbitrari": [205, 305, 307, 441, 457], "arbitrarili": [72, 302, 303, 305, 306, 422], "arcco": [2, 256], "archiv": [17, 445], "arctan": 449, "area": [253, 262], "aren": [72, 110, 120, 136, 224, 422, 452], "arg": [184, 186, 187], "argmax": 2, "argument": [5, 79, 83, 87, 154, 184, 186, 187, 194, 195, 229, 271, 302, 305, 307, 308, 324, 332], "ariella": 443, "aris": [2, 442], "armadillo": [18, 446], "around": [170, 171, 398, 418, 419, 449], "arrai": [2, 17, 22, 25, 43, 58, 62, 63, 64, 65, 73, 79, 98, 99, 100, 102, 103, 109, 111, 118, 126, 131, 135, 138, 148, 153, 155, 158, 160, 161, 168, 169, 173, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 221, 223, 224, 230, 231, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 257, 258, 260, 263, 266, 267, 269, 270, 274, 275, 276, 278, 281, 282, 287, 288, 290, 291, 292, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 310, 311, 312, 313, 314, 317, 318, 320, 322, 325, 326, 327, 328, 332, 333, 336, 337, 338, 344, 345, 350, 360, 365, 366, 371, 379, 391, 394, 396, 400, 405, 406, 428, 432, 435, 436, 445, 452], "array_lik": [22, 27, 28, 30, 60, 62, 63, 64, 65, 79, 98, 99, 101, 102, 104, 105, 107, 108, 112, 115, 117, 119, 120, 122, 123, 126, 128, 129, 130, 131, 136, 139, 140, 143, 144, 146, 147, 148, 149, 150, 153, 158, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 189, 201, 202, 205, 209, 213, 221, 223, 224, 226, 227, 229, 230, 232, 233, 234, 235, 238, 239, 241, 242, 243, 244, 248, 249, 250, 254, 255, 256, 259, 260, 264, 265, 267, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 314, 319, 321, 324, 327, 328, 331, 332, 333, 336, 337, 342, 343, 345, 354, 355, 357, 358, 363, 364, 366, 374, 375, 377, 378, 379, 386, 388, 391, 394, 402, 407, 409, 416, 420, 421, 422, 428], "articl": [18, 441, 446], "artifact": [18, 446], "artifici": 441, "arxiv": 441, "ascii": 88, "asid": [18, 446], "aspect": [71, 245], "aspectratio": [71, 90], "assert": 86, "assess": [337, 448, 456], "assign": [202, 224, 225, 423], "associ": [22, 148, 155, 403, 413, 431, 434, 441, 456], "assovi": 131, "assum": [99, 100, 101, 102, 103, 104, 105, 108, 112, 122, 130, 132, 133, 140, 147, 149, 179, 182, 191, 192, 193, 197, 198, 199, 215, 216, 217, 226, 271, 305, 306, 392, 398, 399, 420, 423, 435, 436], "assumpt": 449, "attempt": [72, 155, 183, 221, 422, 429], "attribut": [22, 346, 367, 381, 433, 440], "aubri": 441, "aug": 441, "auger": 443, "author": 447, "auto": [106, 132, 133, 137, 230, 255, 394, 420], "automat": [22, 183, 244, 305, 441], "avail": [6, 17, 18, 71, 101, 214, 223, 224, 226, 227, 324, 428, 429, 434, 436, 445, 446, 447], "averag": [118, 226, 230, 401, 449, 450, 455], "avoid": [72, 225, 422, 430, 440], "awai": 450, "ax": [2, 79, 100, 148, 179, 182, 234, 242, 302, 303, 310, 327, 449, 457], "ax1": [2, 432], "ax2": [2, 432], "ax3": [2, 432], "ax4": 2, "axi": [6, 7, 61, 79, 182, 189, 213, 218, 219, 220, 223, 232, 233, 234, 235, 241, 242, 243, 267, 281, 282, 291, 292, 295, 302, 303, 311, 312, 315, 316, 324, 388, 457], "axial_resolut": 234, "axis_ord": [302, 303], "b": [62, 63, 64, 207, 208, 259, 266, 269, 270, 287, 288, 290, 297, 298, 299, 300, 301, 432, 441, 449, 450, 452, 457], "b978": 441, "b_i": 449, "b_x": 450, "b_y": 450, "back": [135, 138], "backend": 429, "background": [158, 184, 186, 397, 432], "bajaj": 441, "balanc": 440, "bar": [2, 455, 457, 458], "bari": [389, 390], "barrier": 414, "barrierelem": 414, "barriernod": 415, "barru": [281, 282, 291, 292, 441], "barycentr": [389, 390, 391, 406, 410, 413, 450, 457], "barytri": 450, "base": [1, 2, 22, 28, 29, 45, 73, 93, 98, 118, 154, 155, 158, 160, 161, 173, 179, 185, 234, 305, 324, 337, 338, 340, 353, 354, 355, 360, 362, 374, 375, 380, 401, 412, 428, 432, 436, 438, 440, 441, 442, 448, 454, 456, 457], "basi": 171, "basic": [16, 191, 215, 450], "bb": 259, "bd02": [29, 441], "becaus": 6, "becom": [117, 120, 144, 458], "been": [2, 46, 48, 62, 64, 135, 136, 399, 439, 448, 450], "befor": [62, 64, 221], "begin": [309, 310, 311, 312, 313, 314, 315, 316, 449, 450, 457], "behavior": 139, "behind": [447, 450], "being": [21, 60, 221, 245, 246, 247, 251, 252, 253, 257, 258, 260, 263, 287, 288, 290, 406, 431, 432, 436, 439, 443, 449, 450, 456], "below": [18, 105, 187, 221, 337, 431, 446, 448], "belyaev": [185, 441], "ben": 441, "bend": 449, "benjamin": 441, "bent": 449, "bernd": 441, "best": [2, 90, 113, 114, 121, 124, 125, 127, 141, 142, 145, 151, 152, 246, 247, 251, 252, 253, 257, 258, 260, 263], "beta": [310, 325, 326, 327, 389, 390, 391, 406, 410], "beta_0": 450, "better": [160, 161, 221, 413, 439, 455], "between": [1, 6, 14, 93, 97, 99, 100, 101, 102, 103, 104, 105, 109, 110, 111, 116, 119, 126, 135, 153, 221, 225, 230, 238, 241, 248, 250, 252, 254, 256, 264, 266, 267, 269, 270, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 301, 319, 320, 321, 322, 331, 332, 337, 338, 352, 360, 373, 391, 397, 431, 432, 433, 441, 447, 456, 457, 458], "beyond": 332, "bf01313411": 441, "bfb0014497": 441, "bgcolor": [2, 6, 7, 98, 184, 186, 187, 188, 189, 190, 196, 200, 203, 206, 209, 213, 223, 231, 232, 234, 235, 236, 237, 238, 242, 243, 397, 428, 432, 440], "bias": 324, "bicub": [100, 103], "bidirect": [281, 282, 283, 286, 287, 288, 289, 290, 457], "big": [449, 450], "biggest": 449, "bilinear": [99, 100, 102, 103], "billion": 441, "binar": [120, 302, 305, 306], "binari": [88, 120, 305, 320, 322, 448], "bioinformat": 441, "biologi": 441, "biomechan": [1, 441, 443], "bit": 5, "blackbox": 447, "blake": 443, "blo00": [224, 441, 458], "blo94": [104, 441, 448], "block": 440, "blom": [225, 441, 458], "bloomenth": [441, 448], "blue": 431, "bmatrix": [309, 310, 311, 312, 313, 314, 315, 316, 449, 457], "board": 1, "bobyqa": 324, "bolun": 441, "bone": [441, 449], "bong": 441, "book": [18, 446], "bool": [17, 22, 28, 29, 30, 44, 60, 63, 71, 74, 79, 88, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 115, 120, 123, 128, 131, 132, 133, 135, 138, 143, 146, 150, 155, 158, 173, 177, 179, 181, 182, 184, 185, 186, 221, 223, 224, 225, 226, 227, 229, 230, 234, 236, 237, 239, 240, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 308, 320, 322, 339, 344, 345, 346, 351, 359, 361, 365, 366, 367, 372, 378, 381, 384, 387, 396, 402, 403, 408, 409, 410, 413, 428, 445], "boolean": [18, 191, 192, 193, 197, 198, 199, 215, 216, 217, 282, 432, 434, 443, 446], "boston": 443, "both": [2, 21, 60, 72, 185, 210, 211, 225, 239, 281, 282, 283, 286, 287, 288, 289, 290, 305, 306, 307, 308, 337, 339, 361, 422, 428, 434, 442, 443, 449, 450, 452, 456, 457, 458], "bottasso": [29, 441], "bottom": [18, 446], "boubekeur": 441, "bound": [5, 6, 27, 30, 60, 61, 77, 79, 98, 184, 186, 187, 188, 194, 195, 236, 237, 240, 265, 266, 267, 281, 282, 291, 292, 297, 302, 303, 305, 307, 308, 324, 332, 337, 341, 344, 345, 348, 353, 365, 366, 369, 388, 402, 428, 450, 456, 457], "boundai": 264, "boundari": [5, 24, 25, 28, 29, 99, 100, 102, 103, 105, 120, 158, 187, 230, 264, 271, 279, 280, 305, 344, 345, 365, 366, 378, 441, 442, 448, 450, 455], "boundaryconn": [23, 271, 280], "boundaryconn1": 264, "boundaryconn2": 264, "bow81": [168, 169, 441, 450], "bowyer": [168, 169, 170, 174, 176, 441], "bowyerwatson": [170, 174, 176], "bowyerwatson2d": [170, 176, 450], "bowyerwatson3d": [170, 174, 450], "box": [27, 61, 77, 98, 236, 237, 265, 266, 267, 272, 273, 281, 282, 291, 292, 297, 302, 303, 341, 353, 388, 402, 432, 434, 436, 441, 456], "box1": 265, "box2": 265, "boxcent": [266, 297], "branch": [93, 352, 373, 456], "break": [18, 23, 59, 446], "bridg": [18, 446, 447], "bright": [158, 449], "brightobject": 158, "brows": [18, 446], "brute": [324, 406, 410, 413], "bu": [7, 441], "bucati": 7, "buddha": [18, 446], "build": [158, 434, 443, 450], "built": [6, 436, 437], "bunni": [17, 18, 178, 180, 181, 221, 305, 307, 445, 446], "bunny_res2": [18, 446], "bunny_res3": [18, 446], "bunny_res4": [18, 446], "bx": 449, "bx_0y_0": 449, "bx_1y_1": 449, "bx_ny_n": 449, "bxy": 449, "c": [29, 62, 63, 64, 214, 229, 259, 266, 269, 270, 287, 288, 290, 297, 298, 299, 300, 301, 412, 441, 449, 450, 452, 457], "c_0": [309, 310], "c_1": [309, 310], "c_2": 310, "c_i": 449, "c_x": 450, "c_y": 450, "cach": [63, 83, 440], "cag": 441, "cagd": 441, "calcfacenorm": [155, 160, 161, 254], "calcul": [36, 42, 52, 63, 136, 154, 155, 156, 157, 158, 159, 160, 161, 163, 171, 185, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 277, 388, 392, 393, 401, 402, 411, 412, 432, 440, 450, 455, 457], "call": [2, 417, 440], "callabl": [191, 192, 198, 202, 204, 211, 214, 215, 216, 230, 324], "came": 106, "can": [2, 5, 6, 7, 18, 22, 28, 29, 51, 62, 63, 64, 65, 71, 79, 93, 95, 100, 102, 103, 104, 105, 120, 136, 139, 155, 158, 160, 161, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 194, 195, 229, 230, 231, 234, 235, 236, 237, 238, 240, 241, 242, 243, 249, 286, 289, 290, 305, 306, 307, 308, 320, 322, 324, 332, 377, 391, 396, 406, 408, 410, 413, 414, 415, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 446, 448, 449, 450, 452, 454, 455, 456, 457, 458], "candid": 452, "cannot": 414, "cap": [162, 234, 449], "capabl": [1, 10, 16, 98, 430], "captur": 449, "care": [448, 456], "carefulli": [62, 64, 430], "cartesian": [44, 310, 317, 325, 327, 329, 330], "case": [72, 116, 135, 153, 182, 298, 299, 300, 301, 413, 422, 431, 437, 442, 448, 449, 450], "cast": [91, 271, 274, 277, 400], "categor": 162, "categori": 162, "caus": [287, 439], "cav74": [441, 455], "cavendish": 441, "cc": 259, "ccw": 136, "cdot": [261, 455, 457], "cell": [78, 84, 85, 202, 214, 225, 440], "cellcent": 225, "cellsiz": [202, 214], "center": [7, 27, 116, 126, 153, 189, 209, 213, 223, 225, 226, 227, 232, 233, 234, 235, 241, 242, 243, 266, 297, 302, 303, 305, 309, 310, 314, 317, 318, 325, 326, 327, 328, 329, 330, 436, 448, 449, 450, 455], "centric": [389, 390], "centrod": 225, "centroid": [30, 98, 117, 136, 139, 144, 187, 252, 303, 338, 340, 348, 360, 362, 369, 439, 440, 456], "certain": [183, 324], "cgal": 443, "chalmer": 441, "chanc": [72, 422], "chandrajit": 441, "chang": [23, 52, 59, 62, 64, 69, 332, 337, 394, 448, 450, 452, 454, 458], "channel": 435, "charact": 229, "characterist": [38, 42], "charl": 441, "che95": [99, 100, 441, 448], "chear": 314, "check": [86, 281, 282, 283, 286, 287, 288, 289, 290, 344, 345, 351, 365, 366, 372, 384, 394, 450, 452, 456, 457], "check_numba": 155, "chen": 412, "chernyaev": [441, 448], "chi": [38, 42], "child": [116, 126, 135, 153, 346, 347, 351, 352, 353, 354, 355, 367, 368, 372, 373, 374, 375, 381, 382, 384, 456], "children": [346, 352, 367, 373, 381, 456], "childstat": [352, 373], "chines": [18, 446], "choic": [224, 271, 274, 277, 450, 456], "choos": [18, 287, 288, 290, 446, 448], "chosen": [98, 305, 306, 307, 308, 324, 428, 429, 432, 440], "christian": [18, 446], "church": [18, 446], "ci": 252, "cir": 441, "circl": [233, 234, 243], "circular": [213, 234, 242, 243], "circumfer": [232, 233, 234], "circumferenti": [232, 233, 242, 243], "circumradii": 259, "citat": 447, "cite": [18, 249, 446, 450], "class": [22, 101, 183, 340, 362, 380, 430, 431, 438, 449], "classic": [432, 455], "classif": 449, "classifi": [72, 104, 105, 397, 422], "cleaner": 432, "cleanup": [30, 60, 74, 100, 102, 103, 104, 105, 107, 115, 123, 128, 131, 143, 146, 150, 221, 403], "cleanup_tol": [104, 105], "clear": [52, 83, 346, 367, 381, 443], "clearchildren": [346, 367, 381], "clim": [79, 428], "cline": [441, 448], "clip": [178, 180, 181, 221], "clockwis": [114, 125, 136, 142, 152, 350, 392, 450], "clone": 437, "close": [2, 23, 104, 105, 120, 137, 139, 158, 234, 239, 270, 271, 274, 277, 287, 288, 290, 298, 299, 300, 301, 432, 442, 457], "closest": [304, 305, 307, 319, 321, 331], "closest_point_ms": [307, 308, 331], "cloud": [92, 302, 303, 305, 307, 308, 434], "cma": 441, "cmap": [120, 305], "cmu": 441, "cnm": 441, "co": [190, 196, 200, 203, 206, 309, 310, 441], "coars": 221, "coarsen": [73, 118, 177, 178, 180, 181, 182, 221, 307, 454], "coarser": [18, 446], "cobyla": 324, "code": [2, 5, 6, 7, 428, 440, 443], "coeffici": [179, 320], "collaps": 221, "collect": [430, 431, 442], "color": [2, 5, 7, 397, 424, 426, 428, 432, 443], "color_convert": [424, 428], "colorscal": 79, "colorspaci": [428, 437], "column": [173, 223], "column_stack": 235, "com": [313, 314, 439, 441], "combin": [6, 184, 290, 302, 303, 432, 436, 441, 448], "come": [246, 247, 251, 252, 440], "comjnl": 441, "command": 439, "commerci": [18, 446], "common": [120, 332, 438, 449, 452], "commonli": [6, 18, 440, 442, 446, 449], "commun": 441, "commut": 44, "compar": [2, 305, 307, 308, 391], "comparison": 391, "compat": [6, 184, 439], "compil": [155, 443], "complement": 449, "complet": 401, "complex": [7, 337, 432, 434, 436, 441, 447, 452, 456], "compo": 442, "compon": [45, 449, 457], "comprehens": 443, "compris": 431, "comput": [1, 18, 29, 51, 52, 104, 172, 177, 181, 226, 266, 297, 319, 331, 414, 415, 432, 441, 442, 446, 450, 457], "computation": 432, "concav": [434, 449], "concern": 432, "conclud": 457, "conclus": 324, "concurr": 450, "condens": 441, "condit": [60, 436, 457], "confer": 441, "configur": [452, 454], "confirm": 86, "conflict": 430, "connect": [5, 17, 18, 22, 24, 31, 32, 34, 35, 39, 40, 43, 50, 55, 56, 62, 63, 64, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 160, 161, 168, 169, 171, 173, 175, 179, 185, 194, 195, 225, 226, 235, 239, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 271, 274, 277, 279, 280, 286, 289, 295, 296, 336, 338, 339, 360, 361, 379, 386, 392, 393, 394, 395, 396, 397, 398, 399, 401, 403, 404, 406, 407, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 433, 440, 442, 445, 446, 448, 449, 450, 452, 454, 455, 458], "connect_end": 239, "connet": [101, 104, 105], "consid": [20, 28, 104, 105, 158, 177, 178, 180, 181, 184, 186, 187, 270, 275, 276, 278, 284, 285, 287, 288, 290, 293, 294, 417, 436, 442, 449], "consider": [225, 441], "consist": [16, 120, 126, 155, 170, 179, 185, 305, 306, 325, 326, 332, 334, 335, 398, 399, 406, 423, 431, 442, 448, 449, 450, 457], "constant": [100, 103, 302, 305], "constitut": [6, 395, 417], "constrain": [1, 175, 223, 324, 437], "constraint": [174, 175, 176, 185, 223, 324], "construct": [7, 139, 232, 233, 289, 290, 431, 434, 441, 448, 449, 450, 456], "contain": [2, 18, 22, 29, 43, 72, 73, 79, 96, 97, 106, 109, 111, 132, 133, 170, 174, 176, 177, 178, 180, 181, 183, 184, 186, 187, 225, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 255, 325, 326, 327, 328, 334, 335, 336, 337, 338, 339, 341, 342, 343, 352, 357, 358, 360, 361, 363, 364, 373, 377, 378, 379, 387, 394, 396, 398, 399, 406, 410, 411, 412, 413, 414, 415, 420, 422, 423, 431, 435, 442, 443, 446, 450, 452, 456, 457], "content": [332, 441], "contigu": 2, "continu": [1, 6, 116, 126, 135, 153, 191, 192, 193, 197, 198, 199, 215, 216, 217, 337, 456], "contour": [158, 178, 184, 221, 432, 434, 441], "contract": [229, 230, 454], "contractit": 229, "contribut": [155, 160, 161], "control": [6, 428, 458], "contruct": 286, "conveni": [440, 449], "convent": [20, 120, 214, 436, 442], "converg": [223, 224, 226, 227, 228], "convers": [73, 120, 286, 289, 428, 434, 443], "convert": [73, 75, 76, 78, 84, 85, 95, 96, 97, 104, 158, 185, 194, 195, 235, 241, 255, 305, 338, 339, 360, 361, 394, 396, 400, 420, 428, 431, 433, 434, 438, 440, 442], "convex": [170, 171, 172, 174, 176, 434, 441, 442, 449, 452], "convexhul": 434, "convolut": 179, "coolwarm": [2, 397], "coordin": [22, 27, 45, 65, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 160, 161, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 184, 186, 187, 188, 189, 190, 194, 195, 196, 200, 203, 205, 206, 209, 213, 218, 219, 220, 225, 230, 233, 234, 235, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 308, 319, 321, 331, 333, 336, 337, 338, 339, 342, 343, 344, 345, 350, 354, 355, 357, 358, 360, 361, 363, 364, 365, 366, 371, 374, 375, 377, 378, 379, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 406, 407, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 440, 442, 449, 450, 452, 457, 458], "copi": [30, 44, 60, 179, 185, 226, 305, 307, 404], "coplanar": [233, 450, 457], "core": [85, 440], "corner": [103, 117, 221, 223, 224, 226, 227, 388, 397, 402, 448, 449], "correct": [158, 173, 441, 448], "correspond": [71, 83, 99, 100, 102, 110, 120, 134, 135, 138, 148, 164, 165, 166, 167, 177, 178, 179, 180, 181, 182, 210, 211, 218, 219, 220, 226, 229, 234, 302, 303, 336, 337, 350, 371, 379, 406, 410, 413, 431, 435, 449, 456, 457], "cosalpha": 2, "cosin": 252, "cost": [104, 177, 181, 302, 305], "could": [1, 139, 164, 165, 166, 167, 187, 231, 232, 233, 234, 235, 236, 241, 242, 243, 442, 448, 452, 457], "count": [38, 298, 299, 300, 301, 457], "counter": [114, 125, 136, 142, 152, 350, 392, 450], "counterclockwis": 172, "cours": [235, 266, 281, 282, 287, 288, 290, 291, 292, 297, 441, 452], "cover": [305, 307, 308, 423], "cr": 179, "creat": [1, 7, 22, 28, 60, 69, 71, 72, 104, 107, 115, 123, 128, 139, 143, 146, 150, 179, 181, 185, 221, 226, 239, 286, 289, 398, 404, 406, 410, 413, 422, 432, 434, 439, 440, 448, 450, 456], "creation": 456, "credit": [18, 446], "crid": 441, "criteria": [226, 336, 379, 456], "crop": [44, 60, 73, 118, 434], "cross": [155, 189, 234, 242, 243, 450, 457], "csg": 436, "ct": [17, 305, 443, 445, 449], "cube": [2, 93, 98, 99, 100, 103, 178, 184, 350, 432, 441, 456], "cubic": [100, 103, 118, 155, 178, 184, 236, 398, 423, 441, 442], "cubicfit": [2, 160, 161, 449], "cuda": 1, "cultur": [18, 446], "cup": [162, 449], "cupi": 1, "current": [16, 28, 29, 74, 93, 96, 223, 226, 227, 338, 344, 345, 348, 349, 352, 360, 365, 366, 369, 370, 373, 383, 395, 398, 413, 417, 443, 456], "curv": [154, 158, 441], "curvatur": [3, 4, 6, 10, 441, 443, 444], "curved": 70, "custom": 440, "cut": [27, 440], "cv2": 437, "cw": 136, "cy": 449, "cylind": [242, 243, 434, 449], "cylindr": [189, 234, 449], "cz": 179, "d": [1, 6, 29, 75, 190, 214, 230, 266, 269, 270, 287, 288, 290, 297, 298, 299, 300, 301, 320, 321, 324, 432, 441, 443, 449, 452, 457], "d_x": 457, "d_y": 457, "d_z": 457, "daniel": 441, "dansk": 441, "dark": 158, "darker": 158, "data": [17, 18, 22, 60, 73, 78, 84, 85, 93, 100, 103, 118, 148, 158, 177, 181, 182, 183, 274, 277, 283, 305, 306, 320, 322, 326, 336, 339, 340, 346, 352, 361, 362, 367, 373, 379, 380, 381, 387, 400, 403, 410, 428, 431, 432, 435, 441, 445, 446, 450, 456], "databas": [17, 18, 445, 446], "dataset": [18, 324, 446], "date": 443, "david": [441, 450], "de": 441, "deal": 440, "dec": 441, "decid": [221, 428], "decim": [305, 307, 308], "decompos": [116, 126, 135, 138, 153, 448], "decomposit": [116, 126, 153], "decreas": 226, "def": [5, 436], "default": [17, 18, 20, 22, 27, 28, 29, 30, 44, 52, 60, 62, 63, 64, 65, 71, 73, 74, 79, 83, 88, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 115, 118, 120, 123, 126, 128, 132, 133, 135, 136, 138, 139, 143, 146, 150, 153, 158, 164, 165, 166, 167, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 202, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 255, 256, 264, 266, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 310, 314, 319, 324, 327, 331, 332, 336, 337, 338, 339, 344, 345, 346, 352, 353, 354, 355, 357, 358, 359, 360, 361, 365, 366, 367, 373, 374, 375, 378, 379, 381, 387, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 413, 414, 415, 417, 420, 421, 423, 428, 429, 436, 445, 446], "defect": [18, 120, 432, 446], "defin": [28, 33, 41, 89, 99, 100, 102, 103, 104, 108, 112, 120, 122, 130, 140, 147, 149, 155, 201, 303, 324, 404, 410, 413, 431, 434, 440, 442, 449, 450, 457], "definit": [246, 247, 251, 252, 440], "deform": [224, 458], "defualt": 413, "deg": 71, "degener": [72, 100, 102, 103, 338, 360, 394, 395, 422], "degre": [71, 221, 229, 395, 397], "delaunai": [1, 434, 437, 441], "delaunau": 441, "delet": [394, 395, 403, 450], "deleteduplicatenod": [104, 105, 394], "delta": 389, "delval": 400, "demand": [17, 18, 63, 432, 445, 446], "demo": 443, "demo_curvatur": [2, 4, 444], "demo_heart": [5, 9, 444], "demo_imag": [178, 180, 181, 305], "demo_mesh": [221, 307], "demo_mix": [6, 9, 444], "demo_pasta": [7, 9, 444], "demonstr": 7, "deni": 441, "denot": [99, 100, 101, 102, 103, 104, 105, 241, 428], "depend": [1, 6, 135, 210, 211, 305, 306, 324, 394, 432, 434, 443, 449], "depict": 452, "depth": [98, 336, 337, 349, 353, 354, 355, 357, 358, 370, 374, 375, 379, 383, 456], "deriv": 324, "describ": [20, 98, 184, 185, 186, 187, 230, 337, 449, 450], "descript": 443, "design": [6, 441, 443], "desir": [62, 64], "despit": 155, "destruct": [179, 185], "det": [441, 450, 457], "detail": [51, 52, 109, 111, 164, 165, 166, 167, 305, 307, 308, 420, 432, 436, 438, 443], "detect": [119, 132, 133, 179, 185, 266, 267, 269, 270, 281, 282, 284, 285, 287, 288, 290, 291, 292, 293, 294, 297, 337], "detectfeatur": [221, 223, 224, 226, 227, 229], "determin": [22, 46, 48, 60, 71, 74, 100, 101, 102, 103, 104, 105, 116, 135, 139, 153, 158, 164, 165, 166, 167, 187, 221, 226, 244, 252, 256, 270, 271, 274, 275, 276, 277, 279, 281, 282, 283, 286, 287, 288, 289, 290, 298, 299, 300, 301, 337, 339, 361, 395, 396, 397, 401, 408, 416, 417, 420, 428, 448, 450, 456, 457], "detomi": [29, 441], "deuteranomali": 428, "dev": 443, "develop": [16, 95, 324, 443, 450], "deviat": [2, 158, 179, 236, 237, 240], "diagon": 448, "diamond": [6, 214], "dic45": [320, 441], "dice": [305, 441], "dicom": [73, 118, 183, 435, 437], "dict": [22, 71, 184, 186, 187, 222, 223, 224, 226, 227, 229, 302, 305, 307, 308, 324, 332, 450], "dictionari": [22, 71, 184, 186, 187, 452], "diff": 432, "diff_fun": 192, "diff_sym": [193, 199], "differ": [8, 10, 12, 22, 96, 98, 105, 132, 137, 179, 185, 191, 192, 193, 199, 229, 269, 270, 303, 324, 394, 428, 431, 432, 433, 434, 436, 442, 443, 449, 455, 457], "differen": [221, 230], "differenti": [98, 185, 190, 191, 192, 193, 196, 197, 198, 199, 200, 203, 206, 215, 216, 217, 324], "differential_evolut": 324, "difff": [191, 432], "difficult": [432, 443, 450], "diffv": 191, "dihedr": [71, 248, 250, 254, 256, 397], "dimens": [45, 120, 173, 174, 176, 179, 305, 358, 435, 436], "dimension": [93, 99, 102, 120, 167, 168, 171, 273, 302, 305, 306, 435, 441, 442, 450, 456], "dimetr": 428, "dimitri": 441, "direct": [2, 98, 136, 155, 184, 186, 187, 210, 211, 218, 219, 220, 234, 235, 236, 266, 267, 281, 282, 283, 286, 287, 288, 289, 290, 291, 292, 297, 305, 307, 308, 313, 314, 321, 324, 337, 432, 441, 443, 449, 457], "directed_hausdorff": 321, "direction": [158, 449], "directl": 324, "directli": [2, 101, 104, 113, 114, 116, 121, 124, 125, 126, 127, 141, 142, 145, 151, 152, 153, 177, 178, 180, 181, 184, 186, 187, 226, 231, 234, 235, 236, 237, 238, 240, 241, 242, 243, 430, 432, 435, 440, 443, 449, 450], "directori": [73, 118, 182, 183, 435, 437], "dirichlet": 441, "disadvantag": 449, "discard": [73, 118], "disconnect": 43, "discuss": [447, 449, 450], "displac": [223, 224, 225, 325, 326, 334, 335, 455], "displai": [79, 221, 229, 230, 305, 428], "distanc": [120, 184, 186, 201, 204, 210, 211, 213, 223, 230, 235, 243, 249, 270, 280, 286, 289, 319, 321, 331, 337, 396, 406, 410, 413, 441, 450, 457, 458], "distance_transform_edt": 120, "distort": [179, 185], "distribut": [5, 454, 458], "divid": [239, 245, 336, 379, 449, 456], "divis": 441, "dl": [96, 441], "dmesh": 75, "do": [18, 221, 226, 440, 443, 446], "document": [324, 443], "doesn": [29, 30, 137, 221, 226, 305, 306, 450, 454, 456], "doi": [29, 96, 266, 281, 282, 287, 288, 290, 291, 292, 297, 298, 299, 300, 301, 441], "domain": [441, 442], "dome": 162, "domin": [234, 241, 242], "don": [18, 44, 86, 93, 284, 285, 286, 289, 293, 294, 446, 450], "done": [5, 62, 64, 430, 432], "doorn": [156, 162, 163, 441], "dot": 2, "doubl": 60, "down": 435, "download": [2, 5, 6, 7, 437], "dragon": [18, 446], "dragon_res2": [18, 446], "dragon_res3": [18, 446], "dragon_res4": [18, 446], "dramat": 1, "drawn": 450, "driven": 443, "dtype": [183, 185, 259, 261, 262, 275, 320, 322, 400], "dual": [98, 136, 338, 360, 441], "dualconn": [136, 338, 360], "dualcoord": [136, 338, 360], "dualgrid_method": 98, "due": [155, 177, 178, 180, 181, 184, 186, 187, 231, 234, 235, 236, 237, 238, 240, 241, 242, 243, 450, 455], "duplic": [74, 100, 102, 103, 107, 115, 123, 128, 133, 143, 146, 150, 396, 403], "dure": [107, 115, 120, 123, 128, 143, 146, 150, 179, 185, 221, 223, 224, 226, 227, 307, 308], "dx": [441, 449], "dx_0": 449, "dx_1": 449, "dx_n": 449, "dxnew": 225, "dynam": [75, 441], "e": [2, 14, 38, 62, 63, 64, 99, 102, 109, 110, 111, 116, 120, 126, 132, 133, 135, 148, 153, 182, 183, 214, 221, 223, 230, 234, 239, 241, 253, 266, 269, 270, 272, 273, 287, 288, 290, 297, 298, 299, 300, 301, 305, 319, 321, 324, 331, 338, 349, 360, 370, 383, 431, 432, 433, 435, 437, 439, 441, 442, 443, 449, 450, 452, 454, 455, 457], "e0": 132, "e1": 132, "e10": 132, "e2": 132, "e3": 132, "e4": 132, "e5": 132, "e6": 132, "e7": 132, "e8": 132, "e9": 132, "e_": 457, "e_1": 457, "e_2": 457, "each": [18, 22, 31, 32, 33, 34, 35, 39, 40, 41, 45, 50, 98, 99, 101, 102, 103, 104, 105, 107, 110, 115, 118, 123, 128, 129, 132, 133, 135, 136, 138, 143, 146, 150, 154, 155, 158, 160, 161, 184, 186, 187, 194, 195, 201, 202, 223, 225, 226, 227, 229, 230, 231, 236, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 260, 261, 262, 263, 266, 270, 279, 280, 282, 286, 288, 289, 290, 295, 300, 301, 302, 303, 305, 306, 307, 308, 324, 336, 337, 345, 357, 358, 366, 379, 396, 398, 399, 401, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 431, 433, 435, 440, 442, 446, 448, 449, 450, 452, 455, 456, 457], "earliest": 448, "easi": [440, 443], "easili": [6, 440, 452], "ebcb8b": 7, "ecolog": 441, "ecologi": 441, "ecosystem": 440, "ederror": [98, 337, 456], "edg": [14, 22, 31, 32, 38, 46, 62, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 115, 116, 117, 121, 123, 124, 126, 127, 128, 132, 135, 137, 141, 143, 144, 145, 146, 150, 151, 153, 158, 174, 175, 176, 179, 185, 221, 223, 224, 226, 227, 229, 230, 231, 232, 233, 234, 242, 243, 245, 259, 275, 276, 278, 298, 299, 300, 301, 363, 374, 394, 397, 414, 417, 428, 431, 432, 433, 442, 448, 450, 454, 457], "edge3": 433, "edgeconn": [132, 431, 452], "edgeedg": [298, 299, 300, 301], "edgeelem": 132, "edgeelemconn": [431, 452], "edgemod": [100, 103], "edges2uniqu": 431, "edgeset": [22, 62], "edu": [7, 441], "educ": 447, "effect": 455, "effici": [21, 72, 93, 190, 196, 200, 203, 206, 281, 282, 287, 288, 290, 291, 292, 302, 305, 332, 412, 422, 432, 437, 440, 441, 448, 450, 452, 455, 456, 457], "effort": 432, "egregium": 449, "eigenvalu": 449, "eight": [93, 456], "either": [28, 60, 62, 63, 64, 65, 72, 98, 99, 100, 102, 104, 105, 148, 158, 179, 182, 184, 185, 192, 198, 211, 216, 221, 230, 235, 236, 237, 240, 241, 243, 253, 302, 305, 324, 332, 333, 391, 394, 396, 422, 428, 431, 442, 443, 448], "elbow": 7, "elem": 421, "elemconn": [136, 225, 401, 416, 417, 431], "elemdata": [22, 28, 60, 71, 73, 177, 181, 221, 229, 230, 428], "element": [5, 6, 18, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 47, 56, 60, 62, 63, 64, 71, 72, 73, 78, 79, 84, 85, 86, 90, 98, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 113, 114, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 129, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 144, 145, 148, 151, 152, 153, 170, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 194, 205, 221, 222, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 274, 277, 280, 281, 286, 289, 291, 292, 295, 296, 297, 302, 305, 306, 336, 337, 338, 344, 350, 360, 365, 379, 392, 393, 394, 395, 396, 397, 398, 399, 401, 404, 406, 407, 410, 413, 414, 416, 417, 420, 421, 422, 423, 428, 431, 432, 435, 440, 441, 442, 443, 446, 448, 449, 450, 454, 455, 456], "elementedg": 106, "elemet": 152, "elemid": [82, 135, 138, 406], "elemlabel": 75, "elemneighbor": [63, 254, 414, 417, 431], "elemnorm": [254, 271, 274, 277, 392, 401], "elemregion": 414, "elemset": [22, 63], "elemtyp": [104, 106, 132, 133, 137, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 255, 397, 420, 421, 432], "elia": 441, "elimin": [5, 93, 456], "elis": [441, 443], "ellipsoid": 242, "ellipt": [234, 242, 449], "elsewher": 436, "emb": 221, "embed": 449, "emploi": [447, 455], "empti": [23, 29, 72, 86, 284, 285, 293, 294, 339, 352, 359, 361, 373, 387, 422, 456], "enabl": [1, 190, 196, 200, 203, 206, 456], "encod": 456, "encount": [2, 155], "end": [2, 5, 6, 7, 62, 63, 64, 65, 108, 234, 284, 285, 293, 294, 309, 310, 311, 312, 313, 314, 315, 316, 352, 373, 449, 450, 457], "endpoint": 284, "endpt_inclus": [284, 285, 293, 294], "energi": 441, "enforc": [236, 237, 240], "engin": [29, 441], "enhanc": [1, 437], "enough": [449, 450], "ensur": [170, 175, 295, 448, 450, 452, 457], "entir": 29, "entiti": [93, 431], "entri": [22, 28, 60, 71, 83, 100, 109, 111, 132, 177, 178, 180, 181, 221, 229, 230, 400, 428, 448, 452], "environ": [95, 439], "ep": [72, 97, 264, 268, 270, 271, 274, 275, 276, 277, 278, 280, 284, 285, 286, 287, 288, 289, 290, 293, 294, 295, 296, 298, 299, 300, 301, 337, 422], "epsilon": 457, "equal": [2, 28, 120, 177, 178, 180, 181, 183, 184, 186, 187, 221, 225, 230, 236, 237, 240, 249, 391, 395, 397, 408, 409, 428, 441, 449, 456], "equat": [225, 449], "equiangular": [253, 257], "equilater": [253, 260], "equilibrium": [224, 458], "equival": [43, 60, 108, 112, 122, 130, 140, 147, 149, 214, 324, 348, 369, 432, 440], "error": [86, 98, 155, 158, 160, 161, 221, 319, 331, 337, 413, 432, 437, 441, 448], "especi": 432, "essenti": [332, 450, 456], "establish": [437, 440, 441], "estim": 449, "et": [230, 451, 457], "eta": 222, "etc": [18, 93, 214, 234, 305, 306, 394, 428, 433, 439, 446], "euclidean": 120, "euclidian": 337, "euler": [38, 42], "ev": 441, "evalu": [71, 98, 104, 154, 158, 179, 184, 186, 187, 190, 194, 195, 196, 200, 201, 203, 206, 218, 219, 220, 230, 324, 337, 432, 434, 439, 443, 448, 456], "even": [29, 221, 287, 428, 457], "evenli": [5, 179, 185, 454, 458], "everi": [225, 324, 450, 452, 456], "evolut": 324, "ex": [132, 134, 254, 394, 396, 398, 399, 411, 412, 413, 423, 449], "ex_0": 449, "ex_1": 449, "ex_n": 449, "exact": [27, 98, 456], "exact_h": [236, 237, 240], "exact_mins": 379, "exactli": [236, 237, 240, 269, 270, 279, 284, 285, 293, 294, 298, 299, 300, 301, 344, 345, 365, 366, 378, 396, 450, 456], "examin": 449, "exampl": [2, 4, 5, 6, 7, 9, 11, 17, 18, 44, 93, 98, 104, 105, 116, 120, 126, 153, 174, 176, 178, 180, 181, 184, 186, 187, 188, 189, 190, 196, 200, 203, 206, 209, 213, 221, 223, 231, 232, 234, 235, 238, 242, 243, 287, 288, 290, 302, 303, 305, 307, 308, 324, 396, 397, 408, 409, 421, 433, 435, 436, 438, 439, 440, 444, 445, 446, 448, 449, 452, 455, 456, 457], "example_func": 436, "except": [18, 324, 408, 443, 446], "exclud": [43, 284], "exclus": 60, "exculd": [406, 410, 413], "execut": [4, 9, 11, 439, 444], "executionmod": 439, "exist": [29, 60, 63, 86, 139, 182, 397, 432, 433, 442, 448, 450, 456], "expand": 450, "expans": 1, "expect": 95, "expens": 187, "experi": [18, 446], "experiment": 95, "explain": [338, 360, 443], "explan": [434, 447], "explicit": 434, "explicitli": [72, 422], "explod": [18, 446], "explor": 1, "expos": [132, 137, 179, 185, 442], "express": [190, 196, 200, 203, 206], "extend": [443, 448, 450], "extens": [88, 183, 435, 443], "exterior": [99, 100, 101, 102, 103, 104, 105], "extern": [131, 443, 458], "extract": [13, 28, 99, 101, 102, 104, 105, 113, 114, 121, 124, 125, 127, 133, 134, 137, 141, 142, 145, 151, 152, 412, 448], "extrem": 221, "extrud": [7, 234, 240, 434], "extrus": 235, "ezproxi": 441, "f": [2, 6, 20, 38, 98, 184, 186, 187, 190, 196, 200, 202, 203, 204, 206, 210, 211, 214, 225, 229, 230, 266, 269, 270, 287, 288, 290, 297, 298, 299, 300, 301, 324, 337, 436, 441, 449, 458], "f1": [191, 192, 197, 198, 215, 216], "f2": [191, 192, 197, 198, 215, 216], "face": [14, 22, 29, 38, 39, 40, 48, 63, 64, 109, 110, 111, 114, 116, 117, 125, 126, 132, 133, 142, 144, 152, 153, 225, 248, 250, 252, 254, 275, 392, 397, 401, 407, 417, 428, 431, 454], "face2nodenorm": [51, 52, 155, 160, 161], "face2uniqu": 133, "face_alpha": [424, 428], "facecent": 225, "faceconn": [133, 431, 452], "faceelem": 133, "faceelemconn": [431, 452], "faces2surfac": 133, "faces2uniqu": 431, "faceset": [22, 29, 64], "facet": 441, "facilit": 452, "factor": [29, 73, 118, 177, 178, 180, 181, 182, 218, 219, 220, 225, 302, 305, 307, 308, 311, 312], "fail": [86, 410], "fall": [448, 457], "fals": [2, 27, 28, 30, 44, 60, 70, 73, 79, 99, 100, 101, 102, 103, 104, 105, 109, 110, 111, 118, 120, 132, 133, 134, 135, 138, 155, 158, 177, 179, 181, 184, 185, 221, 223, 224, 225, 226, 227, 228, 230, 236, 237, 239, 240, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 264, 266, 267, 269, 270, 271, 274, 277, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 317, 318, 325, 326, 327, 329, 330, 334, 335, 344, 345, 359, 365, 366, 387, 394, 395, 396, 402, 408, 409, 410, 413, 427, 428, 432, 440], "famou": 448, "fan": 171, "far": [230, 450], "faraj": [230, 441, 451], "fast": [266, 287, 288, 290, 297, 298, 299, 300, 301, 441], "faster": [2, 155, 287, 288, 290], "fatol": 324, "featur": [95, 179, 185, 221, 223, 224, 226, 227, 229, 230, 397, 412, 432, 440, 441, 443, 449, 452, 456], "featureangl": [221, 229], "feb": 441, "few": 434, "fi": 252, "field": [120, 201, 230, 336, 379, 441, 448], "fig": [2, 79, 432], "fig1": [2, 432], "fig2": [2, 432], "fig3": [2, 432], "fig4": 2, "figsiz": [427, 432], "figur": [79, 428], "file": [4, 9, 11, 22, 73, 81, 88, 118, 177, 178, 179, 180, 181, 182, 183, 435, 437, 444], "filenam": [88, 183], "filetyp": [88, 183, 438], "fill": [102, 120, 139, 405, 448], "fill_valu": 194, "fillval": 405, "final": [18, 174, 176, 231, 232, 233, 234, 236, 241, 242, 243, 307, 308, 446, 457], "find": [1, 97, 225, 450, 452, 457], "fine": 307, "finfo": [72, 422], "finish": 324, "finit": [98, 185, 432, 441, 442], "finite_diff_step": 185, "first": [2, 44, 72, 97, 108, 112, 117, 119, 120, 122, 130, 131, 140, 144, 147, 149, 173, 179, 182, 191, 197, 215, 221, 223, 238, 239, 256, 264, 265, 285, 293, 294, 296, 298, 299, 302, 303, 305, 306, 319, 321, 331, 389, 390, 391, 394, 403, 408, 414, 415, 422, 431, 432, 433, 435, 439, 440, 452, 456, 457], "fischer": 214, "fit": [155, 161], "fix": [29, 221, 223, 224, 225, 226, 227, 304, 305, 306, 307, 308, 455], "fixedg": [179, 185], "fixednod": [29, 179, 185, 221, 223, 224, 226, 227], "fixednot": 225, "fixfeatur": [223, 224, 226, 227], "fixsurf": [223, 224, 226, 227], "fixvol": 173, "flat": [233, 428], "fld979": 441, "flexibl": 433, "flip": [99, 100, 101, 102, 103, 104, 105, 155, 228, 229, 287, 454], "flippabl": 452, "float": [28, 29, 44, 60, 72, 73, 74, 97, 98, 100, 103, 104, 105, 118, 120, 139, 156, 157, 158, 159, 163, 164, 165, 166, 167, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 209, 213, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 264, 270, 271, 274, 275, 276, 277, 278, 280, 286, 287, 288, 289, 290, 295, 296, 298, 299, 300, 301, 302, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 319, 320, 321, 322, 324, 331, 336, 337, 353, 354, 355, 374, 375, 379, 389, 390, 391, 395, 396, 397, 404, 406, 410, 411, 412, 413, 419, 422, 423, 428, 432], "float64": [2, 185], "flow": [179, 185], "fluid": [225, 441], "focu": [436, 443], "focus": 443, "follow": [18, 120, 214, 230, 235, 241, 306, 324, 337, 350, 403, 410, 428, 430, 431, 436, 440, 446, 448, 449, 450, 455, 457], "forc": [224, 225, 324, 406, 410, 413, 458], "foreground": [158, 449], "form": [98, 172, 184, 186, 187, 288, 290, 337, 338, 360, 436, 442, 450, 452, 457], "format": [17, 22, 30, 66, 98, 182, 184, 186, 187, 225, 265, 266, 269, 270, 275, 276, 278, 287, 288, 290, 297, 298, 299, 300, 301, 305, 307, 308, 337, 341, 348, 353, 359, 369, 391, 435, 438, 445], "former": 83, "formula": [154, 158, 441], "forum": 441, "forward": [432, 456], "found": [83, 377, 432, 450], "four": [93, 132, 133, 237, 448, 450, 457], "fourier": [6, 441], "fourth": 389, "frac": [259, 261, 262, 449, 455, 457, 458], "fractur": 443, "frad": 195, "frame": 449, "fran": 441, "frd": 214, "fre97": [226, 441, 455], "freder": 441, "free": [18, 43, 224, 324, 446], "freenod": 185, "freitag": 441, "fring": 443, "from": [1, 2, 4, 5, 6, 7, 9, 11, 13, 17, 18, 38, 42, 43, 87, 99, 102, 104, 105, 106, 108, 112, 113, 114, 116, 118, 120, 121, 122, 124, 125, 126, 127, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 145, 147, 149, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 179, 183, 185, 213, 214, 221, 224, 225, 230, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 246, 247, 249, 251, 252, 253, 254, 257, 258, 260, 263, 264, 270, 287, 296, 305, 307, 324, 339, 346, 349, 357, 358, 361, 367, 370, 381, 383, 392, 394, 395, 396, 399, 400, 403, 408, 409, 410, 413, 430, 431, 432, 433, 434, 435, 436, 438, 441, 442, 443, 444, 445, 446, 448, 449, 450, 452, 456, 457], "ftb16": [230, 441, 451], "ftetwild": 432, "full": [2, 5, 6, 7, 79, 87, 95, 158, 181, 214, 231, 236, 241, 255, 307, 308, 431, 440, 441, 442, 456], "fulli": [337, 414, 415], "fulltext": 441, "fun": [194, 202], "func": [73, 98, 101, 104, 154, 184, 185, 186, 187, 188, 189, 190, 196, 200, 203, 205, 206, 209, 213, 214, 218, 219, 220, 302, 303, 337, 432, 436], "func1": 432, "func2": 432, "function": [2, 6, 13, 14, 21, 62, 64, 72, 98, 101, 104, 132, 133, 136, 154, 178, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 226, 230, 256, 271, 274, 277, 324, 337, 394, 422, 432, 433, 434, 435, 437, 438, 439, 440, 443, 448, 449], "function2octre": [98, 456], "fund": 443, "fundament": 441, "further": [16, 337, 353, 354, 355, 374, 375, 434, 443, 456], "furthest": 450, "fusilli": 7, "fusion": 441, "futur": 16, "fx_0y_0": 449, "fx_1y_1": 449, "fx_ny_n": 449, "fxxx": 214, "fxy": 449, "fy": 449, "g": [2, 14, 42, 63, 99, 102, 182, 183, 214, 221, 223, 230, 234, 239, 266, 269, 270, 272, 273, 287, 288, 290, 297, 298, 299, 300, 301, 305, 324, 431, 432, 433, 435, 439, 441, 442, 443, 449, 455], "gabriel": 441, "galleri": [2, 5, 6, 7, 10, 444], "gamma": [310, 325, 326, 327, 389, 390, 391, 406, 410], "gamma_0": 450, "gao": 441, "gap": 447, "garland": 441, "gauss": 449, "gaussian": [70, 154, 157, 158, 179], "gaussian_filt": [158, 179], "gaussian_sigma": [73, 118, 158, 179], "gaussiancurvatur": 449, "gem": 441, "gener": [2, 5, 6, 7, 28, 29, 72, 79, 87, 89, 98, 99, 100, 101, 102, 103, 104, 105, 116, 126, 135, 138, 139, 153, 155, 160, 161, 170, 171, 174, 176, 177, 178, 180, 181, 184, 186, 187, 191, 197, 201, 204, 215, 230, 231, 234, 236, 237, 238, 240, 242, 243, 274, 277, 280, 281, 282, 286, 287, 288, 289, 290, 291, 292, 295, 306, 309, 310, 311, 312, 313, 314, 315, 316, 336, 337, 339, 357, 358, 361, 379, 386, 398, 401, 406, 410, 413, 422, 423, 430, 432, 434, 435, 436, 438, 440, 441], "genu": 436, "geometr": [116, 135, 153, 222, 313, 314, 441, 449, 450], "geometri": [98, 184, 186, 187, 235, 337, 396, 397, 436, 441, 442, 455], "geq": 457, "get": [52, 103, 179, 235, 241, 255, 347, 348, 349, 350, 368, 369, 370, 371, 382, 383, 417, 433, 443], "get_arrai": 432, "get_imag": 432, "getelemconnect": 136, "getelemneighbor": 414, "getnodeneighbor": [155, 160, 161, 414, 415, 417, 440], "getthem": 428, "gh97": [221, 441], "gi04": [155, 160, 161, 441, 449], "gift": [170, 172], "giftwrap": 170, "github": 437, "give": [148, 284, 305, 306, 418, 419, 449, 457], "given": [18, 44, 73, 96, 97, 118, 164, 165, 166, 167, 168, 171, 174, 176, 179, 182, 183, 223, 234, 295, 305, 306, 324, 349, 352, 370, 373, 377, 383, 398, 428, 446], "glfw": 429, "global": 324, "gmbh": 441, "gmsh": [441, 443], "go": [2, 5, 6, 7, 225, 440], "goal": [440, 454], "gol05": [154, 158, 441, 449], "goldfeath": [155, 160, 161, 441, 449], "goldman": [154, 158, 441, 449], "gomiti": 7, "good": [18, 446], "gpu": 1, "grad": [98, 337], "gradient": [98, 158, 179, 185, 195, 324, 456], "grai": 120, "grant": 443, "graphic": [18, 298, 299, 300, 301, 432, 441, 442, 446], "grayscal": [100, 103, 158, 428], "greater": [73, 99, 100, 101, 102, 103, 104, 105, 118, 120, 177, 178, 180, 181, 182, 183, 230, 395, 406, 410, 413, 449], "grid": [85, 98, 99, 102, 104, 105, 116, 148, 158, 186, 194, 195, 201, 231, 237, 240, 324, 332, 397, 432, 440, 441, 442, 448], "grid2d": 102, "grid2fun": 158, "grit": 441, "group": [106, 324, 409, 414, 415, 441], "growth": 443, "guarante": 126, "guess": [305, 307, 308, 324], "guid": [1, 15, 337, 434, 443], "gutierrez": 443, "gy": 449, "gy_0": 449, "gy_1": 449, "gy_n": 449, "gyroid": [6, 184, 186, 187, 214, 397, 434], "h": [5, 6, 100, 103, 139, 177, 178, 179, 180, 181, 184, 185, 186, 187, 221, 229, 230, 236, 237, 238, 239, 240, 266, 269, 270, 287, 288, 290, 297, 298, 299, 300, 301, 441, 449], "h_node": 230, "ha": [5, 18, 45, 62, 64, 72, 86, 104, 132, 133, 136, 183, 287, 288, 290, 337, 351, 352, 372, 373, 384, 394, 398, 422, 430, 433, 438, 439, 443, 446, 448, 450, 452, 455, 457], "ha01": [441, 457], "half": [234, 242, 307, 308, 431, 450, 452], "halt": 337, "handl": [5, 72, 98, 100, 103, 120, 158, 192, 198, 211, 216, 290, 422, 433, 450], "hang": 441, "happen": [18, 332, 446], "harvei": 441, "hash": 452, "hasn": [62, 64, 136], "hat": [449, 455, 457], "hausdorff": 305, "have": [1, 2, 18, 23, 28, 30, 97, 101, 102, 103, 104, 105, 120, 135, 164, 165, 166, 167, 179, 254, 266, 270, 280, 282, 288, 290, 300, 301, 306, 324, 336, 391, 394, 395, 399, 430, 431, 435, 440, 446, 448, 449, 450, 455], "haven": [46, 48], "health": 443, "heap": 221, "hear": 1, "heart": [8, 9, 10, 444], "heavili": 1, "heckbert": 441, "height": [234, 423, 428], "held": [29, 221, 223, 224, 225, 226, 227], "help": [119, 221, 313, 314, 447], "her": [18, 446], "here": [432, 447, 449, 450, 452], "hex": [126, 132, 133, 231, 234, 236, 242, 394, 428, 433], "hex20": 433, "hex20nodeconn": [112, 115], "hex8nodeconn": [112, 115], "hexahedr": [14, 99, 112, 113, 114, 116, 235, 236, 241, 246, 253, 279, 338, 339, 350, 361, 398, 399, 423, 442, 443], "hexahedra": [99, 117, 338, 442], "hexahedron": [72, 422, 433], "hexconn": 116, "hexcoord": 116, "hi": 230, "hide": 428, "hierarch": 456, "hierarchi": 93, "high": [2, 324, 432, 441], "higher": [101, 226, 456], "highest": [349, 370, 383], "highli": [155, 160, 161], "highlight": [10, 443], "hilton": 441, "hindu": [18, 446], "hip": 443, "hner": 441, "hol10": [338, 360, 441], "hold": [79, 179, 185, 224], "holder": 443, "hole": [18, 120, 164, 165, 166, 167, 446], "holmlid": 441, "home": 2, "hormann": 441, "how": [2, 7, 18, 45, 100, 103, 120, 394, 434, 443, 446, 447, 449, 450, 457], "howev": [18, 23, 29, 59, 158, 174, 176, 324, 432, 446, 448, 450, 455], "hsiw96": [105, 441], "hsw": [432, 441], "html": [313, 314, 439, 441], "http": [29, 96, 175, 266, 281, 282, 287, 288, 290, 291, 292, 297, 298, 299, 300, 301, 313, 314, 439, 441], "hu": 441, "hugh": 441, "hull": [170, 171, 172, 434, 441], "hundr": [18, 446], "hx": [100, 118, 177, 178, 180, 181], "hy": [100, 118, 177, 178, 180, 181], "hyperbol": 449, "hz": [100, 118, 178, 180, 181], "hzg": [230, 441], "i": [1, 2, 6, 17, 18, 20, 22, 28, 29, 33, 38, 41, 42, 44, 45, 55, 60, 62, 63, 64, 72, 73, 79, 83, 84, 86, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 113, 114, 115, 116, 117, 120, 121, 123, 124, 125, 126, 127, 128, 132, 133, 135, 139, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 158, 164, 165, 166, 167, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 192, 193, 197, 198, 199, 204, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 230, 233, 234, 235, 236, 237, 238, 240, 241, 243, 244, 245, 246, 247, 251, 252, 253, 256, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 319, 321, 324, 326, 331, 332, 337, 338, 339, 341, 342, 343, 344, 345, 349, 352, 357, 358, 360, 361, 363, 364, 365, 366, 370, 373, 378, 379, 383, 391, 394, 396, 397, 398, 399, 400, 401, 404, 406, 407, 408, 409, 410, 413, 414, 415, 417, 420, 421, 422, 423, 428, 431, 432, 435, 437, 438, 439, 440, 443, 445, 446, 447, 448, 449, 450, 452, 454, 455, 456, 457, 458], "i2": [214, 326], "icip": 441, "icp": [305, 307, 308], "id": [22, 25, 29, 43, 58, 104, 105, 110, 134, 135, 138, 254, 264, 296, 336, 379, 394, 406, 407, 410], "idea": 447, "ideal": 249, "ident": [320, 322, 432, 440], "identif": [302, 432, 441], "identifi": [5, 72, 74, 110, 170, 221, 223, 224, 226, 227, 229, 230, 264, 280, 283, 286, 289, 295, 296, 302, 303, 324, 341, 342, 343, 363, 364, 397, 414, 415, 421, 422, 434, 450, 452], "identify_typ": [22, 119, 120, 132, 133, 244, 394, 421, 433], "idx": [109, 111, 394, 396, 408, 409], "ieee": 441, "ignor": [168, 171, 173, 174, 176, 186, 358], "ij": 458, "illingworth": 441, "im2voxel": [73, 158], "imag": [1, 2, 13, 17, 18, 73, 92, 100, 103, 118, 120, 148, 158, 302, 305, 306, 313, 314, 317, 318, 320, 322, 325, 326, 327, 329, 330, 332, 334, 335, 428, 432, 434, 437, 441, 442, 445, 446, 448, 449], "imageoverlai": 305, "img": [17, 73, 118, 120, 177, 178, 179, 180, 181, 182, 302, 305, 306, 445], "img1": [305, 306, 323], "img2": [305, 306, 323], "img_align": 305, "img_data": 428, "impath": 183, "imperfect": 432, "implement": [16, 98, 337, 338, 360, 417, 443, 447, 450], "implicit": [1, 2, 6, 8, 9, 10, 13, 98, 104, 154, 158, 221, 223, 337, 397, 434, 440, 441, 444, 448, 449], "implicitli": 436, "import": [2, 5, 6, 7, 18, 95, 120, 158, 287, 305, 307, 438, 439, 446, 447, 449, 450], "improv": [1, 5, 16, 29, 93, 406, 410, 413, 432, 434, 443, 455], "imshow": [120, 305, 432], "inaccur": 449, "inact": 452, "incircl": 450, "inclu": [298, 299, 300, 301], "includ": [6, 93, 214, 271, 279, 339, 344, 345, 359, 361, 365, 366, 378, 387, 401, 408, 414, 418, 434, 435, 436, 438, 441, 442, 443, 448, 449, 454, 456], "include_empti": 387, "includecollinear": 172, "inclus": [60, 271, 272, 273, 275, 276, 278, 279, 344, 345, 365, 366, 378, 450], "inconsequenti": 457, "increas": [302, 305], "increment": 450, "independ": [69, 449, 450], "index": [29, 70, 120, 132, 133, 302, 303, 322, 391, 406, 407, 431, 448], "indic": [28, 33, 41, 60, 109, 111, 132, 133, 135, 138, 162, 163, 172, 174, 175, 176, 184, 186, 221, 223, 229, 236, 280, 286, 288, 289, 295, 341, 342, 343, 363, 364, 394, 396, 408, 409, 410, 417, 431, 442, 450], "individu": [1, 421], "inf": [353, 354, 355, 374, 375, 406, 410, 413], "infer": [120, 394, 433, 452], "inferno": 305, "infinit": [450, 457], "influenc": [38, 69], "info": [31, 32, 34, 35, 39, 40, 50, 441], "inform": [2, 22, 221, 229, 441, 443, 449, 452], "infti": 90, "inher": [230, 449], "initi": [93, 104, 223, 225, 226, 227, 235, 241, 305, 307, 308, 324, 352, 373, 432, 443], "inner": 22, "inp": [81, 438], "inplac": [30, 44, 60, 179, 185, 226], "input": [5, 28, 30, 44, 96, 98, 99, 100, 101, 102, 103, 104, 105, 108, 112, 116, 122, 126, 130, 140, 147, 149, 153, 179, 182, 183, 184, 191, 192, 193, 198, 211, 216, 226, 230, 235, 241, 255, 302, 305, 324, 332, 394, 400, 402, 405, 433, 435, 436, 440], "insid": [20, 28, 60, 99, 100, 101, 102, 103, 104, 105, 120, 139, 177, 178, 179, 180, 181, 184, 186, 187, 191, 192, 193, 197, 198, 199, 215, 216, 217, 271, 272, 273, 274, 275, 276, 277, 278, 279, 338, 344, 345, 360, 365, 366, 436, 448, 449, 450, 457], "inspir": [230, 443, 448], "instal": [155, 175, 324, 439], "instanc": [30, 44, 440], "instead": [105, 177, 178, 180, 181, 183, 184, 186, 187, 231, 234, 235, 236, 237, 238, 240, 241, 242, 243, 305, 324, 401, 457], "institut": [441, 443], "instruct": 437, "int": [28, 29, 60, 73, 98, 99, 100, 101, 102, 103, 104, 105, 118, 158, 175, 177, 178, 179, 180, 181, 182, 185, 189, 202, 218, 219, 220, 221, 223, 224, 226, 227, 229, 231, 232, 233, 234, 235, 238, 241, 242, 243, 259, 261, 262, 284, 285, 293, 294, 302, 305, 336, 337, 347, 349, 353, 354, 355, 357, 358, 368, 370, 374, 375, 379, 382, 383, 399, 400, 405, 410, 413, 418, 428], "int16": 183, "integ": [177, 178, 180, 181, 184, 186, 187, 232, 233, 302, 305], "intellig": 441, "intend": [120, 280, 305, 306, 432, 443, 447], "intens": [73, 118], "interact": [87, 428, 441], "interc": 449, "interesect": 295, "interest": [6, 449, 456], "interfac": [16, 97, 175, 191, 197, 204, 215, 221, 226, 229, 230, 324, 332, 432, 439, 443], "interfer": 450, "interior": [99, 100, 101, 102, 103, 104, 105, 137, 221, 223, 224, 226, 227, 442, 450], "intermedi": [352, 373, 440], "intern": [171, 179, 185, 225, 256, 441], "internet": [17, 18, 445, 446], "interpol": [1, 2, 28, 73, 99, 100, 101, 102, 103, 104, 105, 118, 177, 178, 179, 180, 181, 182, 184, 186, 194, 195, 302, 305, 332, 337, 410, 448, 456], "interpolation_ord": [302, 305], "interpret": [249, 450, 452, 457], "interrant": [155, 160, 161, 441, 449], "intersect": [12, 93, 96, 97, 198, 264, 265, 266, 267, 269, 270, 274, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 341, 343, 363, 432, 436, 441, 443, 450, 456], "intersection_fun": 198, "intersection_leav": 283, "intersection_v": 197, "intersectionf": [197, 432], "intersectionpair": 295, "intersectionpoint": [264, 295, 296], "intersectionpt": [280, 286, 287, 288, 289, 301], "intersections1": 264, "intersections2": 264, "intersectionv": 197, "interv": 457, "intins": 449, "intric": 457, "introduc": [2, 432], "intuit": 449, "inv": [2, 109, 111, 135, 138, 396, 408, 409], "invalid": [2, 116, 126, 135, 153, 450, 451], "invari": 441, "invers": [2, 71, 179, 185, 224, 246, 247, 448, 455], "inverseorthogon": [71, 90], "inverseorthogonalqu": [71, 90, 251], "invert": [86, 221, 332, 452], "involv": [1, 432, 450], "iortho": 247, "iorthoq": 246, "ipynb": [2, 5, 6, 7], "irregular": 2, "irrelev": 224, "isn": [28, 93, 184, 337, 421, 455, 458], "iso": 428, "isocontour": 102, "isolin": [28, 102, 105, 448], "isometr": 428, "isosurfac": [13, 20, 28, 99, 100, 101, 102, 103, 104, 154, 178, 179, 180, 184, 185, 186, 204, 210, 337, 441, 448, 449], "isotrop": [100, 103, 179, 386], "isovalu": [98, 102, 177, 178, 180, 181, 184, 186, 187, 448], "iss": 441, "issu": [86, 450], "italian": [18, 446], "item": [325, 326, 327, 328, 334, 335], "iter": [2, 179, 185, 223, 224, 226, 227, 228, 229, 304, 305, 307, 308, 401, 455, 458], "itertool": 290, "its": [22, 93, 116, 126, 135, 153, 223, 226, 227, 406, 440, 450, 452, 455, 456, 458], "itself": [449, 457], "iwp": 214, "j": [156, 162, 163, 225, 322, 324, 441, 455, 458], "jack": 441, "jacobson": 441, "jame": 441, "jan": 441, "jar73": [172, 441], "jarvi": 441, "jean": 441, "jeann": 441, "jit": 155, "jm24": [6, 441, 443], "joachim": 441, "joe": 441, "john": 441, "join": 432, "jonathan": [16, 175, 441], "jonathon": 176, "josephson": [1, 441, 443], "joshua": 443, "journal": [18, 225, 298, 299, 300, 301, 441, 446, 450], "jp": 441, "jpeg": 183, "jpg": [183, 435], "jstor": 441, "jul": 441, "jule": 441, "jupyt": [2, 5, 6, 7], "jupyter_rfb": 437, "just": [43, 177, 181, 232, 233], "k": [225, 281, 282, 291, 292, 441, 449], "k1a_smooth": 2, "k1a_spher": 2, "k1m_smooth": 2, "k1m_sphere": 2, "k2a_smooth": 2, "k2a_spher": 2, "k2m_smooth": 2, "k2m_sphere": 2, "k_": 458, "kai": 441, "kappa_": 449, "kappa_1": [2, 449], "kappa_2": [2, 449], "kdtree": [319, 331], "keep": [18, 27, 30, 60, 83, 98, 177, 178, 180, 181, 184, 186, 187, 224, 302, 440, 446], "kei": [29, 229, 443, 450, 452, 457], "keith": 441, "kept": [139, 187, 394], "kernel": 179, "keyword": [184, 186, 187, 332], "kf": 225, "know": [93, 450], "known": [6, 421, 457], "koch": 214, "koenderink": [156, 162, 163, 441], "kong": 441, "ku": 225, "kvd92": [156, 162, 163, 441, 449], "kwarg": [79, 87, 184, 186, 187, 427], "l": [29, 337, 441], "l0overrid": 225, "lab": 443, "label": [2, 221, 226, 229, 230, 432], "laboratori": [18, 446], "laidlaw": 441, "lambda": [6, 104], "lambdifi": [190, 196, 200, 203, 206], "laplacian": [2, 5, 179, 185, 223, 224, 226, 227, 441, 454], "larg": [177, 181, 224, 324, 353, 354, 355, 374, 375, 432, 439], "larger": [226, 442, 452, 456], "largest": [223, 224, 226, 227, 321, 450], "last": [120, 239, 302, 303, 408], "later": [29, 440], "layer": [29, 398, 399, 423, 441], "layerconn": 398, "layercoord": 398, "lc87": [99, 100, 441, 448], "lead": [93, 432, 448, 449, 450, 455], "leaf": [283, 339, 352, 353, 354, 355, 361, 373, 374, 375, 377, 378, 387, 456], "least": [44, 417, 449, 450, 457], "leav": [30, 44, 234, 352, 373, 387, 450], "lectur": 441, "lee": 441, "left": [449, 455, 457], "legend": 2, "len": [2, 148, 235, 295, 324, 408, 410, 413], "length": [22, 62, 63, 64, 184, 186, 187, 221, 225, 229, 230, 245, 259, 302, 303, 405, 408, 409, 428, 433], "leq": 457, "less": [20, 28, 72, 73, 99, 100, 101, 102, 103, 104, 105, 118, 120, 177, 178, 180, 181, 182, 183, 184, 186, 187, 221, 223, 224, 226, 227, 307, 308, 337, 394, 397, 422, 449], "lessen": 447, "lestin": 441, "letter": 441, "level": [28, 99, 100, 101, 102, 103, 104, 105, 337, 338, 340, 347, 349, 356, 360, 362, 368, 370, 376, 380, 382, 383, 385, 440, 456], "lexicograph": 435, "li": [450, 457], "lib": 441, "librari": [18, 136, 441, 443, 446], "lidinoid": 214, "lie": [2, 154, 179, 184, 185, 186, 234, 269, 270, 298, 299, 300, 301, 397, 452], "light": [18, 446], "like": [18, 101, 116, 135, 153, 290, 324, 434, 443, 446], "likewis": 452, "limit": [136, 223, 272, 273, 348, 369, 432, 433, 443, 455, 457], "linalg": [2, 287], "lincoa": 324, "line": [7, 22, 28, 97, 102, 105, 164, 170, 232, 233, 235, 239, 241, 280, 284, 285, 293, 294, 336, 421, 422, 428, 433, 448, 450, 457], "line_color": 428, "line_width": 428, "linear": [28, 99, 100, 101, 102, 103, 104, 105, 119, 131, 178, 179, 180, 184, 186, 194, 195, 225, 324, 337, 433, 449, 456], "lineconn": 336, "link": [23, 59, 441, 450, 456], "linspac": 235, "list": [18, 22, 27, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 50, 62, 63, 64, 71, 74, 79, 83, 87, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 172, 174, 176, 182, 184, 186, 187, 194, 195, 201, 214, 225, 231, 236, 237, 240, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 263, 264, 267, 271, 274, 277, 279, 280, 281, 283, 286, 289, 291, 292, 296, 301, 302, 305, 309, 324, 325, 326, 327, 328, 334, 335, 336, 337, 338, 341, 342, 343, 348, 353, 359, 360, 363, 364, 369, 378, 379, 387, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 428, 431, 439, 440, 446], "liu1994": 249, "ller": 441, "load": [73, 182, 305, 307, 435, 458], "local": [179, 185, 221, 223, 224, 226, 227, 229, 324, 402, 449, 455], "locallaplaciansmooth": [5, 455], "locally_bias": 324, "locat": [20, 222, 223, 224, 226, 227, 302, 305, 394, 396, 407], "lock": 440, "log": 2, "long": [6, 18, 189, 234, 271, 337, 446, 457], "longer": [30, 60, 131, 287, 456], "longest": [225, 245, 302, 303], "look": 449, "lookup": 448, "loop": [239, 287, 288, 290], "loos": 443, "lorensen": [441, 448], "lori": 441, "loss": 432, "lot": 434, "love": 1, "low": [2, 6, 432, 449], "lower": [60, 79, 188, 221, 266, 267, 272, 273, 281, 282, 291, 292, 297, 302, 305, 440, 456, 457], "lth86": [432, 441], "luci": [18, 446], "lumetr": 442, "ly": [284, 285, 293, 294], "m": [18, 28, 30, 43, 44, 62, 63, 64, 69, 71, 73, 76, 78, 81, 84, 95, 120, 164, 165, 166, 167, 179, 185, 201, 207, 208, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 235, 241, 259, 261, 262, 289, 295, 307, 324, 428, 436, 438, 439, 440, 441, 446, 458], "m1": [6, 307, 432], "m2": [6, 307, 432, 440], "m3": 6, "m4": 6, "m_align": 307, "macaroni": 7, "machin": [72, 422, 441], "made": [18, 30, 44, 442, 446], "magnitud": [120, 155, 158, 179, 449], "mai": [18, 23, 59, 62, 64, 95, 116, 126, 131, 135, 153, 155, 164, 165, 166, 167, 183, 184, 186, 187, 224, 236, 237, 240, 241, 302, 303, 305, 306, 324, 332, 338, 360, 413, 431, 432, 436, 439, 446, 449, 452, 457], "main": [93, 442, 448], "maintain": 1, "major": [213, 243, 432, 436], "make": [22, 62, 64, 93, 120, 236, 237, 240, 353, 354, 355, 374, 375, 434, 440, 443, 449], "mani": [21, 45, 72, 287, 288, 290, 324, 422, 440, 449, 455, 457], "manifold": [18, 274, 277, 441, 446], "manipul": [62, 64, 430, 434, 443], "manufactur": 442, "map": [1, 406, 410, 413], "mappingmatrix": [406, 410, 413], "marc": 441, "march": [2, 98, 99, 100, 102, 103, 104, 105, 178, 184, 186, 441], "marchingcub": [101, 178, 184, 448], "marchingcubesimag": [158, 178, 184], "marchingsquar": [101, 448], "marchingtetrahedra": [101, 178, 184, 448], "marchingtriangl": 101, "mark": [450, 456], "marot": 441, "marti": 443, "masknan": 2, "mat": 402, "match": [131, 221, 230, 400], "materi": [221, 230, 441], "mathbf": [309, 310, 311, 312, 313, 314, 315, 316, 449, 455], "mathemat": [436, 441], "mathwork": [313, 314, 439], "matplotlib": [2, 79, 120, 305, 437], "matric": 225, "matrix": [100, 103, 148, 182, 302, 303, 304, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 325, 327, 328, 332, 333, 334, 335, 402, 410, 413, 449, 457], "matter": [44, 191, 192, 193, 271, 274, 277, 441], "max": [66, 70, 71, 225, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 305, 307, 308, 349, 370, 383, 457], "maxangl": 248, "maxdepth": [98, 336, 337, 353, 354, 355, 357, 358, 374, 375, 379, 386], "maxdihedr": [71, 256], "maximum": [29, 79, 98, 154, 155, 156, 157, 158, 159, 160, 161, 163, 175, 183, 184, 186, 187, 191, 192, 197, 198, 223, 224, 226, 227, 229, 246, 248, 336, 337, 349, 350, 353, 354, 355, 357, 358, 370, 374, 375, 379, 383, 449, 456], "maxit": [223, 224, 226, 227, 304, 324], "maxprincip": [154, 155, 156, 157, 158, 159, 160, 161, 163], "maxprincipaldirect": [2, 155], "maxsiz": [353, 354, 355, 374, 375], "mb": [4, 9, 11, 444], "mc": [98, 178, 184, 186], "mc33": [98, 178, 184], "me": 1, "mead": 324, "mean": [2, 6, 69, 70, 71, 154, 158, 159, 226, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 319, 331, 440, 450, 452, 457], "meancurvatur": 449, "meaning": 158, "meanratio": [71, 90, 226], "measur": [6, 90, 319, 320, 321, 322, 331, 441, 449, 456], "mechan": 441, "mechanobiolog": [441, 443], "mechanobiologi": [1, 441, 443], "meet": [259, 298, 299, 300, 301, 452], "melt": [18, 446], "mem": [4, 9, 11, 444], "memori": 452, "merg": [107, 115, 123, 128, 143, 146, 150, 221, 403, 423], "mergedconn": 403, "mergedcoord": 403, "mergedv": 403, "mergemesh": 423, "mesh": [1, 2, 5, 7, 12, 18, 89, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 160, 161, 164, 165, 166, 167, 170, 174, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 194, 195, 201, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 271, 274, 277, 279, 280, 286, 289, 295, 296, 305, 307, 336, 337, 338, 339, 360, 361, 379, 386, 391, 392, 394, 395, 396, 397, 398, 399, 403, 404, 406, 407, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 427, 428, 430, 431, 432, 433, 434, 437, 439, 441, 446, 447, 450, 452, 454, 458], "mesh2": 74, "mesh2sdf": 1, "meshanalysi": [4, 444], "meshboolean": 432, "meshgener": [9, 444], "meshio": [76, 78, 81, 84, 85, 88, 437, 438], "meshio2mymesh": 438, "meshpi": 443, "messag": 182, "met": [336, 357, 358, 379, 457], "meth": 74, "method": [2, 7, 8, 10, 16, 27, 30, 51, 52, 93, 98, 99, 100, 101, 104, 105, 116, 126, 135, 144, 153, 158, 164, 165, 166, 167, 170, 174, 176, 178, 179, 180, 184, 185, 186, 194, 195, 222, 223, 225, 226, 227, 230, 253, 257, 260, 303, 305, 307, 308, 324, 337, 338, 360, 401, 414, 432, 434, 438, 440, 441, 442, 448, 449, 455, 458], "metric": [70, 71, 305, 306, 307, 308, 441], "michael": 441, "micro": 443, "middl": 5, "midpoint": [99, 100, 101, 102, 103, 104, 105, 107, 115, 123, 128, 143, 146, 150, 178, 180, 184, 186, 230, 305, 306, 448], "might": [18, 430, 446], "million": [18, 446], "min": [66, 70, 71, 225, 226, 228, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 305, 307, 308, 410, 413, 457], "minangl": 250, "mind": 449, "mindepth": [98, 337], "mindihedr": [71, 256], "minim": [6, 72, 190, 196, 200, 203, 206, 214, 221, 324, 422, 434, 452], "minimum": [77, 79, 98, 154, 155, 156, 157, 158, 159, 160, 161, 163, 184, 186, 187, 193, 199, 215, 216, 217, 226, 250, 252, 287, 288, 290, 302, 303, 324, 336, 337, 350, 353, 354, 355, 374, 375, 379, 402, 441, 449], "mininum": 155, "minor": [213, 243], "minprincip": [154, 155, 156, 157, 158, 159, 160, 161, 163], "minprincipaldirect": 155, "minsiz": [336, 353, 354, 355, 374, 375, 379], "minut": [2, 5, 6, 7, 441], "mirror": [18, 332, 404, 446], "mirroredconn": 404, "mirroredcoord": 404, "mislabel": [72, 422], "mitig": 455, "mix": [8, 9, 10, 22, 28, 62, 63, 64, 101, 102, 103, 104, 105, 132, 133, 202, 420, 433, 443, 444, 448], "mixed_el": [28, 101, 102, 103, 104, 105, 184, 221], "mixed_top": 202, "mixed_topology1": 6, "mixed_topology2": 6, "mixed_topology3": 6, "mixed_topology4": 6, "mm": 2, "mnew": [221, 222, 223, 224, 226, 227, 229, 230, 307], "mode": [22, 60, 100, 103, 139, 158, 187, 302, 305, 332, 339, 361, 414, 417, 428, 439, 440], "model": [18, 305, 307, 308, 432, 441, 443, 446], "modif": 440, "modifi": [30, 44, 60, 226, 271, 305, 432, 434, 435, 440, 452, 454], "modul": [1, 6, 14, 16, 20, 93, 430, 431, 434, 438, 440], "mohebi": 443, "moller97": [298, 299, 300, 301, 441], "mollert05": [287, 288, 290, 441, 457], "more": [1, 2, 5, 31, 32, 34, 35, 39, 40, 50, 51, 52, 73, 93, 94, 95, 101, 118, 164, 165, 166, 167, 177, 178, 179, 180, 181, 182, 185, 221, 229, 287, 288, 290, 302, 305, 332, 394, 401, 432, 434, 436, 438, 442, 443, 447, 454, 458], "morgan": [441, 443], "morlei": [281, 282, 291, 292, 441], "morph": [18, 446], "morpholog": 305, "moscow": 441, "most": [2, 72, 136, 305, 307, 308, 324, 401, 414, 415, 420, 422, 428, 431, 441, 442, 443, 447, 448, 449, 450, 456], "mostvis": 401, "mostvisible_it": 401, "mostvisible_loop": 401, "motion": [179, 223], "motiv": 455, "movabl": 185, "move": [2, 179, 184, 185, 186, 223, 224, 226, 227, 230, 304, 305, 306, 307, 308, 332, 414, 440, 450, 454, 455], "movement": [179, 223, 224, 226, 227, 455], "mpr19": [169, 441], "mse": [319, 331], "mt": [98, 178, 184], "much": [2, 287, 288, 290, 432, 457], "multi": [239, 413, 435, 441], "multichannel": [182, 183, 435], "multidimension": 324, "multipl": [6, 44, 62, 63, 64, 65, 74, 109, 132, 229, 266, 287, 288, 290, 413, 431, 436, 440, 448], "must": [29, 44, 60, 62, 63, 64, 73, 101, 104, 105, 117, 118, 139, 144, 155, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 221, 222, 224, 225, 230, 234, 290, 302, 303, 305, 324, 336, 353, 354, 355, 374, 375, 379, 394, 435, 439, 448, 450, 457], "mvbb": [302, 303], "mx3": [168, 173, 175], "mx4": 169, "my": 1, "mymesh": [1, 2, 5, 6, 7, 10, 432, 433, 434, 436, 437, 438, 440, 442, 447, 450, 456], "mymesh2meshio": [84, 438], "m\u00f6ller": [266, 287, 288, 290, 297, 298, 299, 300, 301, 457], "n": [7, 11, 62, 63, 64, 65, 117, 132, 144, 167, 168, 170, 173, 174, 176, 218, 219, 220, 224, 231, 238, 239, 259, 261, 262, 266, 270, 277, 278, 279, 280, 282, 285, 288, 290, 294, 295, 300, 301, 303, 324, 333, 336, 342, 343, 354, 355, 358, 363, 364, 374, 375, 391, 418, 441, 449, 450, 455, 457], "n0": 132, "n1": [132, 134], "n2": [132, 134], "n3": 134, "n4": 134, "n5": 134, "n_i": [455, 458], "name": [17, 18, 22, 29, 62, 63, 64, 65, 83, 88, 183, 202, 214, 428, 429, 430, 435, 442, 445, 446], "nan": [2, 51, 285, 294, 295], "nasti": [18, 446], "nation": 443, "natur": [155, 337, 447, 450, 456], "ndarari": [325, 326, 327, 328], "ndarrai": [17, 73, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 115, 116, 117, 118, 120, 122, 123, 126, 128, 130, 135, 138, 139, 140, 143, 144, 146, 147, 148, 149, 150, 153, 154, 155, 158, 160, 161, 168, 169, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 190, 191, 196, 197, 200, 203, 204, 206, 210, 215, 217, 223, 224, 240, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 270, 275, 278, 280, 282, 284, 285, 286, 287, 288, 289, 293, 294, 295, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 320, 322, 324, 325, 326, 327, 328, 332, 333, 334, 335, 338, 339, 341, 343, 344, 345, 350, 360, 361, 363, 365, 366, 371, 378, 388, 390, 394, 396, 400, 402, 405, 406, 408, 409, 428, 445], "ndimag": [73, 118, 120, 158, 177, 178, 179, 180, 181, 182, 302, 305, 332], "necessari": [29, 158, 302, 337, 450, 457, 458], "necessarili": [126, 135], "need": [93, 136, 225, 287, 288, 290, 332, 413, 421, 432, 437, 439, 440, 447, 448, 450, 452, 456], "neg": [28, 120, 173, 177, 178, 180, 181, 184, 186, 187, 191, 192, 193, 197, 198, 199, 215, 216, 217, 218, 219, 220, 234, 449, 450], "neglect": [108, 112, 122, 130, 140, 147, 149], "neighbor": [5, 35, 50, 57, 116, 126, 135, 153, 155, 160, 161, 223, 225, 226, 227, 252, 254, 414, 415, 417, 418, 419, 420, 431, 450, 452, 455, 458], "neighborhood": [155, 221, 418, 419, 449], "neilesh": 443, "neither": [238, 239], "nelder": 324, "nelem": [72, 221, 229, 230, 422], "nesper": [214, 441], "net": 458, "network": [29, 458], "never": 452, "nevertheless": 6, "new": [7, 62, 63, 64, 65, 99, 100, 101, 102, 103, 104, 105, 107, 115, 116, 117, 123, 126, 128, 129, 135, 138, 143, 144, 146, 150, 153, 221, 222, 223, 224, 226, 227, 230, 324, 394, 396, 398, 407, 408, 432, 440, 448, 450, 454], "new_imag": 332, "new_img": 305, "new_point": [304, 308, 333], "newconn": [99, 100, 102, 103, 107, 108, 117, 119, 123, 128, 130, 131, 144, 146, 147, 150, 394, 396, 407], "newcoord": [99, 100, 102, 103, 116, 117, 119, 126, 131, 144, 153, 396, 407], "newedg": 62, "newfac": 64, "newid": 407, "newli": 450, "newuoa": 324, "newvalu": [104, 105], "next": [117, 144, 337, 450, 456], "nface": 424, "ni": 256, "nii": 441, "nine": 162, "nj": 256, "nlayer": [29, 399], "nme": 441, "nnode": [43, 397], "nodal": [6, 28, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 140, 141, 142, 143, 145, 146, 147, 149, 150, 151, 152, 153, 155, 160, 161, 171, 194, 195, 214, 225, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 260, 263, 338, 360, 392, 393, 395, 396, 397, 398, 399, 401, 403, 404, 406, 407, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 441], "node": [2, 5, 14, 22, 24, 25, 29, 30, 33, 34, 38, 41, 43, 45, 49, 50, 51, 52, 55, 56, 57, 58, 60, 62, 63, 64, 65, 72, 73, 74, 78, 84, 85, 86, 93, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 160, 161, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 179, 181, 185, 187, 194, 195, 201, 221, 222, 223, 224, 225, 226, 227, 230, 259, 261, 262, 264, 271, 274, 277, 279, 280, 283, 286, 289, 295, 296, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 383, 384, 386, 387, 389, 390, 394, 396, 397, 398, 399, 401, 403, 406, 407, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 428, 431, 433, 440, 442, 448, 449, 450, 452, 455, 456], "nodeconn": [2, 22, 23, 55, 59, 63, 67, 72, 86, 98, 99, 101, 102, 104, 105, 106, 107, 108, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 153, 168, 169, 171, 173, 175, 177, 178, 180, 181, 184, 186, 187, 225, 231, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 391, 393, 394, 395, 396, 399, 401, 404, 407, 411, 414, 415, 416, 417, 418, 419, 420, 421, 422, 431, 440, 442], "nodeconn1": 403, "nodeconn2": 403, "nodecoord": [2, 22, 23, 59, 65, 80, 86, 98, 99, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 158, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 184, 186, 187, 221, 225, 231, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 268, 271, 274, 277, 280, 286, 289, 295, 307, 336, 379, 391, 392, 393, 394, 395, 396, 397, 399, 401, 404, 406, 407, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 431, 432, 440, 442], "nodecoords1": [264, 296, 403, 410, 413], "nodecoords2": [264, 296, 403, 410, 413], "nodedata": [22, 28, 60, 73, 118, 177, 181, 187, 221, 428, 432], "nodeneighbor": [2, 155, 160, 161, 225, 415, 420, 431, 439, 440], "nodeneighborhood": [155, 418, 419], "nodenorm": [2, 136, 155, 160, 161, 401], "nodenormalsmethod": 51, "noderegion": 415, "nodeset": [22, 65], "nodespringsmooth": [179, 185, 458], "nodev": [195, 201, 403], "nodevals1": [403, 413], "nodevals2": [403, 413], "nodevalu": [99, 101, 102, 104, 105], "non": [18, 51, 72, 86, 96, 97, 133, 155, 224, 225, 230, 236, 237, 240, 319, 321, 401, 422, 431, 446, 448, 449, 450, 452], "none": [2, 22, 27, 28, 29, 44, 60, 62, 63, 64, 65, 71, 73, 75, 79, 83, 98, 101, 118, 119, 120, 136, 139, 158, 164, 165, 167, 171, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 194, 221, 222, 223, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 238, 239, 241, 242, 243, 244, 259, 260, 266, 271, 274, 277, 286, 289, 295, 297, 302, 303, 304, 305, 306, 307, 308, 319, 324, 329, 330, 331, 332, 336, 337, 340, 343, 362, 377, 379, 380, 386, 400, 404, 406, 407, 410, 413, 414, 415, 417, 421, 423, 424, 427, 428], "nonetyp": [27, 29, 71, 83, 120, 185, 224, 229, 277, 286, 289, 302, 303, 305, 306, 307, 308, 377, 421, 428], "nor": [18, 238, 239, 446], "nord": 443, "norm": [238, 287], "normal": [17, 27, 36, 51, 52, 136, 155, 160, 161, 170, 178, 179, 180, 181, 185, 205, 218, 219, 220, 240, 252, 254, 256, 266, 267, 268, 269, 270, 271, 274, 277, 297, 343, 355, 392, 401, 406, 434, 440, 441, 445, 449, 452, 455, 457], "notabl": 443, "note": [44, 62, 63, 64, 71, 105, 116, 126, 131, 135, 136, 153, 164, 165, 166, 167, 191, 192, 193, 231, 238, 242, 307, 308, 324, 398, 410, 413, 417, 432, 441, 450, 452], "notebook": [2, 5, 6, 7], "noth": 434, "notic": [18, 155, 446], "notion": 449, "notrim": 187, "noura": 441, "novel": 441, "now": 449, "np": [2, 6, 7, 17, 43, 51, 72, 73, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 115, 116, 117, 118, 120, 122, 123, 126, 128, 130, 135, 138, 139, 140, 143, 144, 146, 147, 148, 149, 150, 153, 154, 155, 158, 160, 161, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 190, 191, 196, 197, 200, 203, 204, 206, 210, 215, 217, 221, 223, 224, 235, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 269, 270, 274, 275, 276, 277, 278, 280, 282, 284, 285, 286, 287, 288, 289, 290, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 320, 322, 324, 325, 326, 327, 328, 332, 333, 334, 335, 338, 339, 341, 343, 344, 345, 350, 353, 354, 355, 360, 361, 363, 365, 366, 371, 374, 375, 378, 388, 390, 394, 396, 397, 400, 402, 405, 406, 408, 409, 410, 413, 422, 428, 445], "npt": [410, 413], "nring": [70, 418], "numba": [155, 437], "numbaperformancewarn": 2, "number": [22, 29, 38, 45, 46, 47, 48, 49, 108, 112, 117, 122, 130, 132, 133, 140, 144, 147, 149, 175, 179, 185, 221, 223, 224, 226, 227, 229, 230, 231, 232, 233, 234, 238, 239, 242, 243, 253, 307, 308, 324, 350, 391, 394, 399, 409, 410, 413, 418, 428, 431, 433, 434, 437, 440, 450, 457, 458], "numer": [18, 225, 441, 446], "numpi": [1, 2, 6, 7, 99, 100, 102, 103, 109, 111, 118, 182, 183, 184, 186, 187, 190, 196, 200, 203, 206, 287, 305, 306, 307, 326, 337, 400, 405, 428, 435, 436, 437], "nvidia": 1, "nx2": 22, "nx3": [22, 155, 160, 161, 169, 224, 280, 286, 289, 345, 357, 366, 379, 388, 402], "nx3x3": 391, "nx4": 406, "o": [437, 441, 457], "o_x": 457, "ob01": [179, 185, 441], "obj": 438, "object": [18, 22, 23, 59, 71, 72, 73, 76, 78, 81, 84, 85, 95, 96, 98, 158, 170, 174, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 201, 222, 223, 224, 226, 227, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 302, 303, 324, 337, 380, 412, 422, 428, 432, 436, 438, 439, 440, 441, 443, 446, 449], "obp03": [227, 441, 455], "observ": 6, "obtain": [17, 18, 62, 64, 98, 100, 102, 103, 109, 110, 111, 136, 155, 160, 161, 179, 185, 191, 192, 193, 197, 198, 199, 215, 216, 217, 391, 417, 431, 432, 435, 436, 442, 445, 446, 448, 449, 457], "occur": [139, 158, 184, 353, 354, 355, 374, 375, 457], "oct": 443, "octre": [98, 139, 274, 277, 283, 286, 289, 290, 295, 336, 337, 338, 339, 347, 348, 349, 350, 353, 354, 355, 357, 358, 360, 368, 370, 375, 377, 378, 379, 382, 383, 386, 406, 410, 413], "octree2du": 98, "octree_ep": 98, "octree_strategi": 98, "octreenod": [139, 274, 277, 283, 286, 289, 295, 336, 337, 338, 339, 357, 377, 378, 379, 386, 406, 410, 413, 456], "odd": 457, "off": [221, 324, 452], "offer": [324, 432, 436, 440], "offset": [210, 211, 241], "offset_v": 204, "offsetf": 204, "offsetv": 204, "often": [221, 230, 432, 448, 458], "ohtak": [185, 441], "oi": 441, "old": [396, 407], "om": 435, "omit": 437, "onc": [394, 429, 439, 450], "one": [23, 27, 44, 59, 69, 109, 111, 116, 126, 132, 133, 135, 153, 179, 223, 225, 226, 227, 266, 284, 285, 286, 287, 288, 289, 290, 293, 294, 307, 308, 336, 357, 358, 379, 410, 413, 417, 431, 440, 441, 443, 448, 449, 450, 456, 457], "ones": 221, "ones_lik": 2, "ongo": 443, "onli": [27, 62, 64, 96, 101, 109, 111, 120, 132, 133, 158, 173, 179, 182, 185, 221, 223, 224, 225, 226, 227, 230, 234, 238, 242, 243, 271, 274, 277, 281, 282, 283, 286, 287, 288, 289, 290, 302, 303, 307, 308, 336, 338, 339, 357, 358, 360, 361, 379, 394, 395, 399, 410, 413, 417, 421, 428, 429, 431, 435, 437, 449, 450, 452, 455, 456, 457], "onlin": [17, 18, 445, 446], "onlinelibrari": 441, "onto": [2, 406, 450, 455, 457], "opac": 428, "opaqu": 428, "open": [234, 442, 449], "opencv": [435, 437], "oper": [18, 22, 23, 59, 63, 93, 96, 182, 191, 192, 193, 214, 221, 229, 396, 408, 431, 432, 434, 436, 440, 443, 446, 447, 448], "opposit": [28, 177, 178, 180, 181, 184, 186, 187, 259, 287, 436, 448, 449, 450], "optim": [6, 29, 136, 179, 185, 245, 305, 307, 308, 441, 443], "optimizer_arg": [305, 307, 308, 324], "optimizetet": 29, "option": [1, 17, 18, 22, 27, 28, 29, 30, 44, 52, 60, 62, 63, 64, 65, 71, 73, 74, 79, 83, 86, 87, 88, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 116, 118, 120, 126, 132, 133, 135, 136, 138, 139, 153, 155, 158, 164, 165, 166, 167, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 202, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 259, 260, 264, 266, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 310, 319, 324, 325, 326, 327, 328, 331, 332, 336, 337, 338, 339, 343, 344, 345, 346, 352, 353, 354, 355, 357, 358, 359, 360, 361, 365, 366, 367, 373, 374, 375, 378, 379, 381, 387, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 413, 414, 415, 417, 420, 421, 423, 428, 429, 433, 434, 445, 446], "optionalperpendicular": 242, "order": [44, 73, 101, 114, 117, 118, 119, 125, 131, 136, 142, 144, 148, 152, 172, 177, 178, 180, 181, 182, 191, 192, 193, 229, 302, 305, 310, 327, 332, 350, 394, 396, 408, 409, 433, 435, 441, 442, 448, 449, 450, 452, 457], "org": [29, 96, 175, 266, 281, 282, 287, 288, 290, 291, 292, 297, 298, 299, 300, 301, 441], "organ": [93, 430], "orient": [116, 126, 135, 153, 155, 170, 213, 240, 284, 302, 303, 428, 431, 434, 449, 450], "orientsurf": 170, "origin": [1, 30, 44, 69, 99, 100, 104, 105, 109, 111, 117, 134, 135, 138, 144, 179, 185, 221, 230, 302, 303, 305, 309, 310, 394, 396, 408, 409, 440, 443, 447, 455, 457], "ortho": 252, "orthogon": [71, 90, 246, 247, 251], "orthogonalqu": [71, 90], "orthopaed": 1, "orthoq": 251, "other": [18, 22, 23, 59, 69, 83, 101, 105, 126, 136, 155, 179, 185, 210, 211, 214, 234, 255, 284, 285, 293, 294, 295, 309, 310, 349, 352, 370, 373, 383, 394, 405, 430, 432, 436, 439, 440, 443, 446, 449, 450, 452, 457], "otherwis": [28, 29, 30, 44, 60, 100, 101, 102, 103, 104, 105, 221, 226, 230, 234, 235, 236, 237, 240, 241, 266, 267, 269, 270, 271, 274, 277, 281, 282, 287, 291, 292, 297, 298, 300, 301, 339, 344, 345, 361, 365, 366, 435, 450, 457], "oup": 441, "our": [18, 446], "out": [2, 60, 87, 342, 364, 400, 405, 408, 409], "outer": [442, 452], "outofprocess": 439, "output": [28, 30, 44, 87, 96, 97, 101, 139, 191, 192, 193, 197, 198, 199, 215, 216, 217, 400, 408, 409], "outsid": [20, 60, 114, 120, 125, 142, 152, 271, 274, 277, 392, 436, 448, 449, 457], "outward": [170, 449, 450], "over": [221, 235, 452], "overal": 450, "overdetermin": 449, "overhead": [72, 155, 422, 439], "overlai": [305, 306], "overlap": [266, 297, 320, 322, 398, 441], "overrid": [183, 225], "overridden": [178, 184], "overview": 443, "p": [6, 206, 207, 208, 214, 249, 281, 282, 291, 292, 450, 457], "p1": 457, "p_": 450, "p_1": 457, "p_2": 457, "p_i": 450, "p_x": 450, "p_y": 450, "packag": [438, 440, 443], "pad": [100, 103, 158, 295, 400, 405], "page": 441, "pair": [256, 285, 294, 295, 300, 301, 452], "pairwis": [278, 290, 391], "pan": 428, "panozzo": 441, "paper": [450, 457], "papli": [305, 306], "paraboloid": 450, "parallel": [44, 271], "parallelepip": 457, "param": 395, "paramet": [6, 17, 18, 22, 27, 28, 29, 30, 44, 60, 62, 63, 64, 65, 71, 73, 74, 76, 79, 81, 83, 88, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 319, 320, 321, 322, 324, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 355, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 373, 374, 375, 377, 378, 379, 381, 382, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 428, 429, 445, 446, 449, 457], "parametr": 457, "parent": [116, 126, 135, 153, 340, 362, 380, 456], "parentid": [104, 105], "pariti": 457, "parsecolor": 428, "part": [62, 64, 132, 133, 324, 450], "partial": [29, 338, 360, 449], "particular": [18, 93, 223, 347, 368, 382, 443, 446, 449], "particularli": [6, 324, 432, 443], "partit": [448, 456], "pasko": 441, "pass": [60, 87, 184, 186, 187, 229, 302, 305, 394, 435, 456], "past": 414, "pasta": [8, 9, 10, 444], "path": [81, 177, 178, 179, 180, 181, 182, 183, 437, 450], "paul": 441, "pdf": [96, 441], "pdfo": 324, "peel": 399, "peelconn": 399, "peelcoord": 399, "peeledconn": 399, "peeledcoord": 399, "pellerin": 441, "penn": 7, "peopl": [18, 446], "per": [73, 118, 177, 178, 180, 181, 182, 431, 449], "perform": [1, 2, 5, 29, 71, 73, 99, 100, 101, 102, 103, 104, 105, 155, 179, 182, 185, 186, 187, 223, 224, 226, 227, 229, 305, 307, 310, 324, 327, 332, 401, 428, 431, 432, 452, 456, 457], "pergamon": 441, "perhap": 456, "period": [6, 190, 196, 200, 203, 206, 214, 434], "permiss": [18, 446], "perpendicular": [232, 233, 234], "peter": 441, "ph": 443, "phi_resolut": [242, 243], "physic": 441, "physik": 441, "pi": [7, 235, 241, 305, 307, 449], "pillow": 437, "pip": [175, 437], "pixel": [100, 103, 177, 305, 325, 326, 334, 335, 361, 428, 442], "pixelconn": 361, "pixelcoord": 361, "place": [30, 44, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 115, 123, 128, 143, 146, 150, 178, 179, 180, 184, 185, 186, 223, 224, 226, 227, 230, 302, 303, 305, 338, 360, 396, 434, 448, 450], "placement": [2, 179, 185], "plan": 16, "planar": [72, 422, 441], "plane": [27, 44, 148, 179, 185, 218, 219, 220, 227, 232, 233, 234, 267, 269, 270, 271, 404, 428, 440, 441, 442, 449, 455], "plant": 441, "pleas": [7, 18, 446], "plot": [2, 5, 6, 7, 18, 87, 95, 98, 178, 180, 181, 184, 186, 187, 188, 189, 190, 196, 200, 203, 206, 209, 213, 231, 232, 234, 235, 236, 237, 238, 242, 243, 397, 428, 432, 440, 446], "plt": [2, 120, 305, 432], "pm": 449, "pmatrix": 450, "png": [183, 435], "point": [6, 27, 44, 92, 93, 108, 135, 138, 155, 158, 162, 168, 169, 170, 171, 172, 174, 175, 176, 179, 184, 186, 194, 195, 201, 205, 232, 233, 234, 238, 239, 240, 241, 242, 243, 264, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 319, 321, 324, 325, 326, 327, 328, 331, 332, 333, 342, 343, 344, 345, 354, 355, 357, 358, 363, 364, 365, 366, 374, 375, 377, 388, 389, 390, 391, 402, 406, 410, 413, 428, 432, 434, 436, 440, 441, 442, 448, 449, 455], "point_method": 305, "point_siz": 428, "pointinboundari": 457, "pointinsurf": 457, "points1": [304, 308, 319, 321, 331], "points2": [304, 308, 319, 321, 331], "points2octre": 456, "pointset": 85, "pole": 243, "polygon": [121, 132, 136, 441, 442, 450], "polyhedr": 441, "polyhedra": 442, "polyhedron": 452, "polytop": 441, "poor": 432, "popular": [450, 456], "pose": [164, 165, 166, 167], "posit": [28, 99, 100, 101, 102, 103, 104, 105, 120, 148, 177, 178, 179, 180, 181, 184, 185, 186, 187, 223, 224, 226, 227, 410, 449, 450, 455, 457], "possibl": [72, 184, 186, 229, 305, 307, 308, 422, 448, 452], "possibli": 1, "potenti": [72, 398, 422, 452], "powel": 324, "power": 443, "pp": 225, "practic": [113, 114, 121, 124, 125, 127, 141, 142, 145, 151, 152, 450], "pre": [89, 319, 331, 434, 450], "preced": [83, 238, 239], "precis": [72, 422], "precomput": [274, 277, 406, 410, 413], "predefin": [324, 434], "predominantli": [232, 233], "prefer": 429, "prefix": [183, 439], "prescrib": [204, 224], "presenc": 324, "present": [120, 132, 133, 174, 176, 221, 421, 422, 428], "preserv": [221, 229, 230, 303, 455], "prevent": [38, 224], "previous": [52, 223, 226, 227, 286, 289, 450], "primal": 441, "primari": [22, 116, 135, 153], "primarili": [227, 256, 431, 432, 433, 442], "primit": [6, 7, 99, 102, 104, 116, 120, 214, 397, 421, 430, 432, 434, 439, 440], "princip": [2, 70, 93, 154, 155, 156, 157, 158, 159, 160, 161, 163, 302, 303, 441], "print": [22, 71, 182, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 287, 305, 307, 308, 410, 413], "priorit": 221, "problem": [164, 165, 166, 167, 324, 441], "problemat": 432, "proce": 457, "procedur": [29, 441, 450], "proceed": 441, "process": [101, 107, 115, 123, 128, 143, 146, 150, 221, 432, 441, 450, 454, 456], "produc": [28, 62, 64, 167, 234, 242, 413, 432, 435, 440], "product": [18, 155, 446, 457], "progress": [221, 229, 230, 305, 307, 308, 447], "project": [1, 175, 406, 410, 413, 443, 450, 455, 457], "proper": [136, 435], "properli": [139, 452, 456], "properti": [23, 24, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 61, 63, 66, 67, 77, 80, 83, 116, 135, 153, 439, 449], "propos": [337, 338, 360, 448], "protanomali": 428, "provid": [1, 14, 22, 28, 60, 62, 63, 64, 65, 83, 101, 104, 119, 120, 136, 139, 154, 158, 160, 161, 171, 173, 176, 179, 186, 221, 224, 225, 226, 230, 235, 236, 238, 259, 260, 266, 277, 297, 303, 332, 403, 406, 410, 413, 414, 415, 421, 438, 443, 447, 450], "pt": [27, 205, 240, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 377, 389, 390, 391], "pt1": 238, "pt2": 238, "public": 441, "publish": [18, 443, 446, 450], "pull": 332, "pure": [96, 97, 113, 114, 117, 124, 125, 127, 141, 142, 144, 145, 151, 152, 222, 232, 233, 234, 235, 241, 242, 261, 262, 391, 443], "purpos": [18, 255, 437, 442, 446, 447], "push": 332, "pv": 95, "pv_mesh": 95, "pvmesh": 85, "py": [2, 4, 5, 6, 7, 9, 439, 444], "pydicom": [435, 437], "pyenv": 439, "pyglet": 429, "pymesh": 443, "pypi": 175, "pyplot": [2, 120, 305], "pyr": 433, "pyr13": 433, "pyramid": [72, 122, 123, 124, 125, 126, 132, 133, 149, 241, 246, 253, 338, 422, 423, 433], "pyramidconn": [126, 423], "pyramidcoord": [126, 423], "pyramidheight": 423, "python": [2, 5, 6, 7, 175, 435, 439, 452], "pyvista": [85, 95, 443], "q": 249, "qef": [337, 456], "qhull": 16, "qingnan": 441, "quad": [126, 129, 132, 133, 184, 234, 237, 240, 241, 242, 243, 258, 336, 360, 394, 420, 421, 433, 442], "quad8": 433, "quadfit": 449, "quadnod": 360, "quadrat": [104, 119, 131, 161, 186, 324, 337, 433, 456], "quadric": [221, 441], "quadrilater": [28, 72, 101, 102, 103, 104, 105, 114, 119, 125, 127, 128, 129, 130, 132, 133, 152, 232, 233, 235, 237, 240, 243, 258, 360, 422, 433, 448], "quadtre": [336, 358, 360, 361, 369, 371, 374], "quadtreenod": [336, 361], "quak": 441, "qual": 71, "qualiti": [2, 5, 21, 71, 116, 135, 153, 221, 226, 229, 302, 305, 432, 434, 437, 441, 443, 449, 452, 454, 455], "qualityfunc": 226, "qualitymetr": 228, "qualitys": 230, "qualitythreshold": 222, "queri": 452, "question": 1, "queue": 450, "quick": 440, "quit": 432, "r": [2, 179, 185, 191, 192, 193, 197, 198, 199, 213, 215, 216, 217, 243, 259, 281, 282, 291, 292, 305, 307, 309, 310, 432, 436, 441, 455, 457], "r1": 234, "r2": 234, "r_": 310, "r_0": [310, 457], "r_1": [310, 457], "r_2": [310, 457], "r_c": [309, 310], "r_x": 457, "r_y": 457, "r_z": 457, "radial": [232, 233, 234, 242, 243], "radial_resolut": [232, 233, 234, 242, 243], "radian": [71, 235, 241, 309, 310, 325, 326, 327, 328], "radii": 234, "radiu": [2, 189, 209, 213, 232, 234, 242, 243, 419, 436, 450], "rag": [400, 405, 408, 409, 431], "rai": [93, 432, 441, 456], "rainald": 441, "rais": [86, 437], "rand": [274, 277], "random": [72, 271, 274, 277, 307, 308, 410, 413, 422], "randomli": [307, 308, 450], "rang": [17, 18, 183, 184, 186, 246, 247, 251, 252, 253, 257, 258, 260, 263, 302, 305, 306, 307, 308, 320, 322, 428, 441, 445, 446, 449], "rare": [72, 422], "raster": 441, "rather": [27, 88, 113, 114, 116, 121, 124, 125, 126, 127, 141, 142, 145, 151, 152, 153, 177, 179, 181, 185, 338, 349, 360, 370, 383, 431, 432, 443, 448, 450, 452, 456], "ratio": [71, 245, 249], "rayboxesintersect": 457, "rayboxintersect": 457, "raysegmentintersect": 457, "raysegmentsintersect": 457, "rayssurfintersect": 290, "raystrianglesintersect": [287, 288, 457], "raysurfintersect": 93, "raytriangleintersect": [288, 290, 457], "raytrianglesintersect": [287, 290, 457], "re": [60, 396, 408, 409, 434, 449, 450], "reach": [452, 456, 457], "reachabl": [349, 370, 383], "reactiv": 324, "read": [435, 438], "readabl": [81, 401, 443], "reader": 435, "real": [190, 196, 200, 203, 206], "reason": [6, 452], "recalcul": [225, 440, 452], "receiv": 51, "recogniz": 449, "recommed": 324, "recommend": [221, 230], "recomput": [62, 64], "reconnect": [396, 454], "reconstruct": [1, 18, 434, 446], "record": 441, "recov": [408, 409], "rectangular": [155, 236, 237, 295, 405, 431, 442], "rectilinear": [99, 102, 148], "recurs": [346, 367, 381], "red": [5, 431], "redistribut": [2, 18, 179, 185, 224, 446], "reduc": [109, 111, 179, 185, 221, 226, 302, 305, 307, 308, 332, 394, 448, 455], "redund": [62, 64, 452], "ref": [313, 314], "refer": [30, 36, 44, 63, 69, 86, 104, 105, 117, 144, 179, 221, 230, 309, 310, 311, 312, 313, 314, 325, 326, 327, 328, 338, 347, 368, 382, 428, 440, 443, 447, 449, 451], "referenc": [38, 62, 64, 431, 440], "refin": [336, 337, 379, 454, 456], "reflect": 44, "regardless": [184, 349, 370, 383, 432, 449, 457], "region": [102, 105, 221, 229, 230, 414, 415, 456], "regist": 1, "registr": [1, 305, 307, 324], "regulargridinterpol": 179, "rel": [155, 184, 186, 349, 370, 383, 389, 390, 391, 410], "relabel": 407, "relat": [16, 93, 109, 111], "relax": 179, "relev": [234, 242, 243, 417, 433, 450, 452], "reli": [432, 449, 456, 457], "relianc": 443, "religi": [18, 446], "remacl": 441, "remain": [6, 108, 112, 122, 130, 140, 147, 149, 396], "rememb": [18, 446], "remesh": 441, "remov": [30, 60, 98, 100, 102, 103, 131, 133, 177, 178, 180, 181, 184, 185, 186, 187, 221, 230, 394, 396, 399, 400, 450, 452, 454], "render": [18, 446], "renumb": [131, 221, 396, 403], "reorder": [173, 408, 409], "repeat": [229, 307, 308, 432, 450, 455, 456], "replac": 437, "report": [71, 307, 308], "reposit": [179, 185, 221, 223, 226, 227, 458], "repositori": [18, 437, 446], "repres": [93, 118, 239, 267, 303, 431, 436, 442, 452, 456], "represent": [6, 14, 23, 31, 32, 34, 35, 39, 40, 50, 59, 313, 314, 336, 379, 386, 406, 410, 412, 413, 432, 452, 456], "request": 1, "requir": [17, 18, 104, 186, 305, 306, 324, 408, 417, 432, 437, 439, 445, 446, 449, 452], "res2": 307, "resampl": [73, 118, 177, 178, 180, 181, 182, 302, 305, 332], "research": [1, 18, 443, 446], "reset": [62, 63, 64, 346, 367, 381], "resolut": [73, 118, 120, 302, 305, 432, 441, 456], "resolv": [119, 120, 433, 448], "respect": [100, 234, 243, 448, 449, 454], "rest": [62, 64], "result": [2, 6, 97, 104, 116, 126, 135, 136, 153, 160, 161, 224, 232, 233, 236, 237, 240, 305, 306, 307, 308, 432, 449], "retriangul": 97, "retriev": [377, 378, 387], "return": [5, 17, 18, 27, 28, 30, 44, 69, 71, 72, 73, 75, 76, 78, 79, 81, 84, 85, 87, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 319, 320, 321, 322, 324, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 348, 349, 350, 351, 357, 358, 360, 361, 363, 364, 365, 366, 369, 370, 371, 372, 377, 378, 379, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 428, 429, 432, 435, 436, 440, 445, 446], "return_anchor": [99, 102], "return_count": 109, "return_direct": 155, "return_edgeconn": 132, "return_edgeelem": 132, "return_faceconn": 133, "return_faceelem": 133, "return_fig": [2, 79, 427, 432], "return_gradi": [73, 118], "return_id": [110, 135, 138], "return_idx": [109, 111, 394, 396, 408, 409], "return_imag": 428, "return_intersect": [284, 285, 293, 294], "return_inv": [109, 111, 135, 138, 396, 408, 409], "return_kf": 225, "return_mappingmatrix": 413, "return_matrix": 402, "return_nodedata": [73, 118, 177, 181], "return_nodevalu": [104, 105], "return_octre": [410, 413], "return_parentid": [104, 105], "return_pt": [264, 295, 296], "return_separ": 408, "return_surfelem": 134, "return_transform": [302, 303], "rever": [18, 446], "revers": [396, 408], "revolut": [241, 243], "revolv": [7, 434], "rfboutputcontext": [2, 5, 6, 7], "rgb": [182, 183, 435], "rgba": [183, 428, 435], "rho": 222, "richard": 441, "ridg": [5, 162], "right": [428, 449, 455, 457], "rigid": [305, 307, 308, 326, 327, 328, 334, 335], "rigid2": 305, "rigid2d": 305, "ring": [418, 449], "risk": [179, 185], "rmax": [191, 192, 193, 197, 198, 199], "rmin": [215, 216, 217], "rmsd": 2, "rmsd_k1a_smooth": 2, "rmsd_k1a_spher": 2, "rmsd_k1m_smooth": 2, "rmsd_k1m_sphere": 2, "robust": [21, 281, 282, 291, 292, 441], "romain": 441, "ron": [154, 158, 441], "root": [2, 283, 336, 337, 338, 339, 347, 349, 352, 357, 358, 359, 360, 361, 368, 370, 373, 377, 378, 379, 382, 383, 386, 387, 437, 456], "rotat": [235, 241, 243, 305, 307, 308, 309, 310, 325, 326, 328, 334, 335, 402, 428, 448], "rotation2d": 305, "rotation_mod": [310, 317, 325, 327, 329, 330], "rotation_ord": [310, 317, 325, 327, 329, 330], "round": [302, 303], "row": [22, 396, 408, 409, 410, 431], "rrner": 441, "rule": [440, 457], "run": [2, 5, 6, 7, 30, 60, 177, 178, 180, 181, 184, 186, 187, 231, 234, 235, 236, 237, 238, 240, 241, 242, 243, 437, 439], "runner": 2, "runtimewarn": 2, "russia": 441, "rut": 162, "s0": [311, 312], "s003660200006": [29, 441], "s00371": 441, "s0925": 441, "s1": [221, 285, 293, 294, 311, 312], "s10237": 441, "s2": [221, 285, 293, 294, 312], "s_0": [311, 312], "s_1": [311, 312], "s_2": 312, "saddl": [162, 449], "safest": [62, 63, 64], "sale": [18, 446], "same": [22, 28, 30, 44, 55, 83, 101, 117, 126, 144, 153, 185, 223, 226, 227, 271, 306, 349, 370, 383, 394, 396, 430, 431, 440, 448, 450, 452, 455, 456, 457], "sampl": [72, 98, 154, 241, 242, 324, 410, 413, 422, 435, 441, 456], "satisfi": 436, "save": 183, "sc": 221, "scaffold": [441, 443], "scalar": [2, 22, 28, 60, 79, 98, 177, 178, 180, 181, 184, 186, 187, 190, 191, 192, 196, 197, 198, 200, 203, 204, 206, 210, 211, 215, 216, 217, 221, 230, 234, 235, 241, 242, 243, 305, 306, 307, 308, 397, 413, 424, 425, 428, 436, 440, 457], "scalar_prefer": [60, 428], "scale": [73, 118, 162, 177, 178, 179, 180, 181, 182, 183, 218, 219, 220, 225, 302, 305, 307, 308, 311, 312, 313, 314, 441, 449], "scalefactor": [73, 118, 177, 178, 180, 181, 182, 435], "scaleord": [73, 118, 177, 178, 180, 181, 182], "scan": [17, 18, 305, 443, 445, 446, 449], "scenario": [72, 422], "scf": 229, "schaefer": 441, "schedul": 229, "scheme": [108, 112, 122, 130, 140, 147, 149, 350], "schneider": 441, "schnere": [214, 441], "schoen": 214, "scholarli": [18, 446], "schwald": 441, "schwarz": [6, 190, 206, 214], "scienc": 441, "scipi": [16, 73, 118, 120, 158, 164, 166, 170, 174, 176, 177, 178, 179, 180, 181, 182, 225, 302, 305, 319, 321, 324, 331, 332, 437], "score": [307, 308], "scott": 441, "scratch": [434, 443], "script": [2, 5, 6, 7], "sdf": 120, "se": 441, "search": [93, 324, 349, 370, 377, 378, 383, 456], "second": [2, 5, 6, 7, 74, 97, 117, 119, 131, 144, 179, 191, 197, 215, 223, 230, 238, 256, 264, 265, 285, 293, 294, 295, 296, 298, 299, 305, 306, 319, 321, 331, 389, 390, 391, 432, 441, 452], "section": [189, 234, 242, 243, 408, 447, 457], "see": [2, 15, 29, 31, 32, 34, 35, 39, 40, 50, 51, 52, 73, 74, 79, 87, 98, 104, 105, 106, 109, 111, 118, 119, 131, 158, 164, 165, 166, 167, 177, 178, 179, 180, 181, 182, 184, 185, 202, 214, 221, 229, 286, 287, 288, 289, 290, 302, 303, 305, 307, 308, 324, 420, 428, 431, 433, 434, 436, 438, 439, 440, 448, 449, 450, 451, 452, 455, 456, 457, 458], "seed": [307, 308], "seem": 439, "seemingli": [302, 303], "seen": [6, 18, 446], "segment": [102, 238, 239, 280, 284, 285, 291, 292, 293, 294, 448], "segmentsegmentintersect": 457, "segmentssegmentsintersect": 457, "select": [178, 184, 305, 307, 308, 428, 429, 450], "selesk": 441, "self": [295, 457], "semicolon": 439, "sens": [62, 64], "sensit": [155, 160, 161, 337], "sep": 441, "separ": [182, 221, 230, 408, 415, 440, 448], "sequenti": [223, 226, 227], "seri": [6, 239, 441, 442], "serv": [305, 307, 308, 447], "set": [6, 22, 29, 51, 52, 62, 63, 64, 65, 72, 99, 100, 101, 102, 103, 104, 105, 109, 111, 139, 158, 169, 170, 172, 174, 176, 179, 184, 185, 186, 191, 197, 202, 215, 221, 223, 224, 225, 226, 227, 270, 282, 285, 288, 290, 294, 300, 301, 304, 307, 308, 319, 321, 331, 341, 342, 343, 345, 357, 358, 363, 364, 366, 379, 387, 388, 391, 398, 402, 408, 414, 415, 420, 422, 423, 428, 429, 432, 433, 439, 440, 441, 442, 450, 456], "set_axis_off": 432, "set_titl": [2, 432], "set_xtick": 2, "set_xticklabel": 2, "set_ylabel": 2, "set_ylim": 2, "set_yscal": 2, "seven": 449, "sever": [6, 16, 18, 51, 430, 431, 432, 436, 437, 440, 442, 446, 448, 452, 455, 456], "sh": [313, 314], "sh01": [313, 314], "sh02": 314, "sh10": [313, 314], "sh12": 314, "sh20": 314, "sh21": 314, "sh_": [313, 314], "shade": 428, "shadi": 443, "shape": [8, 9, 10, 62, 63, 64, 65, 70, 117, 144, 162, 163, 164, 165, 166, 167, 170, 185, 221, 223, 231, 239, 259, 261, 262, 266, 270, 271, 272, 273, 274, 277, 278, 279, 280, 282, 283, 284, 285, 286, 288, 289, 290, 293, 294, 300, 301, 302, 303, 304, 305, 306, 307, 308, 320, 322, 325, 327, 328, 333, 334, 335, 336, 342, 343, 354, 355, 358, 363, 364, 374, 375, 391, 427, 432, 434, 441, 442, 444, 450], "shapeindex": [162, 449], "share": [109, 110, 111, 132, 298, 299, 300, 301, 417, 431, 452, 454], "sharp": [432, 441], "she96": [441, 443], "shear": [305, 307, 308, 313, 314], "shewchuk": [16, 175, 176, 441], "shi": 443, "shift": [7, 241], "shirlei": [281, 282, 291, 292, 441], "shortcom": 448, "shorter": 221, "shortest": [225, 245, 302, 303], "shoud": [73, 118], "should": [18, 22, 29, 62, 63, 64, 72, 73, 98, 100, 116, 118, 126, 129, 153, 154, 155, 174, 176, 177, 178, 180, 181, 184, 185, 186, 187, 192, 198, 211, 216, 254, 258, 263, 266, 270, 271, 275, 276, 278, 279, 280, 281, 282, 286, 287, 288, 289, 290, 291, 292, 300, 301, 305, 307, 308, 337, 391, 401, 406, 410, 413, 422, 428, 430, 436, 443, 446, 450], "shouldn": [271, 274, 277], "show": [2, 79, 427, 428, 431, 432, 447], "show_colorbar": 79, "show_edg": [2, 98, 221, 223, 231, 232, 234, 235, 236, 237, 238, 242, 243, 428, 440], "show_empti": 359, "show_fac": 428, "show_point": 428, "shown": [428, 450, 452], "shrinkag": [179, 185, 455], "si": 441, "si15": [441, 443], "sici": 441, "side": [27, 133, 184, 186, 187, 269, 270, 302, 303, 452, 457], "siggraph": [266, 281, 282, 287, 288, 290, 291, 292, 297, 441], "sigma_max": 222, "sigma_min": 222, "sign": [28, 120, 155, 173, 177, 178, 180, 181, 184, 186, 187, 201, 204, 210, 211, 337, 449, 450, 457], "signific": [2, 18, 93, 177, 181, 439, 446], "significantli": [287, 288, 290, 406, 410, 413], "similar": [305, 306, 307, 308, 320, 322, 441, 448], "similarli": [440, 452, 457], "simpl": [401, 432, 434], "simplex": 104, "simplexmethod": 253, "simpli": [246, 394, 413, 450], "simplif": 441, "simul": [1, 18, 428, 442, 446], "simultan": [179, 185, 223, 226, 227], "sin": [190, 196, 200, 203, 206, 235, 309, 310], "sinc": [1, 17, 18, 432, 440, 445, 446, 448, 456, 458], "singl": [7, 28, 60, 62, 63, 64, 65, 100, 101, 102, 103, 104, 105, 116, 126, 153, 156, 157, 159, 163, 177, 178, 180, 181, 182, 183, 184, 186, 187, 239, 290, 324, 391, 414, 415, 435, 452, 456], "site": [18, 446], "situat": 448, "six": [30, 236, 240], "size": [5, 6, 73, 100, 103, 118, 120, 139, 158, 177, 178, 179, 180, 181, 185, 202, 214, 221, 229, 230, 235, 236, 237, 238, 239, 240, 241, 253, 302, 305, 307, 308, 336, 337, 340, 348, 353, 354, 355, 362, 369, 374, 375, 379, 414, 415, 423, 428, 456], "skelet": 443, "skeleton": 305, "skew": [71, 90, 155, 160, 161, 228, 246, 257, 258, 260, 263], "skr": 441, "slice": [182, 408, 435], "slice0": 182, "slightli": [236, 237, 240, 287, 288, 290], "sliver": 253, "slow": 187, "slower": [401, 432], "small": [18, 97, 164, 165, 166, 167, 185, 264, 270, 271, 274, 275, 276, 277, 278, 280, 284, 285, 286, 287, 288, 289, 290, 293, 294, 295, 296, 298, 299, 300, 301, 408, 437, 446, 457, 458], "smaller": [93, 120, 336, 379, 456], "smart": 226, "smartlaplaciansmooth": [229, 455], "smooth": [2, 179, 185, 222, 223, 224, 226, 227, 229, 428, 441, 454], "smooth_kwarg": 229, "smoother": 229, "smoothheart": 5, "smoothspher": 2, "snap": [184, 186], "snap2surf": [184, 186], "snapgrid2surf": [184, 186], "so": [23, 44, 59, 62, 64, 117, 144, 158, 182, 191, 192, 193, 221, 226, 302, 303, 440, 448, 450, 452, 456, 457], "societi": 441, "sociologi": 441, "softwar": [440, 441, 443], "sohn": 441, "solid": [14, 132, 133, 428, 441], "solid2edg": [106, 109, 113, 121, 124, 127, 137, 141, 145, 151, 420, 431], "solid2fac": [110, 111, 114, 125, 142, 152, 431], "solid2tet": [104, 116, 126, 153], "solv": [225, 449, 450, 457, 458], "some": [18, 22, 23, 59, 72, 83, 155, 164, 165, 166, 167, 173, 234, 242, 243, 324, 338, 349, 360, 370, 383, 421, 422, 432, 433, 443, 446, 447, 449], "sometim": 455, "soo": 441, "sophist": 1, "sor48": [320, 441], "sorensen": [320, 441], "sort": [18, 136, 221, 396, 408, 409, 414, 415, 446, 452], "sourc": [2, 5, 6, 7, 17, 18, 22, 27, 28, 29, 30, 44, 53, 54, 60, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 348, 350, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 369, 371, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 445, 446], "sp": [190, 191, 196, 200, 203, 206, 215], "space": [6, 93, 442, 456], "span": 337, "spars": [225, 339, 361], "spatial": [45, 170, 173, 174, 176, 311, 315, 319, 321, 331, 348, 369, 456], "spec": 441, "specfi": 28, "speci": 441, "special": [442, 450], "specif": [6, 7, 101, 183, 431, 434, 437, 440, 443, 447], "specifi": [27, 29, 30, 44, 71, 72, 83, 98, 100, 103, 106, 118, 120, 132, 133, 158, 174, 176, 177, 178, 180, 181, 183, 184, 186, 187, 189, 194, 195, 204, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 255, 275, 276, 278, 279, 284, 285, 286, 289, 293, 294, 302, 303, 305, 324, 325, 326, 327, 328, 334, 335, 337, 344, 345, 365, 366, 378, 394, 399, 400, 405, 410, 419, 422, 428, 456], "speed": [406, 410, 413], "spent": 432, "sphere": [2, 98, 104, 221, 223, 243, 421, 430, 432, 434, 436, 440, 449], "spheric": [162, 221, 449], "sphinx": [2, 5, 6, 7, 10], "split": [97, 101, 126, 129, 229, 230, 409, 432, 448, 454], "splitfeatur": 70, "spread": 224, "spring": [29, 179, 185, 224, 225, 441, 442, 454], "springer": 441, "spuriou": 449, "sqrt": [2, 259, 449], "squar": [2, 93, 102, 103, 237, 240, 319, 331, 371, 449], "src": 2, "stabl": 95, "stack": [73, 118, 183, 435], "standard": [72, 158, 179, 422, 442, 452, 455], "stanford": [17, 18, 305, 307, 445, 446], "star": 450, "start": [7, 29, 281, 282, 284, 287, 288, 290, 291, 292, 408, 443, 450, 456], "state": [71, 340, 352, 362, 373, 380, 448], "static": 79, "statist": [410, 413], "statu": [18, 182, 446, 452], "steiner": [175, 176], "step": [229, 235, 241, 432, 450], "steve": 441, "stiff": [29, 224, 225, 458], "stiffnessfactor": [29, 225], "still": [21, 95, 120, 243, 302, 305, 455], "stl": [81, 438], "stoddart": 441, "storag": [287, 288, 290, 441], "store": [22, 71, 148, 177, 181, 182, 187, 221, 230, 435, 440, 452], "str": [17, 18, 22, 28, 29, 30, 60, 62, 63, 64, 65, 71, 72, 73, 81, 83, 88, 98, 99, 100, 101, 102, 103, 104, 105, 106, 116, 118, 119, 120, 126, 132, 133, 136, 139, 144, 153, 158, 164, 165, 166, 167, 170, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 202, 214, 221, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 253, 255, 274, 277, 286, 289, 295, 302, 305, 307, 308, 324, 337, 338, 352, 360, 373, 394, 401, 406, 410, 413, 414, 417, 420, 421, 422, 428, 429, 445, 446], "straight": [7, 238, 432, 456], "strategi": [98, 337, 455, 456], "stretch": 449, "strict": 395, "strictli": [29, 174, 176, 224, 236, 237, 240, 258, 263, 286, 289, 458], "string": [28, 60, 83, 182, 221, 229, 230, 413, 421, 428], "strive": 443, "structur": [93, 139, 274, 277, 283, 286, 289, 319, 331, 337, 338, 357, 358, 360, 386, 396, 406, 410, 413, 431, 441, 450, 456], "sub": [117, 144, 255, 442], "subdivid": [29, 117, 144, 353, 354, 355, 357, 358, 374, 375, 456], "subdivis": [93, 98, 144, 337, 353, 354, 355, 374, 375], "subject": 6, "sublist": 408, "submit": 7, "submodul": 430, "subplot": [2, 221, 223, 432], "subsequ": 440, "subseri": 441, "substitut": 1, "subtract": 455, "suffer": 432, "suffici": [104, 105, 120, 270, 271, 274, 277, 287, 288, 290, 298, 299, 300, 301, 457, 458], "suit": 71, "suitabl": [132, 420], "sum": [2, 6, 202, 255], "sum_": [455, 458], "super": 450, "suppli": [336, 379, 417, 443], "support": [1, 22, 28, 81, 96, 132, 136, 183, 410, 413, 433, 438, 439, 443], "suppress": 439, "sure": [18, 439, 446, 450, 456], "surf": [22, 28, 29, 72, 86, 98, 101, 102, 103, 104, 105, 119, 120, 132, 133, 164, 165, 166, 167, 170, 231, 232, 233, 234, 235, 236, 241, 242, 243, 244, 394, 420, 421, 422, 432, 433, 440], "surf1": [96, 97], "surf1intersect": 296, "surf2": [96, 97], "surf2intersect": 296, "surf2octre": 295, "surf2tri": [286, 289], "surf2voxel": 440, "surfac": [1, 2, 6, 14, 18, 20, 22, 23, 24, 25, 28, 29, 36, 38, 42, 51, 52, 55, 56, 57, 58, 72, 93, 96, 97, 98, 101, 102, 103, 104, 105, 110, 120, 132, 133, 134, 136, 137, 138, 139, 154, 155, 158, 160, 161, 178, 179, 184, 185, 186, 187, 188, 189, 190, 196, 200, 202, 203, 204, 206, 209, 210, 211, 213, 214, 221, 223, 224, 226, 227, 231, 232, 233, 234, 235, 236, 241, 242, 243, 244, 254, 264, 271, 274, 277, 286, 289, 295, 296, 337, 379, 392, 394, 397, 406, 410, 412, 413, 417, 422, 423, 428, 432, 433, 434, 436, 441, 443, 446, 448, 455], "surface2edg": 132, "surface2octre": [274, 277, 286, 289, 406, 410, 413, 456], "surfacemesh": [2, 5, 188, 189, 190, 196, 200, 203, 206, 209, 213, 223, 432, 434, 436], "surfacenodeoptim": 2, "surfacereconstruct": 434, "surfconn": [29, 36, 59, 110, 134, 136, 139, 155, 160, 161, 268, 274, 277, 286, 289, 295, 379, 392, 397, 406, 412], "surfconn1": [296, 410, 413], "surfconn2": [296, 410, 413], "surfcoord": 139, "sw05": [98, 337, 338, 360, 441, 456], "sweep": [7, 434], "sydnei": 443, "symbol": [18, 98, 154, 190, 193, 196, 199, 200, 203, 206, 217, 446], "symfun": 212, "symfun1": [193, 199, 217], "symfun2": [193, 199, 217], "symmetr": [191, 192, 193, 319, 321, 331, 432], "sympi": [154, 185, 190, 193, 196, 199, 200, 203, 206, 214, 217, 432, 437], "symposium": 441, "system": [95, 158, 402, 449, 456, 458], "t": [18, 28, 29, 30, 44, 46, 48, 62, 64, 69, 72, 79, 86, 93, 110, 120, 136, 137, 174, 176, 180, 184, 210, 211, 212, 221, 224, 226, 266, 271, 274, 277, 284, 285, 286, 287, 288, 289, 290, 293, 294, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 315, 316, 332, 333, 337, 406, 410, 412, 413, 417, 421, 422, 440, 441, 446, 447, 449, 450, 452, 454, 455, 456, 457, 458], "t0": [304, 305, 307, 308, 315, 316, 325, 326, 334, 335], "t1": [315, 316, 325, 326, 334, 335], "t2": [316, 325, 326, 334], "t_": 457, "t_0": [315, 316], "t_1": [315, 316], "t_2": 316, "t_i": 457, "t_j": 450, "t_p": 450, "tabl": [214, 431, 448, 450], "take": [6, 18, 83, 194, 195, 230, 238, 239, 324, 332, 440, 446, 450], "taken": [60, 132, 133, 230, 448, 456], "tami": 441, "tandfonlin": 441, "tangent": [179, 185, 227, 455], "tangenti": [2, 179, 185, 226, 227], "tangentiallaplaciansmooth": 455, "tangentialsurfac": 226, "target": [221, 226, 228, 229, 230], "task": 443, "tast": [18, 446], "tau93": [5, 441], "taubin": [5, 441], "td": 457, "techniqu": 441, "teeth": 443, "temporarili": 255, "term": [302, 303, 410, 413, 440, 441, 452, 457], "termin": [223, 224, 226, 227, 337, 352, 373, 387, 450, 456], "teseo": 441, "tessel": 441, "test": [93, 136, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 283, 286, 289, 290, 297, 298, 299, 300, 301, 441, 448, 456], "tet": [104, 132, 133, 135, 180, 186, 231, 234, 235, 236, 241, 242, 255, 275, 394, 397, 420, 433, 452], "tet10": 433, "tet10nodeconn": [140, 143], "tet4nodeconn": [140, 143], "tetconn": [116, 126, 135, 153], "tetconn1to14": 153, "tetconn1to2": 126, "tetconn1to24": 116, "tetconn1to3": 153, "tetconn1to36": 153, "tetconn1to4": 126, "tetconn1to5": 116, "tetconn1to6": 116, "tetcoord": 135, "tetcoords1to14": 153, "tetcoords1to2": 126, "tetcoords1to24": 116, "tetcoords1to3": 153, "tetcoords1to36": 153, "tetcoords1to4": 126, "tetcoords1to5": 116, "tetcoords1to6": 116, "tetflip": 229, "tetgen": [441, 443], "tetmesh": [6, 221, 397, 432, 434, 436], "tetnodeconn": 104, "tetnodecoord": 104, "tetopt": 29, "tetradehdr": 140, "tetradehedr": 140, "tetrahdr": 144, "tetrahed": 261, "tetrahedr": [14, 29, 72, 104, 115, 116, 126, 132, 133, 135, 140, 141, 142, 143, 153, 165, 166, 167, 169, 173, 180, 186, 221, 222, 229, 230, 234, 235, 236, 241, 242, 246, 253, 259, 260, 389, 411, 422, 432, 434, 441, 443, 450, 452], "tetrahedra": [28, 98, 101, 104, 105, 116, 119, 126, 135, 144, 153, 173, 178, 184, 186, 234, 241, 242, 259, 260, 432, 441, 442, 452, 455], "tetrahedron": [249, 261, 275, 389, 433, 450], "tetraher": 1, "th": [441, 458], "tha": 450, "thai": [18, 446], "than": [20, 28, 72, 73, 83, 88, 99, 100, 101, 102, 103, 104, 105, 113, 114, 116, 118, 120, 121, 124, 125, 126, 127, 141, 142, 145, 151, 152, 153, 155, 158, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 221, 223, 224, 226, 227, 230, 255, 287, 288, 290, 307, 308, 309, 310, 336, 337, 338, 349, 353, 354, 355, 360, 370, 374, 375, 379, 383, 394, 395, 397, 406, 410, 413, 422, 431, 432, 443, 448, 449, 450, 452, 456], "thei": [6, 18, 46, 48, 60, 62, 64, 93, 100, 103, 106, 120, 136, 179, 185, 277, 396, 408, 409, 414, 430, 431, 440, 442, 446, 448, 449, 452, 456], "them": [18, 93, 97, 234, 434, 437, 440, 446, 450, 456], "theme": [425, 428, 443], "theorema": 449, "theoret": 2, "theori": [1, 15, 441, 443, 450], "therefor": 449, "theta": [309, 328], "theta_resolut": [232, 233, 234, 242, 243], "thi": [1, 5, 6, 7, 14, 16, 18, 20, 22, 23, 27, 29, 30, 43, 45, 55, 59, 60, 62, 63, 64, 65, 71, 72, 84, 86, 93, 98, 102, 104, 105, 116, 119, 120, 126, 131, 135, 136, 137, 148, 153, 155, 158, 160, 161, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 196, 197, 200, 203, 204, 206, 210, 211, 213, 214, 215, 221, 224, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 246, 247, 251, 252, 256, 271, 274, 277, 280, 281, 282, 286, 287, 288, 289, 290, 291, 292, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 319, 321, 324, 331, 332, 336, 337, 338, 346, 352, 353, 354, 355, 360, 367, 373, 374, 375, 379, 381, 391, 394, 398, 413, 421, 422, 428, 430, 432, 436, 439, 440, 443, 446, 447, 448, 449, 450, 452, 456, 457, 458], "thick": [29, 210, 211], "thick_fun": 211, "thicken": 211, "thickenf": [6, 397], "thieri": 441, "thing": [18, 434, 440, 446], "think": [18, 446], "third": [108, 168, 171, 173, 174, 176, 179, 223, 358, 389, 390, 391], "thoroughli": 450, "those": [43, 83, 395, 403, 434, 440, 450, 452, 456, 457], "though": [6, 280, 287, 432], "thousand": 456, "three": [5, 100, 120, 148, 154, 167, 168, 177, 178, 179, 180, 181, 184, 186, 187, 188, 189, 192, 193, 198, 199, 205, 209, 211, 213, 216, 217, 218, 219, 220, 230, 236, 241, 242, 243, 254, 259, 269, 275, 276, 287, 297, 298, 299, 302, 305, 306, 344, 365, 378, 406, 431, 435, 436, 440, 441, 442, 449, 450, 452, 456, 457], "threhsold": 60, "thresh": 305, "threshold": [28, 73, 98, 99, 100, 101, 102, 103, 104, 105, 118, 177, 178, 179, 180, 181, 184, 185, 186, 187, 302, 305, 306, 337, 397, 432, 434, 442, 448, 449], "threshold_dir": [178, 180], "threshold_direct": [28, 73, 118, 177, 178, 180, 181, 184, 186, 187, 221, 432, 440], "thresholed": 305, "thrich": 441, "through": [27, 93, 98, 100, 101, 103, 184, 186, 187, 324, 394, 431, 432, 438, 448, 452], "throughout": [120, 436, 443, 454], "thu": [108, 112, 116, 122, 126, 130, 135, 140, 147, 149, 153, 179, 185, 449], "thurrnerwuthrich98": [401, 441], "tiff": [73, 118, 183, 435, 437], "tifffil": [435, 437], "tight_layout": 432, "tim": [1, 443], "time": [2, 5, 6, 7, 223, 226, 227, 229, 261, 262, 287, 288, 290, 440, 450, 457], "times3": 457, "timothi": 441, "tissu": [441, 443], "titl": [221, 427], "to_pyvista": 95, "todo": [132, 395, 413, 417], "togeth": [74, 403, 432], "toj": 7, "tol": [68, 74, 96, 174, 176, 304, 395, 396, 406, 410, 413], "toler": [74, 96, 97, 98, 104, 105, 223, 224, 226, 227, 264, 271, 275, 276, 278, 280, 284, 285, 286, 289, 293, 294, 295, 296, 395, 396, 406, 410, 413], "toma": 441, "too": [158, 324], "tool": [13, 14, 15, 19, 20, 92, 298, 299, 300, 301, 434, 441, 443], "toolbox": 443, "top": [6, 9, 444], "topolog": [18, 38, 42, 441, 446, 448], "topologi": [8, 9, 10, 202, 444, 452, 454], "toru": [120, 221, 434, 436, 439], "total": [2, 4, 5, 6, 7, 9, 11, 29, 242, 243, 244, 324, 444], "touch": 450, "tow": 305, "toward": [179, 185, 449, 450], "tpm": [8, 9, 10, 190, 196, 200, 202, 203, 206, 444], "tpmss": 6, "trace": 432, "trade": 452, "transact": 441, "transfer": [22, 104, 105], "transform": [120, 222, 302, 303, 304, 305, 307, 308, 313, 314, 325, 326, 332, 333, 334, 335, 441], "transform_arg": [302, 305, 307, 308], "transform_imag": 305, "transform_point": [304, 307, 308], "transit": [338, 360], "translat": [305, 307, 308, 315, 316, 325, 326, 335], "translation2d": 305, "transpar": 428, "travers": [450, 452, 456], "treat": [100, 103, 132, 133, 179, 182, 185, 450, 458], "tree": [139, 274, 277, 283, 286, 289, 295, 406, 410, 413, 432, 456], "tree1": [319, 331], "tree2": 331, "treenod": [340, 359, 362, 387], "tri": [129, 132, 133, 138, 184, 232, 233, 234, 235, 237, 240, 241, 242, 243, 266, 270, 275, 276, 278, 288, 290, 343, 355, 360, 378, 391, 394, 421, 432, 433, 442], "tri1": [298, 299, 300, 301], "tri2": [298, 299, 300, 301], "tri6": 433, "triangl": [2, 16, 28, 72, 93, 101, 102, 103, 104, 105, 138, 155, 160, 161, 170, 173, 176, 234, 242, 243, 262, 263, 266, 269, 270, 275, 276, 278, 286, 287, 288, 289, 290, 297, 298, 299, 300, 301, 343, 355, 374, 378, 379, 390, 391, 392, 394, 395, 422, 433, 437, 441, 443, 448, 450, 456], "triangleboxintersect": 266, "triangluar": 413, "triangul": [1, 155, 160, 161, 164, 167, 168, 170, 171, 173, 174, 175, 178, 184, 434, 441, 448], "triangular": [29, 72, 96, 97, 105, 125, 129, 132, 133, 138, 142, 145, 146, 147, 152, 164, 221, 232, 233, 234, 235, 237, 240, 241, 242, 243, 253, 254, 262, 263, 271, 274, 277, 286, 289, 295, 379, 391, 392, 410, 412, 413, 422, 431, 443], "triaxial": [305, 307, 308], "triconn": [129, 138], "tricoord": [138, 269, 287, 297], "trimesh": 443, "trimetr": [428, 432, 440], "trinodeconn": 105, "trinodecoord": 105, "trinorm": [266, 297, 343, 355], "tripl": 457, "tripli": [6, 190, 196, 200, 203, 206, 214, 434], "tritanomali": 428, "trough": 162, "tru": 182, "true": [2, 17, 22, 28, 29, 30, 44, 60, 63, 71, 74, 79, 88, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 115, 120, 123, 128, 131, 132, 133, 135, 138, 143, 146, 150, 155, 158, 170, 172, 173, 179, 182, 183, 184, 185, 186, 190, 196, 200, 203, 206, 221, 223, 224, 225, 226, 227, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 324, 339, 344, 345, 346, 361, 365, 366, 367, 378, 379, 381, 396, 403, 408, 409, 410, 413, 427, 428, 432, 445], "truli": 6, "trumbor": [287, 288, 290, 441, 457], "try": 434, "tube": [213, 243], "tupl": [60, 79, 98, 100, 103, 118, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 225, 231, 236, 265, 267, 281, 291, 292, 305, 306, 324, 337, 428, 435], "turn": [221, 324, 434], "twin": 450, "twist": 235, "twist_cent": 235, "two": [2, 60, 79, 93, 96, 97, 99, 102, 103, 104, 105, 110, 111, 167, 171, 173, 191, 192, 193, 197, 198, 199, 215, 216, 217, 230, 234, 238, 264, 265, 267, 281, 284, 285, 291, 292, 293, 294, 296, 298, 299, 300, 301, 304, 305, 306, 307, 308, 319, 320, 321, 322, 331, 394, 396, 397, 403, 408, 431, 432, 435, 449, 450, 452, 456], "twt": 441, "type": [17, 18, 22, 23, 27, 28, 30, 37, 44, 62, 63, 64, 69, 71, 72, 73, 75, 76, 78, 81, 84, 85, 86, 87, 96, 98, 101, 102, 103, 104, 105, 106, 110, 113, 114, 119, 120, 121, 124, 125, 127, 129, 131, 132, 133, 134, 137, 141, 142, 145, 148, 151, 152, 156, 157, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 287, 290, 291, 292, 297, 298, 299, 300, 306, 309, 310, 311, 312, 313, 314, 315, 316, 319, 320, 321, 322, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 337, 341, 342, 343, 344, 345, 348, 349, 350, 351, 357, 358, 363, 364, 365, 366, 369, 370, 371, 372, 377, 378, 379, 383, 384, 386, 387, 388, 392, 393, 394, 395, 398, 400, 401, 405, 406, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 428, 429, 431, 432, 435, 438, 440, 443, 445, 446, 456], "typic": [2, 116, 126, 135, 153], "u": [320, 322, 408, 409, 432, 455, 457], "uedg": 109, "ufac": 111, "uint8": [17, 445], "ultim": 457, "un": 452, "unalt": [30, 44], "unambigu": [72, 422, 452], "unattach": 38, "unchang": [108, 112, 116, 122, 126, 130, 140, 147, 149, 153, 396, 400, 435, 449], "unclos": [132, 137, 139, 432], "unconstrain": 324, "underbrac": 449, "undergon": 136, "understand": [443, 447], "unexpect": 139, "unidirect": 457, "uniform": [2, 22, 93, 104, 186, 230, 305, 307, 308, 398, 423, 442], "union": [12, 96, 104, 216, 432, 436, 443], "union_fun": 216, "union_sym": 217, "union_v": 215, "unionf": [98, 215, 432], "unionv": 215, "uniqu": [38, 109, 111, 394, 409, 421, 448, 450], "unit": [2, 120, 155, 158, 160, 161, 179, 202, 214, 271, 281, 282, 287, 288, 290, 291, 292, 401, 436, 449, 455, 458], "unitless": 449, "univers": 443, "unknown": [340, 352, 362, 373, 380, 449], "unless": [186, 303, 379, 420], "unlik": 331, "unload": 225, "unnecessari": 440, "unnot": [164, 165, 166, 167], "unpack": [177, 178, 180, 181, 184, 186, 187, 231, 234, 235, 236, 237, 238, 240, 241, 242, 243], "unsign": 201, "unstructur": 85, "unstructuredgrid": 85, "until": [223, 224, 226, 227, 336, 357, 358, 379, 456, 458], "unus": 221, "uobyqa": 324, "up": [22, 72, 101, 422, 428, 433, 434, 435, 442], "updat": [62, 63, 64, 71, 225, 394, 396, 452, 455], "upon": 443, "upper": [60, 79, 188, 236, 237, 240, 266, 267, 272, 273, 281, 282, 291, 292, 297, 457], "url": 441, "us": [1, 6, 7, 16, 18, 20, 22, 27, 28, 29, 38, 42, 51, 60, 62, 63, 64, 73, 79, 93, 98, 100, 101, 102, 103, 104, 105, 113, 114, 116, 119, 120, 121, 124, 125, 126, 127, 132, 133, 135, 136, 139, 141, 142, 145, 151, 152, 153, 155, 158, 164, 165, 166, 167, 170, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 206, 214, 215, 216, 217, 221, 223, 224, 226, 227, 229, 230, 235, 238, 253, 256, 257, 260, 270, 271, 274, 277, 284, 286, 287, 288, 289, 290, 298, 299, 300, 301, 302, 305, 307, 308, 324, 332, 337, 338, 349, 360, 370, 383, 394, 396, 397, 401, 405, 406, 408, 409, 410, 413, 414, 421, 423, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 446, 447, 448, 449, 450, 452, 454, 456, 457, 458], "usag": 452, "user": [434, 437, 440, 443, 447], "util": [2, 88, 104, 105, 116, 119, 135, 136, 153, 155, 158, 160, 161, 214, 254, 290, 302, 303, 432, 433, 435, 437, 438, 440, 452], "uv_1": 457, "v": [2, 38, 98, 181, 184, 186, 187, 255, 259, 260, 261, 320, 322, 337, 411, 412, 450, 457], "v_0": [261, 262, 457], "v_1": [261, 262, 457], "v_2": [261, 457], "v_3": [261, 262], "val": [148, 194], "valid": [271, 274, 277, 395, 443, 450, 451, 452], "valu": [2, 20, 28, 29, 60, 79, 96, 99, 100, 101, 102, 103, 104, 105, 120, 148, 156, 157, 158, 159, 163, 164, 165, 166, 167, 177, 178, 180, 181, 183, 184, 186, 187, 191, 192, 193, 194, 195, 197, 198, 199, 201, 204, 210, 211, 215, 216, 217, 225, 270, 271, 274, 277, 287, 288, 290, 298, 299, 300, 301, 302, 305, 306, 324, 337, 395, 396, 400, 405, 406, 410, 413, 414, 415, 428, 432, 440, 448, 449, 452, 457], "van": [156, 162, 163, 441], "vari": [6, 236, 237, 240, 431], "variabl": [192, 193, 198, 199, 211, 216, 217, 405, 430, 436, 457], "variant": [305, 455], "varieti": [88, 93, 431, 435, 438, 442, 443, 448], "variou": [94, 438, 440, 443, 452, 456], "vartzioti": 441, "vartziotis2009": 249, "vast": 432, "vdot": 449, "vector": [1, 5, 22, 27, 36, 51, 52, 98, 136, 155, 160, 161, 179, 185, 189, 190, 192, 196, 198, 200, 203, 205, 206, 211, 214, 216, 230, 240, 241, 252, 254, 256, 266, 267, 269, 270, 271, 274, 277, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 297, 300, 301, 343, 355, 392, 401, 406, 434, 441, 449, 452, 455, 457], "vector_func": [190, 196, 200, 203, 206], "vectoriz": 436, "verbos": [2, 22, 71, 182, 183, 221, 228, 229, 230, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 305, 307, 308, 410, 413], "veri": [62, 64, 443, 457], "verifi": [86, 413, 443, 452], "versa": 456, "version": [2, 18, 88, 104, 155, 266, 290, 307, 324, 401, 439, 443, 446, 452], "vertebr": 443, "vertex": [38, 259, 350, 371, 441, 450, 452, 455, 457], "vertexvalu": [100, 103], "vertic": [38, 98, 100, 103, 112, 122, 130, 140, 144, 147, 149, 178, 179, 180, 184, 185, 186, 231, 261, 262, 266, 269, 270, 275, 276, 278, 287, 288, 290, 297, 298, 299, 300, 301, 337, 338, 350, 360, 371, 378, 389, 390, 391, 448, 450, 456, 457], "via": [2, 175, 179], "vice": 456, "victoria": 441, "vidensk": 441, "view": [18, 79, 114, 125, 142, 152, 178, 180, 181, 221, 392, 432, 440, 446, 449], "visibl": [401, 450], "vision": [428, 441], "vispi": [428, 429, 437], "visual": [79, 87, 181, 221, 223, 432, 437, 441], "vivian": 443, "vo": 442, "vol": [22, 23, 28, 72, 86, 98, 101, 102, 103, 104, 105, 119, 120, 132, 133, 165, 166, 167, 231, 234, 236, 242, 243, 244, 261, 394, 421, 422, 432, 433], "volum": [5, 17, 22, 23, 36, 38, 42, 71, 72, 77, 86, 96, 97, 98, 101, 102, 103, 104, 105, 116, 120, 134, 135, 137, 153, 173, 179, 185, 227, 235, 241, 244, 249, 253, 259, 260, 261, 302, 303, 394, 402, 411, 412, 422, 433, 436, 441, 443, 445, 448, 450, 452, 457], "volumetr": [14, 28, 231, 234, 236, 242, 243, 432, 442, 455], "von": [214, 441], "voronoi": 441, "voxel": [73, 100, 103, 118, 120, 139, 148, 158, 178, 179, 180, 181, 182, 187, 194, 195, 201, 279, 302, 305, 339, 386, 398, 399, 423, 440], "voxel2octre": 456, "voxelconn": [118, 139, 148, 194, 195, 279, 339, 386, 398, 423], "voxelcoord": [118, 139, 148, 194, 195, 279, 339, 386, 398, 423], "voxeldata": 118, "voxelmesh": [434, 435, 436], "voxelnodeconn": [99, 440], "voxelnodecoord": [99, 440], "voxels": [73, 118, 120, 158, 178, 180, 181], "vsn91": [6, 214, 441], "vtk": [81, 443], "vtu": [81, 438], "vv_2": 457, "vws09": [222, 441], "w": [6, 7, 98, 184, 186, 187, 188, 189, 190, 196, 200, 203, 206, 209, 213, 223, 231, 232, 234, 235, 236, 237, 238, 242, 243, 397, 432, 440, 441, 449], "wa": [1, 221, 429, 440, 443, 450], "wai": [126, 153, 155, 160, 161, 430, 432, 436, 450, 457], "walk": 450, "wang": 441, "want": [18, 446], "warn": 86, "warren": 441, "wat81": [168, 169, 441, 450], "watertight": 448, "watson": [168, 169, 170, 174, 176, 441], "wbms05": [281, 282, 291, 292, 441, 457], "wdg": 433, "wdg15": 433, "we": [18, 446, 449], "web": [18, 446], "websit": [18, 338, 446], "wedg": [28, 72, 101, 104, 126, 132, 133, 149, 150, 151, 152, 153, 235, 241, 246, 253, 422, 433, 448], "wedgeconn": 153, "wedgecoord": 153, "weight": [6, 202, 401], "weights1": 6, "weights2": 6, "weights3": 6, "weights4": 6, "weingarten": 449, "welcom": [18, 446], "well": [16, 136, 155, 184, 186, 253, 280, 302, 303, 437, 440, 443, 447, 454], "were": [221, 230], "what": [135, 236, 237, 240, 332, 395, 417, 432, 448], "when": [22, 72, 114, 125, 142, 152, 183, 218, 219, 220, 221, 223, 224, 226, 227, 275, 276, 278, 284, 287, 288, 290, 332, 392, 396, 422, 431, 432, 439, 447, 449, 450, 456], "where": [2, 20, 22, 108, 112, 122, 130, 140, 147, 149, 184, 186, 187, 224, 230, 236, 237, 240, 259, 261, 262, 284, 285, 293, 294, 295, 298, 299, 300, 301, 302, 303, 305, 325, 326, 327, 328, 334, 335, 337, 391, 407, 431, 436, 439, 442, 448, 449, 450, 452, 454, 457, 458], "whether": [60, 74, 98, 100, 101, 102, 103, 104, 105, 158, 226, 244, 256, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 293, 294, 337, 344, 345, 349, 365, 366, 370, 378, 383, 394, 397, 428, 448, 449, 450, 452, 456, 457], "which": [1, 2, 5, 16, 18, 60, 104, 106, 116, 135, 136, 139, 153, 154, 155, 170, 182, 184, 186, 187, 201, 221, 225, 229, 230, 234, 241, 242, 255, 290, 305, 306, 324, 332, 339, 341, 342, 343, 361, 363, 364, 387, 406, 409, 428, 431, 432, 435, 438, 442, 443, 446, 447, 448, 449, 450, 454, 455, 456], "whichev": [72, 422], "while": [29, 223, 224, 226, 227, 431, 432, 436, 442, 443, 447, 449, 450, 452, 455, 456, 457], "white": [2, 6], "who": [30, 395], "whose": [30, 171, 218, 219, 220, 225, 450], "why": 447, "wide": 443, "width": [2, 428], "wikipedia": 436, "wil": [221, 305], "wild": 441, "wilei": 441, "william": [281, 282, 291, 292, 441, 457], "windeatt": 441, "window": 428, "wipper": 441, "wirefram": [428, 442], "within": [1, 29, 30, 43, 93, 106, 132, 133, 136, 184, 186, 194, 195, 221, 230, 271, 287, 288, 290, 324, 336, 337, 338, 341, 342, 343, 344, 345, 352, 360, 363, 364, 365, 366, 373, 379, 406, 411, 412, 442, 450, 456, 457], "without": [18, 179, 185, 224, 396, 437, 439, 440, 446, 449, 450], "won": [69, 79, 406, 410, 413, 417, 421, 440, 447], "word": 229, "work": [2, 95, 139, 155, 280, 302, 303, 408, 431, 443, 447, 455, 457], "worst": [90, 246, 247, 251, 252, 253, 257, 258, 260, 263, 455], "would": [44, 449], "wrap": [158, 170, 172, 332, 398, 443], "wrapfunc": 214, "wrapper": [101, 173, 175, 321, 443], "write": [22, 435, 438], "written": [22, 81, 183, 435, 443, 449, 457], "www": [281, 282, 291, 292, 313, 314, 439, 441], "x": [2, 5, 6, 20, 44, 66, 98, 100, 104, 120, 148, 154, 178, 179, 180, 181, 182, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 202, 203, 205, 206, 209, 211, 213, 214, 216, 217, 218, 219, 220, 224, 230, 232, 233, 234, 235, 238, 240, 241, 243, 261, 262, 266, 267, 272, 273, 281, 282, 291, 292, 297, 302, 303, 305, 310, 311, 312, 313, 315, 316, 317, 318, 324, 325, 326, 327, 328, 329, 330, 334, 335, 337, 348, 369, 377, 404, 428, 435, 436, 441, 442, 449, 450, 455, 457, 458], "x0": [134, 218, 275, 276, 278, 324, 423], "x1": [134, 188, 275, 276, 278, 396, 398, 399, 411, 412, 413], "x2": [188, 275, 276, 278, 413], "x3": [275, 413], "x4": [410, 413], "x_": 457, "x_0": 449, "x_1": 449, "x_i": [449, 458], "x_iy_i": 449, "x_n": 449, "xifeng": 441, "xin": 60, "xlim": [266, 267, 272, 273, 281, 282, 291, 292, 297], "xmax": [30, 98, 184, 186, 187, 236, 237, 240, 265, 266, 272, 273, 297, 337, 341, 348, 353, 369, 457], "xmin": [30, 98, 184, 186, 187, 236, 237, 240, 265, 266, 272, 273, 297, 337, 341, 348, 353, 369, 457], "xnew": 225, "xout": 60, "xy": [18, 44, 220, 221, 271, 314, 404, 428, 446], "xyz": 120, "xz": [18, 44, 219, 314, 404, 428, 446], "y": [5, 6, 20, 44, 66, 98, 100, 104, 148, 154, 179, 182, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 202, 203, 205, 206, 209, 211, 213, 214, 216, 217, 218, 219, 220, 224, 230, 232, 233, 234, 235, 238, 240, 241, 243, 261, 262, 266, 267, 272, 273, 281, 282, 291, 292, 297, 302, 303, 305, 310, 311, 312, 313, 315, 316, 325, 326, 327, 334, 335, 337, 348, 369, 377, 404, 428, 435, 436, 441, 442, 449, 450, 457], "y0": [134, 219, 275, 276, 278, 423], "y1": [134, 188, 275, 276, 278, 396, 398, 399, 411, 412, 413], "y2": [188, 275, 276, 278, 413], "y3": [275, 413], "y_": 457, "y_0": 449, "y_1": 449, "y_i": [449, 458], "y_n": 449, "yet": [46, 48, 337], "yixin": 441, "ylim": [266, 267, 272, 273, 281, 282, 291, 292, 297], "ymax": [30, 98, 184, 186, 187, 236, 237, 240, 265, 266, 272, 273, 297, 337, 341, 348, 353, 369, 457], "ymin": [30, 98, 184, 186, 187, 236, 237, 240, 265, 266, 272, 273, 297, 337, 341, 348, 353, 369, 457], "yongji": 441, "you": [1, 18, 93, 440, 446], "your": [18, 446], "yutaka": 441, "yx": [148, 314], "yz": [44, 218, 221, 314, 404], "z": [5, 6, 20, 44, 66, 98, 100, 103, 104, 120, 148, 154, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 202, 203, 205, 206, 209, 211, 213, 214, 216, 217, 218, 219, 220, 224, 230, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 261, 262, 266, 267, 272, 281, 282, 291, 292, 297, 302, 303, 305, 310, 312, 316, 325, 326, 327, 334, 337, 348, 350, 377, 404, 428, 435, 436, 441, 449, 450, 457], "z0": [134, 220, 275, 276, 278, 423], "z1": [134, 188, 275, 276, 278, 396, 398, 399, 411, 412, 413], "z2": [188, 275, 276, 278, 413], "z3": [275, 413], "z_": 457, "z_0": 449, "z_1": 449, "z_i": [449, 458], "z_n": 449, "zbs03": [337, 441, 456], "zeitschrift": 441, "zero": [6, 20, 120, 221, 224, 235, 397, 457], "zhang": [412, 441], "zhou": 441, "zip": [2, 5, 6, 7], "ziti": 7, "zlim": [266, 267, 272, 281, 282, 291, 292, 297], "zmax": [30, 98, 184, 186, 187, 236, 240, 265, 266, 272, 297, 337, 341, 348, 353, 457], "zmin": [30, 98, 184, 186, 187, 236, 240, 265, 266, 272, 297, 337, 341, 348, 353, 457], "zoom": [73, 118, 177, 178, 180, 181, 182, 302], "zorin": 441, "zx": 314, "zy": 314, "zyx": 120, "\u00e7": 441, "\u00e9": 441, "\u00f6": 441, "\u00fc": 441}, "titles": ["API Reference", "Development", "Curvature Analysis", "Mesh Analysis Examples", "Computation times", "Implicit Heart", "Mixed-Topology TPMS", "Pasta Shapes", "Mesh Generation Examples", "Computation times", "Examples", "Computation times", "mymesh.booleans", "mymesh.contour", "mymesh.converter", "mymesh.curvature", "mymesh.delaunay", "mymesh.demo_image", "mymesh.demo_mesh", "mymesh.image", "mymesh.implicit", "mymesh.improvement", "mymesh.mesh", "mymesh.mesh.mesh.Boundary", "mymesh.mesh.mesh.BoundaryConn", "mymesh.mesh.mesh.BoundaryNodes", "mymesh.mesh.mesh.Centroids", "mymesh.mesh.mesh.Clip", "mymesh.mesh.mesh.Contour", "mymesh.mesh.mesh.CreateBoundaryLayer", "mymesh.mesh.mesh.Crop", "mymesh.mesh.mesh.EdgeConn", "mymesh.mesh.mesh.EdgeElemConn", "mymesh.mesh.mesh.Edges", "mymesh.mesh.mesh.ElemConn", "mymesh.mesh.mesh.ElemNeighbors", "mymesh.mesh.mesh.ElemNormals", "mymesh.mesh.mesh.ElemType", "mymesh.mesh.mesh.EulerCharacteristic", "mymesh.mesh.mesh.FaceConn", "mymesh.mesh.mesh.FaceElemConn", "mymesh.mesh.mesh.Faces", "mymesh.mesh.mesh.Genus", "mymesh.mesh.mesh.MeshNodes", "mymesh.mesh.mesh.Mirror", "mymesh.mesh.mesh.ND", "mymesh.mesh.mesh.NEdge", "mymesh.mesh.mesh.NElem", "mymesh.mesh.mesh.NFace", "mymesh.mesh.mesh.NNode", "mymesh.mesh.mesh.NodeNeighbors", "mymesh.mesh.mesh.NodeNormals", "mymesh.mesh.mesh.NodeNormalsMethod", "mymesh.mesh.mesh.RenumberFacesBySet", "mymesh.mesh.mesh.RenumberNodesBySet", "mymesh.mesh.mesh.SurfConn", "mymesh.mesh.mesh.SurfElemConn", "mymesh.mesh.mesh.SurfNodeNeighbors", "mymesh.mesh.mesh.SurfNodes", "mymesh.mesh.mesh.Surface", "mymesh.mesh.mesh.Threshold", "mymesh.mesh.mesh.aabb", "mymesh.mesh.mesh.addEdges", "mymesh.mesh.mesh.addElems", "mymesh.mesh.mesh.addFaces", "mymesh.mesh.mesh.addNodes", "mymesh.mesh.mesh.bounds", "mymesh.mesh.mesh.cells", "mymesh.mesh.mesh.cleanup", "mymesh.mesh.mesh.copy", "mymesh.mesh.mesh.getCurvature", "mymesh.mesh.mesh.getQuality", "mymesh.mesh.mesh.identify_type", "mymesh.mesh.mesh.imread", "mymesh.mesh.mesh.merge", "mymesh.mesh.mesh.mesh2dmesh", "mymesh.mesh.mesh.meshio2mymesh", "mymesh.mesh.mesh.mvbb", "mymesh.mesh.mesh.mymesh2meshio", "mymesh.mesh.mesh.plot", "mymesh.mesh.mesh.points", "mymesh.mesh.mesh.read", "mymesh.mesh.mesh.removeElems", "mymesh.mesh.mesh.reset", "mymesh.mesh.mesh.to_meshio", "mymesh.mesh.mesh.to_pyvista", "mymesh.mesh.mesh.validate", "mymesh.mesh.mesh.view", "mymesh.mesh.mesh.write", "mymesh.primitives", "mymesh.quality", "mymesh.rays", "mymesh.register", "mymesh.tree", "mymesh.utils", "mymesh.visualize", "mymesh.booleans.MeshBooleans", "mymesh.booleans.SplitMesh", "mymesh.contour.Adaptive", "mymesh.contour.MarchingCubes", "mymesh.contour.MarchingCubesImage", "mymesh.contour.MarchingElements", "mymesh.contour.MarchingSquares", "mymesh.contour.MarchingSquaresImage", "mymesh.contour.MarchingTetrahedra", "mymesh.contour.MarchingTriangles", "mymesh.converter.EdgesByElement", "mymesh.converter.edge2quadratic", "mymesh.converter.edge32linear", "mymesh.converter.edges2unique", "mymesh.converter.faces2surface", "mymesh.converter.faces2unique", "mymesh.converter.hex202linear", "mymesh.converter.hex2edges", "mymesh.converter.hex2faces", "mymesh.converter.hex2quadratic", "mymesh.converter.hex2tet", "mymesh.converter.hexsubdivide", "mymesh.converter.im2voxel", "mymesh.converter.linear2quadratic", "mymesh.converter.mesh2im", "mymesh.converter.polygon2edges", "mymesh.converter.pyr132linear", "mymesh.converter.pyr2quadratic", "mymesh.converter.pyramid2edges", "mymesh.converter.pyramid2faces", "mymesh.converter.pyramid2tet", "mymesh.converter.quad2edges", "mymesh.converter.quad2quadratic", "mymesh.converter.quad2tri", "mymesh.converter.quad82linear", "mymesh.converter.quadratic2linear", "mymesh.converter.solid2edges", "mymesh.converter.solid2faces", "mymesh.converter.solid2surface", "mymesh.converter.solid2tets", "mymesh.converter.surf2dual", "mymesh.converter.surf2edges", "mymesh.converter.surf2tris", "mymesh.converter.surf2voxel", "mymesh.converter.tet102linear", "mymesh.converter.tet2edges", "mymesh.converter.tet2faces", "mymesh.converter.tet2quadratic", "mymesh.converter.tetsubdivide", "mymesh.converter.tri2edges", "mymesh.converter.tri2quadratic", "mymesh.converter.tri62linear", "mymesh.converter.voxel2im", "mymesh.converter.wdg152linear", "mymesh.converter.wdg2quadratic", "mymesh.converter.wedge2edges", "mymesh.converter.wedge2faces", "mymesh.converter.wedge2tet", "mymesh.curvature.AnalyticalCurvature", "mymesh.curvature.CubicFit", "mymesh.curvature.Curvedness", "mymesh.curvature.GaussianCurvature", "mymesh.curvature.ImageCurvature", "mymesh.curvature.MeanCurvature", "mymesh.curvature.NormCurve", "mymesh.curvature.QuadFit", "mymesh.curvature.ShapeCategory", "mymesh.curvature.ShapeIndex", "mymesh.delaunay.Alpha2d", "mymesh.delaunay.Alpha3d", "mymesh.delaunay.AlphaPeel3d", "mymesh.delaunay.AlphaShape", "mymesh.delaunay.BowyerWatson2d", "mymesh.delaunay.BowyerWatson3d", "mymesh.delaunay.ConvexHull", "mymesh.delaunay.FanTriangulation", "mymesh.delaunay.GiftWrapping", "mymesh.delaunay.SciPy", "mymesh.delaunay.Tetrahedralize", "mymesh.delaunay.Triangle", "mymesh.delaunay.Triangulate", "mymesh.image.PixelMesh", "mymesh.image.SurfaceMesh", "mymesh.image.SurfaceNodeOptimization", "mymesh.image.TetMesh", "mymesh.image.VoxelMesh", "mymesh.image.read", "mymesh.image.write", "mymesh.implicit.SurfaceMesh", "mymesh.implicit.SurfaceNodeOptimization", "mymesh.implicit.TetMesh", "mymesh.implicit.VoxelMesh", "mymesh.implicit.box", "mymesh.implicit.cylinder", "mymesh.implicit.diamond", "mymesh.implicit.diff", "mymesh.implicit.difff", "mymesh.implicit.diffs", "mymesh.implicit.grid2fun", "mymesh.implicit.grid2grad", "mymesh.implicit.gyroid", "mymesh.implicit.intersection", "mymesh.implicit.intersectionf", "mymesh.implicit.intersections", "mymesh.implicit.lidinoid", "mymesh.implicit.mesh2udf", "mymesh.implicit.mixed_topology", "mymesh.implicit.neovius", "mymesh.implicit.offset", "mymesh.implicit.plane", "mymesh.implicit.primitive", "mymesh.implicit.rMax", "mymesh.implicit.rMin", "mymesh.implicit.sphere", "mymesh.implicit.thicken", "mymesh.implicit.thickenf", "mymesh.implicit.thickens", "mymesh.implicit.torus", "mymesh.implicit.tpms", "mymesh.implicit.union", "mymesh.implicit.unionf", "mymesh.implicit.unions", "mymesh.implicit.xplane", "mymesh.implicit.yplane", "mymesh.implicit.zplane", "mymesh.improvement.Contract", "mymesh.improvement.GeoTransformSmoothing", "mymesh.improvement.LocalLaplacianSmoothing", "mymesh.improvement.NodeSpringSmoothing", "mymesh.improvement.SegmentSpringSmoothing", "mymesh.improvement.SmartLaplacianSmoothing", "mymesh.improvement.TangentialLaplacianSmoothing", "mymesh.improvement.TetFlip", "mymesh.improvement.TetImprove", "mymesh.improvement.TetSplit", "mymesh.primitives.Box", "mymesh.primitives.Circle", "mymesh.primitives.CirclePt", "mymesh.primitives.Cylinder", "mymesh.primitives.Extrude", "mymesh.primitives.Grid", "mymesh.primitives.Grid2D", "mymesh.primitives.Line", "mymesh.primitives.Multiline", "mymesh.primitives.Plane", "mymesh.primitives.Revolve", "mymesh.primitives.Sphere", "mymesh.primitives.Torus", "mymesh.quality.Area", "mymesh.quality.AspectRatio", "mymesh.quality.InverseOrthogonalQuality", "mymesh.quality.InverseOrthogonality", "mymesh.quality.MaxDihedral", "mymesh.quality.MeanRatio", "mymesh.quality.MinDihedral", "mymesh.quality.OrthogonalQuality", "mymesh.quality.Orthogonality", "mymesh.quality.Skewness", "mymesh.quality.SurfDihedralAngles", "mymesh.quality.Volume", "mymesh.quality.dihedralAngles", "mymesh.quality.equiangular_skewness", "mymesh.quality.quad_skewness", "mymesh.quality.tet_circumradius", "mymesh.quality.tet_vol_skewness", "mymesh.quality.tet_volume", "mymesh.quality.tri_area", "mymesh.quality.tri_skewness", "mymesh.rays.BoundaryBoundaryIntersection", "mymesh.rays.BoxBoxIntersection", "mymesh.rays.BoxTrianglesIntersection", "mymesh.rays.PlaneBoxIntersection", "mymesh.rays.PlaneSurfIntersection", "mymesh.rays.PlaneTriangleIntersection", "mymesh.rays.PlaneTrianglesIntersection", "mymesh.rays.PointInBoundary", "mymesh.rays.PointInBox", "mymesh.rays.PointInBox2D", "mymesh.rays.PointInSurf", "mymesh.rays.PointInTet", "mymesh.rays.PointInTri", "mymesh.rays.PointsInSurf", "mymesh.rays.PointsInTris", "mymesh.rays.PointsInVoxel", "mymesh.rays.RayBoundaryIntersection", "mymesh.rays.RayBoxIntersection", "mymesh.rays.RayBoxesIntersection", "mymesh.rays.RayOctreeIntersection", "mymesh.rays.RaySegmentIntersection", "mymesh.rays.RaySegmentsIntersection", "mymesh.rays.RaySurfIntersection", "mymesh.rays.RayTriangleIntersection", "mymesh.rays.RayTrianglesIntersection", "mymesh.rays.RaysSurfIntersection", "mymesh.rays.RaysTrianglesIntersection", "mymesh.rays.SegmentBox2DIntersection", "mymesh.rays.SegmentBoxIntersection", "mymesh.rays.SegmentSegmentIntersection", "mymesh.rays.SegmentsSegmentsIntersection", "mymesh.rays.SurfSelfIntersection", "mymesh.rays.SurfSurfIntersection", "mymesh.rays.TriangleBoxIntersection", "mymesh.rays.TriangleTriangleIntersection", "mymesh.rays.TriangleTriangleIntersectionPt", "mymesh.rays.TrianglesTrianglesIntersection", "mymesh.rays.TrianglesTrianglesIntersectionPts", "mymesh.register.AxisAlignImage", "mymesh.register.AxisAlignPoints", "mymesh.register.ICP", "mymesh.register.Image2Image", "mymesh.register.ImageOverlay", "mymesh.register.Mesh2Mesh", "mymesh.register.Point2Point", "mymesh.register.R2d", "mymesh.register.R3d", "mymesh.register.S2d", "mymesh.register.S3d", "mymesh.register.Sh2d", "mymesh.register.Sh3d", "mymesh.register.T2d", "mymesh.register.T3d", "mymesh.register.affine", "mymesh.register.affine2d", "mymesh.register.closest_point_MSE", "mymesh.register.dice", "mymesh.register.hausdorff", "mymesh.register.jaccard", "mymesh.register.mutual_information", "mymesh.register.optimize", "mymesh.register.rigid", "mymesh.register.rigid2d", "mymesh.register.rotation", "mymesh.register.rotation2d", "mymesh.register.similarity", "mymesh.register.similarity2d", "mymesh.register.symmetric_closest_point_MSE", "mymesh.register.transform_image", "mymesh.register.transform_points", "mymesh.register.translation", "mymesh.register.translation2d", "mymesh.tree.Edges2Quadtree", "mymesh.tree.Function2Octree", "mymesh.tree.Octree2Dual", "mymesh.tree.Octree2Voxel", "mymesh.tree.OctreeNode", "mymesh.tree.OctreeNode.ContainsBoxes", "mymesh.tree.OctreeNode.ContainsPts", "mymesh.tree.OctreeNode.ContainsTris", "mymesh.tree.OctreeNode.PointInNode", "mymesh.tree.OctreeNode.PointsInNode", "mymesh.tree.OctreeNode.clearData", "mymesh.tree.OctreeNode.getLevel", "mymesh.tree.OctreeNode.getLimits", "mymesh.tree.OctreeNode.getMaxDepth", "mymesh.tree.OctreeNode.getVertices", "mymesh.tree.OctreeNode.hasChildren", "mymesh.tree.OctreeNode.makeChildren", "mymesh.tree.OctreeNode.makeChildrenBoxes", "mymesh.tree.OctreeNode.makeChildrenPts", "mymesh.tree.OctreeNode.makeChildrenTris", "mymesh.tree.OctreeNode.prune", "mymesh.tree.Points2Octree", "mymesh.tree.Points2Quadtree", "mymesh.tree.Print", "mymesh.tree.Quadtree2Dual", "mymesh.tree.Quadtree2Pixel", "mymesh.tree.QuadtreeNode", "mymesh.tree.QuadtreeNode.ContainsEdges", "mymesh.tree.QuadtreeNode.ContainsPts", "mymesh.tree.QuadtreeNode.PointInNode", "mymesh.tree.QuadtreeNode.PointsInNode", "mymesh.tree.QuadtreeNode.clearData", "mymesh.tree.QuadtreeNode.getLevel", "mymesh.tree.QuadtreeNode.getLimits", "mymesh.tree.QuadtreeNode.getMaxDepth", "mymesh.tree.QuadtreeNode.getVertices", "mymesh.tree.QuadtreeNode.hasChildren", "mymesh.tree.QuadtreeNode.makeChildren", "mymesh.tree.QuadtreeNode.makeChildrenEdges", "mymesh.tree.QuadtreeNode.makeChildrenPts", "mymesh.tree.QuadtreeNode.prune", "mymesh.tree.SearchOctree", "mymesh.tree.SearchOctreeTri", "mymesh.tree.Surface2Octree", "mymesh.tree.TreeNode", "mymesh.tree.TreeNode.clearData", "mymesh.tree.TreeNode.getLevel", "mymesh.tree.TreeNode.getMaxDepth", "mymesh.tree.TreeNode.hasChildren", "mymesh.tree.TreeNode.prune", "mymesh.tree.Voxel2Octree", "mymesh.tree.getAllLeaf", "mymesh.utils.AABB", "mymesh.utils.BaryTet", "mymesh.utils.BaryTri", "mymesh.utils.BaryTris", "mymesh.utils.CalcFaceNormal", "mymesh.utils.Centroids", "mymesh.utils.CleanupDegenerateElements", "mymesh.utils.DeleteDegenerateElements", "mymesh.utils.DeleteDuplicateNodes", "mymesh.utils.DetectFeatures", "mymesh.utils.DilateVoxel", "mymesh.utils.ErodeVoxel", "mymesh.utils.ExtractRagged", "mymesh.utils.Face2NodeNormal", "mymesh.utils.MVBB", "mymesh.utils.MergeMesh", "mymesh.utils.MirrorMesh", "mymesh.utils.PadRagged", "mymesh.utils.Project2Surface", "mymesh.utils.RelabelNodes", "mymesh.utils.SortRaggedByLength", "mymesh.utils.SplitRaggedByLength", "mymesh.utils.SurfMapping", "mymesh.utils.TetMeshVol", "mymesh.utils.TriSurfVol", "mymesh.utils.ValueMapping", "mymesh.utils.getConnectedElements", "mymesh.utils.getConnectedNodes", "mymesh.utils.getElemConnectivity", "mymesh.utils.getElemNeighbors", "mymesh.utils.getNodeNeighborhood", "mymesh.utils.getNodeNeighborhoodByRadius", "mymesh.utils.getNodeNeighbors", "mymesh.utils.identify_elem", "mymesh.utils.identify_type", "mymesh.utils.makePyramidLayer", "mymesh.visualize.FaceColor", "mymesh.visualize.GetTheme", "mymesh.visualize.ParseColor", "mymesh.visualize.Subplot", "mymesh.visualize.View", "mymesh.visualize.set_vispy_backend", "User Guide", "Connectivity Representations", "Constructive Solid Geometry", "Element Types", "Getting Started", "Image-based Meshing", "Implicit Meshing", "Installation", "File Input/Output", "Using MyMesh in MATLAB", "Working with the <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">mesh</span></code> class", "References", "What is a mesh?", "MyMesh: General purpose, implicit, and image-based meshing in python", "Computation times", "mymesh.demo_image", "mymesh.demo_mesh", "Theory Guide", "Contour", "Curvature", "Delaunay Triangulation", "Edge Contraction", "2\u21923 and 3\u21922 Flips", "implicit", "Improvement", "Laplacian Smoothing", "Octree", "Rays", "Spring-based Smoothing"], "titleterms": {"2": 452, "2d": [89, 431, 442], "3": 452, "33": 448, "3d": [89, 442], "On": 440, "aabb": [61, 388], "acknowledg": 443, "adapt": 98, "addedg": 62, "addelem": 63, "addfac": 64, "addnod": 65, "affin": 317, "affine2d": 318, "alpha2d": 164, "alpha3d": 165, "alphapeel3d": 166, "alphashap": 167, "an": [5, 436], "analysi": [2, 3, 10], "analyt": 449, "analyticalcurvatur": 154, "api": 0, "area": 244, "aspectratio": 245, "axisalignimag": 302, "axisalignpoint": 303, "barytet": 389, "barytri": [390, 391], "base": [19, 435, 443, 449, 458], "boolean": [12, 96, 97], "bound": 66, "boundari": [23, 457], "boundaryboundaryintersect": 264, "boundaryconn": 24, "boundarynod": 25, "bowyer": 450, "bowyerwatson2d": 168, "bowyerwatson3d": 169, "box": [188, 231, 457], "boxboxintersect": 265, "boxtrianglesintersect": 266, "calcfacenorm": 392, "calcul": [2, 15, 90, 449], "caviti": 450, "cell": 67, "centroid": [26, 393], "circl": 232, "circlept": 233, "circumcircl": 450, "class": 440, "cleanup": [68, 94], "cleanupdegenerateel": 394, "cleardata": [346, 367, 381], "clip": [27, 440], "closest_point_ms": 319, "cloud": 456, "comput": [4, 9, 11, 444], "connect": [14, 94, 431], "construct": [89, 432], "containsbox": 341, "containsedg": 363, "containspt": [342, 364], "containstri": 343, "contour": [13, 28, 98, 99, 100, 101, 102, 103, 104, 105, 440, 448], "contract": [221, 451], "convent": 449, "convers": [14, 15, 93], "convert": [14, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "convexhul": 170, "copi": [69, 440], "core": 437, "creat": 5, "createboundarylay": 29, "creation": 93, "crop": 30, "csg": 432, "cube": 448, "cubic": 449, "cubicfit": 155, "curvatur": [2, 15, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 449], "curved": [156, 449], "cylind": [189, 234], "data": 452, "defin": [5, 436], "definit": 456, "delaunai": [16, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 450], "deletedegenerateel": 395, "deleteduplicatenod": 396, "demand": 440, "demo_imag": [17, 445], "demo_mesh": [18, 446], "depend": 437, "detectfeatur": 397, "develop": 1, "diamond": 190, "dice": 320, "diff": [191, 193], "difff": 192, "dihedralangl": 256, "dilatevoxel": 398, "distanc": 456, "do": 434, "edg": [33, 451, 452], "edge2quadrat": 107, "edge32linear": 108, "edgeconn": 31, "edgeelemconn": 32, "edges2quadtre": 336, "edges2uniqu": 109, "edgesbyel": 106, "elemconn": 34, "element": [14, 433, 452], "elemneighbor": 35, "elemnorm": 36, "elemtyp": 37, "equiangular_skew": 257, "erodevoxel": 399, "error": [2, 456], "euclidean": 456, "eulercharacterist": 38, "exampl": [3, 8, 10, 431, 443], "explicit": 432, "extractrag": 400, "extrud": 235, "face": [41, 452], "face2nodenorm": 401, "facecolor": 424, "faceconn": 39, "faceelemconn": 40, "faces2surfac": 110, "faces2uniqu": 111, "fantriangul": 171, "featur": 1, "file": [19, 438], "fit": 449, "flip": 452, "format": 450, "from": [93, 437, 440], "function": [0, 5, 20, 90, 436, 456], "function2octre": 337, "gaussian": 449, "gaussiancurvatur": 157, "gener": [8, 10, 19, 20, 443, 456], "genu": 42, "geometri": 432, "geotransformsmooth": 222, "get": 434, "getallleaf": 387, "getconnectedel": 414, "getconnectednod": 415, "getcurvatur": 70, "getelemconnect": 416, "getelemneighbor": 417, "getlevel": [347, 368, 382], "getlimit": [348, 369], "getmaxdepth": [349, 370, 383], "getnodeneighbor": 420, "getnodeneighborhood": 418, "getnodeneighborhoodbyradiu": 419, "getqual": 71, "getthem": 425, "getvertic": [350, 371], "giftwrap": 172, "grid": 236, "grid2d": 237, "grid2fun": 194, "grid2grad": 195, "guid": [430, 447], "gyroid": 196, "haschildren": [351, 372, 384], "hausdorff": 321, "heart": 5, "helper": 90, "hex202linear": 112, "hex2edg": 113, "hex2fac": 114, "hex2quadrat": 115, "hex2tet": 116, "hexsubdivid": 117, "hull": 16, "i": [436, 442], "icp": 304, "identify_elem": 421, "identify_typ": [72, 422], "im2voxel": 118, "imag": [19, 177, 178, 179, 180, 181, 182, 183, 435, 438, 443], "image2imag": 305, "imagecurvatur": 158, "imageoverlai": 306, "implicit": [5, 20, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 432, 436, 443, 453, 456], "import": 430, "improv": [21, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 454], "imread": 73, "inclus": 457, "index": [437, 449], "initi": 450, "input": 438, "insert": 450, "insid": 91, "instal": 437, "interpret": 449, "intersect": [91, 197, 199, 457], "intersectionf": 198, "inverseorthogon": 247, "inverseorthogonalqu": 246, "io": 19, "jaccard": 322, "laplacian": 455, "lidinoid": 200, "line": [238, 442], "linear2quadrat": 119, "local": 21, "locallaplaciansmooth": 223, "locat": 450, "makechildren": [352, 373], "makechildrenbox": 353, "makechildrenedg": 374, "makechildrenpt": [354, 375], "makechildrentri": 355, "makepyramidlay": 423, "manipul": 94, "march": 448, "marchingcub": 99, "marchingcubesimag": 100, "marchingel": 101, "marchingsquar": 102, "marchingsquaresimag": 103, "marchingtetrahedra": 104, "marchingtriangl": 105, "matlab": 439, "maxdihedr": 248, "mean": 449, "meancurvatur": 159, "meanratio": 249, "measur": [2, 94], "merg": 74, "mergemesh": 403, "mesh": [3, 8, 10, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 94, 435, 436, 438, 440, 442, 443, 449, 456], "mesh2dmesh": 75, "mesh2im": 120, "mesh2mesh": 307, "mesh2udf": 201, "meshboolean": 96, "meshio2mymesh": 76, "meshnod": 43, "method": [22, 340, 362, 380], "metric": [90, 92, 449], "mindihedr": 250, "mirror": 44, "mirrormesh": 404, "miscellan": 94, "mix": 6, "mixed_topologi": 202, "modif": 454, "multilin": 239, "mutual_inform": 323, "mvbb": [77, 402], "mymesh": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 435, 439, 443, 445, 446], "mymesh2meshio": 78, "nd": 45, "nedg": 46, "need": 443, "nelem": 47, "neoviu": 203, "nface": 48, "nnode": 49, "node": [21, 454, 458], "nodeneighbor": 50, "nodenorm": 51, "nodenormalsmethod": 52, "nodespringsmooth": 224, "normcurv": 160, "object": 0, "octre": [93, 456], "octree2du": 338, "octree2voxel": 339, "octreenod": [340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356], "offset": 204, "oper": [12, 20], "optim": [92, 324], "option": 437, "orthogon": 252, "orthogonalqu": 251, "other": 20, "output": 438, "outsid": 91, "overview": 430, "packag": [430, 437], "padrag": 405, "parsecolor": 426, "pasta": 7, "pixelmesh": 177, "plan": 1, "planar": 442, "plane": [205, 240, 457], "planeboxintersect": 267, "planesurfintersect": 268, "planetriangleintersect": 269, "planetrianglesintersect": 270, "plot": 79, "point": [80, 450, 456, 457], "point2point": 308, "pointinboundari": 271, "pointinbox": 272, "pointinbox2d": 273, "pointinnod": [344, 365], "pointinsurf": 274, "pointintet": 275, "pointintri": 276, "points2octre": 357, "points2quadtre": 358, "pointsinnod": [345, 366], "pointsinsurf": 277, "pointsintri": 278, "pointsinvoxel": 279, "polygon2edg": 121, "primit": [89, 206, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "princip": 449, "print": 359, "procedur": 452, "project": 94, "project2surfac": 406, "properti": [22, 340, 362, 380, 440], "prune": [356, 376, 385], "purpos": 443, "pypi": 437, "pyr132linear": 122, "pyr2quadrat": 123, "pyramid2edg": 124, "pyramid2fac": 125, "pyramid2tet": 126, "python": [437, 443], "quad2edg": 127, "quad2quadrat": 128, "quad2tri": 129, "quad82linear": 130, "quad_skew": 258, "quadfit": 161, "quadrat": 449, "quadratic2linear": 131, "quadtre": 93, "quadtree2du": 360, "quadtree2pixel": 361, "quadtreenod": [362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376], "qualiti": [90, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263], "queri": 93, "r2d": 309, "r3d": 310, "rai": [91, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 457], "rayboundaryintersect": 280, "rayboxesintersect": 282, "rayboxintersect": 281, "rayoctreeintersect": 283, "raysegmentintersect": 284, "raysegmentsintersect": 285, "rayssurfintersect": 289, "raystrianglesintersect": 290, "raysurfintersect": 286, "raytriangleintersect": 287, "raytrianglesintersect": 288, "read": [81, 182], "reconstruct": 453, "refer": [0, 441], "regist": [92, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335], "registr": 92, "relabelnod": 407, "removeelem": 82, "renumberfacesbyset": 53, "renumbernodesbyset": 54, "reposit": [21, 454], "represent": 431, "reset": 83, "retriangul": 450, "revolv": 241, "rigid": 325, "rigid2d": 326, "rmax": 207, "rmin": 208, "roadmap": 1, "rotat": 327, "rotation2d": 328, "s2d": 311, "s3d": 312, "scipi": 173, "searchoctre": 377, "searchoctreetri": 378, "segment": 457, "segmentbox2dintersect": 291, "segmentboxintersect": 292, "segmentsegmentintersect": 293, "segmentspringsmooth": 225, "segmentssegmentsintersect": 294, "set_vispy_backend": 429, "sh2d": 313, "sh3d": 314, "shape": [7, 89, 449, 457], "shapecategori": 162, "shapeindex": 163, "similar": [92, 329], "similarity2d": 330, "skew": 253, "smart": 455, "smartlaplaciansmooth": 226, "smooth": [5, 21, 455, 458], "solid": 432, "solid2edg": 132, "solid2fac": 133, "solid2surfac": 134, "solid2tet": 135, "sortraggedbylength": 408, "sourc": 437, "sphere": [209, 242], "splitmesh": 97, "splitraggedbylength": 409, "spring": 458, "squar": 448, "start": 434, "statement": 443, "structur": 452, "submodul": 0, "subplot": 427, "summari": 443, "surf": 442, "surf2dual": 136, "surf2edg": 137, "surf2tri": 138, "surf2voxel": 139, "surfac": [5, 59, 94, 442, 449, 453, 456, 457], "surface2octre": 379, "surfacemesh": [178, 184], "surfacenodeoptim": [179, 185], "surfconn": 55, "surfdihedralangl": 254, "surfelemconn": 56, "surfmap": 410, "surfnod": 58, "surfnodeneighbor": 57, "surfselfintersect": 295, "surfsurfintersect": 296, "symmetric_closest_point_ms": 331, "t2d": 315, "t3d": 316, "tabl": 452, "tangenti": 455, "tangentiallaplaciansmooth": 227, "test": [91, 450, 457], "tet102linear": 140, "tet2edg": 141, "tet2fac": 142, "tet2quadrat": 143, "tet_circumradiu": 259, "tet_vol_skew": 260, "tet_volum": 261, "tetflip": 228, "tetimprov": 229, "tetmesh": [180, 186], "tetmeshvol": 411, "tetrahedr": [16, 174], "tetrahedra": 448, "tetsplit": 230, "tetsubdivid": 144, "theori": 447, "thicken": [210, 212], "thickenf": 211, "threshold": [60, 440], "time": [4, 9, 11, 444], "tip": 439, "to_meshio": 84, "to_pyvista": 85, "topolog": 454, "topologi": [6, 21], "toru": [213, 243], "tpm": [6, 214], "transform": 92, "transform_imag": 332, "transform_point": 333, "translat": 334, "translation2d": 335, "tree": [93, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387], "treenod": [380, 381, 382, 383, 384, 385], "tri2edg": 145, "tri2quadrat": 146, "tri62linear": 147, "tri_area": 262, "tri_skew": 263, "triangl": [175, 457], "triangleboxintersect": 297, "trianglestrianglesintersect": 300, "trianglestrianglesintersectionpt": 301, "triangletriangleintersect": 298, "triangletriangleintersectionpt": 299, "triangul": [16, 176, 450], "trisurfvol": 412, "type": [14, 433, 442], "union": [215, 217], "unionf": 216, "unpack": 440, "us": 439, "user": 430, "util": [20, 93, 94, 95, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423], "valid": 86, "valuemap": 413, "view": [87, 428], "visual": [92, 95, 424, 425, 426, 427, 428, 429], "vol": 442, "volum": [255, 442], "voxel": [442, 456], "voxel2im": 148, "voxel2octre": 386, "voxelmesh": [181, 187], "want": 434, "watson": 450, "wdg152linear": 149, "wdg2quadrat": 150, "wedge2edg": 151, "wedge2fac": 152, "wedge2tet": 153, "what": [434, 436, 442], "work": 440, "write": [88, 183], "xplane": 218, "you": 434, "yplane": 219, "zplane": 220}})