Search.setIndex({"alltitles": {"2D Example": [[429, "d-example"]], "2D Planar Meshes": [[440, "d-planar-meshes"]], "2D to 3D Constructions": [[89, "d-to-3d-constructions"]], "2\u21923 and 3\u21922 Flips": [[450, null]], "3D Surfaces": [[440, "d-surfaces"]], "API Reference": [[0, null]], "Acknowledgements": [[441, "acknowledgements"]], "Analytical Curvature": [[447, "analytical-curvature"]], "Bowyer-Watson": [[448, "bowyer-watson"]], "Bowyer-Watson: Initialization": [[448, "bowyer-watson-initialization"]], "Bowyer-Watson: Point Insertion": [[448, "bowyer-watson-point-insertion"]], "Calculating Curvature": [[447, "calculating-curvature"]], "Cavity Formation": [[448, "cavity-formation"]], "Circumcircle Test": [[448, "circumcircle-test"]], "Clip()": [[438, "clip"]], "Computation times": [[4, null], [9, null], [11, null], [442, null]], "Connectivity Representations": [[429, null]], "Connectivity conversion": [[14, "connectivity-conversion"]], "Constructive Solid Geometry": [[430, null]], "Contour": [[446, null]], "Contour()": [[438, "contour"]], "Contouring": [[13, "contouring"]], "Conventions": [[447, "conventions"]], "Conversion From Octree": [[93, "conversion-from-octree"]], "Conversion From Quadtree": [[93, "conversion-from-quadtree"]], "Core dependencies": [[435, "core-dependencies"]], "Creating a Surface": [[5, "creating-a-surface"]], "Cubic Surface Fitting": [[447, "cubic-surface-fitting"]], "Curvature": [[447, null]], "Curvature Analysis": [[2, null]], "Curvature Calculation": [[15, "curvature-calculation"]], "Curvature Conversion": [[15, "curvature-conversion"]], "Curvature Metrics": [[447, "curvature-metrics"]], "Curvature calculation": [[2, "curvature-calculation"]], "Curvedness": [[447, "curvedness"]], "Data Structure": [[450, "data-structure"]], "Defining an implicit function": [[5, "defining-an-implicit-function"]], "Defining implicit functions": [[434, "defining-implicit-functions"]], "Delaunay Triangulation": [[448, null]], "Dependencies": [[435, "dependencies"]], "Development": [[1, null]], "Edge Contraction": [[449, null]], "Edge Table": [[450, "id3"]], "Element Table": [[450, "id1"]], "Element Types": [[431, null]], "Element type conversion": [[14, "element-type-conversion"]], "Error Measurement": [[2, "error-measurement"]], "Euclidean Distance Error": [[454, "euclidean-distance-error"]], "Examples": [[10, null], [441, "examples"]], "Explicit CSG": [[430, "explicit-csg"]], "Face Table": [[450, "id2"]], "File IO": [[19, "file-io"]], "File Input/Output": [[436, null]], "Flipping Procedure": [[450, "flipping-procedure"]], "From meshes to meshes": [[438, "from-meshes-to-meshes"]], "Functions": [[0, "functions"]], "Gaussian Curvature": [[447, "gaussian-curvature"]], "Generating Octrees": [[454, "generating-octrees"]], "Getting Started": [[432, null]], "Hulls": [[16, "hulls"]], "Image files": [[436, "image-files"]], "Image-based Mesh Generation": [[19, "image-based-mesh-generation"]], "Image-based Meshing": [[433, null]], "Images in MyMesh": [[433, "images-in-mymesh"]], "Implicit CSG": [[430, "implicit-csg"]], "Implicit Function Octrees": [[454, "implicit-function-octrees"]], "Implicit Function Operators": [[20, "implicit-function-operators"]], "Implicit Functions": [[20, "implicit-functions"]], "Implicit Heart": [[5, null]], "Implicit Meshing": [[434, null]], "Importing MyMesh": [[428, "importing-mymesh"]], "Improvement": [[452, null]], "Inside/Outside Tests": [[91, "inside-outside-tests"]], "Installation": [[435, null]], "Installing from source:": [[435, "installing-from-source"]], "Interpretation": [[447, "interpretation"]], "Intersection Tests": [[91, "intersection-tests"]], "Laplacian Smoothing": [[453, null]], "Line Meshes (Type='line')": [[440, "line-meshes-type-line"]], "Local mesh topology": [[21, "local-mesh-topology"]], "Marching Cubes": [[446, "marching-cubes"]], "Marching Cubes 33": [[446, "marching-cubes-33"]], "Marching Squares": [[446, "marching-squares"]], "Marching Tetrahedra": [[446, "marching-tetrahedra"]], "Mean Curvature": [[447, "mean-curvature"]], "Mesh Analysis Examples": [[3, null], [10, "mesh-analysis-examples"]], "Mesh Cleanup": [[94, "mesh-cleanup"]], "Mesh Connectivity": [[94, "mesh-connectivity"]], "Mesh Generation": [[20, "mesh-generation"]], "Mesh Generation Examples": [[8, null], [10, "mesh-generation-examples"]], "Mesh Manipulations": [[94, "mesh-manipulations"]], "Mesh Measurements": [[94, "mesh-measurements"]], "Mesh Types": [[440, "mesh-types"]], "Mesh files": [[436, "mesh-files"]], "Mesh smoothing/node repositioning": [[21, "mesh-smoothing-node-repositioning"]], "Mesh type conversion": [[14, "mesh-type-conversion"]], "Mesh-Based Curvature": [[447, "mesh-based-curvature"]], "Meshing Implicit Functions": [[434, "meshing-implicit-functions"]], "Methods": [[22, "methods"], [338, "methods"], [360, "methods"], [378, "methods"]], "Miscellaneous": [[94, "miscellaneous"]], "Mixed-Topology TPMS": [[6, null]], "MyMesh: General purpose, implicit, and image-based meshing in python": [[441, null]], "Node Repositioning": [[452, "node-repositioning"]], "Node Spring-based": [[456, "node-spring-based"]], "Objects": [[0, "objects"]], "Octree": [[93, "octree"], [454, null]], "Octree Creation": [[93, "octree-creation"]], "Octree Definition": [[454, "octree-definition"]], "Octree Querying": [[93, "octree-querying"]], "On-demand properties": [[438, "on-demand-properties"]], "Operations": [[12, "operations"]], "Optimization": [[92, "optimization"]], "Optional dependencies": [[435, "optional-dependencies"]], "Other Implicit Mesh Utilities": [[20, "other-implicit-mesh-utilities"]], "Package Overview": [[428, "package-overview"]], "Pasta Shapes": [[7, null]], "Plane-Box Intersection": [[455, "plane-box-intersection"]], "Plane-Shape Intersection Tests": [[455, "plane-shape-intersection-tests"]], "Plane-Triangle Intersection": [[455, "plane-triangle-intersection"]], "Point Cloud Octrees": [[454, "point-cloud-octrees"]], "Point Inclusion Tests": [[455, "point-inclusion-tests"]], "Point Location": [[448, "point-location"]], "Point in Boundary": [[455, "point-in-boundary"]], "Point in Surface": [[455, "point-in-surface"]], "Principal Curvatures": [[447, "principal-curvatures"]], "Properties": [[22, "properties"], [338, "properties"], [360, "properties"], [378, "properties"]], "Python Package Index (PyPI)": [[435, "python-package-index-pypi"]], "Quadratic Surface Fitting": [[447, "quadratic-surface-fitting"]], "Quadtree": [[93, "quadtree"]], "Quadtree Creation": [[93, "quadtree-creation"]], "Quality Calculation Helper Functions": [[90, "quality-calculation-helper-functions"]], "Quality Metrics": [[90, "quality-metrics"]], "Ray-Box Intersection": [[455, "ray-box-intersection"]], "Ray-Segment Intersection": [[455, "ray-segment-intersection"]], "Ray-Shape Intersection Tests": [[455, "ray-shape-intersection-tests"]], "Ray-Triangle Intersection": [[455, "ray-triangle-intersection"]], "Rays": [[455, null]], "References": [[439, null]], "Registration": [[92, "registration"]], "Retriangulation": [[448, "retriangulation"]], "Roadmap & Planned features": [[1, "roadmap-planned-features"]], "Segment-Segment Intersection": [[455, "segment-segment-intersection"]], "Shape Index": [[447, "shape-index"]], "Shape-Shape Intersection Tests": [[455, "shape-shape-intersection-tests"]], "Shapes": [[89, "shapes"]], "Similarity Metrics": [[92, "similarity-metrics"]], "Smart Laplacian Smoothing": [[453, "smart-laplacian-smoothing"]], "Smoothing": [[5, "smoothing"]], "Spring-based Smoothing": [[456, null]], "Statement of need": [[441, "statement-of-need"]], "Submodules": [[0, "submodules"]], "Summary": [[441, "summary"]], "Surface Mesh Octrees": [[454, "surface-mesh-octrees"]], "Surface Meshes (Type='surf')": [[440, "surface-meshes-type-surf"]], "Surface Projection": [[94, "surface-projection"]], "Surface Reconstruction": [[451, "surface-reconstruction"]], "Tangential Laplacian Smoothing": [[453, "tangential-laplacian-smoothing"]], "Tetrahedralization": [[16, "tetrahedralization"]], "Theory Guide": [[445, null]], "Threshold()": [[438, "threshold"]], "Tips for using MyMesh in MATLAB": [[437, "tips-for-using-mymesh-in-matlab"]], "Topological Modifications": [[452, "topological-modifications"]], "Transformation": [[92, "transformation"]], "Tree": [[93, "tree"]], "Tree Utilities": [[93, "tree-utilities"]], "Triangle-Box Intersection": [[455, "triangle-box-intersection"]], "Triangle-Triangle Intersection": [[455, "triangle-triangle-intersection"]], "Triangulation": [[16, "triangulation"]], "Unpacking": [[438, "unpacking"]], "User Guide": [[428, null]], "Using MyMesh in MATLAB": [[437, null]], "Visualization": [[92, "visualization"], [95, "visualization"]], "Visualization Utilities": [[95, "visualization-utilities"]], "Volume Meshes (Type='vol')": [[440, "volume-meshes-type-vol"]], "Voxel Meshes": [[440, "voxel-meshes"]], "Voxel Octrees": [[454, "voxel-octrees"]], "What do you want to do?": [[432, "what-do-you-want-to-do"]], "What is a mesh?": [[440, null]], "What is an implicit function?": [[434, "what-is-an-implicit-function"]], "Working with the mesh class": [[438, null]], "copy()": [[438, "copy"]], "implicit": [[451, null]], "mymesh.booleans": [[12, null]], "mymesh.booleans.MeshBooleans": [[96, null]], "mymesh.booleans.SplitMesh": [[97, null]], "mymesh.contour": [[13, null]], "mymesh.contour.Adaptive": [[98, null]], "mymesh.contour.MarchingCubes": [[99, null]], "mymesh.contour.MarchingCubesImage": [[100, null]], "mymesh.contour.MarchingElements": [[101, null]], "mymesh.contour.MarchingSquares": [[102, null]], "mymesh.contour.MarchingSquaresImage": [[103, null]], "mymesh.contour.MarchingTetrahedra": [[104, null]], "mymesh.contour.MarchingTriangles": [[105, null]], "mymesh.converter": [[14, null]], "mymesh.converter.EdgesByElement": [[106, null]], "mymesh.converter.edge2quadratic": [[107, null]], "mymesh.converter.edge32linear": [[108, null]], "mymesh.converter.edges2unique": [[109, null]], "mymesh.converter.faces2surface": [[110, null]], "mymesh.converter.faces2unique": [[111, null]], "mymesh.converter.hex202linear": [[112, null]], "mymesh.converter.hex2edges": [[113, null]], "mymesh.converter.hex2faces": [[114, null]], "mymesh.converter.hex2quadratic": [[115, null]], "mymesh.converter.hex2tet": [[116, null]], "mymesh.converter.hexsubdivide": [[117, null]], "mymesh.converter.im2voxel": [[118, null]], "mymesh.converter.linear2quadratic": [[119, null]], "mymesh.converter.mesh2im": [[120, null]], "mymesh.converter.polygon2edges": [[121, null]], "mymesh.converter.pyr132linear": [[122, null]], "mymesh.converter.pyr2quadratic": [[123, null]], "mymesh.converter.pyramid2edges": [[124, null]], "mymesh.converter.pyramid2faces": [[125, null]], "mymesh.converter.pyramid2tet": [[126, null]], "mymesh.converter.quad2edges": [[127, null]], "mymesh.converter.quad2quadratic": [[128, null]], "mymesh.converter.quad2tri": [[129, null]], "mymesh.converter.quad82linear": [[130, null]], "mymesh.converter.quadratic2linear": [[131, null]], "mymesh.converter.solid2edges": [[132, null]], "mymesh.converter.solid2faces": [[133, null]], "mymesh.converter.solid2surface": [[134, null]], "mymesh.converter.solid2tets": [[135, null]], "mymesh.converter.surf2dual": [[136, null]], "mymesh.converter.surf2edges": [[137, null]], "mymesh.converter.surf2tris": [[138, null]], "mymesh.converter.surf2voxel": [[139, null]], "mymesh.converter.tet102linear": [[140, null]], "mymesh.converter.tet2edges": [[141, null]], "mymesh.converter.tet2faces": [[142, null]], "mymesh.converter.tet2quadratic": [[143, null]], "mymesh.converter.tetsubdivide": [[144, null]], "mymesh.converter.tri2edges": [[145, null]], "mymesh.converter.tri2quadratic": [[146, null]], "mymesh.converter.tri62linear": [[147, null]], "mymesh.converter.voxel2im": [[148, null]], "mymesh.converter.wdg152linear": [[149, null]], "mymesh.converter.wdg2quadratic": [[150, null]], "mymesh.converter.wedge2edges": [[151, null]], "mymesh.converter.wedge2faces": [[152, null]], "mymesh.converter.wedge2tet": [[153, null]], "mymesh.curvature": [[15, null]], "mymesh.curvature.AnalyticalCurvature": [[154, null]], "mymesh.curvature.CubicFit": [[155, null]], "mymesh.curvature.Curvedness": [[156, null]], "mymesh.curvature.GaussianCurvature": [[157, null]], "mymesh.curvature.ImageCurvature": [[158, null]], "mymesh.curvature.MeanCurvature": [[159, null]], "mymesh.curvature.NormCurve": [[160, null]], "mymesh.curvature.QuadFit": [[161, null]], "mymesh.curvature.ShapeCategory": [[162, null]], "mymesh.curvature.ShapeIndex": [[163, null]], "mymesh.delaunay": [[16, null]], "mymesh.delaunay.Alpha2d": [[164, null]], "mymesh.delaunay.Alpha3d": [[165, null]], "mymesh.delaunay.AlphaPeel3d": [[166, null]], "mymesh.delaunay.AlphaShape": [[167, null]], "mymesh.delaunay.BowyerWatson2d": [[168, null]], "mymesh.delaunay.BowyerWatson3d": [[169, null]], "mymesh.delaunay.ConvexHull": [[170, null]], "mymesh.delaunay.FanTriangulation": [[171, null]], "mymesh.delaunay.GiftWrapping": [[172, null]], "mymesh.delaunay.SciPy": [[173, null]], "mymesh.delaunay.Tetrahedralize": [[174, null]], "mymesh.delaunay.Triangle": [[175, null]], "mymesh.delaunay.Triangulate": [[176, null]], "mymesh.demo_image": [[17, null], [443, null]], "mymesh.demo_mesh": [[18, null], [444, null]], "mymesh.image": [[19, null]], "mymesh.image.PixelMesh": [[177, null]], "mymesh.image.SurfaceMesh": [[178, null]], "mymesh.image.SurfaceNodeOptimization": [[179, null]], "mymesh.image.TetMesh": [[180, null]], "mymesh.image.VoxelMesh": [[181, null]], "mymesh.image.read": [[182, null]], "mymesh.image.write": [[183, null]], "mymesh.implicit": [[20, null]], "mymesh.implicit.SurfaceMesh": [[184, null]], "mymesh.implicit.SurfaceNodeOptimization": [[185, null]], "mymesh.implicit.TetMesh": [[186, null]], "mymesh.implicit.VoxelMesh": [[187, null]], "mymesh.implicit.box": [[188, null]], "mymesh.implicit.cylinder": [[189, null]], "mymesh.implicit.diamond": [[190, null]], "mymesh.implicit.diff": [[191, null]], "mymesh.implicit.difff": [[192, null]], "mymesh.implicit.diffs": [[193, null]], "mymesh.implicit.grid2fun": [[194, null]], "mymesh.implicit.grid2grad": [[195, null]], "mymesh.implicit.gyroid": [[196, null]], "mymesh.implicit.intersection": [[197, null]], "mymesh.implicit.intersectionf": [[198, null]], "mymesh.implicit.intersections": [[199, null]], "mymesh.implicit.lidinoid": [[200, null]], "mymesh.implicit.mesh2udf": [[201, null]], "mymesh.implicit.neovius": [[202, null]], "mymesh.implicit.offset": [[203, null]], "mymesh.implicit.plane": [[204, null]], "mymesh.implicit.primitive": [[205, null]], "mymesh.implicit.rMax": [[206, null]], "mymesh.implicit.rMin": [[207, null]], "mymesh.implicit.sphere": [[208, null]], "mymesh.implicit.thicken": [[209, null]], "mymesh.implicit.thickenf": [[210, null]], "mymesh.implicit.thickens": [[211, null]], "mymesh.implicit.torus": [[212, null]], "mymesh.implicit.union": [[213, null]], "mymesh.implicit.unionf": [[214, null]], "mymesh.implicit.unions": [[215, null]], "mymesh.implicit.xplane": [[216, null]], "mymesh.implicit.yplane": [[217, null]], "mymesh.implicit.zplane": [[218, null]], "mymesh.improvement": [[21, null]], "mymesh.improvement.Contract": [[219, null]], "mymesh.improvement.GeoTransformSmoothing": [[220, null]], "mymesh.improvement.LocalLaplacianSmoothing": [[221, null]], "mymesh.improvement.NodeSpringSmoothing": [[222, null]], "mymesh.improvement.SegmentSpringSmoothing": [[223, null]], "mymesh.improvement.SmartLaplacianSmoothing": [[224, null]], "mymesh.improvement.TangentialLaplacianSmoothing": [[225, null]], "mymesh.improvement.TetFlip": [[226, null]], "mymesh.improvement.TetImprove": [[227, null]], "mymesh.improvement.TetSplit": [[228, null]], "mymesh.mesh": [[22, null]], "mymesh.mesh.mesh.Boundary": [[23, null]], "mymesh.mesh.mesh.BoundaryConn": [[24, null]], "mymesh.mesh.mesh.BoundaryNodes": [[25, null]], "mymesh.mesh.mesh.Centroids": [[26, null]], "mymesh.mesh.mesh.Clip": [[27, null]], "mymesh.mesh.mesh.Contour": [[28, null]], "mymesh.mesh.mesh.CreateBoundaryLayer": [[29, null]], "mymesh.mesh.mesh.Crop": [[30, null]], "mymesh.mesh.mesh.EdgeConn": [[31, null]], "mymesh.mesh.mesh.EdgeElemConn": [[32, null]], "mymesh.mesh.mesh.Edges": [[33, null]], "mymesh.mesh.mesh.ElemConn": [[34, null]], "mymesh.mesh.mesh.ElemNeighbors": [[35, null]], "mymesh.mesh.mesh.ElemNormals": [[36, null]], "mymesh.mesh.mesh.ElemType": [[37, null]], "mymesh.mesh.mesh.EulerCharacteristic": [[38, null]], "mymesh.mesh.mesh.FaceConn": [[39, null]], "mymesh.mesh.mesh.FaceElemConn": [[40, null]], "mymesh.mesh.mesh.Faces": [[41, null]], "mymesh.mesh.mesh.Genus": [[42, null]], "mymesh.mesh.mesh.MeshNodes": [[43, null]], "mymesh.mesh.mesh.Mirror": [[44, null]], "mymesh.mesh.mesh.ND": [[45, null]], "mymesh.mesh.mesh.NEdge": [[46, null]], "mymesh.mesh.mesh.NElem": [[47, null]], "mymesh.mesh.mesh.NFace": [[48, null]], "mymesh.mesh.mesh.NNode": [[49, null]], "mymesh.mesh.mesh.NodeNeighbors": [[50, null]], "mymesh.mesh.mesh.NodeNormals": [[51, null]], "mymesh.mesh.mesh.NodeNormalsMethod": [[52, null]], "mymesh.mesh.mesh.RenumberFacesBySet": [[53, null]], "mymesh.mesh.mesh.RenumberNodesBySet": [[54, null]], "mymesh.mesh.mesh.SurfConn": [[55, null]], "mymesh.mesh.mesh.SurfElemConn": [[56, null]], "mymesh.mesh.mesh.SurfNodeNeighbors": [[57, null]], "mymesh.mesh.mesh.SurfNodes": [[58, null]], "mymesh.mesh.mesh.Surface": [[59, null]], "mymesh.mesh.mesh.Threshold": [[60, null]], "mymesh.mesh.mesh.aabb": [[61, null]], "mymesh.mesh.mesh.addEdges": [[62, null]], "mymesh.mesh.mesh.addElems": [[63, null]], "mymesh.mesh.mesh.addFaces": [[64, null]], "mymesh.mesh.mesh.addNodes": [[65, null]], "mymesh.mesh.mesh.bounds": [[66, null]], "mymesh.mesh.mesh.cells": [[67, null]], "mymesh.mesh.mesh.cleanup": [[68, null]], "mymesh.mesh.mesh.copy": [[69, null]], "mymesh.mesh.mesh.getCurvature": [[70, null]], "mymesh.mesh.mesh.getQuality": [[71, null]], "mymesh.mesh.mesh.identify_type": [[72, null]], "mymesh.mesh.mesh.imread": [[73, null]], "mymesh.mesh.mesh.merge": [[74, null]], "mymesh.mesh.mesh.mesh2dmesh": [[75, null]], "mymesh.mesh.mesh.meshio2mymesh": [[76, null]], "mymesh.mesh.mesh.mvbb": [[77, null]], "mymesh.mesh.mesh.mymesh2meshio": [[78, null]], "mymesh.mesh.mesh.plot": [[79, null]], "mymesh.mesh.mesh.points": [[80, null]], "mymesh.mesh.mesh.read": [[81, null]], "mymesh.mesh.mesh.removeElems": [[82, null]], "mymesh.mesh.mesh.reset": [[83, null]], "mymesh.mesh.mesh.to_meshio": [[84, null]], "mymesh.mesh.mesh.to_pyvista": [[85, null]], "mymesh.mesh.mesh.validate": [[86, null]], "mymesh.mesh.mesh.view": [[87, null]], "mymesh.mesh.mesh.write": [[88, null]], "mymesh.primitives": [[89, null]], "mymesh.primitives.Box": [[229, null]], "mymesh.primitives.Circle": [[230, null]], "mymesh.primitives.CirclePt": [[231, null]], "mymesh.primitives.Cylinder": [[232, null]], "mymesh.primitives.Extrude": [[233, null]], "mymesh.primitives.Grid": [[234, null]], "mymesh.primitives.Grid2D": [[235, null]], "mymesh.primitives.Line": [[236, null]], "mymesh.primitives.Multiline": [[237, null]], "mymesh.primitives.Plane": [[238, null]], "mymesh.primitives.Revolve": [[239, null]], "mymesh.primitives.Sphere": [[240, null]], "mymesh.primitives.Torus": [[241, null]], "mymesh.quality": [[90, null]], "mymesh.quality.Area": [[242, null]], "mymesh.quality.AspectRatio": [[243, null]], "mymesh.quality.InverseOrthogonalQuality": [[244, null]], "mymesh.quality.InverseOrthogonality": [[245, null]], "mymesh.quality.MaxDihedral": [[246, null]], "mymesh.quality.MeanRatio": [[247, null]], "mymesh.quality.MinDihedral": [[248, null]], "mymesh.quality.OrthogonalQuality": [[249, null]], "mymesh.quality.Orthogonality": [[250, null]], "mymesh.quality.Skewness": [[251, null]], "mymesh.quality.SurfDihedralAngles": [[252, null]], "mymesh.quality.Volume": [[253, null]], "mymesh.quality.dihedralAngles": [[254, null]], "mymesh.quality.equiangular_skewness": [[255, null]], "mymesh.quality.quad_skewness": [[256, null]], "mymesh.quality.tet_circumradius": [[257, null]], "mymesh.quality.tet_vol_skewness": [[258, null]], "mymesh.quality.tet_volume": [[259, null]], "mymesh.quality.tri_area": [[260, null]], "mymesh.quality.tri_skewness": [[261, null]], "mymesh.rays": [[91, null]], "mymesh.rays.BoundaryBoundaryIntersection": [[262, null]], "mymesh.rays.BoxBoxIntersection": [[263, null]], "mymesh.rays.BoxTrianglesIntersection": [[264, null]], "mymesh.rays.PlaneBoxIntersection": [[265, null]], "mymesh.rays.PlaneSurfIntersection": [[266, null]], "mymesh.rays.PlaneTriangleIntersection": [[267, null]], "mymesh.rays.PlaneTrianglesIntersection": [[268, null]], "mymesh.rays.PointInBoundary": [[269, null]], "mymesh.rays.PointInBox": [[270, null]], "mymesh.rays.PointInBox2D": [[271, null]], "mymesh.rays.PointInSurf": [[272, null]], "mymesh.rays.PointInTet": [[273, null]], "mymesh.rays.PointInTri": [[274, null]], "mymesh.rays.PointsInSurf": [[275, null]], "mymesh.rays.PointsInTris": [[276, null]], "mymesh.rays.PointsInVoxel": [[277, null]], "mymesh.rays.RayBoundaryIntersection": [[278, null]], "mymesh.rays.RayBoxIntersection": [[279, null]], "mymesh.rays.RayBoxesIntersection": [[280, null]], "mymesh.rays.RayOctreeIntersection": [[281, null]], "mymesh.rays.RaySegmentIntersection": [[282, null]], "mymesh.rays.RaySegmentsIntersection": [[283, null]], "mymesh.rays.RaySurfIntersection": [[284, null]], "mymesh.rays.RayTriangleIntersection": [[285, null]], "mymesh.rays.RayTrianglesIntersection": [[286, null]], "mymesh.rays.RaysSurfIntersection": [[287, null]], "mymesh.rays.RaysTrianglesIntersection": [[288, null]], "mymesh.rays.SegmentBox2DIntersection": [[289, null]], "mymesh.rays.SegmentBoxIntersection": [[290, null]], "mymesh.rays.SegmentSegmentIntersection": [[291, null]], "mymesh.rays.SegmentsSegmentsIntersection": [[292, null]], "mymesh.rays.SurfSelfIntersection": [[293, null]], "mymesh.rays.SurfSurfIntersection": [[294, null]], "mymesh.rays.TriangleBoxIntersection": [[295, null]], "mymesh.rays.TriangleTriangleIntersection": [[296, null]], "mymesh.rays.TriangleTriangleIntersectionPt": [[297, null]], "mymesh.rays.TrianglesTrianglesIntersection": [[298, null]], "mymesh.rays.TrianglesTrianglesIntersectionPts": [[299, null]], "mymesh.register": [[92, null]], "mymesh.register.AxisAlignImage": [[300, null]], "mymesh.register.AxisAlignPoints": [[301, null]], "mymesh.register.ICP": [[302, null]], "mymesh.register.Image2Image": [[303, null]], "mymesh.register.ImageOverlay": [[304, null]], "mymesh.register.Mesh2Mesh": [[305, null]], "mymesh.register.Point2Point": [[306, null]], "mymesh.register.R2d": [[307, null]], "mymesh.register.R3d": [[308, null]], "mymesh.register.S2d": [[309, null]], "mymesh.register.S3d": [[310, null]], "mymesh.register.Sh2d": [[311, null]], "mymesh.register.Sh3d": [[312, null]], "mymesh.register.T2d": [[313, null]], "mymesh.register.T3d": [[314, null]], "mymesh.register.affine": [[315, null]], "mymesh.register.affine2d": [[316, null]], "mymesh.register.closest_point_MSE": [[317, null]], "mymesh.register.dice": [[318, null]], "mymesh.register.hausdorff": [[319, null]], "mymesh.register.jaccard": [[320, null]], "mymesh.register.mutual_information": [[321, null]], "mymesh.register.optimize": [[322, null]], "mymesh.register.rigid": [[323, null]], "mymesh.register.rigid2d": [[324, null]], "mymesh.register.rotation": [[325, null]], "mymesh.register.rotation2d": [[326, null]], "mymesh.register.similarity": [[327, null]], "mymesh.register.similarity2d": [[328, null]], "mymesh.register.symmetric_closest_point_MSE": [[329, null]], "mymesh.register.transform_image": [[330, null]], "mymesh.register.transform_points": [[331, null]], "mymesh.register.translation": [[332, null]], "mymesh.register.translation2d": [[333, null]], "mymesh.tree": [[93, null]], "mymesh.tree.Edges2Quadtree": [[334, null]], "mymesh.tree.Function2Octree": [[335, null]], "mymesh.tree.Octree2Dual": [[336, null]], "mymesh.tree.Octree2Voxel": [[337, null]], "mymesh.tree.OctreeNode": [[338, null]], "mymesh.tree.OctreeNode.ContainsBoxes": [[339, null]], "mymesh.tree.OctreeNode.ContainsPts": [[340, null]], "mymesh.tree.OctreeNode.ContainsTris": [[341, null]], "mymesh.tree.OctreeNode.PointInNode": [[342, null]], "mymesh.tree.OctreeNode.PointsInNode": [[343, null]], "mymesh.tree.OctreeNode.clearData": [[344, null]], "mymesh.tree.OctreeNode.getLevel": [[345, null]], "mymesh.tree.OctreeNode.getLimits": [[346, null]], "mymesh.tree.OctreeNode.getMaxDepth": [[347, null]], "mymesh.tree.OctreeNode.getVertices": [[348, null]], "mymesh.tree.OctreeNode.hasChildren": [[349, null]], "mymesh.tree.OctreeNode.makeChildren": [[350, null]], "mymesh.tree.OctreeNode.makeChildrenBoxes": [[351, null]], "mymesh.tree.OctreeNode.makeChildrenPts": [[352, null]], "mymesh.tree.OctreeNode.makeChildrenTris": [[353, null]], "mymesh.tree.OctreeNode.prune": [[354, null]], "mymesh.tree.Points2Octree": [[355, null]], "mymesh.tree.Points2Quadtree": [[356, null]], "mymesh.tree.Print": [[357, null]], "mymesh.tree.Quadtree2Dual": [[358, null]], "mymesh.tree.Quadtree2Pixel": [[359, null]], "mymesh.tree.QuadtreeNode": [[360, null]], "mymesh.tree.QuadtreeNode.ContainsEdges": [[361, null]], "mymesh.tree.QuadtreeNode.ContainsPts": [[362, null]], "mymesh.tree.QuadtreeNode.PointInNode": [[363, null]], "mymesh.tree.QuadtreeNode.PointsInNode": [[364, null]], "mymesh.tree.QuadtreeNode.clearData": [[365, null]], "mymesh.tree.QuadtreeNode.getLevel": [[366, null]], "mymesh.tree.QuadtreeNode.getLimits": [[367, null]], "mymesh.tree.QuadtreeNode.getMaxDepth": [[368, null]], "mymesh.tree.QuadtreeNode.getVertices": [[369, null]], "mymesh.tree.QuadtreeNode.hasChildren": [[370, null]], "mymesh.tree.QuadtreeNode.makeChildren": [[371, null]], "mymesh.tree.QuadtreeNode.makeChildrenEdges": [[372, null]], "mymesh.tree.QuadtreeNode.makeChildrenPts": [[373, null]], "mymesh.tree.QuadtreeNode.prune": [[374, null]], "mymesh.tree.SearchOctree": [[375, null]], "mymesh.tree.SearchOctreeTri": [[376, null]], "mymesh.tree.Surface2Octree": [[377, null]], "mymesh.tree.TreeNode": [[378, null]], "mymesh.tree.TreeNode.clearData": [[379, null]], "mymesh.tree.TreeNode.getLevel": [[380, null]], "mymesh.tree.TreeNode.getMaxDepth": [[381, null]], "mymesh.tree.TreeNode.hasChildren": [[382, null]], "mymesh.tree.TreeNode.prune": [[383, null]], "mymesh.tree.Voxel2Octree": [[384, null]], "mymesh.tree.getAllLeaf": [[385, null]], "mymesh.utils": [[94, null]], "mymesh.utils.AABB": [[386, null]], "mymesh.utils.BaryTet": [[387, null]], "mymesh.utils.BaryTri": [[388, null]], "mymesh.utils.BaryTris": [[389, null]], "mymesh.utils.CalcFaceNormal": [[390, null]], "mymesh.utils.Centroids": [[391, null]], "mymesh.utils.CleanupDegenerateElements": [[392, null]], "mymesh.utils.DeleteDegenerateElements": [[393, null]], "mymesh.utils.DeleteDuplicateNodes": [[394, null]], "mymesh.utils.DetectFeatures": [[395, null]], "mymesh.utils.DilateVoxel": [[396, null]], "mymesh.utils.ErodeVoxel": [[397, null]], "mymesh.utils.ExtractRagged": [[398, null]], "mymesh.utils.Face2NodeNormal": [[399, null]], "mymesh.utils.MVBB": [[400, null]], "mymesh.utils.MergeMesh": [[401, null]], "mymesh.utils.MirrorMesh": [[402, null]], "mymesh.utils.PadRagged": [[403, null]], "mymesh.utils.Project2Surface": [[404, null]], "mymesh.utils.RelabelNodes": [[405, null]], "mymesh.utils.SortRaggedByLength": [[406, null]], "mymesh.utils.SplitRaggedByLength": [[407, null]], "mymesh.utils.SurfMapping": [[408, null]], "mymesh.utils.TetMeshVol": [[409, null]], "mymesh.utils.TriSurfVol": [[410, null]], "mymesh.utils.ValueMapping": [[411, null]], "mymesh.utils.getConnectedElements": [[412, null]], "mymesh.utils.getConnectedNodes": [[413, null]], "mymesh.utils.getElemConnectivity": [[414, null]], "mymesh.utils.getElemNeighbors": [[415, null]], "mymesh.utils.getNodeNeighborhood": [[416, null]], "mymesh.utils.getNodeNeighborhoodByRadius": [[417, null]], "mymesh.utils.getNodeNeighbors": [[418, null]], "mymesh.utils.identify_elem": [[419, null]], "mymesh.utils.identify_type": [[420, null]], "mymesh.utils.makePyramidLayer": [[421, null]], "mymesh.visualize": [[95, null]], "mymesh.visualize.FaceColor": [[422, null]], "mymesh.visualize.GetTheme": [[423, null]], "mymesh.visualize.ParseColor": [[424, null]], "mymesh.visualize.Subplot": [[425, null]], "mymesh.visualize.View": [[426, null]], "mymesh.visualize.set_vispy_backend": [[427, null]]}, "docnames": ["api", "dev", "examples/MeshAnalysis/demo_curvature", "examples/MeshAnalysis/index", "examples/MeshAnalysis/sg_execution_times", "examples/MeshGeneration/demo_heart", "examples/MeshGeneration/demo_mixed-top", "examples/MeshGeneration/demo_pasta", "examples/MeshGeneration/index", "examples/MeshGeneration/sg_execution_times", "examples/index", "examples/sg_execution_times", "generated/mymesh.booleans", "generated/mymesh.contour", "generated/mymesh.converter", "generated/mymesh.curvature", "generated/mymesh.delaunay", "generated/mymesh.demo_image", "generated/mymesh.demo_mesh", "generated/mymesh.image", "generated/mymesh.implicit", "generated/mymesh.improvement", "generated/mymesh.mesh", "generated/mymesh.mesh.mesh.Boundary", "generated/mymesh.mesh.mesh.BoundaryConn", "generated/mymesh.mesh.mesh.BoundaryNodes", "generated/mymesh.mesh.mesh.Centroids", "generated/mymesh.mesh.mesh.Clip", "generated/mymesh.mesh.mesh.Contour", "generated/mymesh.mesh.mesh.CreateBoundaryLayer", "generated/mymesh.mesh.mesh.Crop", "generated/mymesh.mesh.mesh.EdgeConn", "generated/mymesh.mesh.mesh.EdgeElemConn", "generated/mymesh.mesh.mesh.Edges", "generated/mymesh.mesh.mesh.ElemConn", "generated/mymesh.mesh.mesh.ElemNeighbors", "generated/mymesh.mesh.mesh.ElemNormals", "generated/mymesh.mesh.mesh.ElemType", "generated/mymesh.mesh.mesh.EulerCharacteristic", "generated/mymesh.mesh.mesh.FaceConn", "generated/mymesh.mesh.mesh.FaceElemConn", "generated/mymesh.mesh.mesh.Faces", "generated/mymesh.mesh.mesh.Genus", "generated/mymesh.mesh.mesh.MeshNodes", "generated/mymesh.mesh.mesh.Mirror", "generated/mymesh.mesh.mesh.ND", "generated/mymesh.mesh.mesh.NEdge", "generated/mymesh.mesh.mesh.NElem", "generated/mymesh.mesh.mesh.NFace", "generated/mymesh.mesh.mesh.NNode", "generated/mymesh.mesh.mesh.NodeNeighbors", "generated/mymesh.mesh.mesh.NodeNormals", "generated/mymesh.mesh.mesh.NodeNormalsMethod", "generated/mymesh.mesh.mesh.RenumberFacesBySet", "generated/mymesh.mesh.mesh.RenumberNodesBySet", "generated/mymesh.mesh.mesh.SurfConn", "generated/mymesh.mesh.mesh.SurfElemConn", "generated/mymesh.mesh.mesh.SurfNodeNeighbors", "generated/mymesh.mesh.mesh.SurfNodes", "generated/mymesh.mesh.mesh.Surface", "generated/mymesh.mesh.mesh.Threshold", "generated/mymesh.mesh.mesh.aabb", "generated/mymesh.mesh.mesh.addEdges", "generated/mymesh.mesh.mesh.addElems", "generated/mymesh.mesh.mesh.addFaces", "generated/mymesh.mesh.mesh.addNodes", "generated/mymesh.mesh.mesh.bounds", "generated/mymesh.mesh.mesh.cells", "generated/mymesh.mesh.mesh.cleanup", "generated/mymesh.mesh.mesh.copy", "generated/mymesh.mesh.mesh.getCurvature", "generated/mymesh.mesh.mesh.getQuality", "generated/mymesh.mesh.mesh.identify_type", "generated/mymesh.mesh.mesh.imread", "generated/mymesh.mesh.mesh.merge", "generated/mymesh.mesh.mesh.mesh2dmesh", "generated/mymesh.mesh.mesh.meshio2mymesh", "generated/mymesh.mesh.mesh.mvbb", "generated/mymesh.mesh.mesh.mymesh2meshio", "generated/mymesh.mesh.mesh.plot", "generated/mymesh.mesh.mesh.points", "generated/mymesh.mesh.mesh.read", "generated/mymesh.mesh.mesh.removeElems", "generated/mymesh.mesh.mesh.reset", "generated/mymesh.mesh.mesh.to_meshio", "generated/mymesh.mesh.mesh.to_pyvista", "generated/mymesh.mesh.mesh.validate", "generated/mymesh.mesh.mesh.view", "generated/mymesh.mesh.mesh.write", "generated/mymesh.primitives", "generated/mymesh.quality", "generated/mymesh.rays", "generated/mymesh.register", "generated/mymesh.tree", "generated/mymesh.utils", "generated/mymesh.visualize", "generated/submodules/mymesh.booleans.MeshBooleans", "generated/submodules/mymesh.booleans.SplitMesh", "generated/submodules/mymesh.contour.Adaptive", "generated/submodules/mymesh.contour.MarchingCubes", "generated/submodules/mymesh.contour.MarchingCubesImage", "generated/submodules/mymesh.contour.MarchingElements", "generated/submodules/mymesh.contour.MarchingSquares", "generated/submodules/mymesh.contour.MarchingSquaresImage", "generated/submodules/mymesh.contour.MarchingTetrahedra", "generated/submodules/mymesh.contour.MarchingTriangles", "generated/submodules/mymesh.converter.EdgesByElement", "generated/submodules/mymesh.converter.edge2quadratic", "generated/submodules/mymesh.converter.edge32linear", "generated/submodules/mymesh.converter.edges2unique", "generated/submodules/mymesh.converter.faces2surface", "generated/submodules/mymesh.converter.faces2unique", "generated/submodules/mymesh.converter.hex202linear", "generated/submodules/mymesh.converter.hex2edges", "generated/submodules/mymesh.converter.hex2faces", "generated/submodules/mymesh.converter.hex2quadratic", "generated/submodules/mymesh.converter.hex2tet", "generated/submodules/mymesh.converter.hexsubdivide", "generated/submodules/mymesh.converter.im2voxel", "generated/submodules/mymesh.converter.linear2quadratic", "generated/submodules/mymesh.converter.mesh2im", "generated/submodules/mymesh.converter.polygon2edges", "generated/submodules/mymesh.converter.pyr132linear", "generated/submodules/mymesh.converter.pyr2quadratic", "generated/submodules/mymesh.converter.pyramid2edges", "generated/submodules/mymesh.converter.pyramid2faces", "generated/submodules/mymesh.converter.pyramid2tet", "generated/submodules/mymesh.converter.quad2edges", "generated/submodules/mymesh.converter.quad2quadratic", "generated/submodules/mymesh.converter.quad2tri", "generated/submodules/mymesh.converter.quad82linear", "generated/submodules/mymesh.converter.quadratic2linear", "generated/submodules/mymesh.converter.solid2edges", "generated/submodules/mymesh.converter.solid2faces", "generated/submodules/mymesh.converter.solid2surface", "generated/submodules/mymesh.converter.solid2tets", "generated/submodules/mymesh.converter.surf2dual", "generated/submodules/mymesh.converter.surf2edges", "generated/submodules/mymesh.converter.surf2tris", "generated/submodules/mymesh.converter.surf2voxel", "generated/submodules/mymesh.converter.tet102linear", "generated/submodules/mymesh.converter.tet2edges", "generated/submodules/mymesh.converter.tet2faces", "generated/submodules/mymesh.converter.tet2quadratic", "generated/submodules/mymesh.converter.tetsubdivide", "generated/submodules/mymesh.converter.tri2edges", "generated/submodules/mymesh.converter.tri2quadratic", "generated/submodules/mymesh.converter.tri62linear", "generated/submodules/mymesh.converter.voxel2im", "generated/submodules/mymesh.converter.wdg152linear", "generated/submodules/mymesh.converter.wdg2quadratic", "generated/submodules/mymesh.converter.wedge2edges", "generated/submodules/mymesh.converter.wedge2faces", "generated/submodules/mymesh.converter.wedge2tet", "generated/submodules/mymesh.curvature.AnalyticalCurvature", "generated/submodules/mymesh.curvature.CubicFit", "generated/submodules/mymesh.curvature.Curvedness", "generated/submodules/mymesh.curvature.GaussianCurvature", "generated/submodules/mymesh.curvature.ImageCurvature", "generated/submodules/mymesh.curvature.MeanCurvature", "generated/submodules/mymesh.curvature.NormCurve", "generated/submodules/mymesh.curvature.QuadFit", "generated/submodules/mymesh.curvature.ShapeCategory", "generated/submodules/mymesh.curvature.ShapeIndex", "generated/submodules/mymesh.delaunay.Alpha2d", "generated/submodules/mymesh.delaunay.Alpha3d", "generated/submodules/mymesh.delaunay.AlphaPeel3d", "generated/submodules/mymesh.delaunay.AlphaShape", "generated/submodules/mymesh.delaunay.BowyerWatson2d", "generated/submodules/mymesh.delaunay.BowyerWatson3d", "generated/submodules/mymesh.delaunay.ConvexHull", "generated/submodules/mymesh.delaunay.FanTriangulation", "generated/submodules/mymesh.delaunay.GiftWrapping", "generated/submodules/mymesh.delaunay.SciPy", "generated/submodules/mymesh.delaunay.Tetrahedralize", "generated/submodules/mymesh.delaunay.Triangle", "generated/submodules/mymesh.delaunay.Triangulate", "generated/submodules/mymesh.image.PixelMesh", "generated/submodules/mymesh.image.SurfaceMesh", "generated/submodules/mymesh.image.SurfaceNodeOptimization", "generated/submodules/mymesh.image.TetMesh", "generated/submodules/mymesh.image.VoxelMesh", "generated/submodules/mymesh.image.read", "generated/submodules/mymesh.image.write", "generated/submodules/mymesh.implicit.SurfaceMesh", "generated/submodules/mymesh.implicit.SurfaceNodeOptimization", "generated/submodules/mymesh.implicit.TetMesh", "generated/submodules/mymesh.implicit.VoxelMesh", "generated/submodules/mymesh.implicit.box", "generated/submodules/mymesh.implicit.cylinder", "generated/submodules/mymesh.implicit.diamond", "generated/submodules/mymesh.implicit.diff", "generated/submodules/mymesh.implicit.difff", "generated/submodules/mymesh.implicit.diffs", "generated/submodules/mymesh.implicit.grid2fun", "generated/submodules/mymesh.implicit.grid2grad", "generated/submodules/mymesh.implicit.gyroid", "generated/submodules/mymesh.implicit.intersection", "generated/submodules/mymesh.implicit.intersectionf", "generated/submodules/mymesh.implicit.intersections", "generated/submodules/mymesh.implicit.lidinoid", "generated/submodules/mymesh.implicit.mesh2udf", "generated/submodules/mymesh.implicit.neovius", "generated/submodules/mymesh.implicit.offset", "generated/submodules/mymesh.implicit.plane", "generated/submodules/mymesh.implicit.primitive", "generated/submodules/mymesh.implicit.rMax", "generated/submodules/mymesh.implicit.rMin", "generated/submodules/mymesh.implicit.sphere", "generated/submodules/mymesh.implicit.thicken", "generated/submodules/mymesh.implicit.thickenf", "generated/submodules/mymesh.implicit.thickens", "generated/submodules/mymesh.implicit.torus", "generated/submodules/mymesh.implicit.union", "generated/submodules/mymesh.implicit.unionf", "generated/submodules/mymesh.implicit.unions", "generated/submodules/mymesh.implicit.xplane", "generated/submodules/mymesh.implicit.yplane", "generated/submodules/mymesh.implicit.zplane", "generated/submodules/mymesh.improvement.Contract", "generated/submodules/mymesh.improvement.GeoTransformSmoothing", "generated/submodules/mymesh.improvement.LocalLaplacianSmoothing", "generated/submodules/mymesh.improvement.NodeSpringSmoothing", "generated/submodules/mymesh.improvement.SegmentSpringSmoothing", "generated/submodules/mymesh.improvement.SmartLaplacianSmoothing", "generated/submodules/mymesh.improvement.TangentialLaplacianSmoothing", "generated/submodules/mymesh.improvement.TetFlip", "generated/submodules/mymesh.improvement.TetImprove", "generated/submodules/mymesh.improvement.TetSplit", "generated/submodules/mymesh.primitives.Box", "generated/submodules/mymesh.primitives.Circle", "generated/submodules/mymesh.primitives.CirclePt", "generated/submodules/mymesh.primitives.Cylinder", "generated/submodules/mymesh.primitives.Extrude", "generated/submodules/mymesh.primitives.Grid", "generated/submodules/mymesh.primitives.Grid2D", "generated/submodules/mymesh.primitives.Line", "generated/submodules/mymesh.primitives.Multiline", "generated/submodules/mymesh.primitives.Plane", "generated/submodules/mymesh.primitives.Revolve", "generated/submodules/mymesh.primitives.Sphere", "generated/submodules/mymesh.primitives.Torus", "generated/submodules/mymesh.quality.Area", "generated/submodules/mymesh.quality.AspectRatio", "generated/submodules/mymesh.quality.InverseOrthogonalQuality", "generated/submodules/mymesh.quality.InverseOrthogonality", "generated/submodules/mymesh.quality.MaxDihedral", "generated/submodules/mymesh.quality.MeanRatio", "generated/submodules/mymesh.quality.MinDihedral", "generated/submodules/mymesh.quality.OrthogonalQuality", "generated/submodules/mymesh.quality.Orthogonality", "generated/submodules/mymesh.quality.Skewness", "generated/submodules/mymesh.quality.SurfDihedralAngles", "generated/submodules/mymesh.quality.Volume", "generated/submodules/mymesh.quality.dihedralAngles", "generated/submodules/mymesh.quality.equiangular_skewness", "generated/submodules/mymesh.quality.quad_skewness", "generated/submodules/mymesh.quality.tet_circumradius", "generated/submodules/mymesh.quality.tet_vol_skewness", "generated/submodules/mymesh.quality.tet_volume", "generated/submodules/mymesh.quality.tri_area", "generated/submodules/mymesh.quality.tri_skewness", "generated/submodules/mymesh.rays.BoundaryBoundaryIntersection", "generated/submodules/mymesh.rays.BoxBoxIntersection", "generated/submodules/mymesh.rays.BoxTrianglesIntersection", "generated/submodules/mymesh.rays.PlaneBoxIntersection", "generated/submodules/mymesh.rays.PlaneSurfIntersection", "generated/submodules/mymesh.rays.PlaneTriangleIntersection", "generated/submodules/mymesh.rays.PlaneTrianglesIntersection", "generated/submodules/mymesh.rays.PointInBoundary", "generated/submodules/mymesh.rays.PointInBox", "generated/submodules/mymesh.rays.PointInBox2D", "generated/submodules/mymesh.rays.PointInSurf", "generated/submodules/mymesh.rays.PointInTet", "generated/submodules/mymesh.rays.PointInTri", "generated/submodules/mymesh.rays.PointsInSurf", "generated/submodules/mymesh.rays.PointsInTris", "generated/submodules/mymesh.rays.PointsInVoxel", "generated/submodules/mymesh.rays.RayBoundaryIntersection", "generated/submodules/mymesh.rays.RayBoxIntersection", "generated/submodules/mymesh.rays.RayBoxesIntersection", "generated/submodules/mymesh.rays.RayOctreeIntersection", "generated/submodules/mymesh.rays.RaySegmentIntersection", "generated/submodules/mymesh.rays.RaySegmentsIntersection", "generated/submodules/mymesh.rays.RaySurfIntersection", "generated/submodules/mymesh.rays.RayTriangleIntersection", "generated/submodules/mymesh.rays.RayTrianglesIntersection", "generated/submodules/mymesh.rays.RaysSurfIntersection", "generated/submodules/mymesh.rays.RaysTrianglesIntersection", "generated/submodules/mymesh.rays.SegmentBox2DIntersection", "generated/submodules/mymesh.rays.SegmentBoxIntersection", "generated/submodules/mymesh.rays.SegmentSegmentIntersection", "generated/submodules/mymesh.rays.SegmentsSegmentsIntersection", "generated/submodules/mymesh.rays.SurfSelfIntersection", "generated/submodules/mymesh.rays.SurfSurfIntersection", "generated/submodules/mymesh.rays.TriangleBoxIntersection", "generated/submodules/mymesh.rays.TriangleTriangleIntersection", "generated/submodules/mymesh.rays.TriangleTriangleIntersectionPt", "generated/submodules/mymesh.rays.TrianglesTrianglesIntersection", "generated/submodules/mymesh.rays.TrianglesTrianglesIntersectionPts", "generated/submodules/mymesh.register.AxisAlignImage", "generated/submodules/mymesh.register.AxisAlignPoints", "generated/submodules/mymesh.register.ICP", "generated/submodules/mymesh.register.Image2Image", "generated/submodules/mymesh.register.ImageOverlay", "generated/submodules/mymesh.register.Mesh2Mesh", "generated/submodules/mymesh.register.Point2Point", "generated/submodules/mymesh.register.R2d", "generated/submodules/mymesh.register.R3d", "generated/submodules/mymesh.register.S2d", "generated/submodules/mymesh.register.S3d", "generated/submodules/mymesh.register.Sh2d", "generated/submodules/mymesh.register.Sh3d", "generated/submodules/mymesh.register.T2d", "generated/submodules/mymesh.register.T3d", "generated/submodules/mymesh.register.affine", "generated/submodules/mymesh.register.affine2d", "generated/submodules/mymesh.register.closest_point_MSE", "generated/submodules/mymesh.register.dice", "generated/submodules/mymesh.register.hausdorff", "generated/submodules/mymesh.register.jaccard", "generated/submodules/mymesh.register.mutual_information", "generated/submodules/mymesh.register.optimize", "generated/submodules/mymesh.register.rigid", "generated/submodules/mymesh.register.rigid2d", "generated/submodules/mymesh.register.rotation", "generated/submodules/mymesh.register.rotation2d", "generated/submodules/mymesh.register.similarity", "generated/submodules/mymesh.register.similarity2d", "generated/submodules/mymesh.register.symmetric_closest_point_MSE", "generated/submodules/mymesh.register.transform_image", "generated/submodules/mymesh.register.transform_points", "generated/submodules/mymesh.register.translation", "generated/submodules/mymesh.register.translation2d", "generated/submodules/mymesh.tree.Edges2Quadtree", "generated/submodules/mymesh.tree.Function2Octree", "generated/submodules/mymesh.tree.Octree2Dual", "generated/submodules/mymesh.tree.Octree2Voxel", "generated/submodules/mymesh.tree.OctreeNode", "generated/submodules/mymesh.tree.OctreeNode.ContainsBoxes", "generated/submodules/mymesh.tree.OctreeNode.ContainsPts", "generated/submodules/mymesh.tree.OctreeNode.ContainsTris", "generated/submodules/mymesh.tree.OctreeNode.PointInNode", "generated/submodules/mymesh.tree.OctreeNode.PointsInNode", "generated/submodules/mymesh.tree.OctreeNode.clearData", "generated/submodules/mymesh.tree.OctreeNode.getLevel", "generated/submodules/mymesh.tree.OctreeNode.getLimits", "generated/submodules/mymesh.tree.OctreeNode.getMaxDepth", "generated/submodules/mymesh.tree.OctreeNode.getVertices", "generated/submodules/mymesh.tree.OctreeNode.hasChildren", "generated/submodules/mymesh.tree.OctreeNode.makeChildren", "generated/submodules/mymesh.tree.OctreeNode.makeChildrenBoxes", "generated/submodules/mymesh.tree.OctreeNode.makeChildrenPts", "generated/submodules/mymesh.tree.OctreeNode.makeChildrenTris", "generated/submodules/mymesh.tree.OctreeNode.prune", "generated/submodules/mymesh.tree.Points2Octree", "generated/submodules/mymesh.tree.Points2Quadtree", "generated/submodules/mymesh.tree.Print", "generated/submodules/mymesh.tree.Quadtree2Dual", "generated/submodules/mymesh.tree.Quadtree2Pixel", "generated/submodules/mymesh.tree.QuadtreeNode", "generated/submodules/mymesh.tree.QuadtreeNode.ContainsEdges", "generated/submodules/mymesh.tree.QuadtreeNode.ContainsPts", "generated/submodules/mymesh.tree.QuadtreeNode.PointInNode", "generated/submodules/mymesh.tree.QuadtreeNode.PointsInNode", "generated/submodules/mymesh.tree.QuadtreeNode.clearData", "generated/submodules/mymesh.tree.QuadtreeNode.getLevel", "generated/submodules/mymesh.tree.QuadtreeNode.getLimits", "generated/submodules/mymesh.tree.QuadtreeNode.getMaxDepth", "generated/submodules/mymesh.tree.QuadtreeNode.getVertices", "generated/submodules/mymesh.tree.QuadtreeNode.hasChildren", "generated/submodules/mymesh.tree.QuadtreeNode.makeChildren", "generated/submodules/mymesh.tree.QuadtreeNode.makeChildrenEdges", "generated/submodules/mymesh.tree.QuadtreeNode.makeChildrenPts", "generated/submodules/mymesh.tree.QuadtreeNode.prune", "generated/submodules/mymesh.tree.SearchOctree", "generated/submodules/mymesh.tree.SearchOctreeTri", "generated/submodules/mymesh.tree.Surface2Octree", "generated/submodules/mymesh.tree.TreeNode", "generated/submodules/mymesh.tree.TreeNode.clearData", "generated/submodules/mymesh.tree.TreeNode.getLevel", "generated/submodules/mymesh.tree.TreeNode.getMaxDepth", "generated/submodules/mymesh.tree.TreeNode.hasChildren", "generated/submodules/mymesh.tree.TreeNode.prune", "generated/submodules/mymesh.tree.Voxel2Octree", "generated/submodules/mymesh.tree.getAllLeaf", "generated/submodules/mymesh.utils.AABB", "generated/submodules/mymesh.utils.BaryTet", "generated/submodules/mymesh.utils.BaryTri", "generated/submodules/mymesh.utils.BaryTris", "generated/submodules/mymesh.utils.CalcFaceNormal", "generated/submodules/mymesh.utils.Centroids", "generated/submodules/mymesh.utils.CleanupDegenerateElements", "generated/submodules/mymesh.utils.DeleteDegenerateElements", "generated/submodules/mymesh.utils.DeleteDuplicateNodes", "generated/submodules/mymesh.utils.DetectFeatures", "generated/submodules/mymesh.utils.DilateVoxel", "generated/submodules/mymesh.utils.ErodeVoxel", "generated/submodules/mymesh.utils.ExtractRagged", "generated/submodules/mymesh.utils.Face2NodeNormal", "generated/submodules/mymesh.utils.MVBB", "generated/submodules/mymesh.utils.MergeMesh", "generated/submodules/mymesh.utils.MirrorMesh", "generated/submodules/mymesh.utils.PadRagged", "generated/submodules/mymesh.utils.Project2Surface", "generated/submodules/mymesh.utils.RelabelNodes", "generated/submodules/mymesh.utils.SortRaggedByLength", "generated/submodules/mymesh.utils.SplitRaggedByLength", "generated/submodules/mymesh.utils.SurfMapping", "generated/submodules/mymesh.utils.TetMeshVol", "generated/submodules/mymesh.utils.TriSurfVol", "generated/submodules/mymesh.utils.ValueMapping", "generated/submodules/mymesh.utils.getConnectedElements", "generated/submodules/mymesh.utils.getConnectedNodes", "generated/submodules/mymesh.utils.getElemConnectivity", "generated/submodules/mymesh.utils.getElemNeighbors", "generated/submodules/mymesh.utils.getNodeNeighborhood", "generated/submodules/mymesh.utils.getNodeNeighborhoodByRadius", "generated/submodules/mymesh.utils.getNodeNeighbors", "generated/submodules/mymesh.utils.identify_elem", "generated/submodules/mymesh.utils.identify_type", "generated/submodules/mymesh.utils.makePyramidLayer", "generated/submodules/mymesh.visualize.FaceColor", "generated/submodules/mymesh.visualize.GetTheme", "generated/submodules/mymesh.visualize.ParseColor", "generated/submodules/mymesh.visualize.Subplot", "generated/submodules/mymesh.visualize.View", "generated/submodules/mymesh.visualize.set_vispy_backend", "guide", "guide/connectivity", "guide/csg", "guide/elem_types", "guide/getting_started", "guide/image_meshing", "guide/implicit_meshing", "guide/installation", "guide/io", "guide/matlab", "guide/mesh_class", "guide/ref", "guide/what_mesh", "index", "sg_execution_times", "submodules/mymesh.demo_image", "submodules/mymesh.demo_mesh", "theory", "theory/contour", "theory/curvature", "theory/delaunay", "theory/edgecontract", "theory/flips23", "theory/implicit", "theory/improvement", "theory/laplaciansmooth", "theory/octree", "theory/rays", "theory/springsmooth"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["api.rst", "dev.rst", "examples/MeshAnalysis/demo_curvature.rst", "examples/MeshAnalysis/index.rst", "examples/MeshAnalysis/sg_execution_times.rst", "examples/MeshGeneration/demo_heart.rst", "examples/MeshGeneration/demo_mixed-top.rst", "examples/MeshGeneration/demo_pasta.rst", "examples/MeshGeneration/index.rst", "examples/MeshGeneration/sg_execution_times.rst", "examples/index.rst", "examples/sg_execution_times.rst", "generated/mymesh.booleans.rst", "generated/mymesh.contour.rst", "generated/mymesh.converter.rst", "generated/mymesh.curvature.rst", "generated/mymesh.delaunay.rst", "generated/mymesh.demo_image.rst", "generated/mymesh.demo_mesh.rst", "generated/mymesh.image.rst", "generated/mymesh.implicit.rst", "generated/mymesh.improvement.rst", "generated/mymesh.mesh.rst", "generated/mymesh.mesh.mesh.Boundary.rst", "generated/mymesh.mesh.mesh.BoundaryConn.rst", "generated/mymesh.mesh.mesh.BoundaryNodes.rst", "generated/mymesh.mesh.mesh.Centroids.rst", "generated/mymesh.mesh.mesh.Clip.rst", "generated/mymesh.mesh.mesh.Contour.rst", "generated/mymesh.mesh.mesh.CreateBoundaryLayer.rst", "generated/mymesh.mesh.mesh.Crop.rst", "generated/mymesh.mesh.mesh.EdgeConn.rst", "generated/mymesh.mesh.mesh.EdgeElemConn.rst", "generated/mymesh.mesh.mesh.Edges.rst", "generated/mymesh.mesh.mesh.ElemConn.rst", "generated/mymesh.mesh.mesh.ElemNeighbors.rst", "generated/mymesh.mesh.mesh.ElemNormals.rst", "generated/mymesh.mesh.mesh.ElemType.rst", "generated/mymesh.mesh.mesh.EulerCharacteristic.rst", "generated/mymesh.mesh.mesh.FaceConn.rst", "generated/mymesh.mesh.mesh.FaceElemConn.rst", "generated/mymesh.mesh.mesh.Faces.rst", "generated/mymesh.mesh.mesh.Genus.rst", "generated/mymesh.mesh.mesh.MeshNodes.rst", "generated/mymesh.mesh.mesh.Mirror.rst", "generated/mymesh.mesh.mesh.ND.rst", "generated/mymesh.mesh.mesh.NEdge.rst", "generated/mymesh.mesh.mesh.NElem.rst", "generated/mymesh.mesh.mesh.NFace.rst", "generated/mymesh.mesh.mesh.NNode.rst", "generated/mymesh.mesh.mesh.NodeNeighbors.rst", "generated/mymesh.mesh.mesh.NodeNormals.rst", "generated/mymesh.mesh.mesh.NodeNormalsMethod.rst", "generated/mymesh.mesh.mesh.RenumberFacesBySet.rst", "generated/mymesh.mesh.mesh.RenumberNodesBySet.rst", "generated/mymesh.mesh.mesh.SurfConn.rst", "generated/mymesh.mesh.mesh.SurfElemConn.rst", "generated/mymesh.mesh.mesh.SurfNodeNeighbors.rst", "generated/mymesh.mesh.mesh.SurfNodes.rst", "generated/mymesh.mesh.mesh.Surface.rst", "generated/mymesh.mesh.mesh.Threshold.rst", "generated/mymesh.mesh.mesh.aabb.rst", "generated/mymesh.mesh.mesh.addEdges.rst", "generated/mymesh.mesh.mesh.addElems.rst", "generated/mymesh.mesh.mesh.addFaces.rst", "generated/mymesh.mesh.mesh.addNodes.rst", "generated/mymesh.mesh.mesh.bounds.rst", "generated/mymesh.mesh.mesh.cells.rst", "generated/mymesh.mesh.mesh.cleanup.rst", "generated/mymesh.mesh.mesh.copy.rst", "generated/mymesh.mesh.mesh.getCurvature.rst", "generated/mymesh.mesh.mesh.getQuality.rst", "generated/mymesh.mesh.mesh.identify_type.rst", "generated/mymesh.mesh.mesh.imread.rst", "generated/mymesh.mesh.mesh.merge.rst", "generated/mymesh.mesh.mesh.mesh2dmesh.rst", "generated/mymesh.mesh.mesh.meshio2mymesh.rst", "generated/mymesh.mesh.mesh.mvbb.rst", "generated/mymesh.mesh.mesh.mymesh2meshio.rst", "generated/mymesh.mesh.mesh.plot.rst", "generated/mymesh.mesh.mesh.points.rst", "generated/mymesh.mesh.mesh.read.rst", "generated/mymesh.mesh.mesh.removeElems.rst", "generated/mymesh.mesh.mesh.reset.rst", "generated/mymesh.mesh.mesh.to_meshio.rst", "generated/mymesh.mesh.mesh.to_pyvista.rst", "generated/mymesh.mesh.mesh.validate.rst", "generated/mymesh.mesh.mesh.view.rst", "generated/mymesh.mesh.mesh.write.rst", "generated/mymesh.primitives.rst", "generated/mymesh.quality.rst", "generated/mymesh.rays.rst", "generated/mymesh.register.rst", "generated/mymesh.tree.rst", "generated/mymesh.utils.rst", "generated/mymesh.visualize.rst", "generated/submodules/mymesh.booleans.MeshBooleans.rst", "generated/submodules/mymesh.booleans.SplitMesh.rst", "generated/submodules/mymesh.contour.Adaptive.rst", "generated/submodules/mymesh.contour.MarchingCubes.rst", "generated/submodules/mymesh.contour.MarchingCubesImage.rst", "generated/submodules/mymesh.contour.MarchingElements.rst", "generated/submodules/mymesh.contour.MarchingSquares.rst", "generated/submodules/mymesh.contour.MarchingSquaresImage.rst", "generated/submodules/mymesh.contour.MarchingTetrahedra.rst", "generated/submodules/mymesh.contour.MarchingTriangles.rst", "generated/submodules/mymesh.converter.EdgesByElement.rst", "generated/submodules/mymesh.converter.edge2quadratic.rst", "generated/submodules/mymesh.converter.edge32linear.rst", "generated/submodules/mymesh.converter.edges2unique.rst", "generated/submodules/mymesh.converter.faces2surface.rst", "generated/submodules/mymesh.converter.faces2unique.rst", "generated/submodules/mymesh.converter.hex202linear.rst", "generated/submodules/mymesh.converter.hex2edges.rst", "generated/submodules/mymesh.converter.hex2faces.rst", "generated/submodules/mymesh.converter.hex2quadratic.rst", "generated/submodules/mymesh.converter.hex2tet.rst", "generated/submodules/mymesh.converter.hexsubdivide.rst", "generated/submodules/mymesh.converter.im2voxel.rst", "generated/submodules/mymesh.converter.linear2quadratic.rst", "generated/submodules/mymesh.converter.mesh2im.rst", "generated/submodules/mymesh.converter.polygon2edges.rst", "generated/submodules/mymesh.converter.pyr132linear.rst", "generated/submodules/mymesh.converter.pyr2quadratic.rst", "generated/submodules/mymesh.converter.pyramid2edges.rst", "generated/submodules/mymesh.converter.pyramid2faces.rst", "generated/submodules/mymesh.converter.pyramid2tet.rst", "generated/submodules/mymesh.converter.quad2edges.rst", "generated/submodules/mymesh.converter.quad2quadratic.rst", "generated/submodules/mymesh.converter.quad2tri.rst", "generated/submodules/mymesh.converter.quad82linear.rst", "generated/submodules/mymesh.converter.quadratic2linear.rst", "generated/submodules/mymesh.converter.solid2edges.rst", "generated/submodules/mymesh.converter.solid2faces.rst", "generated/submodules/mymesh.converter.solid2surface.rst", "generated/submodules/mymesh.converter.solid2tets.rst", "generated/submodules/mymesh.converter.surf2dual.rst", "generated/submodules/mymesh.converter.surf2edges.rst", "generated/submodules/mymesh.converter.surf2tris.rst", "generated/submodules/mymesh.converter.surf2voxel.rst", "generated/submodules/mymesh.converter.tet102linear.rst", "generated/submodules/mymesh.converter.tet2edges.rst", "generated/submodules/mymesh.converter.tet2faces.rst", "generated/submodules/mymesh.converter.tet2quadratic.rst", "generated/submodules/mymesh.converter.tetsubdivide.rst", "generated/submodules/mymesh.converter.tri2edges.rst", "generated/submodules/mymesh.converter.tri2quadratic.rst", "generated/submodules/mymesh.converter.tri62linear.rst", "generated/submodules/mymesh.converter.voxel2im.rst", "generated/submodules/mymesh.converter.wdg152linear.rst", "generated/submodules/mymesh.converter.wdg2quadratic.rst", "generated/submodules/mymesh.converter.wedge2edges.rst", "generated/submodules/mymesh.converter.wedge2faces.rst", "generated/submodules/mymesh.converter.wedge2tet.rst", "generated/submodules/mymesh.curvature.AnalyticalCurvature.rst", "generated/submodules/mymesh.curvature.CubicFit.rst", "generated/submodules/mymesh.curvature.Curvedness.rst", "generated/submodules/mymesh.curvature.GaussianCurvature.rst", "generated/submodules/mymesh.curvature.ImageCurvature.rst", "generated/submodules/mymesh.curvature.MeanCurvature.rst", "generated/submodules/mymesh.curvature.NormCurve.rst", "generated/submodules/mymesh.curvature.QuadFit.rst", "generated/submodules/mymesh.curvature.ShapeCategory.rst", "generated/submodules/mymesh.curvature.ShapeIndex.rst", "generated/submodules/mymesh.delaunay.Alpha2d.rst", "generated/submodules/mymesh.delaunay.Alpha3d.rst", "generated/submodules/mymesh.delaunay.AlphaPeel3d.rst", "generated/submodules/mymesh.delaunay.AlphaShape.rst", "generated/submodules/mymesh.delaunay.BowyerWatson2d.rst", "generated/submodules/mymesh.delaunay.BowyerWatson3d.rst", "generated/submodules/mymesh.delaunay.ConvexHull.rst", "generated/submodules/mymesh.delaunay.FanTriangulation.rst", "generated/submodules/mymesh.delaunay.GiftWrapping.rst", "generated/submodules/mymesh.delaunay.SciPy.rst", "generated/submodules/mymesh.delaunay.Tetrahedralize.rst", "generated/submodules/mymesh.delaunay.Triangle.rst", "generated/submodules/mymesh.delaunay.Triangulate.rst", "generated/submodules/mymesh.image.PixelMesh.rst", "generated/submodules/mymesh.image.SurfaceMesh.rst", "generated/submodules/mymesh.image.SurfaceNodeOptimization.rst", "generated/submodules/mymesh.image.TetMesh.rst", "generated/submodules/mymesh.image.VoxelMesh.rst", "generated/submodules/mymesh.image.read.rst", "generated/submodules/mymesh.image.write.rst", "generated/submodules/mymesh.implicit.SurfaceMesh.rst", "generated/submodules/mymesh.implicit.SurfaceNodeOptimization.rst", "generated/submodules/mymesh.implicit.TetMesh.rst", "generated/submodules/mymesh.implicit.VoxelMesh.rst", "generated/submodules/mymesh.implicit.box.rst", "generated/submodules/mymesh.implicit.cylinder.rst", "generated/submodules/mymesh.implicit.diamond.rst", "generated/submodules/mymesh.implicit.diff.rst", "generated/submodules/mymesh.implicit.difff.rst", "generated/submodules/mymesh.implicit.diffs.rst", "generated/submodules/mymesh.implicit.grid2fun.rst", "generated/submodules/mymesh.implicit.grid2grad.rst", "generated/submodules/mymesh.implicit.gyroid.rst", "generated/submodules/mymesh.implicit.intersection.rst", "generated/submodules/mymesh.implicit.intersectionf.rst", "generated/submodules/mymesh.implicit.intersections.rst", "generated/submodules/mymesh.implicit.lidinoid.rst", "generated/submodules/mymesh.implicit.mesh2udf.rst", "generated/submodules/mymesh.implicit.neovius.rst", "generated/submodules/mymesh.implicit.offset.rst", "generated/submodules/mymesh.implicit.plane.rst", "generated/submodules/mymesh.implicit.primitive.rst", "generated/submodules/mymesh.implicit.rMax.rst", "generated/submodules/mymesh.implicit.rMin.rst", "generated/submodules/mymesh.implicit.sphere.rst", "generated/submodules/mymesh.implicit.thicken.rst", "generated/submodules/mymesh.implicit.thickenf.rst", "generated/submodules/mymesh.implicit.thickens.rst", "generated/submodules/mymesh.implicit.torus.rst", "generated/submodules/mymesh.implicit.union.rst", "generated/submodules/mymesh.implicit.unionf.rst", "generated/submodules/mymesh.implicit.unions.rst", "generated/submodules/mymesh.implicit.xplane.rst", "generated/submodules/mymesh.implicit.yplane.rst", "generated/submodules/mymesh.implicit.zplane.rst", "generated/submodules/mymesh.improvement.Contract.rst", "generated/submodules/mymesh.improvement.GeoTransformSmoothing.rst", "generated/submodules/mymesh.improvement.LocalLaplacianSmoothing.rst", "generated/submodules/mymesh.improvement.NodeSpringSmoothing.rst", "generated/submodules/mymesh.improvement.SegmentSpringSmoothing.rst", "generated/submodules/mymesh.improvement.SmartLaplacianSmoothing.rst", "generated/submodules/mymesh.improvement.TangentialLaplacianSmoothing.rst", "generated/submodules/mymesh.improvement.TetFlip.rst", "generated/submodules/mymesh.improvement.TetImprove.rst", "generated/submodules/mymesh.improvement.TetSplit.rst", "generated/submodules/mymesh.primitives.Box.rst", "generated/submodules/mymesh.primitives.Circle.rst", "generated/submodules/mymesh.primitives.CirclePt.rst", "generated/submodules/mymesh.primitives.Cylinder.rst", "generated/submodules/mymesh.primitives.Extrude.rst", "generated/submodules/mymesh.primitives.Grid.rst", "generated/submodules/mymesh.primitives.Grid2D.rst", "generated/submodules/mymesh.primitives.Line.rst", "generated/submodules/mymesh.primitives.Multiline.rst", "generated/submodules/mymesh.primitives.Plane.rst", "generated/submodules/mymesh.primitives.Revolve.rst", "generated/submodules/mymesh.primitives.Sphere.rst", "generated/submodules/mymesh.primitives.Torus.rst", "generated/submodules/mymesh.quality.Area.rst", "generated/submodules/mymesh.quality.AspectRatio.rst", "generated/submodules/mymesh.quality.InverseOrthogonalQuality.rst", "generated/submodules/mymesh.quality.InverseOrthogonality.rst", "generated/submodules/mymesh.quality.MaxDihedral.rst", "generated/submodules/mymesh.quality.MeanRatio.rst", "generated/submodules/mymesh.quality.MinDihedral.rst", "generated/submodules/mymesh.quality.OrthogonalQuality.rst", "generated/submodules/mymesh.quality.Orthogonality.rst", "generated/submodules/mymesh.quality.Skewness.rst", "generated/submodules/mymesh.quality.SurfDihedralAngles.rst", "generated/submodules/mymesh.quality.Volume.rst", "generated/submodules/mymesh.quality.dihedralAngles.rst", "generated/submodules/mymesh.quality.equiangular_skewness.rst", "generated/submodules/mymesh.quality.quad_skewness.rst", "generated/submodules/mymesh.quality.tet_circumradius.rst", "generated/submodules/mymesh.quality.tet_vol_skewness.rst", "generated/submodules/mymesh.quality.tet_volume.rst", "generated/submodules/mymesh.quality.tri_area.rst", "generated/submodules/mymesh.quality.tri_skewness.rst", "generated/submodules/mymesh.rays.BoundaryBoundaryIntersection.rst", "generated/submodules/mymesh.rays.BoxBoxIntersection.rst", "generated/submodules/mymesh.rays.BoxTrianglesIntersection.rst", "generated/submodules/mymesh.rays.PlaneBoxIntersection.rst", "generated/submodules/mymesh.rays.PlaneSurfIntersection.rst", "generated/submodules/mymesh.rays.PlaneTriangleIntersection.rst", "generated/submodules/mymesh.rays.PlaneTrianglesIntersection.rst", "generated/submodules/mymesh.rays.PointInBoundary.rst", "generated/submodules/mymesh.rays.PointInBox.rst", "generated/submodules/mymesh.rays.PointInBox2D.rst", "generated/submodules/mymesh.rays.PointInSurf.rst", "generated/submodules/mymesh.rays.PointInTet.rst", "generated/submodules/mymesh.rays.PointInTri.rst", "generated/submodules/mymesh.rays.PointsInSurf.rst", "generated/submodules/mymesh.rays.PointsInTris.rst", "generated/submodules/mymesh.rays.PointsInVoxel.rst", "generated/submodules/mymesh.rays.RayBoundaryIntersection.rst", "generated/submodules/mymesh.rays.RayBoxIntersection.rst", "generated/submodules/mymesh.rays.RayBoxesIntersection.rst", "generated/submodules/mymesh.rays.RayOctreeIntersection.rst", "generated/submodules/mymesh.rays.RaySegmentIntersection.rst", "generated/submodules/mymesh.rays.RaySegmentsIntersection.rst", "generated/submodules/mymesh.rays.RaySurfIntersection.rst", "generated/submodules/mymesh.rays.RayTriangleIntersection.rst", "generated/submodules/mymesh.rays.RayTrianglesIntersection.rst", "generated/submodules/mymesh.rays.RaysSurfIntersection.rst", "generated/submodules/mymesh.rays.RaysTrianglesIntersection.rst", "generated/submodules/mymesh.rays.SegmentBox2DIntersection.rst", "generated/submodules/mymesh.rays.SegmentBoxIntersection.rst", "generated/submodules/mymesh.rays.SegmentSegmentIntersection.rst", "generated/submodules/mymesh.rays.SegmentsSegmentsIntersection.rst", "generated/submodules/mymesh.rays.SurfSelfIntersection.rst", "generated/submodules/mymesh.rays.SurfSurfIntersection.rst", "generated/submodules/mymesh.rays.TriangleBoxIntersection.rst", "generated/submodules/mymesh.rays.TriangleTriangleIntersection.rst", "generated/submodules/mymesh.rays.TriangleTriangleIntersectionPt.rst", "generated/submodules/mymesh.rays.TrianglesTrianglesIntersection.rst", "generated/submodules/mymesh.rays.TrianglesTrianglesIntersectionPts.rst", "generated/submodules/mymesh.register.AxisAlignImage.rst", "generated/submodules/mymesh.register.AxisAlignPoints.rst", "generated/submodules/mymesh.register.ICP.rst", "generated/submodules/mymesh.register.Image2Image.rst", "generated/submodules/mymesh.register.ImageOverlay.rst", "generated/submodules/mymesh.register.Mesh2Mesh.rst", "generated/submodules/mymesh.register.Point2Point.rst", "generated/submodules/mymesh.register.R2d.rst", "generated/submodules/mymesh.register.R3d.rst", "generated/submodules/mymesh.register.S2d.rst", "generated/submodules/mymesh.register.S3d.rst", "generated/submodules/mymesh.register.Sh2d.rst", "generated/submodules/mymesh.register.Sh3d.rst", "generated/submodules/mymesh.register.T2d.rst", "generated/submodules/mymesh.register.T3d.rst", "generated/submodules/mymesh.register.affine.rst", "generated/submodules/mymesh.register.affine2d.rst", "generated/submodules/mymesh.register.closest_point_MSE.rst", "generated/submodules/mymesh.register.dice.rst", "generated/submodules/mymesh.register.hausdorff.rst", "generated/submodules/mymesh.register.jaccard.rst", "generated/submodules/mymesh.register.mutual_information.rst", "generated/submodules/mymesh.register.optimize.rst", "generated/submodules/mymesh.register.rigid.rst", "generated/submodules/mymesh.register.rigid2d.rst", "generated/submodules/mymesh.register.rotation.rst", "generated/submodules/mymesh.register.rotation2d.rst", "generated/submodules/mymesh.register.similarity.rst", "generated/submodules/mymesh.register.similarity2d.rst", "generated/submodules/mymesh.register.symmetric_closest_point_MSE.rst", "generated/submodules/mymesh.register.transform_image.rst", "generated/submodules/mymesh.register.transform_points.rst", "generated/submodules/mymesh.register.translation.rst", "generated/submodules/mymesh.register.translation2d.rst", "generated/submodules/mymesh.tree.Edges2Quadtree.rst", "generated/submodules/mymesh.tree.Function2Octree.rst", "generated/submodules/mymesh.tree.Octree2Dual.rst", "generated/submodules/mymesh.tree.Octree2Voxel.rst", "generated/submodules/mymesh.tree.OctreeNode.rst", "generated/submodules/mymesh.tree.OctreeNode.ContainsBoxes.rst", "generated/submodules/mymesh.tree.OctreeNode.ContainsPts.rst", "generated/submodules/mymesh.tree.OctreeNode.ContainsTris.rst", "generated/submodules/mymesh.tree.OctreeNode.PointInNode.rst", "generated/submodules/mymesh.tree.OctreeNode.PointsInNode.rst", "generated/submodules/mymesh.tree.OctreeNode.clearData.rst", "generated/submodules/mymesh.tree.OctreeNode.getLevel.rst", "generated/submodules/mymesh.tree.OctreeNode.getLimits.rst", "generated/submodules/mymesh.tree.OctreeNode.getMaxDepth.rst", "generated/submodules/mymesh.tree.OctreeNode.getVertices.rst", "generated/submodules/mymesh.tree.OctreeNode.hasChildren.rst", "generated/submodules/mymesh.tree.OctreeNode.makeChildren.rst", "generated/submodules/mymesh.tree.OctreeNode.makeChildrenBoxes.rst", "generated/submodules/mymesh.tree.OctreeNode.makeChildrenPts.rst", "generated/submodules/mymesh.tree.OctreeNode.makeChildrenTris.rst", "generated/submodules/mymesh.tree.OctreeNode.prune.rst", "generated/submodules/mymesh.tree.Points2Octree.rst", "generated/submodules/mymesh.tree.Points2Quadtree.rst", "generated/submodules/mymesh.tree.Print.rst", "generated/submodules/mymesh.tree.Quadtree2Dual.rst", "generated/submodules/mymesh.tree.Quadtree2Pixel.rst", "generated/submodules/mymesh.tree.QuadtreeNode.rst", "generated/submodules/mymesh.tree.QuadtreeNode.ContainsEdges.rst", "generated/submodules/mymesh.tree.QuadtreeNode.ContainsPts.rst", "generated/submodules/mymesh.tree.QuadtreeNode.PointInNode.rst", "generated/submodules/mymesh.tree.QuadtreeNode.PointsInNode.rst", "generated/submodules/mymesh.tree.QuadtreeNode.clearData.rst", "generated/submodules/mymesh.tree.QuadtreeNode.getLevel.rst", "generated/submodules/mymesh.tree.QuadtreeNode.getLimits.rst", "generated/submodules/mymesh.tree.QuadtreeNode.getMaxDepth.rst", "generated/submodules/mymesh.tree.QuadtreeNode.getVertices.rst", "generated/submodules/mymesh.tree.QuadtreeNode.hasChildren.rst", "generated/submodules/mymesh.tree.QuadtreeNode.makeChildren.rst", "generated/submodules/mymesh.tree.QuadtreeNode.makeChildrenEdges.rst", "generated/submodules/mymesh.tree.QuadtreeNode.makeChildrenPts.rst", "generated/submodules/mymesh.tree.QuadtreeNode.prune.rst", "generated/submodules/mymesh.tree.SearchOctree.rst", "generated/submodules/mymesh.tree.SearchOctreeTri.rst", "generated/submodules/mymesh.tree.Surface2Octree.rst", "generated/submodules/mymesh.tree.TreeNode.rst", "generated/submodules/mymesh.tree.TreeNode.clearData.rst", "generated/submodules/mymesh.tree.TreeNode.getLevel.rst", "generated/submodules/mymesh.tree.TreeNode.getMaxDepth.rst", "generated/submodules/mymesh.tree.TreeNode.hasChildren.rst", "generated/submodules/mymesh.tree.TreeNode.prune.rst", "generated/submodules/mymesh.tree.Voxel2Octree.rst", "generated/submodules/mymesh.tree.getAllLeaf.rst", "generated/submodules/mymesh.utils.AABB.rst", "generated/submodules/mymesh.utils.BaryTet.rst", "generated/submodules/mymesh.utils.BaryTri.rst", "generated/submodules/mymesh.utils.BaryTris.rst", "generated/submodules/mymesh.utils.CalcFaceNormal.rst", "generated/submodules/mymesh.utils.Centroids.rst", "generated/submodules/mymesh.utils.CleanupDegenerateElements.rst", "generated/submodules/mymesh.utils.DeleteDegenerateElements.rst", "generated/submodules/mymesh.utils.DeleteDuplicateNodes.rst", "generated/submodules/mymesh.utils.DetectFeatures.rst", "generated/submodules/mymesh.utils.DilateVoxel.rst", "generated/submodules/mymesh.utils.ErodeVoxel.rst", "generated/submodules/mymesh.utils.ExtractRagged.rst", "generated/submodules/mymesh.utils.Face2NodeNormal.rst", "generated/submodules/mymesh.utils.MVBB.rst", "generated/submodules/mymesh.utils.MergeMesh.rst", "generated/submodules/mymesh.utils.MirrorMesh.rst", "generated/submodules/mymesh.utils.PadRagged.rst", "generated/submodules/mymesh.utils.Project2Surface.rst", "generated/submodules/mymesh.utils.RelabelNodes.rst", "generated/submodules/mymesh.utils.SortRaggedByLength.rst", "generated/submodules/mymesh.utils.SplitRaggedByLength.rst", "generated/submodules/mymesh.utils.SurfMapping.rst", "generated/submodules/mymesh.utils.TetMeshVol.rst", "generated/submodules/mymesh.utils.TriSurfVol.rst", "generated/submodules/mymesh.utils.ValueMapping.rst", "generated/submodules/mymesh.utils.getConnectedElements.rst", "generated/submodules/mymesh.utils.getConnectedNodes.rst", "generated/submodules/mymesh.utils.getElemConnectivity.rst", "generated/submodules/mymesh.utils.getElemNeighbors.rst", "generated/submodules/mymesh.utils.getNodeNeighborhood.rst", "generated/submodules/mymesh.utils.getNodeNeighborhoodByRadius.rst", "generated/submodules/mymesh.utils.getNodeNeighbors.rst", "generated/submodules/mymesh.utils.identify_elem.rst", "generated/submodules/mymesh.utils.identify_type.rst", "generated/submodules/mymesh.utils.makePyramidLayer.rst", "generated/submodules/mymesh.visualize.FaceColor.rst", "generated/submodules/mymesh.visualize.GetTheme.rst", "generated/submodules/mymesh.visualize.ParseColor.rst", "generated/submodules/mymesh.visualize.Subplot.rst", "generated/submodules/mymesh.visualize.View.rst", "generated/submodules/mymesh.visualize.set_vispy_backend.rst", "guide.rst", "guide/connectivity.rst", "guide/csg.rst", "guide/elem_types.rst", "guide/getting_started.rst", "guide/image_meshing.rst", "guide/implicit_meshing.rst", "guide/installation.rst", "guide/io.rst", "guide/matlab.rst", "guide/mesh_class.rst", "guide/ref.rst", "guide/what_mesh.rst", "index.rst", "sg_execution_times.rst", "submodules/mymesh.demo_image.rst", "submodules/mymesh.demo_mesh.rst", "theory.rst", "theory/contour.rst", "theory/curvature.rst", "theory/delaunay.rst", "theory/edgecontract.rst", "theory/flips23.rst", "theory/implicit.rst", "theory/improvement.rst", "theory/laplaciansmooth.rst", "theory/octree.rst", "theory/rays.rst", "theory/springsmooth.rst"], "indexentries": {"aabb (mymesh.mesh.mesh property)": [[61, "mymesh.mesh.mesh.aabb", false]], "aabb() (in module mymesh.utils)": [[386, "mymesh.utils.AABB", false]], "adaptive() (in module mymesh.contour)": [[98, "mymesh.contour.Adaptive", false]], "addedges() (mymesh.mesh.mesh method)": [[62, "mymesh.mesh.mesh.addEdges", false]], "addelems() (mymesh.mesh.mesh method)": [[63, "mymesh.mesh.mesh.addElems", false]], "addfaces() (mymesh.mesh.mesh method)": [[64, "mymesh.mesh.mesh.addFaces", false]], "addnodes() (mymesh.mesh.mesh method)": [[65, "mymesh.mesh.mesh.addNodes", false]], "affine() (in module mymesh.register)": [[315, "mymesh.register.affine", false]], "affine2d() (in module mymesh.register)": [[316, "mymesh.register.affine2d", false]], "alpha2d() (in module mymesh.delaunay)": [[164, "mymesh.delaunay.Alpha2d", false]], "alpha3d() (in module mymesh.delaunay)": [[165, "mymesh.delaunay.Alpha3d", false]], "alphapeel3d() (in module mymesh.delaunay)": [[166, "mymesh.delaunay.AlphaPeel3d", false]], "alphashape() (in module mymesh.delaunay)": [[167, "mymesh.delaunay.AlphaShape", false]], "analyticalcurvature() (in module mymesh.curvature)": [[154, "mymesh.curvature.AnalyticalCurvature", false]], "area() (in module mymesh.quality)": [[242, "mymesh.quality.Area", false]], "aspectratio() (in module mymesh.quality)": [[243, "mymesh.quality.AspectRatio", false]], "axisalignimage() (in module mymesh.register)": [[300, "mymesh.register.AxisAlignImage", false]], "axisalignpoints() (in module mymesh.register)": [[301, "mymesh.register.AxisAlignPoints", false]], "barytet() (in module mymesh.utils)": [[387, "mymesh.utils.BaryTet", false]], "barytri() (in module mymesh.utils)": [[388, "mymesh.utils.BaryTri", false]], "barytris() (in module mymesh.utils)": [[389, "mymesh.utils.BaryTris", false]], "boundary (mymesh.mesh.mesh property)": [[23, "mymesh.mesh.mesh.Boundary", false]], "boundaryboundaryintersection() (in module mymesh.rays)": [[262, "mymesh.rays.BoundaryBoundaryIntersection", false]], "boundaryconn (mymesh.mesh.mesh property)": [[24, "mymesh.mesh.mesh.BoundaryConn", false]], "boundarynodes (mymesh.mesh.mesh property)": [[25, "mymesh.mesh.mesh.BoundaryNodes", false]], "bounds (mymesh.mesh.mesh property)": [[66, "mymesh.mesh.mesh.bounds", false]], "bowyerwatson2d() (in module mymesh.delaunay)": [[168, "mymesh.delaunay.BowyerWatson2d", false]], "bowyerwatson3d() (in module mymesh.delaunay)": [[169, "mymesh.delaunay.BowyerWatson3d", false]], "box() (in module mymesh.implicit)": [[188, "mymesh.implicit.box", false]], "box() (in module mymesh.primitives)": [[229, "mymesh.primitives.Box", false]], "boxboxintersection() (in module mymesh.rays)": [[263, "mymesh.rays.BoxBoxIntersection", false]], "boxtrianglesintersection() (in module mymesh.rays)": [[264, "mymesh.rays.BoxTrianglesIntersection", false]], "calcfacenormal() (in module mymesh.utils)": [[390, "mymesh.utils.CalcFaceNormal", false]], "cells (mymesh.mesh.mesh property)": [[67, "mymesh.mesh.mesh.cells", false]], "centroids (mymesh.mesh.mesh property)": [[26, "mymesh.mesh.mesh.Centroids", false]], "centroids() (in module mymesh.utils)": [[391, "mymesh.utils.Centroids", false]], "circle() (in module mymesh.primitives)": [[230, "mymesh.primitives.Circle", false]], "circlept() (in module mymesh.primitives)": [[231, "mymesh.primitives.CirclePt", false]], "cleanup() (mymesh.mesh.mesh method)": [[68, "mymesh.mesh.mesh.cleanup", false]], "cleanupdegenerateelements() (in module mymesh.utils)": [[392, "mymesh.utils.CleanupDegenerateElements", false]], "cleardata() (mymesh.tree.octreenode method)": [[344, "mymesh.tree.OctreeNode.clearData", false]], "cleardata() (mymesh.tree.quadtreenode method)": [[365, "mymesh.tree.QuadtreeNode.clearData", false]], "cleardata() (mymesh.tree.treenode method)": [[379, "mymesh.tree.TreeNode.clearData", false]], "clip() (mymesh.mesh.mesh method)": [[27, "mymesh.mesh.mesh.Clip", false]], "closest_point_mse() (in module mymesh.register)": [[317, "mymesh.register.closest_point_MSE", false]], "containsboxes() (mymesh.tree.octreenode method)": [[339, "mymesh.tree.OctreeNode.ContainsBoxes", false]], "containsedges() (mymesh.tree.quadtreenode method)": [[361, "mymesh.tree.QuadtreeNode.ContainsEdges", false]], "containspts() (mymesh.tree.octreenode method)": [[340, "mymesh.tree.OctreeNode.ContainsPts", false]], "containspts() (mymesh.tree.quadtreenode method)": [[362, "mymesh.tree.QuadtreeNode.ContainsPts", false]], "containstris() (mymesh.tree.octreenode method)": [[341, "mymesh.tree.OctreeNode.ContainsTris", false]], "contour() (mymesh.mesh.mesh method)": [[28, "mymesh.mesh.mesh.Contour", false]], "contract() (in module mymesh.improvement)": [[219, "mymesh.improvement.Contract", false]], "convexhull() (in module mymesh.delaunay)": [[170, "mymesh.delaunay.ConvexHull", false]], "copy() (mymesh.mesh.mesh method)": [[69, "mymesh.mesh.mesh.copy", false]], "createboundarylayer() (mymesh.mesh.mesh method)": [[29, "mymesh.mesh.mesh.CreateBoundaryLayer", false]], "crop() (mymesh.mesh.mesh method)": [[30, "mymesh.mesh.mesh.Crop", false]], "cubicfit() (in module mymesh.curvature)": [[155, "mymesh.curvature.CubicFit", false]], "curvedness() (in module mymesh.curvature)": [[156, "mymesh.curvature.Curvedness", false]], "cylinder() (in module mymesh.implicit)": [[189, "mymesh.implicit.cylinder", false]], "cylinder() (in module mymesh.primitives)": [[232, "mymesh.primitives.Cylinder", false]], "deletedegenerateelements() (in module mymesh.utils)": [[393, "mymesh.utils.DeleteDegenerateElements", false]], "deleteduplicatenodes() (in module mymesh.utils)": [[394, "mymesh.utils.DeleteDuplicateNodes", false]], "demo_image() (in module mymesh)": [[17, "mymesh.demo_image", false], [443, "mymesh.demo_image", false]], "demo_mesh() (in module mymesh)": [[18, "mymesh.demo_mesh", false], [444, "mymesh.demo_mesh", false]], "detectfeatures() (in module mymesh.utils)": [[395, "mymesh.utils.DetectFeatures", false]], "diamond() (in module mymesh.implicit)": [[190, "mymesh.implicit.diamond", false]], "dice() (in module mymesh.register)": [[318, "mymesh.register.dice", false]], "diff() (in module mymesh.implicit)": [[191, "mymesh.implicit.diff", false]], "difff() (in module mymesh.implicit)": [[192, "mymesh.implicit.difff", false]], "diffs() (in module mymesh.implicit)": [[193, "mymesh.implicit.diffs", false]], "dihedralangles() (in module mymesh.quality)": [[254, "mymesh.quality.dihedralAngles", false]], "dilatevoxel() (in module mymesh.utils)": [[396, "mymesh.utils.DilateVoxel", false]], "edge2quadratic() (in module mymesh.converter)": [[107, "mymesh.converter.edge2quadratic", false]], "edge32linear() (in module mymesh.converter)": [[108, "mymesh.converter.edge32linear", false]], "edgeconn (mymesh.mesh.mesh property)": [[31, "mymesh.mesh.mesh.EdgeConn", false]], "edgeelemconn (mymesh.mesh.mesh property)": [[32, "mymesh.mesh.mesh.EdgeElemConn", false]], "edges (mymesh.mesh.mesh property)": [[33, "mymesh.mesh.mesh.Edges", false]], "edges2quadtree() (in module mymesh.tree)": [[334, "mymesh.tree.Edges2Quadtree", false]], "edges2unique() (in module mymesh.converter)": [[109, "mymesh.converter.edges2unique", false]], "edgesbyelement() (in module mymesh.converter)": [[106, "mymesh.converter.EdgesByElement", false]], "edgesets (mymesh.mesh attribute)": [[22, "mymesh.mesh.EdgeSets", false]], "elemconn (mymesh.mesh.mesh property)": [[34, "mymesh.mesh.mesh.ElemConn", false]], "elemdata (mymesh.mesh attribute)": [[22, "mymesh.mesh.ElemData", false]], "elemneighbors (mymesh.mesh.mesh property)": [[35, "mymesh.mesh.mesh.ElemNeighbors", false]], "elemnormals (mymesh.mesh.mesh property)": [[36, "mymesh.mesh.mesh.ElemNormals", false]], "elemsets (mymesh.mesh attribute)": [[22, "mymesh.mesh.ElemSets", false]], "elemtype (mymesh.mesh.mesh property)": [[37, "mymesh.mesh.mesh.ElemType", false]], "equiangular_skewness() (in module mymesh.quality)": [[255, "mymesh.quality.equiangular_skewness", false]], "erodevoxel() (in module mymesh.utils)": [[397, "mymesh.utils.ErodeVoxel", false]], "eulercharacteristic (mymesh.mesh.mesh property)": [[38, "mymesh.mesh.mesh.EulerCharacteristic", false]], "extractragged() (in module mymesh.utils)": [[398, "mymesh.utils.ExtractRagged", false]], "extrude() (in module mymesh.primitives)": [[233, "mymesh.primitives.Extrude", false]], "face2nodenormal() (in module mymesh.utils)": [[399, "mymesh.utils.Face2NodeNormal", false]], "facecolor() (in module mymesh.visualize)": [[422, "mymesh.visualize.FaceColor", false]], "faceconn (mymesh.mesh.mesh property)": [[39, "mymesh.mesh.mesh.FaceConn", false]], "faceelemconn (mymesh.mesh.mesh property)": [[40, "mymesh.mesh.mesh.FaceElemConn", false]], "faces (mymesh.mesh.mesh property)": [[41, "mymesh.mesh.mesh.Faces", false]], "faces2surface() (in module mymesh.converter)": [[110, "mymesh.converter.faces2surface", false]], "faces2unique() (in module mymesh.converter)": [[111, "mymesh.converter.faces2unique", false]], "facesets (mymesh.mesh attribute)": [[22, "mymesh.mesh.FaceSets", false]], "fantriangulation() (in module mymesh.delaunay)": [[171, "mymesh.delaunay.FanTriangulation", false]], "function2octree() (in module mymesh.tree)": [[335, "mymesh.tree.Function2Octree", false]], "gaussiancurvature() (in module mymesh.curvature)": [[157, "mymesh.curvature.GaussianCurvature", false]], "genus (mymesh.mesh.mesh property)": [[42, "mymesh.mesh.mesh.Genus", false]], "geotransformsmoothing() (in module mymesh.improvement)": [[220, "mymesh.improvement.GeoTransformSmoothing", false]], "getallleaf() (in module mymesh.tree)": [[385, "mymesh.tree.getAllLeaf", false]], "getconnectedelements() (in module mymesh.utils)": [[412, "mymesh.utils.getConnectedElements", false]], "getconnectednodes() (in module mymesh.utils)": [[413, "mymesh.utils.getConnectedNodes", false]], "getcurvature() (mymesh.mesh.mesh method)": [[70, "mymesh.mesh.mesh.getCurvature", false]], "getelemconnectivity() (in module mymesh.utils)": [[414, "mymesh.utils.getElemConnectivity", false]], "getelemneighbors() (in module mymesh.utils)": [[415, "mymesh.utils.getElemNeighbors", false]], "getlevel() (mymesh.tree.octreenode method)": [[345, "mymesh.tree.OctreeNode.getLevel", false]], "getlevel() (mymesh.tree.quadtreenode method)": [[366, "mymesh.tree.QuadtreeNode.getLevel", false]], "getlevel() (mymesh.tree.treenode method)": [[380, "mymesh.tree.TreeNode.getLevel", false]], "getlimits() (mymesh.tree.octreenode method)": [[346, "mymesh.tree.OctreeNode.getLimits", false]], "getlimits() (mymesh.tree.quadtreenode method)": [[367, "mymesh.tree.QuadtreeNode.getLimits", false]], "getmaxdepth() (mymesh.tree.octreenode method)": [[347, "mymesh.tree.OctreeNode.getMaxDepth", false]], "getmaxdepth() (mymesh.tree.quadtreenode method)": [[368, "mymesh.tree.QuadtreeNode.getMaxDepth", false]], "getmaxdepth() (mymesh.tree.treenode method)": [[381, "mymesh.tree.TreeNode.getMaxDepth", false]], "getnodeneighborhood() (in module mymesh.utils)": [[416, "mymesh.utils.getNodeNeighborhood", false]], "getnodeneighborhoodbyradius() (in module mymesh.utils)": [[417, "mymesh.utils.getNodeNeighborhoodByRadius", false]], "getnodeneighbors() (in module mymesh.utils)": [[418, "mymesh.utils.getNodeNeighbors", false]], "getquality() (mymesh.mesh.mesh method)": [[71, "mymesh.mesh.mesh.getQuality", false]], "gettheme() (in module mymesh.visualize)": [[423, "mymesh.visualize.GetTheme", false]], "getvertices() (mymesh.tree.octreenode method)": [[348, "mymesh.tree.OctreeNode.getVertices", false]], "getvertices() (mymesh.tree.quadtreenode method)": [[369, "mymesh.tree.QuadtreeNode.getVertices", false]], "giftwrapping() (in module mymesh.delaunay)": [[172, "mymesh.delaunay.GiftWrapping", false]], "grid() (in module mymesh.primitives)": [[234, "mymesh.primitives.Grid", false]], "grid2d() (in module mymesh.primitives)": [[235, "mymesh.primitives.Grid2D", false]], "grid2fun() (in module mymesh.implicit)": [[194, "mymesh.implicit.grid2fun", false]], "grid2grad() (in module mymesh.implicit)": [[195, "mymesh.implicit.grid2grad", false]], "gyroid() (in module mymesh.implicit)": [[196, "mymesh.implicit.gyroid", false]], "haschildren() (mymesh.tree.octreenode method)": [[349, "mymesh.tree.OctreeNode.hasChildren", false]], "haschildren() (mymesh.tree.quadtreenode method)": [[370, "mymesh.tree.QuadtreeNode.hasChildren", false]], "haschildren() (mymesh.tree.treenode method)": [[382, "mymesh.tree.TreeNode.hasChildren", false]], "hausdorff() (in module mymesh.register)": [[319, "mymesh.register.hausdorff", false]], "hex202linear() (in module mymesh.converter)": [[112, "mymesh.converter.hex202linear", false]], "hex2edges() (in module mymesh.converter)": [[113, "mymesh.converter.hex2edges", false]], "hex2faces() (in module mymesh.converter)": [[114, "mymesh.converter.hex2faces", false]], "hex2quadratic() (in module mymesh.converter)": [[115, "mymesh.converter.hex2quadratic", false]], "hex2tet() (in module mymesh.converter)": [[116, "mymesh.converter.hex2tet", false]], "hexsubdivide() (in module mymesh.converter)": [[117, "mymesh.converter.hexsubdivide", false]], "icp() (in module mymesh.register)": [[302, "mymesh.register.ICP", false]], "identify_elem() (in module mymesh.utils)": [[419, "mymesh.utils.identify_elem", false]], "identify_type() (in module mymesh.utils)": [[420, "mymesh.utils.identify_type", false]], "identify_type() (mymesh.mesh.mesh method)": [[72, "mymesh.mesh.mesh.identify_type", false]], "im2voxel() (in module mymesh.converter)": [[118, "mymesh.converter.im2voxel", false]], "image2image() (in module mymesh.register)": [[303, "mymesh.register.Image2Image", false]], "imagecurvature() (in module mymesh.curvature)": [[158, "mymesh.curvature.ImageCurvature", false]], "imageoverlay() (in module mymesh.register)": [[304, "mymesh.register.ImageOverlay", false]], "imread() (mymesh.mesh.mesh method)": [[73, "mymesh.mesh.mesh.imread", false]], "intersection() (in module mymesh.implicit)": [[197, "mymesh.implicit.intersection", false]], "intersectionf() (in module mymesh.implicit)": [[198, "mymesh.implicit.intersectionf", false]], "intersections() (in module mymesh.implicit)": [[199, "mymesh.implicit.intersections", false]], "inverseorthogonality() (in module mymesh.quality)": [[245, "mymesh.quality.InverseOrthogonality", false]], "inverseorthogonalquality() (in module mymesh.quality)": [[244, "mymesh.quality.InverseOrthogonalQuality", false]], "jaccard() (in module mymesh.register)": [[320, "mymesh.register.jaccard", false]], "lidinoid() (in module mymesh.implicit)": [[200, "mymesh.implicit.lidinoid", false]], "line() (in module mymesh.primitives)": [[236, "mymesh.primitives.Line", false]], "linear2quadratic() (in module mymesh.converter)": [[119, "mymesh.converter.linear2quadratic", false]], "locallaplaciansmoothing() (in module mymesh.improvement)": [[221, "mymesh.improvement.LocalLaplacianSmoothing", false]], "makechildren() (mymesh.tree.octreenode method)": [[350, "mymesh.tree.OctreeNode.makeChildren", false]], "makechildren() (mymesh.tree.quadtreenode method)": [[371, "mymesh.tree.QuadtreeNode.makeChildren", false]], "makechildrenboxes() (mymesh.tree.octreenode method)": [[351, "mymesh.tree.OctreeNode.makeChildrenBoxes", false]], "makechildrenedges() (mymesh.tree.quadtreenode method)": [[372, "mymesh.tree.QuadtreeNode.makeChildrenEdges", false]], "makechildrenpts() (mymesh.tree.octreenode method)": [[352, "mymesh.tree.OctreeNode.makeChildrenPts", false]], "makechildrenpts() (mymesh.tree.quadtreenode method)": [[373, "mymesh.tree.QuadtreeNode.makeChildrenPts", false]], "makechildrentris() (mymesh.tree.octreenode method)": [[353, "mymesh.tree.OctreeNode.makeChildrenTris", false]], "makepyramidlayer() (in module mymesh.utils)": [[421, "mymesh.utils.makePyramidLayer", false]], "marchingcubes() (in module mymesh.contour)": [[99, "mymesh.contour.MarchingCubes", false]], "marchingcubesimage() (in module mymesh.contour)": [[100, "mymesh.contour.MarchingCubesImage", false]], "marchingelements() (in module mymesh.contour)": [[101, "mymesh.contour.MarchingElements", false]], "marchingsquares() (in module mymesh.contour)": [[102, "mymesh.contour.MarchingSquares", false]], "marchingsquaresimage() (in module mymesh.contour)": [[103, "mymesh.contour.MarchingSquaresImage", false]], "marchingtetrahedra() (in module mymesh.contour)": [[104, "mymesh.contour.MarchingTetrahedra", false]], "marchingtriangles() (in module mymesh.contour)": [[105, "mymesh.contour.MarchingTriangles", false]], "maxdihedral() (in module mymesh.quality)": [[246, "mymesh.quality.MaxDihedral", false]], "meancurvature() (in module mymesh.curvature)": [[159, "mymesh.curvature.MeanCurvature", false]], "meanratio() (in module mymesh.quality)": [[247, "mymesh.quality.MeanRatio", false]], "merge() (mymesh.mesh.mesh method)": [[74, "mymesh.mesh.mesh.merge", false]], "mergemesh() (in module mymesh.utils)": [[401, "mymesh.utils.MergeMesh", false]], "mesh (class in mymesh)": [[22, "mymesh.mesh", false]], "mesh2dmesh() (mymesh.mesh.mesh method)": [[75, "mymesh.mesh.mesh.mesh2dmesh", false]], "mesh2im() (in module mymesh.converter)": [[120, "mymesh.converter.mesh2im", false]], "mesh2mesh() (in module mymesh.register)": [[305, "mymesh.register.Mesh2Mesh", false]], "mesh2udf() (in module mymesh.implicit)": [[201, "mymesh.implicit.mesh2udf", false]], "meshbooleans() (in module mymesh.booleans)": [[96, "mymesh.booleans.MeshBooleans", false]], "meshio2mymesh() (mymesh.mesh.mesh method)": [[76, "mymesh.mesh.mesh.meshio2mymesh", false]], "meshnodes (mymesh.mesh.mesh property)": [[43, "mymesh.mesh.mesh.MeshNodes", false]], "mindihedral() (in module mymesh.quality)": [[248, "mymesh.quality.MinDihedral", false]], "mirror() (mymesh.mesh.mesh method)": [[44, "mymesh.mesh.mesh.Mirror", false]], "mirrormesh() (in module mymesh.utils)": [[402, "mymesh.utils.MirrorMesh", false]], "module": [[0, "module-mymesh", false], [12, "module-mymesh.booleans", false], [13, "module-mymesh.contour", false], [14, "module-mymesh.converter", false], [15, "module-mymesh.curvature", false], [16, "module-mymesh.delaunay", false], [19, "module-mymesh.image", false], [20, "module-mymesh.implicit", false], [21, "module-mymesh.improvement", false], [89, "module-mymesh.primitives", false], [90, "module-mymesh.quality", false], [91, "module-mymesh.rays", false], [92, "module-mymesh.register", false], [93, "module-mymesh.tree", false], [94, "module-mymesh.utils", false], [95, "module-mymesh.visualize", false]], "multiline() (in module mymesh.primitives)": [[237, "mymesh.primitives.Multiline", false]], "mutual_information() (in module mymesh.register)": [[321, "mymesh.register.mutual_information", false]], "mvbb (mymesh.mesh.mesh property)": [[77, "mymesh.mesh.mesh.mvbb", false]], "mvbb() (in module mymesh.utils)": [[400, "mymesh.utils.MVBB", false]], "mymesh": [[0, "module-mymesh", false]], "mymesh.booleans": [[12, "module-mymesh.booleans", false]], "mymesh.contour": [[13, "module-mymesh.contour", false]], "mymesh.converter": [[14, "module-mymesh.converter", false]], "mymesh.curvature": [[15, "module-mymesh.curvature", false]], "mymesh.delaunay": [[16, "module-mymesh.delaunay", false]], "mymesh.image": [[19, "module-mymesh.image", false]], "mymesh.implicit": [[20, "module-mymesh.implicit", false]], "mymesh.improvement": [[21, "module-mymesh.improvement", false]], "mymesh.primitives": [[89, "module-mymesh.primitives", false]], "mymesh.quality": [[90, "module-mymesh.quality", false]], "mymesh.rays": [[91, "module-mymesh.rays", false]], "mymesh.register": [[92, "module-mymesh.register", false]], "mymesh.tree": [[93, "module-mymesh.tree", false]], "mymesh.utils": [[94, "module-mymesh.utils", false]], "mymesh.visualize": [[95, "module-mymesh.visualize", false]], "mymesh2meshio() (mymesh.mesh.mesh method)": [[78, "mymesh.mesh.mesh.mymesh2meshio", false]], "nd (mymesh.mesh.mesh property)": [[45, "mymesh.mesh.mesh.ND", false]], "nedge (mymesh.mesh.mesh property)": [[46, "mymesh.mesh.mesh.NEdge", false]], "nelem (mymesh.mesh.mesh property)": [[47, "mymesh.mesh.mesh.NElem", false]], "neovius() (in module mymesh.implicit)": [[202, "mymesh.implicit.neovius", false]], "nface (mymesh.mesh.mesh property)": [[48, "mymesh.mesh.mesh.NFace", false]], "nnode (mymesh.mesh.mesh property)": [[49, "mymesh.mesh.mesh.NNode", false]], "nodeconn (mymesh.mesh attribute)": [[22, "mymesh.mesh.NodeConn", false]], "nodecoords (mymesh.mesh attribute)": [[22, "mymesh.mesh.NodeCoords", false]], "nodedata (mymesh.mesh attribute)": [[22, "mymesh.mesh.NodeData", false]], "nodeneighbors (mymesh.mesh.mesh property)": [[50, "mymesh.mesh.mesh.NodeNeighbors", false]], "nodenormals (mymesh.mesh.mesh property)": [[51, "mymesh.mesh.mesh.NodeNormals", false]], "nodenormalsmethod (mymesh.mesh.mesh property)": [[52, "mymesh.mesh.mesh.NodeNormalsMethod", false]], "nodesets (mymesh.mesh attribute)": [[22, "mymesh.mesh.NodeSets", false]], "nodespringsmoothing() (in module mymesh.improvement)": [[222, "mymesh.improvement.NodeSpringSmoothing", false]], "normcurve() (in module mymesh.curvature)": [[160, "mymesh.curvature.NormCurve", false]], "octree2dual() (in module mymesh.tree)": [[336, "mymesh.tree.Octree2Dual", false]], "octree2voxel() (in module mymesh.tree)": [[337, "mymesh.tree.Octree2Voxel", false]], "octreenode (class in mymesh.tree)": [[338, "mymesh.tree.OctreeNode", false]], "offset() (in module mymesh.implicit)": [[203, "mymesh.implicit.offset", false]], "optimize() (in module mymesh.register)": [[322, "mymesh.register.optimize", false]], "orthogonality() (in module mymesh.quality)": [[250, "mymesh.quality.Orthogonality", false]], "orthogonalquality() (in module mymesh.quality)": [[249, "mymesh.quality.OrthogonalQuality", false]], "padragged() (in module mymesh.utils)": [[403, "mymesh.utils.PadRagged", false]], "parsecolor() (in module mymesh.visualize)": [[424, "mymesh.visualize.ParseColor", false]], "pixelmesh() (in module mymesh.image)": [[177, "mymesh.image.PixelMesh", false]], "plane() (in module mymesh.implicit)": [[204, "mymesh.implicit.plane", false]], "plane() (in module mymesh.primitives)": [[238, "mymesh.primitives.Plane", false]], "planeboxintersection() (in module mymesh.rays)": [[265, "mymesh.rays.PlaneBoxIntersection", false]], "planesurfintersection() (in module mymesh.rays)": [[266, "mymesh.rays.PlaneSurfIntersection", false]], "planetriangleintersection() (in module mymesh.rays)": [[267, "mymesh.rays.PlaneTriangleIntersection", false]], "planetrianglesintersection() (in module mymesh.rays)": [[268, "mymesh.rays.PlaneTrianglesIntersection", false]], "plot() (mymesh.mesh.mesh method)": [[79, "mymesh.mesh.mesh.plot", false]], "point2point() (in module mymesh.register)": [[306, "mymesh.register.Point2Point", false]], "pointinboundary() (in module mymesh.rays)": [[269, "mymesh.rays.PointInBoundary", false]], "pointinbox() (in module mymesh.rays)": [[270, "mymesh.rays.PointInBox", false]], "pointinbox2d() (in module mymesh.rays)": [[271, "mymesh.rays.PointInBox2D", false]], "pointinnode() (mymesh.tree.octreenode method)": [[342, "mymesh.tree.OctreeNode.PointInNode", false]], "pointinnode() (mymesh.tree.quadtreenode method)": [[363, "mymesh.tree.QuadtreeNode.PointInNode", false]], "pointinsurf() (in module mymesh.rays)": [[272, "mymesh.rays.PointInSurf", false]], "pointintet() (in module mymesh.rays)": [[273, "mymesh.rays.PointInTet", false]], "pointintri() (in module mymesh.rays)": [[274, "mymesh.rays.PointInTri", false]], "points (mymesh.mesh.mesh property)": [[80, "mymesh.mesh.mesh.points", false]], "points2octree() (in module mymesh.tree)": [[355, "mymesh.tree.Points2Octree", false]], "points2quadtree() (in module mymesh.tree)": [[356, "mymesh.tree.Points2Quadtree", false]], "pointsinnode() (mymesh.tree.octreenode method)": [[343, "mymesh.tree.OctreeNode.PointsInNode", false]], "pointsinnode() (mymesh.tree.quadtreenode method)": [[364, "mymesh.tree.QuadtreeNode.PointsInNode", false]], "pointsinsurf() (in module mymesh.rays)": [[275, "mymesh.rays.PointsInSurf", false]], "pointsintris() (in module mymesh.rays)": [[276, "mymesh.rays.PointsInTris", false]], "pointsinvoxel() (in module mymesh.rays)": [[277, "mymesh.rays.PointsInVoxel", false]], "polygon2edges() (in module mymesh.converter)": [[121, "mymesh.converter.polygon2edges", false]], "primitive() (in module mymesh.implicit)": [[205, "mymesh.implicit.primitive", false]], "print() (in module mymesh.tree)": [[357, "mymesh.tree.Print", false]], "project2surface() (in module mymesh.utils)": [[404, "mymesh.utils.Project2Surface", false]], "prune() (mymesh.tree.octreenode method)": [[354, "mymesh.tree.OctreeNode.prune", false]], "prune() (mymesh.tree.quadtreenode method)": [[374, "mymesh.tree.QuadtreeNode.prune", false]], "prune() (mymesh.tree.treenode method)": [[383, "mymesh.tree.TreeNode.prune", false]], "pyr132linear() (in module mymesh.converter)": [[122, "mymesh.converter.pyr132linear", false]], "pyr2quadratic() (in module mymesh.converter)": [[123, "mymesh.converter.pyr2quadratic", false]], "pyramid2edges() (in module mymesh.converter)": [[124, "mymesh.converter.pyramid2edges", false]], "pyramid2faces() (in module mymesh.converter)": [[125, "mymesh.converter.pyramid2faces", false]], "pyramid2tet() (in module mymesh.converter)": [[126, "mymesh.converter.pyramid2tet", false]], "quad2edges() (in module mymesh.converter)": [[127, "mymesh.converter.quad2edges", false]], "quad2quadratic() (in module mymesh.converter)": [[128, "mymesh.converter.quad2quadratic", false]], "quad2tri() (in module mymesh.converter)": [[129, "mymesh.converter.quad2tri", false]], "quad82linear() (in module mymesh.converter)": [[130, "mymesh.converter.quad82linear", false]], "quad_skewness() (in module mymesh.quality)": [[256, "mymesh.quality.quad_skewness", false]], "quadfit() (in module mymesh.curvature)": [[161, "mymesh.curvature.QuadFit", false]], "quadratic2linear() (in module mymesh.converter)": [[131, "mymesh.converter.quadratic2linear", false]], "quadtree2dual() (in module mymesh.tree)": [[358, "mymesh.tree.Quadtree2Dual", false]], "quadtree2pixel() (in module mymesh.tree)": [[359, "mymesh.tree.Quadtree2Pixel", false]], "quadtreenode (class in mymesh.tree)": [[360, "mymesh.tree.QuadtreeNode", false]], "r2d() (in module mymesh.register)": [[307, "mymesh.register.R2d", false]], "r3d() (in module mymesh.register)": [[308, "mymesh.register.R3d", false]], "rayboundaryintersection() (in module mymesh.rays)": [[278, "mymesh.rays.RayBoundaryIntersection", false]], "rayboxesintersection() (in module mymesh.rays)": [[280, "mymesh.rays.RayBoxesIntersection", false]], "rayboxintersection() (in module mymesh.rays)": [[279, "mymesh.rays.RayBoxIntersection", false]], "rayoctreeintersection() (in module mymesh.rays)": [[281, "mymesh.rays.RayOctreeIntersection", false]], "raysegmentintersection() (in module mymesh.rays)": [[282, "mymesh.rays.RaySegmentIntersection", false]], "raysegmentsintersection() (in module mymesh.rays)": [[283, "mymesh.rays.RaySegmentsIntersection", false]], "rayssurfintersection() (in module mymesh.rays)": [[287, "mymesh.rays.RaysSurfIntersection", false]], "raystrianglesintersection() (in module mymesh.rays)": [[288, "mymesh.rays.RaysTrianglesIntersection", false]], "raysurfintersection() (in module mymesh.rays)": [[284, "mymesh.rays.RaySurfIntersection", false]], "raytriangleintersection() (in module mymesh.rays)": [[285, "mymesh.rays.RayTriangleIntersection", false]], "raytrianglesintersection() (in module mymesh.rays)": [[286, "mymesh.rays.RayTrianglesIntersection", false]], "read() (in module mymesh.image)": [[182, "mymesh.image.read", false]], "read() (mymesh.mesh.mesh method)": [[81, "mymesh.mesh.mesh.read", false]], "relabelnodes() (in module mymesh.utils)": [[405, "mymesh.utils.RelabelNodes", false]], "removeelems() (mymesh.mesh.mesh method)": [[82, "mymesh.mesh.mesh.removeElems", false]], "renumberfacesbyset() (mymesh.mesh.mesh method)": [[53, "mymesh.mesh.mesh.RenumberFacesBySet", false]], "renumbernodesbyset() (mymesh.mesh.mesh method)": [[54, "mymesh.mesh.mesh.RenumberNodesBySet", false]], "reset() (mymesh.mesh.mesh method)": [[83, "mymesh.mesh.mesh.reset", false]], "revolve() (in module mymesh.primitives)": [[239, "mymesh.primitives.Revolve", false]], "rigid() (in module mymesh.register)": [[323, "mymesh.register.rigid", false]], "rigid2d() (in module mymesh.register)": [[324, "mymesh.register.rigid2d", false]], "rmax() (in module mymesh.implicit)": [[206, "mymesh.implicit.rMax", false]], "rmin() (in module mymesh.implicit)": [[207, "mymesh.implicit.rMin", false]], "rotation() (in module mymesh.register)": [[325, "mymesh.register.rotation", false]], "rotation2d() (in module mymesh.register)": [[326, "mymesh.register.rotation2d", false]], "s2d() (in module mymesh.register)": [[309, "mymesh.register.S2d", false]], "s3d() (in module mymesh.register)": [[310, "mymesh.register.S3d", false]], "scipy() (in module mymesh.delaunay)": [[173, "mymesh.delaunay.SciPy", false]], "searchoctree() (in module mymesh.tree)": [[375, "mymesh.tree.SearchOctree", false]], "searchoctreetri() (in module mymesh.tree)": [[376, "mymesh.tree.SearchOctreeTri", false]], "segmentbox2dintersection() (in module mymesh.rays)": [[289, "mymesh.rays.SegmentBox2DIntersection", false]], "segmentboxintersection() (in module mymesh.rays)": [[290, "mymesh.rays.SegmentBoxIntersection", false]], "segmentsegmentintersection() (in module mymesh.rays)": [[291, "mymesh.rays.SegmentSegmentIntersection", false]], "segmentspringsmoothing() (in module mymesh.improvement)": [[223, "mymesh.improvement.SegmentSpringSmoothing", false]], "segmentssegmentsintersection() (in module mymesh.rays)": [[292, "mymesh.rays.SegmentsSegmentsIntersection", false]], "set_vispy_backend() (in module mymesh.visualize)": [[427, "mymesh.visualize.set_vispy_backend", false]], "sh2d() (in module mymesh.register)": [[311, "mymesh.register.Sh2d", false]], "sh3d() (in module mymesh.register)": [[312, "mymesh.register.Sh3d", false]], "shapecategory() (in module mymesh.curvature)": [[162, "mymesh.curvature.ShapeCategory", false]], "shapeindex() (in module mymesh.curvature)": [[163, "mymesh.curvature.ShapeIndex", false]], "similarity() (in module mymesh.register)": [[327, "mymesh.register.similarity", false]], "similarity2d() (in module mymesh.register)": [[328, "mymesh.register.similarity2d", false]], "skewness() (in module mymesh.quality)": [[251, "mymesh.quality.Skewness", false]], "smartlaplaciansmoothing() (in module mymesh.improvement)": [[224, "mymesh.improvement.SmartLaplacianSmoothing", false]], "solid2edges() (in module mymesh.converter)": [[132, "mymesh.converter.solid2edges", false]], "solid2faces() (in module mymesh.converter)": [[133, "mymesh.converter.solid2faces", false]], "solid2surface() (in module mymesh.converter)": [[134, "mymesh.converter.solid2surface", false]], "solid2tets() (in module mymesh.converter)": [[135, "mymesh.converter.solid2tets", false]], "sortraggedbylength() (in module mymesh.utils)": [[406, "mymesh.utils.SortRaggedByLength", false]], "sphere() (in module mymesh.implicit)": [[208, "mymesh.implicit.sphere", false]], "sphere() (in module mymesh.primitives)": [[240, "mymesh.primitives.Sphere", false]], "splitmesh() (in module mymesh.booleans)": [[97, "mymesh.booleans.SplitMesh", false]], "splitraggedbylength() (in module mymesh.utils)": [[407, "mymesh.utils.SplitRaggedByLength", false]], "subplot() (in module mymesh.visualize)": [[425, "mymesh.visualize.Subplot", false]], "surf2dual() (in module mymesh.converter)": [[136, "mymesh.converter.surf2dual", false]], "surf2edges() (in module mymesh.converter)": [[137, "mymesh.converter.surf2edges", false]], "surf2tris() (in module mymesh.converter)": [[138, "mymesh.converter.surf2tris", false]], "surf2voxel() (in module mymesh.converter)": [[139, "mymesh.converter.surf2voxel", false]], "surface (mymesh.mesh.mesh property)": [[59, "mymesh.mesh.mesh.Surface", false]], "surface2octree() (in module mymesh.tree)": [[377, "mymesh.tree.Surface2Octree", false]], "surfacemesh() (in module mymesh.image)": [[178, "mymesh.image.SurfaceMesh", false]], "surfacemesh() (in module mymesh.implicit)": [[184, "mymesh.implicit.SurfaceMesh", false]], "surfacenodeoptimization() (in module mymesh.image)": [[179, "mymesh.image.SurfaceNodeOptimization", false]], "surfacenodeoptimization() (in module mymesh.implicit)": [[185, "mymesh.implicit.SurfaceNodeOptimization", false]], "surfconn (mymesh.mesh.mesh property)": [[55, "mymesh.mesh.mesh.SurfConn", false]], "surfdihedralangles() (in module mymesh.quality)": [[252, "mymesh.quality.SurfDihedralAngles", false]], "surfelemconn (mymesh.mesh.mesh property)": [[56, "mymesh.mesh.mesh.SurfElemConn", false]], "surfmapping() (in module mymesh.utils)": [[408, "mymesh.utils.SurfMapping", false]], "surfnodeneighbors (mymesh.mesh.mesh property)": [[57, "mymesh.mesh.mesh.SurfNodeNeighbors", false]], "surfnodes (mymesh.mesh.mesh property)": [[58, "mymesh.mesh.mesh.SurfNodes", false]], "surfselfintersection() (in module mymesh.rays)": [[293, "mymesh.rays.SurfSelfIntersection", false]], "surfsurfintersection() (in module mymesh.rays)": [[294, "mymesh.rays.SurfSurfIntersection", false]], "symmetric_closest_point_mse() (in module mymesh.register)": [[329, "mymesh.register.symmetric_closest_point_MSE", false]], "t2d() (in module mymesh.register)": [[313, "mymesh.register.T2d", false]], "t3d() (in module mymesh.register)": [[314, "mymesh.register.T3d", false]], "tangentiallaplaciansmoothing() (in module mymesh.improvement)": [[225, "mymesh.improvement.TangentialLaplacianSmoothing", false]], "tet102linear() (in module mymesh.converter)": [[140, "mymesh.converter.tet102linear", false]], "tet2edges() (in module mymesh.converter)": [[141, "mymesh.converter.tet2edges", false]], "tet2faces() (in module mymesh.converter)": [[142, "mymesh.converter.tet2faces", false]], "tet2quadratic() (in module mymesh.converter)": [[143, "mymesh.converter.tet2quadratic", false]], "tet_circumradius() (in module mymesh.quality)": [[257, "mymesh.quality.tet_circumradius", false]], "tet_vol_skewness() (in module mymesh.quality)": [[258, "mymesh.quality.tet_vol_skewness", false]], "tet_volume() (in module mymesh.quality)": [[259, "mymesh.quality.tet_volume", false]], "tetflip() (in module mymesh.improvement)": [[226, "mymesh.improvement.TetFlip", false]], "tetimprove() (in module mymesh.improvement)": [[227, "mymesh.improvement.TetImprove", false]], "tetmesh() (in module mymesh.image)": [[180, "mymesh.image.TetMesh", false]], "tetmesh() (in module mymesh.implicit)": [[186, "mymesh.implicit.TetMesh", false]], "tetmeshvol() (in module mymesh.utils)": [[409, "mymesh.utils.TetMeshVol", false]], "tetrahedralize() (in module mymesh.delaunay)": [[174, "mymesh.delaunay.Tetrahedralize", false]], "tetsplit() (in module mymesh.improvement)": [[228, "mymesh.improvement.TetSplit", false]], "tetsubdivide() (in module mymesh.converter)": [[144, "mymesh.converter.tetsubdivide", false]], "thicken() (in module mymesh.implicit)": [[209, "mymesh.implicit.thicken", false]], "thickenf() (in module mymesh.implicit)": [[210, "mymesh.implicit.thickenf", false]], "thickens() (in module mymesh.implicit)": [[211, "mymesh.implicit.thickens", false]], "threshold() (mymesh.mesh.mesh method)": [[60, "mymesh.mesh.mesh.Threshold", false]], "to_meshio() (mymesh.mesh.mesh method)": [[84, "mymesh.mesh.mesh.to_meshio", false]], "to_pyvista() (mymesh.mesh.mesh method)": [[85, "mymesh.mesh.mesh.to_pyvista", false]], "torus() (in module mymesh.implicit)": [[212, "mymesh.implicit.torus", false]], "torus() (in module mymesh.primitives)": [[241, "mymesh.primitives.Torus", false]], "transform_image() (in module mymesh.register)": [[330, "mymesh.register.transform_image", false]], "transform_points() (in module mymesh.register)": [[331, "mymesh.register.transform_points", false]], "translation() (in module mymesh.register)": [[332, "mymesh.register.translation", false]], "translation2d() (in module mymesh.register)": [[333, "mymesh.register.translation2d", false]], "treenode (class in mymesh.tree)": [[378, "mymesh.tree.TreeNode", false]], "tri2edges() (in module mymesh.converter)": [[145, "mymesh.converter.tri2edges", false]], "tri2quadratic() (in module mymesh.converter)": [[146, "mymesh.converter.tri2quadratic", false]], "tri62linear() (in module mymesh.converter)": [[147, "mymesh.converter.tri62linear", false]], "tri_area() (in module mymesh.quality)": [[260, "mymesh.quality.tri_area", false]], "tri_skewness() (in module mymesh.quality)": [[261, "mymesh.quality.tri_skewness", false]], "triangle() (in module mymesh.delaunay)": [[175, "mymesh.delaunay.Triangle", false]], "triangleboxintersection() (in module mymesh.rays)": [[295, "mymesh.rays.TriangleBoxIntersection", false]], "trianglestrianglesintersection() (in module mymesh.rays)": [[298, "mymesh.rays.TrianglesTrianglesIntersection", false]], "trianglestrianglesintersectionpts() (in module mymesh.rays)": [[299, "mymesh.rays.TrianglesTrianglesIntersectionPts", false]], "triangletriangleintersection() (in module mymesh.rays)": [[296, "mymesh.rays.TriangleTriangleIntersection", false]], "triangletriangleintersectionpt() (in module mymesh.rays)": [[297, "mymesh.rays.TriangleTriangleIntersectionPt", false]], "triangulate() (in module mymesh.delaunay)": [[176, "mymesh.delaunay.Triangulate", false]], "trisurfvol() (in module mymesh.utils)": [[410, "mymesh.utils.TriSurfVol", false]], "type (mymesh.mesh attribute)": [[22, "mymesh.mesh.Type", false]], "union() (in module mymesh.implicit)": [[213, "mymesh.implicit.union", false]], "unionf() (in module mymesh.implicit)": [[214, "mymesh.implicit.unionf", false]], "unions() (in module mymesh.implicit)": [[215, "mymesh.implicit.unions", false]], "validate() (mymesh.mesh.mesh method)": [[86, "mymesh.mesh.mesh.validate", false]], "valuemapping() (in module mymesh.utils)": [[411, "mymesh.utils.ValueMapping", false]], "verbose (mymesh.mesh attribute)": [[22, "mymesh.mesh.verbose", false]], "view() (in module mymesh.visualize)": [[426, "mymesh.visualize.View", false]], "view() (mymesh.mesh.mesh method)": [[87, "mymesh.mesh.mesh.view", false]], "volume() (in module mymesh.quality)": [[253, "mymesh.quality.Volume", false]], "voxel2im() (in module mymesh.converter)": [[148, "mymesh.converter.voxel2im", false]], "voxel2octree() (in module mymesh.tree)": [[384, "mymesh.tree.Voxel2Octree", false]], "voxelmesh() (in module mymesh.image)": [[181, "mymesh.image.VoxelMesh", false]], "voxelmesh() (in module mymesh.implicit)": [[187, "mymesh.implicit.VoxelMesh", false]], "wdg152linear() (in module mymesh.converter)": [[149, "mymesh.converter.wdg152linear", false]], "wdg2quadratic() (in module mymesh.converter)": [[150, "mymesh.converter.wdg2quadratic", false]], "wedge2edges() (in module mymesh.converter)": [[151, "mymesh.converter.wedge2edges", false]], "wedge2faces() (in module mymesh.converter)": [[152, "mymesh.converter.wedge2faces", false]], "wedge2tet() (in module mymesh.converter)": [[153, "mymesh.converter.wedge2tet", false]], "write() (in module mymesh.image)": [[183, "mymesh.image.write", false]], "write() (mymesh.mesh.mesh method)": [[88, "mymesh.mesh.mesh.write", false]], "xplane() (in module mymesh.implicit)": [[216, "mymesh.implicit.xplane", false]], "yplane() (in module mymesh.implicit)": [[217, "mymesh.implicit.yplane", false]], "zplane() (in module mymesh.implicit)": [[218, "mymesh.implicit.zplane", false]]}, "objects": {"": [[0, 0, 0, "-", "mymesh"]], "mymesh": [[12, 0, 0, "-", "booleans"], [13, 0, 0, "-", "contour"], [14, 0, 0, "-", "converter"], [15, 0, 0, "-", "curvature"], [16, 0, 0, "-", "delaunay"], [443, 1, 1, "", "demo_image"], [444, 1, 1, "", "demo_mesh"], [19, 0, 0, "-", "image"], [20, 0, 0, "-", "implicit"], [21, 0, 0, "-", "improvement"], [22, 2, 1, "", "mesh"], [89, 0, 0, "-", "primitives"], [90, 0, 0, "-", "quality"], [91, 0, 0, "-", "rays"], [92, 0, 0, "-", "register"], [93, 0, 0, "-", "tree"], [94, 0, 0, "-", "utils"], [95, 0, 0, "-", "visualize"]], "mymesh.booleans": [[96, 1, 1, "", "MeshBooleans"], [97, 1, 1, "", "SplitMesh"]], "mymesh.contour": [[98, 1, 1, "", "Adaptive"], [99, 1, 1, "", "MarchingCubes"], [100, 1, 1, "", "MarchingCubesImage"], [101, 1, 1, "", "MarchingElements"], [102, 1, 1, "", "MarchingSquares"], [103, 1, 1, "", "MarchingSquaresImage"], [104, 1, 1, "", "MarchingTetrahedra"], [105, 1, 1, "", "MarchingTriangles"]], "mymesh.converter": [[106, 1, 1, "", "EdgesByElement"], [107, 1, 1, "", "edge2quadratic"], [108, 1, 1, "", "edge32linear"], [109, 1, 1, "", "edges2unique"], [110, 1, 1, "", "faces2surface"], [111, 1, 1, "", "faces2unique"], [112, 1, 1, "", "hex202linear"], [113, 1, 1, "", "hex2edges"], [114, 1, 1, "", "hex2faces"], [115, 1, 1, "", "hex2quadratic"], [116, 1, 1, "", "hex2tet"], [117, 1, 1, "", "hexsubdivide"], [118, 1, 1, "", "im2voxel"], [119, 1, 1, "", "linear2quadratic"], [120, 1, 1, "", "mesh2im"], [121, 1, 1, "", "polygon2edges"], [122, 1, 1, "", "pyr132linear"], [123, 1, 1, "", "pyr2quadratic"], [124, 1, 1, "", "pyramid2edges"], [125, 1, 1, "", "pyramid2faces"], [126, 1, 1, "", "pyramid2tet"], [127, 1, 1, "", "quad2edges"], [128, 1, 1, "", "quad2quadratic"], [129, 1, 1, "", "quad2tri"], [130, 1, 1, "", "quad82linear"], [131, 1, 1, "", "quadratic2linear"], [132, 1, 1, "", "solid2edges"], [133, 1, 1, "", "solid2faces"], [134, 1, 1, "", "solid2surface"], [135, 1, 1, "", "solid2tets"], [136, 1, 1, "", "surf2dual"], [137, 1, 1, "", "surf2edges"], [138, 1, 1, "", "surf2tris"], [139, 1, 1, "", "surf2voxel"], [140, 1, 1, "", "tet102linear"], [141, 1, 1, "", "tet2edges"], [142, 1, 1, "", "tet2faces"], [143, 1, 1, "", "tet2quadratic"], [144, 1, 1, "", "tetsubdivide"], [145, 1, 1, "", "tri2edges"], [146, 1, 1, "", "tri2quadratic"], [147, 1, 1, "", "tri62linear"], [148, 1, 1, "", "voxel2im"], [149, 1, 1, "", "wdg152linear"], [150, 1, 1, "", "wdg2quadratic"], [151, 1, 1, "", "wedge2edges"], [152, 1, 1, "", "wedge2faces"], [153, 1, 1, "", "wedge2tet"]], "mymesh.curvature": [[154, 1, 1, "", "AnalyticalCurvature"], [155, 1, 1, "", "CubicFit"], [156, 1, 1, "", "Curvedness"], [157, 1, 1, "", "GaussianCurvature"], [158, 1, 1, "", "ImageCurvature"], [159, 1, 1, "", "MeanCurvature"], [160, 1, 1, "", "NormCurve"], [161, 1, 1, "", "QuadFit"], [162, 1, 1, "", "ShapeCategory"], [163, 1, 1, "", "ShapeIndex"]], "mymesh.delaunay": [[164, 1, 1, "", "Alpha2d"], [165, 1, 1, "", "Alpha3d"], [166, 1, 1, "", "AlphaPeel3d"], [167, 1, 1, "", "AlphaShape"], [168, 1, 1, "", "BowyerWatson2d"], [169, 1, 1, "", "BowyerWatson3d"], [170, 1, 1, "", "ConvexHull"], [171, 1, 1, "", "FanTriangulation"], [172, 1, 1, "", "GiftWrapping"], [173, 1, 1, "", "SciPy"], [174, 1, 1, "", "Tetrahedralize"], [175, 1, 1, "", "Triangle"], [176, 1, 1, "", "Triangulate"]], "mymesh.image": [[177, 1, 1, "", "PixelMesh"], [178, 1, 1, "", "SurfaceMesh"], [179, 1, 1, "", "SurfaceNodeOptimization"], [180, 1, 1, "", "TetMesh"], [181, 1, 1, "", "VoxelMesh"], [182, 1, 1, "", "read"], [183, 1, 1, "", "write"]], "mymesh.implicit": [[184, 1, 1, "", "SurfaceMesh"], [185, 1, 1, "", "SurfaceNodeOptimization"], [186, 1, 1, "", "TetMesh"], [187, 1, 1, "", "VoxelMesh"], [188, 1, 1, "", "box"], [189, 1, 1, "", "cylinder"], [190, 1, 1, "", "diamond"], [191, 1, 1, "", "diff"], [192, 1, 1, "", "difff"], [193, 1, 1, "", "diffs"], [194, 1, 1, "", "grid2fun"], [195, 1, 1, "", "grid2grad"], [196, 1, 1, "", "gyroid"], [197, 1, 1, "", "intersection"], [198, 1, 1, "", "intersectionf"], [199, 1, 1, "", "intersections"], [200, 1, 1, "", "lidinoid"], [201, 1, 1, "", "mesh2udf"], [202, 1, 1, "", "neovius"], [203, 1, 1, "", "offset"], [204, 1, 1, "", "plane"], [205, 1, 1, "", "primitive"], [206, 1, 1, "", "rMax"], [207, 1, 1, "", "rMin"], [208, 1, 1, "", "sphere"], [209, 1, 1, "", "thicken"], [210, 1, 1, "", "thickenf"], [211, 1, 1, "", "thickens"], [212, 1, 1, "", "torus"], [213, 1, 1, "", "union"], [214, 1, 1, "", "unionf"], [215, 1, 1, "", "unions"], [216, 1, 1, "", "xplane"], [217, 1, 1, "", "yplane"], [218, 1, 1, "", "zplane"]], "mymesh.improvement": [[219, 1, 1, "", "Contract"], [220, 1, 1, "", "GeoTransformSmoothing"], [221, 1, 1, "", "LocalLaplacianSmoothing"], [222, 1, 1, "", "NodeSpringSmoothing"], [223, 1, 1, "", "SegmentSpringSmoothing"], [224, 1, 1, "", "SmartLaplacianSmoothing"], [225, 1, 1, "", "TangentialLaplacianSmoothing"], [226, 1, 1, "", "TetFlip"], [227, 1, 1, "", "TetImprove"], [228, 1, 1, "", "TetSplit"]], "mymesh.mesh": [[22, 3, 1, "", "EdgeSets"], [22, 3, 1, "", "ElemData"], [22, 3, 1, "", "ElemSets"], [22, 3, 1, "", "FaceSets"], [22, 3, 1, "", "NodeConn"], [22, 3, 1, "", "NodeCoords"], [22, 3, 1, "", "NodeData"], [22, 3, 1, "", "NodeSets"], [22, 3, 1, "", "Type"], [22, 3, 1, "", "verbose"]], "mymesh.mesh.mesh": [[23, 4, 1, "", "Boundary"], [24, 4, 1, "", "BoundaryConn"], [25, 4, 1, "", "BoundaryNodes"], [26, 4, 1, "", "Centroids"], [27, 5, 1, "", "Clip"], [28, 5, 1, "", "Contour"], [29, 5, 1, "", "CreateBoundaryLayer"], [30, 5, 1, "", "Crop"], [31, 4, 1, "", "EdgeConn"], [32, 4, 1, "", "EdgeElemConn"], [33, 4, 1, "", "Edges"], [34, 4, 1, "", "ElemConn"], [35, 4, 1, "", "ElemNeighbors"], [36, 4, 1, "", "ElemNormals"], [37, 4, 1, "", "ElemType"], [38, 4, 1, "", "EulerCharacteristic"], [39, 4, 1, "", "FaceConn"], [40, 4, 1, "", "FaceElemConn"], [41, 4, 1, "", "Faces"], [42, 4, 1, "", "Genus"], [43, 4, 1, "", "MeshNodes"], [44, 5, 1, "", "Mirror"], [45, 4, 1, "", "ND"], [46, 4, 1, "", "NEdge"], [47, 4, 1, "", "NElem"], [48, 4, 1, "", "NFace"], [49, 4, 1, "", "NNode"], [50, 4, 1, "", "NodeNeighbors"], [51, 4, 1, "", "NodeNormals"], [52, 4, 1, "", "NodeNormalsMethod"], [53, 5, 1, "", "RenumberFacesBySet"], [54, 5, 1, "", "RenumberNodesBySet"], [55, 4, 1, "", "SurfConn"], [56, 4, 1, "", "SurfElemConn"], [57, 4, 1, "", "SurfNodeNeighbors"], [58, 4, 1, "", "SurfNodes"], [59, 4, 1, "", "Surface"], [60, 5, 1, "", "Threshold"], [61, 4, 1, "", "aabb"], [62, 5, 1, "", "addEdges"], [63, 5, 1, "", "addElems"], [64, 5, 1, "", "addFaces"], [65, 5, 1, "", "addNodes"], [66, 4, 1, "", "bounds"], [67, 4, 1, "", "cells"], [68, 5, 1, "", "cleanup"], [69, 5, 1, "", "copy"], [70, 5, 1, "", "getCurvature"], [71, 5, 1, "", "getQuality"], [72, 5, 1, "", "identify_type"], [73, 5, 1, "", "imread"], [74, 5, 1, "", "merge"], [75, 5, 1, "", "mesh2dmesh"], [76, 5, 1, "", "meshio2mymesh"], [77, 4, 1, "", "mvbb"], [78, 5, 1, "", "mymesh2meshio"], [79, 5, 1, "", "plot"], [80, 4, 1, "", "points"], [81, 5, 1, "", "read"], [82, 5, 1, "", "removeElems"], [83, 5, 1, "", "reset"], [84, 5, 1, "", "to_meshio"], [85, 5, 1, "", "to_pyvista"], [86, 5, 1, "", "validate"], [87, 5, 1, "", "view"], [88, 5, 1, "", "write"]], "mymesh.primitives": [[229, 1, 1, "", "Box"], [230, 1, 1, "", "Circle"], [231, 1, 1, "", "CirclePt"], [232, 1, 1, "", "Cylinder"], [233, 1, 1, "", "Extrude"], [234, 1, 1, "", "Grid"], [235, 1, 1, "", "Grid2D"], [236, 1, 1, "", "Line"], [237, 1, 1, "", "Multiline"], [238, 1, 1, "", "Plane"], [239, 1, 1, "", "Revolve"], [240, 1, 1, "", "Sphere"], [241, 1, 1, "", "Torus"]], "mymesh.quality": [[242, 1, 1, "", "Area"], [243, 1, 1, "", "AspectRatio"], [244, 1, 1, "", "InverseOrthogonalQuality"], [245, 1, 1, "", "InverseOrthogonality"], [246, 1, 1, "", "MaxDihedral"], [247, 1, 1, "", "MeanRatio"], [248, 1, 1, "", "MinDihedral"], [249, 1, 1, "", "OrthogonalQuality"], [250, 1, 1, "", "Orthogonality"], [251, 1, 1, "", "Skewness"], [252, 1, 1, "", "SurfDihedralAngles"], [253, 1, 1, "", "Volume"], [254, 1, 1, "", "dihedralAngles"], [255, 1, 1, "", "equiangular_skewness"], [256, 1, 1, "", "quad_skewness"], [257, 1, 1, "", "tet_circumradius"], [258, 1, 1, "", "tet_vol_skewness"], [259, 1, 1, "", "tet_volume"], [260, 1, 1, "", "tri_area"], [261, 1, 1, "", "tri_skewness"]], "mymesh.rays": [[262, 1, 1, "", "BoundaryBoundaryIntersection"], [263, 1, 1, "", "BoxBoxIntersection"], [264, 1, 1, "", "BoxTrianglesIntersection"], [265, 1, 1, "", "PlaneBoxIntersection"], [266, 1, 1, "", "PlaneSurfIntersection"], [267, 1, 1, "", "PlaneTriangleIntersection"], [268, 1, 1, "", "PlaneTrianglesIntersection"], [269, 1, 1, "", "PointInBoundary"], [270, 1, 1, "", "PointInBox"], [271, 1, 1, "", "PointInBox2D"], [272, 1, 1, "", "PointInSurf"], [273, 1, 1, "", "PointInTet"], [274, 1, 1, "", "PointInTri"], [275, 1, 1, "", "PointsInSurf"], [276, 1, 1, "", "PointsInTris"], [277, 1, 1, "", "PointsInVoxel"], [278, 1, 1, "", "RayBoundaryIntersection"], [279, 1, 1, "", "RayBoxIntersection"], [280, 1, 1, "", "RayBoxesIntersection"], [281, 1, 1, "", "RayOctreeIntersection"], [282, 1, 1, "", "RaySegmentIntersection"], [283, 1, 1, "", "RaySegmentsIntersection"], [284, 1, 1, "", "RaySurfIntersection"], [285, 1, 1, "", "RayTriangleIntersection"], [286, 1, 1, "", "RayTrianglesIntersection"], [287, 1, 1, "", "RaysSurfIntersection"], [288, 1, 1, "", "RaysTrianglesIntersection"], [289, 1, 1, "", "SegmentBox2DIntersection"], [290, 1, 1, "", "SegmentBoxIntersection"], [291, 1, 1, "", "SegmentSegmentIntersection"], [292, 1, 1, "", "SegmentsSegmentsIntersection"], [293, 1, 1, "", "SurfSelfIntersection"], [294, 1, 1, "", "SurfSurfIntersection"], [295, 1, 1, "", "TriangleBoxIntersection"], [296, 1, 1, "", "TriangleTriangleIntersection"], [297, 1, 1, "", "TriangleTriangleIntersectionPt"], [298, 1, 1, "", "TrianglesTrianglesIntersection"], [299, 1, 1, "", "TrianglesTrianglesIntersectionPts"]], "mymesh.register": [[300, 1, 1, "", "AxisAlignImage"], [301, 1, 1, "", "AxisAlignPoints"], [302, 1, 1, "", "ICP"], [303, 1, 1, "", "Image2Image"], [304, 1, 1, "", "ImageOverlay"], [305, 1, 1, "", "Mesh2Mesh"], [306, 1, 1, "", "Point2Point"], [307, 1, 1, "", "R2d"], [308, 1, 1, "", "R3d"], [309, 1, 1, "", "S2d"], [310, 1, 1, "", "S3d"], [311, 1, 1, "", "Sh2d"], [312, 1, 1, "", "Sh3d"], [313, 1, 1, "", "T2d"], [314, 1, 1, "", "T3d"], [315, 1, 1, "", "affine"], [316, 1, 1, "", "affine2d"], [317, 1, 1, "", "closest_point_MSE"], [318, 1, 1, "", "dice"], [319, 1, 1, "", "hausdorff"], [320, 1, 1, "", "jaccard"], [321, 1, 1, "", "mutual_information"], [322, 1, 1, "", "optimize"], [323, 1, 1, "", "rigid"], [324, 1, 1, "", "rigid2d"], [325, 1, 1, "", "rotation"], [326, 1, 1, "", "rotation2d"], [327, 1, 1, "", "similarity"], [328, 1, 1, "", "similarity2d"], [329, 1, 1, "", "symmetric_closest_point_MSE"], [330, 1, 1, "", "transform_image"], [331, 1, 1, "", "transform_points"], [332, 1, 1, "", "translation"], [333, 1, 1, "", "translation2d"]], "mymesh.tree": [[334, 1, 1, "", "Edges2Quadtree"], [335, 1, 1, "", "Function2Octree"], [336, 1, 1, "", "Octree2Dual"], [337, 1, 1, "", "Octree2Voxel"], [338, 2, 1, "", "OctreeNode"], [355, 1, 1, "", "Points2Octree"], [356, 1, 1, "", "Points2Quadtree"], [357, 1, 1, "", "Print"], [358, 1, 1, "", "Quadtree2Dual"], [359, 1, 1, "", "Quadtree2Pixel"], [360, 2, 1, "", "QuadtreeNode"], [375, 1, 1, "", "SearchOctree"], [376, 1, 1, "", "SearchOctreeTri"], [377, 1, 1, "", "Surface2Octree"], [378, 2, 1, "", "TreeNode"], [384, 1, 1, "", "Voxel2Octree"], [385, 1, 1, "", "getAllLeaf"]], "mymesh.tree.OctreeNode": [[339, 5, 1, "", "ContainsBoxes"], [340, 5, 1, "", "ContainsPts"], [341, 5, 1, "", "ContainsTris"], [342, 5, 1, "", "PointInNode"], [343, 5, 1, "", "PointsInNode"], [344, 5, 1, "", "clearData"], [345, 5, 1, "", "getLevel"], [346, 5, 1, "", "getLimits"], [347, 5, 1, "", "getMaxDepth"], [348, 5, 1, "", "getVertices"], [349, 5, 1, "", "hasChildren"], [350, 5, 1, "", "makeChildren"], [351, 5, 1, "", "makeChildrenBoxes"], [352, 5, 1, "", "makeChildrenPts"], [353, 5, 1, "", "makeChildrenTris"], [354, 5, 1, "", "prune"]], "mymesh.tree.QuadtreeNode": [[361, 5, 1, "", "ContainsEdges"], [362, 5, 1, "", "ContainsPts"], [363, 5, 1, "", "PointInNode"], [364, 5, 1, "", "PointsInNode"], [365, 5, 1, "", "clearData"], [366, 5, 1, "", "getLevel"], [367, 5, 1, "", "getLimits"], [368, 5, 1, "", "getMaxDepth"], [369, 5, 1, "", "getVertices"], [370, 5, 1, "", "hasChildren"], [371, 5, 1, "", "makeChildren"], [372, 5, 1, "", "makeChildrenEdges"], [373, 5, 1, "", "makeChildrenPts"], [374, 5, 1, "", "prune"]], "mymesh.tree.TreeNode": [[379, 5, 1, "", "clearData"], [380, 5, 1, "", "getLevel"], [381, 5, 1, "", "getMaxDepth"], [382, 5, 1, "", "hasChildren"], [383, 5, 1, "", "prune"]], "mymesh.utils": [[386, 1, 1, "", "AABB"], [387, 1, 1, "", "BaryTet"], [388, 1, 1, "", "BaryTri"], [389, 1, 1, "", "BaryTris"], [390, 1, 1, "", "CalcFaceNormal"], [391, 1, 1, "", "Centroids"], [392, 1, 1, "", "CleanupDegenerateElements"], [393, 1, 1, "", "DeleteDegenerateElements"], [394, 1, 1, "", "DeleteDuplicateNodes"], [395, 1, 1, "", "DetectFeatures"], [396, 1, 1, "", "DilateVoxel"], [397, 1, 1, "", "ErodeVoxel"], [398, 1, 1, "", "ExtractRagged"], [399, 1, 1, "", "Face2NodeNormal"], [400, 1, 1, "", "MVBB"], [401, 1, 1, "", "MergeMesh"], [402, 1, 1, "", "MirrorMesh"], [403, 1, 1, "", "PadRagged"], [404, 1, 1, "", "Project2Surface"], [405, 1, 1, "", "RelabelNodes"], [406, 1, 1, "", "SortRaggedByLength"], [407, 1, 1, "", "SplitRaggedByLength"], [408, 1, 1, "", "SurfMapping"], [409, 1, 1, "", "TetMeshVol"], [410, 1, 1, "", "TriSurfVol"], [411, 1, 1, "", "ValueMapping"], [412, 1, 1, "", "getConnectedElements"], [413, 1, 1, "", "getConnectedNodes"], [414, 1, 1, "", "getElemConnectivity"], [415, 1, 1, "", "getElemNeighbors"], [416, 1, 1, "", "getNodeNeighborhood"], [417, 1, 1, "", "getNodeNeighborhoodByRadius"], [418, 1, 1, "", "getNodeNeighbors"], [419, 1, 1, "", "identify_elem"], [420, 1, 1, "", "identify_type"], [421, 1, 1, "", "makePyramidLayer"]], "mymesh.visualize": [[422, 1, 1, "", "FaceColor"], [423, 1, 1, "", "GetTheme"], [424, 1, 1, "", "ParseColor"], [425, 1, 1, "", "Subplot"], [426, 1, 1, "", "View"], [427, 1, 1, "", "set_vispy_backend"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "method", "Python method"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:property", "5": "py:method"}, "terms": {"": [5, 16, 18, 60, 62, 63, 64, 65, 93, 98, 136, 158, 175, 176, 178, 190, 191, 196, 197, 200, 202, 203, 205, 209, 213, 219, 227, 228, 279, 280, 285, 289, 290, 297, 299, 303, 304, 309, 310, 322, 376, 395, 419, 428, 431, 436, 437, 439, 440, 441, 444, 447, 448, 450, 454, 455], "0": [2, 4, 5, 6, 7, 9, 11, 17, 20, 27, 44, 73, 90, 98, 99, 100, 101, 102, 103, 104, 105, 116, 118, 120, 126, 148, 153, 162, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 196, 200, 202, 205, 206, 207, 208, 212, 216, 217, 218, 219, 220, 221, 222, 223, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 244, 245, 249, 250, 251, 255, 256, 258, 261, 262, 268, 269, 272, 275, 278, 282, 283, 285, 286, 288, 291, 292, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 320, 323, 324, 325, 326, 327, 328, 335, 338, 345, 351, 352, 353, 360, 366, 372, 373, 378, 380, 393, 394, 395, 406, 407, 419, 426, 428, 429, 430, 433, 434, 437, 438, 439, 442, 443, 446, 447, 448, 455, 456], "00": [4, 9, 11, 442], "000": 11, "00012": 439, "001": 393, "002": 439, "0020": 439, "005": 439, "00529": 439, "00843": 439, "01": [179, 311, 312, 335, 439], "012": 308, "0181": 439, "01880": 439, "019": 439, "0190": 439, "02": [312, 395], "024": 439, "0262": 439, "027": 439, "03": 395, "03581": 439, "0363": 439, "04": [6, 9, 442], "05": [5, 120, 184, 185, 186, 187, 188, 190, 196, 200, 202, 205, 219, 234, 235, 430, 434, 439], "06": [285, 439], "08": [9, 96, 174, 176, 269, 272, 275, 302, 442], "08831": 439, "09": 439, "1": [2, 4, 5, 6, 7, 27, 28, 29, 44, 62, 63, 64, 70, 73, 90, 98, 100, 103, 104, 116, 118, 120, 126, 148, 153, 158, 162, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 196, 200, 202, 205, 208, 212, 216, 217, 218, 219, 221, 222, 223, 227, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 243, 244, 245, 249, 250, 251, 255, 256, 258, 261, 279, 280, 285, 289, 290, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 318, 320, 322, 323, 325, 326, 327, 328, 330, 335, 394, 395, 397, 398, 401, 403, 406, 407, 408, 411, 419, 421, 424, 426, 428, 429, 430, 433, 434, 437, 438, 439, 446, 447, 448, 450, 453, 455, 456], "10": [2, 5, 29, 68, 72, 96, 104, 105, 115, 120, 140, 143, 221, 225, 229, 230, 231, 232, 240, 241, 264, 279, 280, 285, 286, 288, 289, 290, 295, 296, 297, 298, 299, 355, 356, 406, 407, 420, 431, 439, 446, 455], "100": [178, 180, 181, 224, 233, 302, 303, 322], "1002": 439, "1007": [29, 439], "1016": 439, "10487472": [296, 297, 298, 299, 439], "10487487": 439, "1056": 439, "1080": [296, 297, 298, 299, 439], "10867651": [296, 297, 298, 299, 439], "1093": 439, "1097": 439, "11": 446, "1109": 439, "1111": 439, "1145": [96, 264, 279, 280, 285, 286, 288, 289, 290, 295, 439], "1148": 439, "115": 439, "117": 439, "1198555": [264, 279, 280, 285, 286, 288, 289, 290, 295, 439], "1198746": [285, 286, 288, 439], "1198747": [264, 295, 439], "1198748": [279, 280, 289, 290, 439], "12": [97, 104, 105, 273, 274, 276, 312, 393, 394, 430, 439, 446], "123811": 439, "126": 439, "13": [122, 123, 431, 446], "131": 439, "13th": 439, "14": [7, 9, 74, 262, 266, 268, 278, 284, 286, 287, 288, 293, 294, 296, 297, 298, 299, 394, 446], "144": 439, "1467": 439, "14th": 439, "15": [149, 150, 431, 446], "150": 439, "1571135649789292416": 439, "15904": [96, 439], "15922": [96, 439], "16": 446, "160": 439, "161": 439, "162": 439, "1620080402": 439, "163": 439, "1641": 439, "164360": 439, "164427": 439, "1652": 439, "166": 439, "167": 439, "169": 439, "170": 439, "172": 439, "179": 393, "18": [29, 228, 439], "180": 393, "1805": 439, "182": 439, "19": 439, "1908": 439, "1932409": 439, "1945": 439, "1948": 439, "195": 439, "1973": 439, "1974": 439, "1981": 439, "1986": 439, "1987": 439, "199": 439, "1991": 439, "1992": [156, 162, 163, 439], "1993": 439, "1994": 439, "1995": 439, "1996": 439, "1997": [296, 297, 298, 299, 439], "1998": 439, "1d": [184, 186, 187, 432, 440], "1e": [68, 74, 96, 97, 104, 105, 174, 176, 185, 221, 222, 224, 225, 262, 266, 268, 269, 272, 273, 274, 275, 276, 278, 284, 285, 286, 287, 288, 293, 294, 296, 297, 298, 299, 302, 322, 393, 394], "1to14": 153, "1to2": 126, "1to20": 126, "1to24": [116, 126, 144], "1to2c": 126, "1to3": 153, "1to36": 153, "1to3c": 153, "1to4": [126, 144], "1to5": 116, "1to6": 116, "2": [2, 5, 7, 42, 98, 100, 104, 107, 108, 126, 129, 148, 153, 162, 167, 168, 170, 173, 174, 176, 182, 184, 186, 189, 206, 207, 209, 210, 219, 220, 221, 226, 228, 230, 231, 232, 233, 239, 240, 241, 260, 264, 271, 278, 280, 282, 283, 291, 292, 295, 296, 297, 298, 299, 300, 301, 303, 304, 308, 315, 323, 325, 327, 331, 333, 334, 335, 346, 356, 361, 367, 372, 394, 395, 401, 406, 407, 408, 411, 420, 421, 426, 429, 430, 431, 433, 434, 439, 446, 447, 448, 452, 455], "20": [112, 115, 222, 230, 231, 232, 240, 241, 312, 322, 430, 431, 439], "2000": [223, 439], "20000330": 439, "2001": [410, 439], "2002": [29, 439], "2003": 439, "2004": [155, 160, 161, 439], "2005": [154, 158, 264, 279, 280, 285, 286, 288, 289, 290, 295, 439], "2008": 439, "2009": 439, "201": 439, "2010": 439, "2015": 439, "2016": 439, "2018": 439, "2019": 439, "2020": 439, "2024": 439, "2025": 441, "203": 439, "20649557": 272, "209": 439, "21": [2, 4, 312, 439, 442], "216": 439, "22": [439, 441], "220": 439, "221": 439, "222": 439, "23": 439, "230": 439, "2307": 439, "24": [257, 439], "24th": 439, "25": [6, 7, 178, 180, 181, 212, 219, 227, 241, 296, 297, 298, 299, 395, 430, 439], "250": 303, "255": [17, 183, 303, 304, 443], "25526819": 272, "256": 446, "258734": 439, "258849": 439, "26": 439, "2629697": 439, "286": 439, "291": 439, "297": 439, "2d": [22, 62, 63, 64, 103, 132, 134, 148, 164, 167, 168, 170, 171, 172, 173, 176, 177, 183, 189, 233, 238, 239, 269, 278, 280, 288, 303, 324, 326, 333, 403, 410, 428, 432, 433, 439], "2exi": 447, "2fxy": 447, "2x_ii": 447, "2x_iy_i": 447, "2y": 447, "2y_0": 447, "2y_1": 447, "2y_i": 447, "2y_n": 447, "3": [2, 5, 9, 65, 72, 104, 107, 108, 126, 132, 133, 145, 146, 147, 153, 162, 168, 170, 171, 173, 174, 176, 183, 185, 212, 219, 221, 222, 226, 228, 229, 237, 257, 259, 260, 264, 267, 268, 269, 270, 271, 272, 275, 276, 277, 278, 281, 282, 283, 284, 286, 287, 288, 291, 292, 293, 298, 299, 300, 301, 304, 322, 325, 326, 330, 331, 332, 333, 340, 341, 352, 353, 356, 362, 373, 389, 392, 393, 394, 406, 407, 420, 429, 430, 431, 433, 434, 439, 446, 447, 448, 452, 455], "30": [296, 297, 298, 299, 439], "302": 439, "3197517": 439, "32": [223, 439], "3201353": 439, "324": 439, "33": [98, 99, 100, 178, 184, 439], "336156": 439, "338193": 439, "338200": 439, "3386569": 439, "3392385": 439, "34": 439, "349": 439, "35": [2, 442], "36": 7, "368": 439, "37": 439, "37401": 439, "37422": 439, "376": 439, "381": 439, "384": 439, "39": 439, "3c647": 439, "3d": [18, 20, 73, 100, 116, 118, 120, 126, 134, 135, 148, 153, 158, 165, 166, 167, 169, 170, 173, 174, 182, 183, 184, 186, 208, 212, 233, 234, 239, 264, 265, 269, 270, 271, 272, 275, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 293, 295, 303, 310, 323, 325, 332, 375, 410, 428, 432, 433, 439, 444], "3dx": 447, "3e3": 439, "3gy": 447, "3x3": [307, 309, 311, 313, 330, 376], "3x_i": 447, "3y_i": 447, "4": [2, 7, 115, 119, 126, 127, 128, 129, 130, 132, 133, 140, 141, 142, 143, 144, 153, 162, 183, 219, 226, 228, 257, 259, 300, 301, 302, 305, 306, 323, 325, 331, 332, 348, 369, 392, 394, 406, 407, 418, 429, 430, 431, 433, 439, 442, 446], "407": 439, "412": 439, "43": 439, "437": [2, 4, 9, 442], "45": 439, "46": 439, "4x4": [308, 310, 312, 314, 330], "5": [5, 6, 7, 72, 73, 98, 118, 120, 122, 123, 124, 125, 126, 132, 133, 153, 162, 177, 178, 180, 181, 182, 184, 185, 186, 219, 227, 236, 240, 300, 303, 305, 306, 334, 335, 377, 394, 406, 407, 420, 429, 431, 437, 438, 439, 446, 447, 450], "50": 241, "50040": 439, "501": 2, "55": [7, 279, 280, 289, 290, 439], "557": 439, "560840": 439, "564": 439, "58": 439, "590": [5, 9, 442], "595": 2, "5987": 439, "6": [72, 98, 132, 133, 146, 147, 149, 150, 151, 152, 153, 162, 184, 186, 187, 221, 223, 224, 225, 259, 285, 303, 305, 323, 324, 335, 406, 407, 420, 429, 431, 439, 446, 450, 455], "60": [279, 280, 289, 290, 439], "600": 426, "63": 439, "632": 439, "647": [223, 439], "658": 439, "66": [29, 439], "668": [223, 439], "679": 439, "696": 439, "7": [7, 98, 104, 162, 406, 407, 439, 446], "73": 439, "75": 285, "7721": 439, "781606": 439, "781653": 439, "7823": 439, "7830": 439, "78928668": 272, "79": [29, 439], "8": [6, 72, 96, 112, 113, 114, 116, 117, 128, 130, 132, 133, 162, 229, 269, 272, 275, 348, 406, 407, 420, 431, 439, 446, 454], "800": 426, "82": 393, "83": 439, "852": [7, 9, 442], "8659": 439, "874": 442, "8856": 439, "9": [7, 188, 251, 406, 407, 429, 430, 434, 439, 446], "90020": 439, "90076": 439, "92": 439, "966131": 439, "966134": 439, "967": 439, "990": 439, "995": [6, 9, 442], "A": [2, 11, 28, 29, 72, 107, 115, 116, 123, 126, 128, 143, 146, 150, 153, 156, 162, 163, 242, 257, 260, 264, 279, 280, 289, 290, 300, 303, 305, 306, 323, 325, 326, 332, 333, 408, 420, 430, 432, 433, 438, 439, 440, 441, 446, 447, 448, 450], "As": [18, 444, 448, 450], "At": [44, 336, 358], "BY": 322, "By": [6, 30, 44, 52, 83, 98, 99, 100, 101, 102, 103, 104, 105, 110, 158, 173, 184, 185, 186, 219, 221, 222, 224, 225, 232, 233, 234, 235, 236, 238, 239, 240, 269, 282, 283, 291, 292, 300, 303, 304, 322, 392, 419, 426, 447], "For": [2, 31, 32, 34, 35, 36, 38, 39, 40, 42, 50, 95, 100, 102, 103, 104, 116, 126, 132, 133, 153, 170, 179, 182, 183, 184, 185, 186, 190, 196, 200, 202, 203, 205, 209, 210, 221, 222, 224, 225, 232, 239, 242, 243, 244, 245, 249, 250, 251, 253, 269, 272, 275, 285, 286, 288, 300, 301, 305, 306, 307, 308, 322, 389, 392, 396, 411, 412, 413, 415, 419, 426, 430, 433, 434, 437, 438, 446, 447, 450, 453, 454, 455, 456], "If": [1, 22, 27, 28, 29, 30, 43, 44, 46, 48, 52, 55, 60, 62, 63, 64, 65, 71, 73, 79, 83, 86, 88, 96, 97, 99, 100, 101, 102, 103, 104, 105, 109, 110, 111, 118, 119, 120, 132, 133, 135, 136, 138, 155, 158, 164, 165, 166, 167, 168, 170, 171, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 216, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 257, 258, 262, 269, 275, 282, 283, 285, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 322, 330, 334, 335, 337, 344, 356, 359, 365, 375, 377, 379, 392, 401, 408, 411, 412, 413, 415, 421, 426, 427, 430, 432, 437, 448, 455], "In": [18, 72, 155, 160, 161, 273, 274, 276, 285, 286, 288, 398, 403, 406, 407, 411, 420, 426, 429, 430, 434, 440, 441, 444, 447, 448], "It": [29, 132, 224, 322, 434, 441, 447, 448, 450, 454], "No": [99, 100, 101, 102, 103, 104, 105, 350, 371], "Not": [116, 126, 153, 303, 305, 306, 415], "On": 439, "One": [322, 438, 439, 446], "Or": 428, "Such": 6, "That": 268, "The": [2, 5, 18, 20, 22, 29, 44, 69, 93, 97, 98, 100, 103, 109, 111, 116, 117, 120, 132, 133, 135, 136, 139, 144, 153, 177, 181, 184, 185, 186, 187, 195, 209, 210, 212, 219, 221, 223, 228, 232, 240, 241, 247, 300, 301, 303, 304, 319, 322, 330, 334, 335, 347, 355, 356, 368, 377, 381, 389, 392, 394, 396, 397, 399, 402, 407, 408, 412, 413, 421, 427, 429, 432, 436, 437, 438, 439, 440, 441, 444, 445, 446, 447, 448, 450, 452, 453, 454, 455], "There": [51, 132, 428, 432, 437, 438, 441, 450], "These": [7, 62, 63, 64, 65, 93, 136, 288, 322, 346, 348, 367, 406, 407, 428, 430, 431, 440, 446, 448, 453], "To": [2, 6, 38, 120, 175, 219, 232, 421, 435, 438, 441, 448, 450, 455], "Will": [132, 133, 264, 272, 275, 295, 404, 408, 411], "With": [288, 406], "_": [2, 435, 437, 447], "_ax": 79, "_description_": [220, 288, 335, 426], "_edg": 62, "_face": 64, "_i": [447, 453, 456], "_j": [453, 456], "_mesh": [76, 78, 84], "_type_": [220, 237, 288, 335, 426], "a1": 430, "a2": 430, "a3": 430, "a_i": [447, 448], "a_x": 448, "aa": 257, "ab": [72, 254, 420, 439], "abil": [177, 178, 180, 181, 184, 186, 187, 229, 232, 233, 234, 235, 236, 238, 239, 240, 241], "abl": [120, 192, 198, 210, 214], "about": [18, 136, 212, 241, 303, 307, 308, 312, 325, 402, 439, 444], "abov": [20, 105, 187, 216, 217, 218, 228, 251, 335, 446, 450], "absolut": [347, 368, 381], "ac": 439, "academ": [1, 439], "acceler": [272, 275, 284, 287, 288], "accept": [434, 453], "access": [17, 18, 88, 101, 406, 438, 441, 443, 444], "accomplish": 447, "accord": [405, 440], "accordingli": 401, "account": 330, "accur": [2, 6, 439, 450], "achiev": [222, 430, 438, 456], "acknowledg": [18, 444], "acm": [96, 264, 279, 280, 285, 286, 288, 289, 290, 295, 439], "across": [1, 44, 448], "activ": [22, 450], "actual": [209, 210], "ad": [62, 63, 64, 65, 116, 126, 135, 153, 223, 228, 437, 448, 450, 452], "adapt": [228, 335, 439], "add": [62, 63, 64, 65, 132, 177, 181, 222, 223, 448], "addit": [2, 104, 109, 111, 184, 186, 187, 303, 305, 306, 322, 406, 415, 440, 446, 447, 450], "addition": [86, 435, 436, 438], "adjac": [35, 50, 99, 100, 101, 102, 103, 104, 105, 155, 221, 224, 225, 252, 296, 297, 298, 299, 395, 406, 418, 446, 448, 452], "admiss": 455, "adopt": [434, 447], "adrian": [439, 448], "advanc": [62, 64, 101, 430], "advantag": [438, 447], "affin": [300, 301, 302, 303, 305, 306, 323, 325, 326, 332, 333], "affine_transform": [300, 303, 330], "after": [63, 221, 224, 225, 227, 228, 300, 301, 455], "ag073671": 441, "against": 454, "agatho": 439, "ahead": 448, "ai": 250, "aid": 439, "aim": [430, 441, 445], "akenin": [264, 295, 439], "al": [228, 449, 455], "alec": 439, "alexand": 439, "algebra": 439, "algorithm": [16, 99, 100, 102, 103, 104, 105, 168, 169, 170, 172, 174, 176, 265, 279, 280, 285, 286, 288, 289, 290, 302, 303, 305, 322, 336, 358, 428, 439, 441, 445, 446, 448, 453, 455], "algorthim": 322, "alia": [67, 80, 84], "alias": [23, 59, 438], "align": [2, 61, 92, 116, 126, 135, 153, 232, 265, 279, 280, 289, 290, 300, 301, 303, 305, 306, 386, 400, 447, 455], "all": [6, 30, 43, 60, 63, 71, 72, 73, 83, 95, 101, 103, 104, 105, 113, 114, 116, 118, 121, 124, 125, 126, 127, 129, 132, 133, 135, 138, 139, 141, 142, 145, 151, 152, 153, 158, 184, 186, 187, 221, 222, 224, 225, 243, 245, 249, 250, 303, 305, 306, 322, 330, 344, 345, 357, 365, 366, 379, 380, 385, 407, 408, 411, 420, 428, 429, 431, 433, 435, 437, 438, 441, 442, 447, 448, 450, 455], "all_nod": 60, "allevi": 430, "allow": [1, 175, 179, 184, 221, 224, 330, 426, 431, 447, 448, 454, 456], "allow_invers": 219, "alohner08": [399, 439], "alon": 447, "along": [27, 29, 97, 99, 100, 101, 102, 103, 104, 105, 182, 216, 217, 218, 221, 229, 232, 239, 240, 322, 404, 430, 438, 446, 455], "alpha": [2, 164, 165, 166, 167, 206, 207, 308, 323, 324, 325, 387, 388, 389, 404, 408, 424, 426, 432], "alpha_0": 448, "alphashap": 432, "alreadi": [55, 62, 63, 64, 300, 303, 304], "also": [5, 6, 15, 18, 119, 131, 132, 236, 239, 296, 297, 298, 299, 405, 431, 432, 433, 441, 444, 446, 448, 449, 450, 454, 456], "alter": [179, 185], "altern": [72, 139, 155, 420, 427, 428, 448], "alwai": [406, 445], "am": [132, 133], "ambigu": [72, 119, 155, 300, 301, 420, 431, 446], "amd": 439, "american": 439, "ami": 439, "amoller05": [264, 295, 439], "among": 448, "amount": [203, 233, 406, 437, 439], "amplitud": 439, "an": [20, 22, 28, 60, 73, 84, 86, 87, 88, 93, 98, 99, 102, 104, 105, 112, 118, 137, 139, 154, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 191, 192, 193, 194, 195, 197, 198, 199, 201, 203, 204, 209, 210, 213, 214, 215, 219, 222, 223, 227, 228, 232, 240, 243, 247, 264, 265, 267, 268, 272, 275, 276, 279, 280, 281, 282, 283, 284, 285, 287, 289, 290, 291, 292, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 322, 330, 331, 334, 335, 336, 337, 347, 350, 355, 356, 358, 359, 368, 371, 377, 381, 384, 392, 393, 395, 399, 404, 408, 411, 415, 416, 417, 426, 427, 429, 431, 432, 435, 437, 438, 439, 440, 441, 445, 446, 447, 448, 450, 452, 454, 455, 456], "analog": [93, 105, 440], "analogi": [222, 223, 439], "analysi": [4, 428, 429, 440, 441, 442], "analyt": 2, "analyticalcurvatur": 2, "analyz": [3, 10, 441], "andr": 441, "andrea": 439, "angel": [18, 444], "angl": [52, 219, 227, 239, 246, 248, 250, 251, 252, 254, 323, 324, 325, 326, 393, 395, 399], "anglestep": 239, "angletol": 393, "ani": [1, 7, 29, 30, 43, 60, 72, 81, 86, 93, 131, 137, 139, 179, 185, 187, 194, 195, 219, 253, 267, 268, 318, 320, 330, 349, 370, 382, 415, 420, 430, 434, 436, 438, 441, 448, 454], "anim": [18, 444], "anisotrop": 234, "annual": 439, "anoth": [18, 221, 224, 225, 269, 336, 394, 408, 411, 429, 430, 444, 446], "ansi": [244, 245, 249, 250], "anyth": [18, 444, 447], "apart": [222, 394], "api": [441, 445], "appear": [18, 72, 401, 420, 444], "append": [2, 62, 63, 64, 65, 117, 144], "appli": [18, 100, 103, 221, 222, 223, 303, 304, 305, 306, 330, 331, 439, 444, 456], "applic": [88, 164, 165, 166, 167, 322, 430, 439, 441, 453], "approach": [6, 72, 155, 322, 335, 404, 408, 411, 420, 430, 446, 448, 453], "appropri": [86, 88, 101, 430, 437, 441], "approxim": [6, 98, 160, 178, 180, 184, 185, 186, 190, 196, 200, 202, 205, 236, 237, 322, 439, 446], "ar": [2, 5, 6, 16, 17, 18, 20, 21, 23, 30, 38, 43, 44, 51, 59, 60, 62, 63, 64, 71, 72, 83, 86, 93, 96, 99, 100, 101, 102, 103, 104, 105, 108, 112, 114, 117, 120, 122, 125, 130, 131, 132, 133, 135, 136, 139, 140, 142, 144, 147, 149, 152, 155, 158, 160, 161, 167, 168, 170, 171, 173, 176, 177, 179, 181, 182, 183, 184, 185, 186, 187, 191, 192, 193, 197, 198, 199, 213, 214, 215, 219, 221, 222, 224, 225, 228, 236, 237, 257, 259, 260, 267, 268, 273, 274, 275, 276, 277, 278, 284, 285, 286, 287, 293, 300, 303, 304, 305, 306, 322, 323, 324, 325, 326, 330, 332, 333, 334, 335, 339, 340, 341, 346, 348, 350, 361, 362, 367, 371, 377, 385, 390, 392, 394, 399, 406, 407, 408, 415, 418, 420, 426, 428, 429, 430, 431, 432, 433, 434, 435, 438, 440, 441, 443, 444, 445, 446, 447, 448, 450, 452, 453, 454, 455, 456], "arang": [43, 233], "arbitrari": [204, 303, 305, 439, 455], "arbitrarili": [72, 300, 301, 303, 304, 420], "arcco": [2, 254], "archiv": [17, 443], "arctan": 447, "area": [251, 260], "aren": [72, 110, 120, 136, 222, 420, 450], "arg": [184, 186, 187], "argmax": 2, "argument": [5, 79, 83, 87, 154, 184, 186, 187, 194, 195, 227, 269, 300, 303, 305, 306, 322, 330], "ariella": 441, "aris": [2, 440], "armadillo": [18, 444], "around": [170, 171, 396, 416, 417, 447], "arrai": [2, 17, 22, 25, 43, 58, 62, 63, 64, 65, 73, 79, 98, 99, 100, 102, 103, 109, 111, 118, 126, 131, 135, 138, 148, 153, 155, 158, 160, 161, 168, 169, 173, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 219, 221, 222, 228, 229, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 255, 256, 258, 261, 264, 265, 267, 268, 272, 273, 274, 276, 279, 280, 285, 286, 288, 289, 290, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 308, 309, 310, 311, 312, 315, 316, 318, 320, 323, 324, 325, 326, 330, 331, 334, 335, 336, 342, 343, 348, 358, 363, 364, 369, 377, 389, 392, 394, 398, 403, 404, 426, 430, 433, 434, 443, 450], "array_lik": [22, 27, 28, 30, 60, 62, 63, 64, 65, 79, 98, 99, 101, 102, 104, 105, 107, 108, 112, 115, 117, 119, 120, 122, 123, 126, 128, 129, 130, 131, 136, 139, 140, 143, 144, 146, 147, 148, 149, 150, 153, 158, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 189, 201, 204, 208, 212, 219, 221, 222, 224, 225, 227, 228, 230, 231, 232, 233, 236, 237, 239, 240, 241, 242, 246, 247, 248, 252, 253, 254, 257, 258, 262, 263, 265, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 312, 317, 319, 322, 325, 326, 329, 330, 331, 334, 335, 340, 341, 343, 352, 353, 355, 356, 361, 362, 364, 372, 373, 375, 376, 377, 384, 386, 389, 392, 400, 405, 407, 414, 418, 419, 420, 426], "articl": [18, 439, 444], "artifact": [18, 444], "artifici": 439, "arxiv": 439, "ascii": 88, "asid": [18, 444], "aspect": [71, 243], "aspectratio": [71, 90], "assert": 86, "assess": [335, 446, 454], "assign": [222, 223, 421], "associ": [22, 148, 155, 401, 411, 429, 432, 439, 454], "assovi": 131, "assum": [99, 100, 101, 102, 103, 104, 105, 108, 112, 122, 130, 132, 133, 140, 147, 149, 179, 182, 191, 192, 193, 197, 198, 199, 213, 214, 215, 224, 269, 303, 304, 390, 396, 397, 418, 421, 433, 434], "assumpt": 447, "attempt": [72, 155, 183, 219, 420, 427], "attribut": [22, 344, 365, 379, 431, 438], "aubri": 439, "aug": 439, "auger": 441, "author": 445, "auto": [106, 132, 133, 137, 228, 253, 392, 418], "automat": [22, 183, 242, 303, 439], "avail": [6, 17, 18, 71, 101, 221, 222, 224, 225, 322, 426, 427, 432, 434, 443, 444, 445], "averag": [118, 224, 228, 399, 447, 448, 453], "avoid": [72, 223, 420, 428, 438], "awai": 448, "ax": [2, 79, 100, 148, 179, 182, 232, 240, 300, 301, 308, 325, 447, 455], "ax1": [2, 430], "ax2": [2, 430], "ax3": [2, 430], "ax4": 2, "axi": [6, 7, 61, 79, 182, 189, 212, 216, 217, 218, 221, 230, 231, 232, 233, 239, 240, 241, 265, 279, 280, 289, 290, 293, 300, 301, 309, 310, 313, 314, 322, 386, 455], "axial_resolut": 232, "axis_ord": [300, 301], "b": [62, 63, 64, 206, 207, 257, 264, 267, 268, 285, 286, 288, 295, 296, 297, 298, 299, 430, 439, 447, 448, 450, 455], "b978": 439, "b_i": 447, "b_x": 448, "b_y": 448, "back": [135, 138], "backend": 427, "background": [158, 184, 186, 395, 430], "bajaj": 439, "balanc": 438, "bar": [2, 453, 455, 456], "bari": [387, 388], "barrier": 412, "barrierelem": 412, "barriernod": 413, "barru": [279, 280, 289, 290, 439], "barycentr": [387, 388, 389, 404, 408, 411, 448, 455], "barytri": 448, "base": [1, 2, 22, 28, 29, 45, 73, 93, 98, 118, 154, 155, 158, 160, 161, 173, 179, 185, 232, 303, 322, 335, 336, 338, 351, 352, 353, 358, 360, 372, 373, 378, 399, 410, 426, 430, 434, 436, 438, 439, 440, 446, 452, 454, 455], "basi": 171, "basic": [16, 191, 213, 448], "bb": 257, "bd02": [29, 439], "becaus": 6, "becom": [117, 120, 144, 456], "been": [2, 46, 48, 62, 64, 135, 136, 397, 437, 446, 448], "befor": [62, 64, 219], "begin": [307, 308, 309, 310, 311, 312, 313, 314, 447, 448, 455], "behavior": 139, "behind": [445, 448], "being": [21, 60, 219, 243, 244, 245, 249, 250, 251, 255, 256, 258, 261, 285, 286, 288, 404, 429, 430, 434, 437, 441, 447, 448, 454], "below": [18, 105, 187, 219, 335, 429, 444, 446], "belyaev": [185, 439], "ben": 439, "bend": 447, "benjamin": 439, "bent": 447, "bernd": 439, "best": [2, 90, 113, 114, 121, 124, 125, 127, 141, 142, 145, 151, 152, 244, 245, 249, 250, 251, 255, 256, 258, 261], "beta": [308, 323, 324, 325, 387, 388, 389, 404, 408], "beta_0": 448, "better": [160, 161, 219, 411, 437, 453], "between": [1, 6, 14, 93, 97, 99, 100, 101, 102, 103, 104, 105, 109, 110, 111, 116, 119, 126, 135, 153, 219, 223, 228, 236, 239, 246, 248, 250, 252, 254, 262, 264, 265, 267, 268, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 299, 317, 318, 319, 320, 329, 330, 335, 336, 350, 358, 371, 389, 395, 429, 430, 431, 439, 445, 454, 455, 456], "beyond": 330, "bf01313411": 439, "bfb0014497": 439, "bgcolor": [2, 6, 7, 98, 184, 186, 187, 188, 189, 190, 196, 200, 202, 205, 208, 212, 221, 229, 230, 232, 233, 234, 235, 236, 240, 241, 395, 426, 430, 438], "bias": 322, "bicub": [100, 103], "bidirect": [279, 280, 281, 284, 285, 286, 287, 288, 455], "big": [447, 448], "biggest": 447, "bilinear": [99, 100, 102, 103], "billion": 439, "binar": [120, 300, 303, 304], "binari": [88, 120, 303, 318, 320, 446], "bioinformat": 439, "biologi": 439, "biomechan": [1, 439, 441], "bit": 5, "blackbox": 445, "blake": 441, "blo00": [222, 439, 456], "blo94": [104, 439, 446], "block": 438, "blom": [223, 439, 456], "bloomenth": [439, 446], "blue": 429, "bmatrix": [307, 308, 309, 310, 311, 312, 313, 314, 447, 455], "board": 1, "bobyqa": 322, "bolun": 439, "bone": [439, 447], "bong": 439, "book": [18, 444], "bool": [17, 22, 28, 29, 30, 44, 60, 63, 71, 74, 79, 88, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 115, 120, 123, 128, 131, 132, 133, 135, 138, 143, 146, 150, 155, 158, 173, 177, 179, 181, 182, 184, 185, 186, 219, 221, 222, 223, 224, 225, 227, 228, 232, 234, 235, 237, 238, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 318, 320, 337, 342, 343, 344, 349, 357, 359, 363, 364, 365, 370, 376, 379, 382, 385, 394, 400, 401, 406, 407, 408, 411, 426, 443], "boolean": [18, 191, 192, 193, 197, 198, 199, 213, 214, 215, 280, 430, 432, 441, 444], "boston": 441, "both": [2, 21, 60, 72, 185, 209, 210, 223, 237, 279, 280, 281, 284, 285, 286, 287, 288, 303, 304, 305, 306, 335, 337, 359, 420, 426, 432, 440, 441, 447, 448, 450, 454, 455, 456], "bottasso": [29, 439], "bottom": [18, 444], "boubekeur": 439, "bound": [5, 6, 27, 30, 60, 61, 77, 79, 98, 184, 186, 187, 188, 194, 195, 234, 235, 238, 263, 264, 265, 279, 280, 289, 290, 295, 300, 301, 303, 305, 306, 322, 330, 335, 339, 342, 343, 346, 351, 363, 364, 367, 386, 400, 426, 448, 454, 455], "boundai": 262, "boundari": [5, 24, 25, 28, 29, 99, 100, 102, 103, 105, 120, 158, 187, 228, 262, 269, 277, 278, 303, 342, 343, 363, 364, 376, 439, 440, 446, 448, 453], "boundaryconn": [23, 269, 278], "boundaryconn1": 262, "boundaryconn2": 262, "bow81": [168, 169, 439, 448], "bowyer": [168, 169, 170, 174, 176, 439], "bowyerwatson": [170, 174, 176], "bowyerwatson2d": [170, 176, 448], "bowyerwatson3d": [170, 174, 448], "box": [27, 61, 77, 98, 234, 235, 263, 264, 265, 270, 271, 279, 280, 289, 290, 295, 300, 301, 339, 351, 386, 400, 430, 432, 434, 439, 454], "box1": 263, "box2": 263, "boxcent": [264, 295], "branch": [93, 350, 371, 454], "break": [18, 23, 59, 444], "bridg": [18, 444, 445], "bright": [158, 447], "brightobject": 158, "brows": [18, 444], "brute": [322, 404, 408, 411], "bu": [7, 439], "bucati": 7, "buddha": [18, 444], "build": [158, 432, 441, 448], "built": [6, 434, 435], "bunni": [17, 18, 178, 180, 181, 219, 303, 305, 443, 444], "bunny_res2": [18, 444], "bunny_res3": [18, 444], "bunny_res4": [18, 444], "bx": 447, "bx_0y_0": 447, "bx_1y_1": 447, "bx_ny_n": 447, "bxy": 447, "c": [29, 62, 63, 64, 227, 257, 264, 267, 268, 285, 286, 288, 295, 296, 297, 298, 299, 410, 439, 447, 448, 450, 455], "c_0": [307, 308], "c_1": [307, 308], "c_2": 308, "c_i": 447, "c_x": 448, "c_y": 448, "cach": [63, 83, 438], "cag": 439, "cagd": 439, "calcfacenorm": [155, 160, 161, 252], "calcul": [36, 42, 52, 63, 136, 154, 155, 156, 157, 158, 159, 160, 161, 163, 171, 185, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 275, 386, 390, 391, 399, 400, 409, 410, 430, 438, 448, 453, 455], "call": [2, 415, 438], "callabl": [191, 192, 198, 203, 210, 213, 214, 228, 322], "came": 106, "can": [2, 5, 6, 7, 18, 22, 28, 29, 51, 62, 63, 64, 65, 71, 79, 93, 95, 100, 102, 103, 104, 105, 120, 136, 139, 155, 158, 160, 161, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 194, 195, 227, 228, 229, 232, 233, 234, 235, 236, 238, 239, 240, 241, 247, 284, 287, 288, 303, 304, 305, 306, 318, 320, 322, 330, 375, 389, 394, 404, 406, 408, 411, 412, 413, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 444, 446, 447, 448, 450, 452, 453, 454, 455, 456], "candid": 450, "cannot": 412, "cap": [162, 232, 447], "capabl": [1, 10, 16, 98, 428], "captur": 447, "care": [446, 454], "carefulli": [62, 64, 428], "cartesian": [44, 308, 315, 323, 325, 327, 328], "case": [72, 116, 135, 153, 182, 296, 297, 298, 299, 411, 420, 429, 435, 440, 446, 447, 448], "cast": [91, 269, 272, 275, 398], "categor": 162, "categori": 162, "caus": [285, 437], "cav74": [439, 453], "cavendish": 439, "cc": 257, "ccw": 136, "cdot": [259, 453, 455], "cell": [78, 84, 85, 223, 438], "cellcent": 223, "center": [7, 27, 116, 126, 153, 189, 208, 212, 221, 223, 224, 225, 230, 231, 232, 233, 239, 240, 241, 264, 295, 300, 301, 303, 307, 308, 312, 315, 316, 323, 324, 325, 326, 327, 328, 434, 446, 447, 448, 453], "centric": [387, 388], "centrod": 223, "centroid": [30, 98, 117, 136, 139, 144, 187, 250, 301, 336, 338, 346, 358, 360, 367, 437, 438, 454], "certain": [183, 322], "cgal": 441, "chalmer": 439, "chanc": [72, 420], "chandrajit": 439, "chang": [23, 52, 59, 62, 64, 69, 330, 335, 392, 446, 448, 450, 452, 456], "channel": 433, "charact": 227, "characterist": [38, 42], "charl": 439, "che95": [99, 100, 439, 446], "chear": 312, "check": [86, 279, 280, 281, 284, 285, 286, 287, 288, 342, 343, 349, 363, 364, 370, 382, 392, 448, 450, 454, 455], "check_numba": 155, "chen": 410, "chernyaev": [439, 446], "chi": [38, 42], "child": [116, 126, 135, 153, 344, 345, 349, 350, 351, 352, 353, 365, 366, 370, 371, 372, 373, 379, 380, 382, 454], "children": [344, 350, 365, 371, 379, 454], "childstat": [350, 371], "chines": [18, 444], "choic": [222, 269, 272, 275, 448, 454], "choos": [18, 285, 286, 288, 444, 446], "chosen": [98, 303, 304, 305, 306, 322, 426, 427, 430, 438], "christian": [18, 444], "church": [18, 444], "ci": 250, "cir": 439, "circl": [231, 232, 241], "circular": [212, 232, 240, 241], "circumfer": [230, 231, 232], "circumferenti": [230, 231, 240, 241], "circumradii": 257, "citat": 445, "cite": [18, 247, 444, 448], "class": [22, 101, 183, 338, 360, 378, 428, 429, 436, 447], "classic": [430, 453], "classif": 447, "classifi": [72, 104, 105, 395, 420], "cleaner": 430, "cleanup": [30, 60, 74, 100, 102, 103, 104, 105, 107, 115, 123, 128, 131, 143, 146, 150, 219, 401], "cleanup_tol": [104, 105], "clear": [52, 83, 344, 365, 379, 441], "clearchildren": [344, 365, 379], "clim": [79, 426], "cline": [439, 446], "clip": [178, 180, 181, 219], "clockwis": [114, 125, 136, 142, 152, 348, 390, 448], "clone": 435, "close": [2, 23, 104, 105, 120, 137, 139, 158, 232, 237, 268, 269, 272, 275, 285, 286, 288, 296, 297, 298, 299, 430, 440, 455], "closest": [302, 303, 305, 317, 319, 329], "closest_point_ms": [305, 306, 329], "cloud": [92, 300, 301, 303, 305, 306, 432], "cma": 439, "cmap": [120, 303], "cmu": 439, "cnm": 439, "co": [190, 196, 200, 202, 205, 307, 308, 439], "coars": 219, "coarsen": [73, 118, 177, 178, 180, 181, 182, 219, 305, 452], "coarser": [18, 444], "cobyla": 322, "code": [2, 5, 6, 7, 426, 438, 441], "coeffici": [179, 318], "collaps": 219, "collect": [428, 429, 440], "color": [2, 5, 7, 395, 422, 424, 426, 430, 441], "color_convert": [422, 426], "colorscal": 79, "colorspaci": [426, 435], "column": [173, 221], "column_stack": 233, "com": [311, 312, 437, 439], "combin": [6, 184, 288, 300, 301, 430, 434, 439, 446], "come": [244, 245, 249, 250, 438], "comjnl": 439, "command": 437, "commerci": [18, 444], "common": [120, 330, 436, 447, 450], "commonli": [6, 18, 438, 440, 444, 447], "commun": 439, "commut": 44, "compar": [2, 303, 305, 306, 389], "comparison": 389, "compat": [6, 184, 437], "compil": [155, 441], "complement": 447, "complet": 399, "complex": [7, 335, 430, 432, 434, 439, 445, 450, 454], "compo": 440, "compon": [45, 447, 455], "comprehens": 441, "compris": 429, "comput": [1, 18, 29, 51, 52, 104, 172, 177, 181, 224, 264, 295, 317, 329, 412, 413, 430, 439, 440, 444, 448, 455], "computation": 430, "concav": [432, 447], "concern": 430, "conclud": 455, "conclus": 322, "concurr": 448, "condens": 439, "condit": [60, 434, 455], "confer": 439, "configur": [450, 452], "confirm": 86, "conflict": 428, "connect": [5, 17, 18, 22, 24, 31, 32, 34, 35, 39, 40, 43, 50, 55, 56, 62, 63, 64, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 160, 161, 168, 169, 171, 173, 175, 179, 185, 194, 195, 223, 224, 233, 237, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 269, 272, 275, 277, 278, 284, 287, 293, 294, 334, 336, 337, 358, 359, 377, 384, 390, 391, 392, 393, 394, 395, 396, 397, 399, 401, 402, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 431, 438, 440, 443, 444, 446, 447, 448, 450, 452, 453, 456], "connect_end": 237, "connet": [101, 104, 105], "consid": [20, 28, 104, 105, 158, 177, 178, 180, 181, 184, 186, 187, 268, 273, 274, 276, 282, 283, 285, 286, 288, 291, 292, 415, 434, 440, 447], "consider": [223, 439], "consist": [16, 120, 126, 155, 170, 179, 185, 303, 304, 323, 324, 330, 332, 333, 396, 397, 404, 421, 429, 440, 446, 447, 448, 455], "constant": [100, 103, 300, 303], "constitut": [6, 393, 415], "constrain": [1, 175, 221, 322, 435], "constraint": [174, 175, 176, 185, 221, 322], "construct": [7, 139, 230, 231, 287, 288, 429, 432, 439, 446, 447, 448, 454], "contain": [2, 18, 22, 29, 43, 72, 73, 79, 96, 97, 106, 109, 111, 132, 133, 170, 174, 176, 177, 178, 180, 181, 183, 184, 186, 187, 223, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 253, 323, 324, 325, 326, 332, 333, 334, 335, 336, 337, 339, 340, 341, 350, 355, 356, 358, 359, 361, 362, 371, 375, 376, 377, 385, 392, 394, 396, 397, 404, 408, 409, 410, 411, 412, 413, 418, 420, 421, 429, 433, 440, 441, 444, 448, 450, 454, 455], "content": [330, 439], "contigu": 2, "continu": [1, 6, 116, 126, 135, 153, 191, 192, 193, 197, 198, 199, 213, 214, 215, 335, 454], "contour": [158, 178, 184, 219, 430, 432, 439], "contract": [227, 228, 452], "contractit": 227, "contribut": [155, 160, 161], "control": [6, 426, 456], "contruct": 284, "conveni": [438, 447], "convent": [20, 120, 434, 440], "converg": [221, 222, 224, 225, 226], "convers": [73, 120, 284, 287, 426, 432, 441], "convert": [73, 75, 76, 78, 84, 85, 95, 96, 97, 104, 158, 185, 194, 195, 233, 239, 253, 303, 336, 337, 358, 359, 392, 394, 398, 418, 426, 429, 431, 432, 436, 438, 440], "convex": [170, 171, 172, 174, 176, 432, 439, 440, 447, 450], "convexhul": 432, "convolut": 179, "coolwarm": [2, 395], "coordin": [22, 27, 45, 65, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 160, 161, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 184, 186, 187, 188, 189, 190, 194, 195, 196, 200, 202, 204, 205, 208, 212, 216, 217, 218, 223, 228, 231, 232, 233, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 306, 317, 319, 329, 331, 334, 335, 336, 337, 340, 341, 342, 343, 348, 352, 353, 355, 356, 358, 359, 361, 362, 363, 364, 369, 372, 373, 375, 376, 377, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 438, 440, 447, 448, 450, 455, 456], "copi": [30, 44, 60, 179, 185, 224, 303, 305, 402], "coplanar": [231, 448, 455], "core": [85, 438], "corner": [103, 117, 219, 221, 222, 224, 225, 386, 395, 400, 446, 447], "correct": [158, 173, 439, 446], "correspond": [71, 83, 99, 100, 102, 110, 120, 134, 135, 138, 148, 164, 165, 166, 167, 177, 178, 179, 180, 181, 182, 209, 210, 216, 217, 218, 224, 227, 232, 300, 301, 334, 335, 348, 369, 377, 404, 408, 411, 429, 433, 447, 454, 455], "cosalpha": 2, "cosin": 250, "cost": [104, 177, 181, 300, 303], "could": [1, 139, 164, 165, 166, 167, 187, 229, 230, 231, 232, 233, 234, 239, 240, 241, 440, 446, 450, 455], "count": [38, 296, 297, 298, 299, 455], "counter": [114, 125, 136, 142, 152, 348, 390, 448], "counterclockwis": 172, "cours": [233, 264, 279, 280, 285, 286, 288, 289, 290, 295, 439, 450], "cover": [303, 305, 306, 421], "cr": 179, "creat": [1, 7, 22, 28, 60, 69, 71, 72, 104, 107, 115, 123, 128, 139, 143, 146, 150, 179, 181, 185, 219, 224, 237, 284, 287, 396, 402, 404, 408, 411, 420, 430, 432, 437, 438, 446, 448, 454], "creation": 454, "credit": [18, 444], "crid": 439, "criteria": [224, 334, 377, 454], "crop": [44, 60, 73, 118, 432], "cross": [155, 189, 232, 240, 241, 448, 455], "csg": 434, "ct": [17, 303, 441, 443, 447], "cube": [2, 93, 98, 99, 100, 103, 178, 184, 348, 430, 439, 454], "cubic": [100, 103, 118, 155, 178, 184, 234, 396, 421, 439, 440], "cubicfit": [2, 160, 161, 447], "cuda": 1, "cultur": [18, 444], "cup": [162, 447], "cupi": 1, "current": [16, 28, 29, 74, 93, 96, 221, 224, 225, 336, 342, 343, 346, 347, 350, 358, 363, 364, 367, 368, 371, 381, 393, 396, 411, 415, 441, 454], "curv": [154, 158, 439], "curvatur": [3, 4, 6, 10, 439, 441, 442], "curved": 70, "custom": 438, "cut": [27, 438], "cv2": 435, "cw": 136, "cy": 447, "cylind": [240, 241, 432, 447], "cylindr": [189, 232, 447], "cz": 179, "d": [1, 6, 29, 75, 190, 228, 264, 267, 268, 285, 286, 288, 295, 296, 297, 298, 299, 318, 319, 322, 430, 439, 441, 447, 450, 455], "d_x": 455, "d_y": 455, "d_z": 455, "daniel": 439, "dansk": 439, "dark": 158, "darker": 158, "data": [17, 18, 22, 60, 73, 78, 84, 85, 93, 100, 103, 118, 148, 158, 177, 181, 182, 183, 272, 275, 281, 303, 304, 318, 320, 324, 334, 337, 338, 344, 350, 359, 360, 365, 371, 377, 378, 379, 385, 398, 401, 408, 426, 429, 430, 433, 439, 443, 444, 448, 454], "databas": [17, 18, 443, 444], "dataset": [18, 322, 444], "date": 441, "david": [439, 448], "de": 439, "deal": 438, "dec": 439, "decid": [219, 426], "decim": [303, 305, 306], "decompos": [116, 126, 135, 138, 153, 446], "decomposit": [116, 126, 153], "decreas": 224, "def": [5, 434], "default": [17, 18, 20, 22, 27, 28, 29, 30, 44, 52, 60, 62, 63, 64, 65, 71, 73, 74, 79, 83, 88, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 115, 118, 120, 123, 126, 128, 132, 133, 135, 136, 138, 139, 143, 146, 150, 153, 158, 164, 165, 166, 167, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 253, 254, 262, 264, 268, 269, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 308, 312, 317, 322, 325, 329, 330, 334, 335, 336, 337, 342, 343, 344, 350, 351, 352, 353, 355, 356, 357, 358, 359, 363, 364, 365, 371, 372, 373, 376, 377, 379, 385, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 411, 412, 413, 415, 418, 419, 421, 426, 427, 434, 443, 444], "defect": [18, 120, 430, 444], "defin": [28, 33, 41, 89, 99, 100, 102, 103, 104, 108, 112, 120, 122, 130, 140, 147, 149, 155, 201, 301, 322, 402, 408, 411, 429, 432, 438, 440, 447, 448, 455], "definit": [244, 245, 249, 250, 438], "deform": [222, 456], "defualt": 411, "deg": 71, "degener": [72, 100, 102, 103, 336, 358, 392, 393, 420], "degre": [71, 219, 227, 393, 395], "delaunai": [1, 432, 435, 439], "delaunau": 439, "delet": [392, 393, 401, 448], "deleteduplicatenod": [104, 105, 392], "delta": 387, "delval": 398, "demand": [17, 18, 63, 430, 443, 444], "demo": 441, "demo_curvatur": [2, 4, 442], "demo_heart": [5, 9, 442], "demo_imag": [178, 180, 181, 303], "demo_mesh": [219, 305], "demo_mix": [6, 9, 442], "demo_pasta": [7, 9, 442], "demonstr": 7, "deni": 439, "denot": [99, 100, 101, 102, 103, 104, 105, 239, 426], "depend": [1, 6, 135, 209, 210, 303, 304, 322, 392, 430, 432, 441, 447], "depict": 450, "depth": [98, 334, 335, 347, 351, 352, 353, 355, 356, 368, 372, 373, 377, 381, 454], "deriv": 322, "describ": [20, 98, 184, 185, 186, 187, 228, 335, 447, 448], "descript": 441, "design": [6, 439, 441], "desir": [62, 64], "despit": 155, "destruct": [179, 185], "det": [439, 448, 455], "detail": [51, 52, 109, 111, 164, 165, 166, 167, 303, 305, 306, 418, 430, 434, 436, 441], "detect": [119, 132, 133, 179, 185, 264, 265, 267, 268, 279, 280, 282, 283, 285, 286, 288, 289, 290, 291, 292, 295, 335], "detectfeatur": [219, 221, 222, 224, 225, 227], "determin": [22, 46, 48, 60, 71, 74, 100, 101, 102, 103, 104, 105, 116, 135, 139, 153, 158, 164, 165, 166, 167, 187, 219, 224, 242, 250, 254, 268, 269, 272, 273, 274, 275, 277, 279, 280, 281, 284, 285, 286, 287, 288, 296, 297, 298, 299, 335, 337, 359, 393, 394, 395, 399, 406, 414, 415, 418, 426, 446, 448, 454, 455], "detomi": [29, 439], "deuteranomali": 426, "dev": 441, "develop": [16, 95, 322, 441, 448], "deviat": [2, 158, 179, 234, 235, 238], "diagon": 446, "diamond": 6, "dic45": [318, 439], "dice": [303, 439], "dicom": [73, 118, 183, 433, 435], "dict": [22, 71, 184, 186, 187, 220, 221, 222, 224, 225, 227, 300, 303, 305, 306, 322, 330, 448], "dictionari": [22, 71, 184, 186, 187, 450], "diff": 430, "diff_fun": 192, "diff_sym": [193, 199], "differ": [8, 10, 12, 22, 96, 98, 105, 132, 137, 179, 185, 191, 192, 193, 199, 227, 267, 268, 301, 322, 392, 426, 429, 430, 431, 432, 434, 440, 441, 447, 453, 455], "differen": [219, 228], "differenti": [98, 185, 190, 191, 192, 193, 196, 197, 198, 199, 200, 202, 205, 213, 214, 215, 322], "differential_evolut": 322, "difff": [191, 430], "difficult": [430, 441, 448], "diffv": 191, "dihedr": [71, 246, 248, 252, 254, 395], "dimens": [45, 120, 173, 174, 176, 179, 303, 356, 433, 434], "dimension": [93, 99, 102, 120, 167, 168, 171, 271, 300, 303, 304, 433, 439, 440, 448, 454], "dimetr": 426, "dimitri": 439, "direct": [2, 98, 136, 155, 184, 186, 187, 209, 210, 216, 217, 218, 232, 233, 234, 264, 265, 279, 280, 281, 284, 285, 286, 287, 288, 289, 290, 295, 303, 305, 306, 311, 312, 319, 322, 335, 430, 439, 441, 447, 455], "directed_hausdorff": 319, "direction": [158, 447], "directl": 322, "directli": [2, 101, 104, 113, 114, 116, 121, 124, 125, 126, 127, 141, 142, 145, 151, 152, 153, 177, 178, 180, 181, 184, 186, 187, 224, 229, 232, 233, 234, 235, 236, 238, 239, 240, 241, 428, 430, 433, 438, 441, 447, 448], "directori": [73, 118, 182, 183, 433, 435], "dirichlet": 439, "disadvantag": 447, "discard": [73, 118], "disconnect": 43, "discuss": [445, 447, 448], "displac": [221, 222, 223, 323, 324, 332, 333, 453], "displai": [79, 219, 227, 228, 303, 426], "distanc": [120, 184, 186, 201, 203, 209, 210, 212, 221, 228, 233, 241, 247, 268, 278, 284, 287, 317, 319, 329, 335, 394, 404, 408, 411, 439, 448, 455, 456], "distance_transform_edt": 120, "distort": [179, 185], "distribut": [5, 452, 456], "divid": [237, 243, 334, 377, 447, 454], "divis": 439, "dl": [96, 439], "dmesh": 75, "do": [18, 219, 224, 438, 441, 444], "document": [322, 441], "doesn": [29, 30, 137, 219, 224, 303, 304, 448, 452, 454], "doi": [29, 96, 264, 279, 280, 285, 286, 288, 289, 290, 295, 296, 297, 298, 299, 439], "domain": [439, 440], "dome": 162, "domin": [232, 239, 240], "don": [18, 44, 86, 93, 282, 283, 284, 287, 291, 292, 444, 448], "done": [5, 62, 64, 428, 430], "doorn": [156, 162, 163, 439], "dot": 2, "doubl": 60, "down": 433, "download": [2, 5, 6, 7, 435], "dragon": [18, 444], "dragon_res2": [18, 444], "dragon_res3": [18, 444], "dragon_res4": [18, 444], "dramat": 1, "drawn": 448, "driven": 441, "dtype": [183, 185, 257, 259, 260, 273, 318, 320, 398], "dual": [98, 136, 336, 358, 439], "dualconn": [136, 336, 358], "dualcoord": [136, 336, 358], "dualgrid_method": 98, "due": [155, 177, 178, 180, 181, 184, 186, 187, 229, 232, 233, 234, 235, 236, 238, 239, 240, 241, 448, 453], "duplic": [74, 100, 102, 103, 107, 115, 123, 128, 133, 143, 146, 150, 394, 401], "dure": [107, 115, 120, 123, 128, 143, 146, 150, 179, 185, 219, 221, 222, 224, 225, 305, 306], "dx": [439, 447], "dx_0": 447, "dx_1": 447, "dx_n": 447, "dxnew": 223, "dynam": [75, 439], "e": [2, 14, 38, 62, 63, 64, 99, 102, 109, 110, 111, 116, 120, 126, 132, 133, 135, 148, 153, 182, 183, 219, 221, 228, 232, 237, 239, 251, 264, 267, 268, 270, 271, 285, 286, 288, 295, 296, 297, 298, 299, 303, 317, 319, 322, 329, 336, 347, 358, 368, 381, 429, 430, 431, 433, 435, 437, 439, 440, 441, 447, 448, 450, 452, 453, 455], "e0": 132, "e1": 132, "e10": 132, "e2": 132, "e3": 132, "e4": 132, "e5": 132, "e6": 132, "e7": 132, "e8": 132, "e9": 132, "e_": 455, "e_1": 455, "e_2": 455, "each": [18, 22, 31, 32, 33, 34, 35, 39, 40, 41, 45, 50, 98, 99, 101, 102, 103, 104, 105, 107, 110, 115, 118, 123, 128, 129, 132, 133, 135, 136, 138, 143, 146, 150, 154, 155, 158, 160, 161, 184, 186, 187, 194, 195, 201, 221, 223, 224, 225, 227, 228, 229, 234, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 258, 259, 260, 261, 264, 268, 277, 278, 280, 284, 286, 287, 288, 293, 298, 299, 300, 301, 303, 304, 305, 306, 322, 334, 335, 343, 355, 356, 364, 377, 394, 396, 397, 399, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 429, 431, 433, 438, 440, 444, 446, 447, 448, 450, 453, 454, 455], "earliest": 446, "easi": [438, 441], "easili": [6, 438, 450], "ebcb8b": 7, "ecolog": 439, "ecologi": 439, "ecosystem": 438, "ederror": [98, 335, 454], "edg": [14, 22, 31, 32, 38, 46, 62, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 115, 116, 117, 121, 123, 124, 126, 127, 128, 132, 135, 137, 141, 143, 144, 145, 146, 150, 151, 153, 158, 174, 175, 176, 179, 185, 219, 221, 222, 224, 225, 227, 228, 229, 230, 231, 232, 240, 241, 243, 257, 273, 274, 276, 296, 297, 298, 299, 361, 372, 392, 395, 412, 415, 426, 429, 430, 431, 440, 446, 448, 452, 455], "edge3": 431, "edgeconn": [132, 429, 450], "edgeedg": [296, 297, 298, 299], "edgeelem": 132, "edgeelemconn": [429, 450], "edgemod": [100, 103], "edges2uniqu": 429, "edgeset": [22, 62], "edu": [7, 439], "educ": 445, "effect": 453, "effici": [21, 72, 93, 190, 196, 200, 202, 205, 279, 280, 285, 286, 288, 289, 290, 300, 303, 330, 410, 420, 430, 435, 438, 439, 446, 448, 450, 453, 454, 455], "effort": 430, "egregium": 447, "eigenvalu": 447, "eight": [93, 454], "either": [28, 60, 62, 63, 64, 65, 72, 98, 99, 100, 102, 104, 105, 148, 158, 179, 182, 184, 185, 192, 198, 210, 214, 219, 228, 233, 234, 235, 238, 239, 241, 251, 300, 303, 322, 330, 331, 389, 392, 394, 420, 426, 429, 440, 441, 446], "elbow": 7, "elem": 419, "elemconn": [136, 223, 399, 414, 415, 429], "elemdata": [22, 28, 60, 71, 73, 177, 181, 219, 227, 228, 426], "element": [5, 6, 18, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 47, 56, 60, 62, 63, 64, 71, 72, 73, 78, 79, 84, 85, 86, 90, 98, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 113, 114, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 129, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 144, 145, 148, 151, 152, 153, 170, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 194, 204, 219, 220, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 267, 268, 269, 272, 275, 278, 279, 284, 287, 289, 290, 293, 294, 295, 300, 303, 304, 334, 335, 336, 342, 348, 358, 363, 377, 390, 391, 392, 393, 394, 395, 396, 397, 399, 402, 404, 405, 408, 411, 412, 414, 415, 418, 419, 420, 421, 426, 429, 430, 433, 438, 439, 440, 441, 444, 446, 447, 448, 452, 453, 454], "elementedg": 106, "elemet": 152, "elemid": [82, 135, 138, 404], "elemlabel": 75, "elemneighbor": [63, 252, 412, 415, 429], "elemnorm": [252, 269, 272, 275, 390, 399], "elemregion": 412, "elemset": [22, 63], "elemtyp": [104, 106, 132, 133, 137, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 253, 395, 418, 419, 430], "elia": 439, "elimin": [5, 93, 454], "elis": [439, 441], "ellipsoid": 240, "ellipt": [232, 240, 447], "elsewher": 434, "emb": 219, "embed": 447, "emploi": [445, 453], "empti": [23, 29, 72, 86, 282, 283, 291, 292, 337, 350, 357, 359, 371, 385, 420, 454], "enabl": [1, 190, 196, 200, 202, 205, 454], "encod": 454, "encount": [2, 155], "end": [2, 5, 6, 7, 62, 63, 64, 65, 108, 232, 282, 283, 291, 292, 307, 308, 309, 310, 311, 312, 313, 314, 350, 371, 447, 448, 455], "endpoint": 282, "endpt_inclus": [282, 283, 291, 292], "energi": 439, "enforc": [234, 235, 238], "engin": [29, 439], "enhanc": [1, 435], "enough": [447, 448], "ensur": [170, 175, 293, 446, 448, 450, 455], "entir": 29, "entiti": [93, 429], "entri": [22, 28, 60, 71, 83, 100, 109, 111, 132, 177, 178, 180, 181, 219, 227, 228, 398, 426, 446, 450], "environ": [95, 437], "ep": [72, 97, 262, 266, 268, 269, 272, 273, 274, 275, 276, 278, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 294, 296, 297, 298, 299, 335, 420], "epsilon": 455, "equal": [2, 28, 120, 177, 178, 180, 181, 183, 184, 186, 187, 219, 223, 228, 234, 235, 238, 247, 389, 393, 395, 406, 407, 426, 439, 447, 454], "equat": [223, 447], "equiangular": [251, 255], "equilater": [251, 258], "equilibrium": [222, 456], "equival": [43, 60, 108, 112, 122, 130, 140, 147, 149, 322, 346, 367, 430, 438], "error": [86, 98, 155, 158, 160, 161, 219, 317, 329, 335, 411, 430, 435, 439, 446], "especi": 430, "essenti": [330, 448, 454], "establish": [435, 438, 439], "estim": 447, "et": [228, 449, 455], "eta": 220, "etc": [18, 93, 232, 303, 304, 392, 426, 431, 437, 444], "euclidean": 120, "euclidian": 335, "euler": [38, 42], "ev": 439, "evalu": [71, 98, 104, 154, 158, 179, 184, 186, 187, 190, 194, 195, 196, 200, 201, 202, 205, 216, 217, 218, 228, 322, 335, 430, 432, 437, 441, 446, 454], "even": [29, 219, 285, 426, 455], "evenli": [5, 179, 185, 452, 456], "everi": [223, 322, 448, 450, 454], "evolut": 322, "ex": [132, 134, 252, 392, 394, 396, 397, 409, 410, 411, 421, 447], "ex_0": 447, "ex_1": 447, "ex_n": 447, "exact": [27, 98, 454], "exact_h": [234, 235, 238], "exact_mins": 377, "exactli": [234, 235, 238, 267, 268, 277, 282, 283, 291, 292, 296, 297, 298, 299, 342, 343, 363, 364, 376, 394, 448, 454], "examin": 447, "exampl": [2, 4, 5, 6, 7, 9, 11, 17, 18, 44, 93, 98, 104, 105, 116, 120, 126, 153, 174, 176, 178, 180, 181, 184, 186, 187, 188, 189, 190, 196, 200, 202, 205, 208, 212, 219, 221, 229, 230, 232, 233, 236, 240, 241, 285, 286, 288, 300, 301, 303, 305, 306, 322, 394, 395, 406, 407, 419, 431, 433, 434, 436, 437, 438, 442, 443, 444, 446, 447, 450, 453, 454, 455], "example_func": 434, "except": [18, 322, 406, 441, 444], "exclud": [43, 282], "exclus": 60, "exculd": [404, 408, 411], "execut": [4, 9, 11, 437, 442], "executionmod": 437, "exist": [29, 60, 63, 86, 139, 182, 395, 430, 431, 440, 446, 448, 454], "expand": 448, "expans": 1, "expect": 95, "expens": 187, "experi": [18, 444], "experiment": 95, "explain": [336, 358, 441], "explan": [432, 445], "explicit": 432, "explicitli": [72, 420], "explod": [18, 444], "explor": 1, "expos": [132, 137, 179, 185, 440], "express": [190, 196, 200, 202, 205], "extend": [441, 446, 448], "extens": [88, 183, 433, 441], "exterior": [99, 100, 101, 102, 103, 104, 105], "extern": [131, 441, 456], "extract": [13, 28, 99, 101, 102, 104, 105, 113, 114, 121, 124, 125, 127, 133, 134, 137, 141, 142, 145, 151, 152, 410, 446], "extrem": 219, "extrud": [7, 232, 238, 432], "extrus": 233, "ezproxi": 439, "f": [2, 6, 20, 38, 98, 184, 186, 187, 190, 196, 200, 202, 203, 205, 209, 210, 223, 227, 228, 264, 267, 268, 285, 286, 288, 295, 296, 297, 298, 299, 322, 335, 434, 439, 447, 456], "f1": [191, 192, 197, 198, 213, 214], "f2": [191, 192, 197, 198, 213, 214], "face": [14, 22, 29, 38, 39, 40, 48, 63, 64, 109, 110, 111, 114, 116, 117, 125, 126, 132, 133, 142, 144, 152, 153, 223, 246, 248, 250, 252, 273, 390, 395, 399, 405, 415, 426, 429, 452], "face2nodenorm": [51, 52, 155, 160, 161], "face2uniqu": 133, "face_alpha": [422, 426], "facecent": 223, "faceconn": [133, 429, 450], "faceelem": 133, "faceelemconn": [429, 450], "faces2surfac": 133, "faces2uniqu": 429, "faceset": [22, 29, 64], "facet": 439, "facilit": 450, "factor": [29, 73, 118, 177, 178, 180, 181, 182, 216, 217, 218, 223, 300, 303, 305, 306, 309, 310], "fail": [86, 408], "fall": [446, 455], "fals": [2, 27, 28, 30, 44, 60, 70, 73, 79, 99, 100, 101, 102, 103, 104, 105, 109, 110, 111, 118, 120, 132, 133, 134, 135, 138, 155, 158, 177, 179, 181, 184, 185, 219, 221, 222, 223, 224, 225, 226, 228, 234, 235, 237, 238, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 262, 264, 265, 267, 268, 269, 272, 275, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 315, 316, 323, 324, 325, 327, 328, 332, 333, 342, 343, 357, 363, 364, 385, 392, 393, 394, 400, 406, 407, 408, 411, 425, 426, 430, 438], "famou": 446, "fan": 171, "far": [228, 448], "faraj": [228, 439, 449], "fast": [264, 285, 286, 288, 295, 296, 297, 298, 299, 439], "faster": [2, 155, 285, 286, 288], "fatol": 322, "featur": [95, 179, 185, 219, 221, 222, 224, 225, 227, 228, 395, 410, 430, 438, 439, 441, 447, 450, 454], "featureangl": [219, 227], "feb": 439, "few": 432, "fi": 250, "field": [120, 201, 228, 334, 377, 439, 446], "fig": [2, 79, 430], "fig1": [2, 430], "fig2": [2, 430], "fig3": [2, 430], "fig4": 2, "figsiz": [425, 430], "figur": [79, 426], "file": [4, 9, 11, 22, 73, 81, 88, 118, 177, 178, 179, 180, 181, 182, 183, 433, 435, 442], "filenam": [88, 183], "filetyp": [88, 183, 436], "fill": [102, 120, 139, 403, 446], "fill_valu": 194, "fillval": 403, "final": [18, 174, 176, 229, 230, 231, 232, 234, 239, 240, 241, 305, 306, 444, 455], "find": [1, 97, 223, 448, 450, 455], "fine": 305, "finfo": [72, 420], "finish": 322, "finit": [98, 185, 430, 439, 440], "finite_diff_step": 185, "first": [2, 44, 72, 97, 108, 112, 117, 119, 120, 122, 130, 131, 140, 144, 147, 149, 173, 179, 182, 191, 197, 213, 219, 221, 236, 237, 254, 262, 263, 283, 291, 292, 294, 296, 297, 300, 301, 303, 304, 317, 319, 329, 387, 388, 389, 392, 401, 406, 412, 413, 420, 429, 430, 431, 433, 437, 438, 450, 454, 455], "fit": [155, 161], "fix": [29, 219, 221, 222, 223, 224, 225, 302, 303, 304, 305, 306, 453], "fixedg": [179, 185], "fixednod": [29, 179, 185, 219, 221, 222, 224, 225], "fixednot": 223, "fixfeatur": [221, 222, 224, 225], "fixsurf": [221, 222, 224, 225], "fixvol": 173, "flat": [231, 426], "fld979": 439, "flexibl": 431, "flip": [99, 100, 101, 102, 103, 104, 105, 155, 226, 227, 285, 452], "flippabl": 450, "float": [28, 29, 44, 60, 72, 73, 74, 97, 98, 100, 103, 104, 105, 118, 120, 139, 156, 157, 158, 159, 163, 164, 165, 166, 167, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 208, 212, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 262, 268, 269, 272, 273, 274, 275, 276, 278, 284, 285, 286, 287, 288, 293, 294, 296, 297, 298, 299, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 317, 318, 319, 320, 322, 329, 334, 335, 351, 352, 353, 372, 373, 377, 387, 388, 389, 393, 394, 395, 402, 404, 408, 409, 410, 411, 417, 420, 421, 426, 430], "float64": [2, 185], "flow": [179, 185], "fluid": [223, 439], "focu": [434, 441], "focus": 441, "follow": [18, 120, 228, 233, 239, 304, 322, 335, 348, 401, 408, 426, 428, 429, 434, 438, 444, 446, 447, 448, 453, 455], "forc": [222, 223, 322, 404, 408, 411, 456], "foreground": [158, 447], "form": [98, 172, 184, 186, 187, 286, 288, 335, 336, 358, 434, 440, 448, 450, 455], "format": [17, 22, 30, 66, 98, 182, 184, 186, 187, 223, 263, 264, 267, 268, 273, 274, 276, 285, 286, 288, 295, 296, 297, 298, 299, 303, 305, 306, 335, 339, 346, 351, 357, 367, 389, 433, 436, 443], "former": 83, "formula": [154, 158, 439], "forum": 439, "forward": [430, 454], "found": [83, 375, 430, 448], "four": [93, 132, 133, 235, 446, 448, 455], "fourier": [6, 439], "fourth": 387, "frac": [257, 259, 260, 447, 453, 455, 456], "fractur": 441, "frad": 195, "frame": 447, "fran": 439, "fre97": [224, 439, 453], "freder": 439, "free": [18, 43, 222, 322, 444], "freenod": 185, "freitag": 439, "fring": 441, "from": [1, 2, 4, 5, 6, 7, 9, 11, 13, 17, 18, 38, 42, 43, 87, 99, 102, 104, 105, 106, 108, 112, 113, 114, 116, 118, 120, 121, 122, 124, 125, 126, 127, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 145, 147, 149, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 179, 183, 185, 212, 219, 222, 223, 228, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 244, 245, 247, 249, 250, 251, 252, 255, 256, 258, 261, 262, 268, 285, 294, 303, 305, 322, 337, 344, 347, 355, 356, 359, 365, 368, 379, 381, 390, 392, 393, 394, 397, 398, 401, 406, 407, 408, 411, 428, 429, 430, 431, 432, 433, 434, 436, 439, 440, 441, 442, 443, 444, 446, 447, 448, 450, 454, 455], "ftb16": [228, 439, 449], "ftetwild": 430, "full": [2, 5, 6, 7, 79, 87, 95, 158, 181, 229, 234, 239, 253, 305, 306, 429, 438, 439, 440, 454], "fulli": [335, 412, 413], "fulltext": 439, "fun": 194, "func": [73, 98, 101, 104, 154, 184, 185, 186, 187, 188, 189, 190, 196, 200, 202, 204, 205, 208, 212, 216, 217, 218, 300, 301, 335, 430, 434], "func1": 430, "func2": 430, "function": [2, 6, 13, 14, 21, 62, 64, 72, 98, 101, 104, 132, 133, 136, 154, 178, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 224, 228, 254, 269, 272, 275, 322, 335, 392, 420, 430, 431, 432, 433, 435, 436, 437, 438, 441, 446, 447], "function2octre": [98, 454], "fund": 441, "fundament": 439, "further": [16, 335, 351, 352, 353, 372, 373, 432, 441, 454], "furthest": 448, "fusilli": 7, "fusion": 439, "futur": 16, "fx_0y_0": 447, "fx_1y_1": 447, "fx_ny_n": 447, "fxy": 447, "fy": 447, "g": [2, 14, 42, 63, 99, 102, 182, 183, 219, 221, 228, 232, 237, 264, 267, 268, 270, 271, 285, 286, 288, 295, 296, 297, 298, 299, 303, 322, 429, 430, 431, 433, 437, 439, 440, 441, 447, 453], "gabriel": 439, "galleri": [2, 5, 6, 7, 10, 442], "gamma": [308, 323, 324, 325, 387, 388, 389, 404, 408], "gamma_0": 448, "gao": 439, "gap": 445, "garland": 439, "gauss": 447, "gaussian": [70, 154, 157, 158, 179], "gaussian_filt": [158, 179], "gaussian_sigma": [73, 118, 158, 179], "gaussiancurvatur": 447, "gem": 439, "gener": [2, 5, 6, 7, 28, 29, 72, 79, 87, 89, 98, 99, 100, 101, 102, 103, 104, 105, 116, 126, 135, 138, 139, 153, 155, 160, 161, 170, 171, 174, 176, 177, 178, 180, 181, 184, 186, 187, 191, 197, 201, 203, 213, 228, 229, 232, 234, 235, 236, 238, 240, 241, 272, 275, 278, 279, 280, 284, 285, 286, 287, 288, 289, 290, 293, 304, 307, 308, 309, 310, 311, 312, 313, 314, 334, 335, 337, 355, 356, 359, 377, 384, 396, 399, 404, 408, 411, 420, 421, 428, 430, 432, 433, 434, 436, 438, 439], "genu": 434, "geometr": [116, 135, 153, 220, 311, 312, 439, 447, 448], "geometri": [98, 184, 186, 187, 233, 335, 394, 395, 434, 439, 440, 453], "geq": 455, "get": [52, 103, 179, 233, 239, 253, 345, 346, 347, 348, 366, 367, 368, 369, 380, 381, 415, 431, 441], "get_arrai": 430, "get_imag": 430, "getelemconnect": 136, "getelemneighbor": 412, "getnodeneighbor": [155, 160, 161, 412, 413, 415, 438], "getthem": 426, "gh97": [219, 439], "gi04": [155, 160, 161, 439, 447], "gift": [170, 172], "giftwrap": 170, "github": 435, "give": [148, 282, 303, 304, 416, 417, 447, 455], "given": [18, 44, 73, 96, 97, 118, 164, 165, 166, 167, 168, 171, 174, 176, 179, 182, 183, 221, 232, 293, 303, 304, 322, 347, 350, 368, 371, 375, 381, 396, 426, 444], "glfw": 427, "global": 322, "gmbh": 439, "gmsh": [439, 441], "go": [2, 5, 6, 7, 223, 438], "goal": [438, 452], "gol05": [154, 158, 439, 447], "goldfeath": [155, 160, 161, 439, 447], "goldman": [154, 158, 439, 447], "gomiti": 7, "good": [18, 444], "gpu": 1, "grad": [98, 335], "gradient": [98, 158, 179, 185, 195, 322, 454], "grai": 120, "grant": 441, "graphic": [18, 296, 297, 298, 299, 430, 439, 440, 444], "grayscal": [100, 103, 158, 426], "greater": [73, 99, 100, 101, 102, 103, 104, 105, 118, 120, 177, 178, 180, 181, 182, 183, 228, 393, 404, 408, 411, 447], "grid": [85, 98, 99, 102, 104, 105, 116, 148, 158, 186, 194, 195, 201, 229, 235, 238, 322, 330, 395, 430, 438, 439, 440, 446], "grid2d": 102, "grid2fun": 158, "grit": 439, "group": [106, 322, 407, 412, 413, 439], "growth": 441, "guarante": 126, "guess": [303, 305, 306, 322], "guid": [1, 15, 335, 432, 441], "gutierrez": 441, "gy": 447, "gy_0": 447, "gy_1": 447, "gy_n": 447, "gyroid": [6, 184, 186, 187, 395, 432], "h": [5, 6, 100, 103, 139, 177, 178, 179, 180, 181, 184, 185, 186, 187, 219, 227, 228, 234, 235, 236, 237, 238, 264, 267, 268, 285, 286, 288, 295, 296, 297, 298, 299, 439, 447], "h_node": 228, "ha": [5, 18, 45, 62, 64, 72, 86, 104, 132, 133, 136, 183, 285, 286, 288, 335, 349, 350, 370, 371, 382, 392, 396, 420, 428, 431, 436, 437, 441, 444, 446, 448, 450, 453, 455], "ha01": [439, 455], "half": [232, 240, 305, 306, 429, 448, 450], "halt": 335, "handl": [5, 72, 98, 100, 103, 120, 158, 192, 198, 210, 214, 288, 420, 431, 448], "hang": 439, "happen": [18, 330, 444], "harvei": 439, "hash": 450, "hasn": [62, 64, 136], "hat": [447, 453, 455], "hausdorff": 303, "have": [1, 2, 18, 23, 28, 30, 97, 101, 102, 103, 104, 105, 120, 135, 164, 165, 166, 167, 179, 252, 264, 268, 278, 280, 286, 288, 298, 299, 304, 322, 334, 389, 392, 393, 397, 428, 429, 433, 438, 444, 446, 447, 448, 453], "haven": [46, 48], "health": 441, "heap": 219, "hear": 1, "heart": [8, 9, 10, 442], "heavili": 1, "heckbert": 439, "height": [232, 421, 426], "held": [29, 219, 221, 222, 223, 224, 225], "help": [119, 219, 311, 312, 445], "her": [18, 444], "here": [430, 445, 447, 448, 450], "hex": [126, 132, 133, 229, 232, 234, 240, 392, 426, 431], "hex20": 431, "hex20nodeconn": [112, 115], "hex8nodeconn": [112, 115], "hexahedr": [14, 99, 112, 113, 114, 116, 233, 234, 239, 244, 251, 277, 336, 337, 348, 359, 396, 397, 421, 440, 441], "hexahedra": [99, 117, 336, 440], "hexahedron": [72, 420, 431], "hexconn": 116, "hexcoord": 116, "hi": 228, "hide": 426, "hierarch": 454, "hierarchi": 93, "high": [2, 322, 430, 439], "higher": [101, 224, 454], "highest": [347, 368, 381], "highli": [155, 160, 161], "highlight": [10, 441], "hilton": 439, "hindu": [18, 444], "hip": 441, "hner": 439, "hol10": [336, 358, 439], "hold": [79, 179, 185, 222], "holder": 441, "hole": [18, 120, 164, 165, 166, 167, 444], "holmlid": 439, "home": 2, "hormann": 439, "how": [2, 7, 18, 45, 100, 103, 120, 392, 432, 441, 444, 445, 447, 448, 455], "howev": [18, 23, 29, 59, 158, 174, 176, 322, 430, 444, 446, 448, 453], "hsiw96": [105, 439], "hsw": [430, 439], "html": [311, 312, 437, 439], "http": [29, 96, 175, 264, 279, 280, 285, 286, 288, 289, 290, 295, 296, 297, 298, 299, 311, 312, 437, 439], "hu": 439, "hugh": 439, "hull": [170, 171, 172, 432, 439], "hundr": [18, 444], "hx": [100, 118, 177, 178, 180, 181], "hy": [100, 118, 177, 178, 180, 181], "hyperbol": 447, "hz": [100, 118, 178, 180, 181], "hzg": [228, 439], "i": [1, 2, 6, 17, 18, 20, 22, 28, 29, 33, 38, 41, 42, 44, 45, 55, 60, 62, 63, 64, 72, 73, 79, 83, 84, 86, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 113, 114, 115, 116, 117, 120, 121, 123, 124, 125, 126, 127, 128, 132, 133, 135, 139, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 158, 164, 165, 166, 167, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 192, 193, 197, 198, 199, 203, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 228, 231, 232, 233, 234, 235, 236, 238, 239, 241, 242, 243, 244, 245, 249, 250, 251, 254, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 317, 319, 322, 324, 329, 330, 335, 336, 337, 339, 340, 341, 342, 343, 347, 350, 355, 356, 358, 359, 361, 362, 363, 364, 368, 371, 376, 377, 381, 389, 392, 394, 395, 396, 397, 398, 399, 402, 404, 405, 406, 407, 408, 411, 412, 413, 415, 418, 419, 420, 421, 426, 429, 430, 433, 435, 436, 437, 438, 441, 443, 444, 445, 446, 447, 448, 450, 452, 453, 454, 455, 456], "i2": 324, "icip": 439, "icp": [303, 305, 306], "id": [22, 25, 29, 43, 58, 104, 105, 110, 134, 135, 138, 252, 262, 294, 334, 377, 392, 404, 405, 408], "idea": 445, "ideal": 247, "ident": [318, 320, 430, 438], "identif": [300, 430, 439], "identifi": [5, 72, 74, 110, 170, 219, 221, 222, 224, 225, 227, 228, 262, 278, 281, 284, 287, 293, 294, 300, 301, 322, 339, 340, 341, 361, 362, 395, 412, 413, 419, 420, 432, 448, 450], "identify_typ": [22, 119, 120, 132, 133, 242, 392, 419, 431], "idx": [109, 111, 392, 394, 406, 407], "ieee": 439, "ignor": [168, 171, 173, 174, 176, 186, 356], "ij": 456, "illingworth": 439, "im2voxel": [73, 158], "imag": [1, 2, 13, 17, 18, 73, 92, 100, 103, 118, 120, 148, 158, 300, 303, 304, 311, 312, 315, 316, 318, 320, 323, 324, 325, 327, 328, 330, 332, 333, 426, 430, 432, 435, 439, 440, 443, 444, 446, 447], "imageoverlai": 303, "img": [17, 73, 118, 120, 177, 178, 179, 180, 181, 182, 300, 303, 304, 443], "img1": [303, 304, 321], "img2": [303, 304, 321], "img_align": 303, "img_data": 426, "impath": 183, "imperfect": 430, "implement": [16, 98, 335, 336, 358, 415, 441, 445, 448], "implicit": [1, 2, 6, 8, 9, 10, 13, 98, 104, 154, 158, 219, 221, 335, 395, 432, 438, 439, 442, 446, 447], "implicitli": 434, "import": [2, 5, 6, 7, 18, 95, 120, 158, 285, 303, 305, 436, 437, 444, 445, 447, 448], "improv": [1, 5, 16, 29, 93, 404, 408, 411, 430, 432, 441, 453], "imshow": [120, 303, 430], "inaccur": 447, "inact": 450, "incircl": 448, "inclu": [296, 297, 298, 299], "includ": [6, 93, 269, 277, 337, 342, 343, 357, 359, 363, 364, 376, 385, 399, 406, 412, 416, 432, 433, 434, 436, 439, 440, 441, 446, 447, 452, 454], "include_empti": 385, "includecollinear": 172, "inclus": [60, 269, 270, 271, 273, 274, 276, 277, 342, 343, 363, 364, 376, 448], "inconsequenti": 455, "increas": [300, 303], "increment": 448, "independ": [69, 447, 448], "index": [29, 70, 120, 132, 133, 300, 301, 320, 389, 404, 405, 429, 446], "indic": [28, 33, 41, 60, 109, 111, 132, 133, 135, 138, 162, 163, 172, 174, 175, 176, 184, 186, 219, 221, 227, 234, 278, 284, 286, 287, 293, 339, 340, 341, 361, 362, 392, 394, 406, 407, 408, 415, 429, 440, 448], "individu": [1, 419], "inf": [351, 352, 353, 372, 373, 404, 408, 411], "infer": [120, 392, 431, 450], "inferno": 303, "infinit": [448, 455], "influenc": [38, 69], "info": [31, 32, 34, 35, 39, 40, 50, 439], "inform": [2, 22, 219, 227, 439, 441, 447, 450], "infti": 90, "inher": [228, 447], "initi": [93, 104, 221, 223, 224, 225, 233, 239, 303, 305, 306, 322, 350, 371, 430, 441], "inner": 22, "inp": [81, 436], "inplac": [30, 44, 60, 179, 185, 224], "input": [5, 28, 30, 44, 96, 98, 99, 100, 101, 102, 103, 104, 105, 108, 112, 116, 122, 126, 130, 140, 147, 149, 153, 179, 182, 183, 184, 191, 192, 193, 198, 210, 214, 224, 228, 233, 239, 253, 300, 303, 322, 330, 392, 398, 400, 403, 431, 433, 434, 438], "insid": [20, 28, 60, 99, 100, 101, 102, 103, 104, 105, 120, 139, 177, 178, 179, 180, 181, 184, 186, 187, 191, 192, 193, 197, 198, 199, 213, 214, 215, 269, 270, 271, 272, 273, 274, 275, 276, 277, 336, 342, 343, 358, 363, 364, 434, 446, 447, 448, 455], "inspir": [228, 441, 446], "instal": [155, 175, 322, 437], "instanc": [30, 44, 438], "instead": [105, 177, 178, 180, 181, 183, 184, 186, 187, 229, 232, 233, 234, 235, 236, 238, 239, 240, 241, 303, 322, 399, 455], "institut": [439, 441], "instruct": 435, "int": [28, 29, 60, 73, 98, 99, 100, 101, 102, 103, 104, 105, 118, 158, 175, 177, 178, 179, 180, 181, 182, 185, 189, 216, 217, 218, 219, 221, 222, 224, 225, 227, 229, 230, 231, 232, 233, 236, 239, 240, 241, 257, 259, 260, 282, 283, 291, 292, 300, 303, 334, 335, 345, 347, 351, 352, 353, 355, 356, 366, 368, 372, 373, 377, 380, 381, 397, 398, 403, 408, 411, 416, 426], "int16": 183, "integ": [177, 178, 180, 181, 184, 186, 187, 230, 231, 300, 303], "intellig": 439, "intend": [120, 278, 303, 304, 430, 441, 445], "intens": [73, 118], "interact": [87, 426, 439], "interc": 447, "interesect": 293, "interest": [6, 447, 454], "interfac": [16, 97, 175, 191, 197, 203, 213, 219, 224, 227, 228, 322, 330, 430, 437, 441], "interfer": 448, "interior": [99, 100, 101, 102, 103, 104, 105, 137, 219, 221, 222, 224, 225, 440, 448], "intermedi": [350, 371, 438], "intern": [171, 179, 185, 223, 254, 439], "internet": [17, 18, 443, 444], "interpol": [1, 2, 28, 73, 99, 100, 101, 102, 103, 104, 105, 118, 177, 178, 179, 180, 181, 182, 184, 186, 194, 195, 300, 303, 330, 335, 408, 446, 454], "interpolation_ord": [300, 303], "interpret": [247, 448, 450, 455], "interrant": [155, 160, 161, 439, 447], "intersect": [12, 93, 96, 97, 198, 262, 263, 264, 265, 267, 268, 272, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 339, 341, 361, 430, 434, 439, 441, 448, 454], "intersection_fun": 198, "intersection_leav": 281, "intersection_v": 197, "intersectionf": [197, 430], "intersectionpair": 293, "intersectionpoint": [262, 293, 294], "intersectionpt": [278, 284, 285, 286, 287, 299], "intersections1": 262, "intersections2": 262, "intersectionv": 197, "interv": 455, "intins": 447, "intric": 455, "introduc": [2, 430], "intuit": 447, "inv": [2, 109, 111, 135, 138, 394, 406, 407], "invalid": [2, 116, 126, 135, 153, 448, 449], "invari": 439, "invers": [2, 71, 179, 185, 222, 244, 245, 446, 453], "inverseorthogon": [71, 90], "inverseorthogonalqu": [71, 90, 249], "invert": [86, 219, 330, 450], "involv": [1, 430, 448], "iortho": 245, "iorthoq": 244, "ipynb": [2, 5, 6, 7], "irregular": 2, "irrelev": 222, "isn": [28, 93, 184, 335, 419, 453, 456], "iso": 426, "isocontour": 102, "isolin": [28, 102, 105, 446], "isometr": 426, "isosurfac": [13, 20, 28, 99, 100, 101, 102, 103, 104, 154, 178, 179, 180, 184, 185, 186, 203, 209, 335, 439, 446, 447], "isotrop": [100, 103, 179, 384], "isovalu": [98, 102, 177, 178, 180, 181, 184, 186, 187, 446], "iss": 439, "issu": [86, 448], "italian": [18, 444], "item": [323, 324, 325, 326, 332, 333], "iter": [2, 179, 185, 221, 222, 224, 225, 226, 227, 302, 303, 305, 306, 399, 453, 456], "itertool": 288, "its": [22, 93, 116, 126, 135, 153, 221, 224, 225, 404, 438, 448, 450, 453, 454, 456], "itself": [447, 455], "j": [156, 162, 163, 223, 320, 322, 439, 453, 456], "jack": 439, "jacobson": 439, "jame": 439, "jan": 439, "jar73": [172, 439], "jarvi": 439, "jean": 439, "jeann": 439, "jit": 155, "jm24": [6, 439, 441], "joachim": 439, "joe": 439, "john": 439, "join": 430, "jonathan": [16, 175, 439], "jonathon": 176, "josephson": [1, 439, 441], "joshua": 441, "journal": [18, 223, 296, 297, 298, 299, 439, 444, 448], "jp": 439, "jpeg": 183, "jpg": [183, 433], "jstor": 439, "jul": 439, "jule": 439, "jupyt": [2, 5, 6, 7], "jupyter_rfb": 435, "just": [43, 177, 181, 230, 231], "k": [223, 279, 280, 289, 290, 439, 447], "k1a_smooth": 2, "k1a_spher": 2, "k1m_smooth": 2, "k1m_sphere": 2, "k2a_smooth": 2, "k2a_spher": 2, "k2m_smooth": 2, "k2m_sphere": 2, "k_": 456, "kai": 439, "kappa_": 447, "kappa_1": [2, 447], "kappa_2": [2, 447], "kdtree": [317, 329], "keep": [18, 27, 30, 60, 83, 98, 177, 178, 180, 181, 184, 186, 187, 222, 300, 438, 444], "kei": [29, 227, 441, 448, 450, 455], "keith": 439, "kept": [139, 187, 392], "kernel": 179, "keyword": [184, 186, 187, 330], "kf": 223, "know": [93, 448], "known": [6, 419, 455], "koenderink": [156, 162, 163, 439], "kong": 439, "ku": 223, "kvd92": [156, 162, 163, 439, 447], "kwarg": [79, 87, 184, 186, 187, 425], "l": [29, 335, 439], "l0overrid": 223, "lab": 441, "label": [2, 219, 224, 227, 228, 430], "laboratori": [18, 444], "laidlaw": 439, "lambda": [6, 104], "lambdifi": [190, 196, 200, 202, 205], "laplacian": [2, 5, 179, 185, 221, 222, 224, 225, 439, 452], "larg": [177, 181, 222, 322, 351, 352, 353, 372, 373, 430, 437], "larger": [224, 440, 450, 454], "largest": [221, 222, 224, 225, 319, 448], "last": [120, 237, 300, 301, 406], "later": [29, 438], "layer": [29, 396, 397, 421, 439], "layerconn": 396, "layercoord": 396, "lc87": [99, 100, 439, 446], "lead": [93, 430, 446, 447, 448, 453], "leaf": [281, 337, 350, 351, 352, 353, 359, 371, 372, 373, 375, 376, 385, 454], "least": [44, 415, 447, 448, 455], "leav": [30, 44, 232, 350, 371, 385, 448], "lectur": 439, "lee": 439, "left": [447, 453, 455], "legend": 2, "len": [2, 148, 233, 293, 322, 406, 408, 411], "length": [22, 62, 63, 64, 184, 186, 187, 219, 223, 227, 228, 243, 257, 300, 301, 403, 406, 407, 426, 431], "leq": 455, "less": [20, 28, 72, 73, 99, 100, 101, 102, 103, 104, 105, 118, 120, 177, 178, 180, 181, 182, 183, 184, 186, 187, 219, 221, 222, 224, 225, 305, 306, 335, 392, 395, 420, 447], "lessen": 445, "lestin": 439, "letter": 439, "level": [28, 99, 100, 101, 102, 103, 104, 105, 335, 336, 338, 345, 347, 354, 358, 360, 366, 368, 374, 378, 380, 381, 383, 438, 454], "lexicograph": 433, "li": [448, 455], "lib": 439, "librari": [18, 136, 439, 441, 444], "lie": [2, 154, 179, 184, 185, 186, 232, 267, 268, 296, 297, 298, 299, 395, 450], "light": [18, 444], "like": [18, 101, 116, 135, 153, 288, 322, 432, 441, 444], "likewis": 450, "limit": [136, 221, 270, 271, 346, 367, 430, 431, 441, 453, 455], "linalg": [2, 285], "lincoa": 322, "line": [7, 22, 28, 97, 102, 105, 164, 170, 230, 231, 233, 237, 239, 278, 282, 283, 291, 292, 334, 419, 420, 426, 431, 446, 448, 455], "line_color": 426, "line_width": 426, "linear": [28, 99, 100, 101, 102, 103, 104, 105, 119, 131, 178, 179, 180, 184, 186, 194, 195, 223, 322, 335, 431, 447, 454], "lineconn": 334, "link": [23, 59, 439, 448, 454], "linspac": 233, "list": [18, 22, 27, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 50, 62, 63, 64, 71, 74, 79, 83, 87, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 172, 174, 176, 182, 184, 186, 187, 194, 195, 201, 223, 229, 234, 235, 238, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 261, 262, 265, 269, 272, 275, 277, 278, 279, 281, 284, 287, 289, 290, 294, 299, 300, 303, 307, 322, 323, 324, 325, 326, 332, 333, 334, 335, 336, 339, 340, 341, 346, 351, 357, 358, 361, 362, 367, 376, 377, 385, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 426, 429, 437, 438, 444], "liu1994": 247, "ller": 439, "load": [73, 182, 303, 305, 433, 456], "local": [179, 185, 219, 221, 222, 224, 225, 227, 322, 400, 447, 453], "locallaplaciansmooth": [5, 453], "locally_bias": 322, "locat": [20, 220, 221, 222, 224, 225, 300, 303, 392, 394, 405], "lock": 438, "log": 2, "long": [6, 18, 189, 232, 269, 335, 444, 455], "longer": [30, 60, 131, 285, 454], "longest": [223, 243, 300, 301], "look": 447, "lookup": 446, "loop": [237, 285, 286, 288], "loos": 441, "lorensen": [439, 446], "lori": 439, "loss": 430, "lot": 432, "love": 1, "low": [2, 6, 430, 447], "lower": [60, 79, 188, 219, 264, 265, 270, 271, 279, 280, 289, 290, 295, 300, 303, 438, 454, 455], "lth86": [430, 439], "luci": [18, 444], "lumetr": 440, "ly": [282, 283, 291, 292], "m": [18, 28, 30, 43, 44, 62, 63, 64, 69, 71, 73, 76, 78, 81, 84, 95, 120, 164, 165, 166, 167, 179, 185, 201, 206, 207, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 239, 257, 259, 260, 287, 293, 305, 322, 426, 434, 436, 437, 438, 439, 444, 456], "m1": [6, 305, 430], "m2": [6, 305, 430, 438], "m3": 6, "m4": 6, "m_align": 305, "macaroni": 7, "machin": [72, 420, 439], "made": [18, 30, 44, 440, 444], "magnitud": [120, 155, 158, 179, 447], "mai": [18, 23, 59, 62, 64, 95, 116, 126, 131, 135, 153, 155, 164, 165, 166, 167, 183, 184, 186, 187, 222, 234, 235, 238, 239, 300, 301, 303, 304, 322, 330, 336, 358, 411, 429, 430, 434, 437, 444, 447, 450, 455], "main": [93, 440, 446], "maintain": 1, "major": [212, 241, 430, 434], "make": [22, 62, 64, 93, 120, 234, 235, 238, 351, 352, 353, 372, 373, 432, 438, 441, 447], "mani": [21, 45, 72, 285, 286, 288, 322, 420, 438, 447, 453, 455], "manifold": [18, 272, 275, 439, 444], "manipul": [62, 64, 428, 432, 441], "manufactur": 440, "map": [1, 404, 408, 411], "mappingmatrix": [404, 408, 411], "marc": 439, "march": [2, 98, 99, 100, 102, 103, 104, 105, 178, 184, 186, 439], "marchingcub": [101, 178, 184, 446], "marchingcubesimag": [158, 178, 184], "marchingsquar": [101, 446], "marchingtetrahedra": [101, 178, 184, 446], "marchingtriangl": 101, "mark": [448, 454], "marot": 439, "marti": 441, "masknan": 2, "mat": 400, "match": [131, 219, 228, 398], "materi": [219, 228, 439], "mathbf": [307, 308, 309, 310, 311, 312, 313, 314, 447, 453], "mathemat": [434, 439], "mathwork": [311, 312, 437], "matplotlib": [2, 79, 120, 303, 435], "matric": 223, "matrix": [100, 103, 148, 182, 300, 301, 302, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 323, 325, 326, 330, 331, 332, 333, 400, 408, 411, 447, 455], "matter": [44, 191, 192, 193, 269, 272, 275, 439], "max": [66, 70, 71, 223, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 303, 305, 306, 347, 368, 381, 455], "maxangl": 246, "maxdepth": [98, 334, 335, 351, 352, 353, 355, 356, 372, 373, 377, 384], "maxdihedr": [71, 254], "maximum": [29, 79, 98, 154, 155, 156, 157, 158, 159, 160, 161, 163, 175, 183, 184, 186, 187, 191, 192, 197, 198, 221, 222, 224, 225, 227, 244, 246, 334, 335, 347, 348, 351, 352, 353, 355, 356, 368, 372, 373, 377, 381, 447, 454], "maxit": [221, 222, 224, 225, 302, 322], "maxprincip": [154, 155, 156, 157, 158, 159, 160, 161, 163], "maxprincipaldirect": [2, 155], "maxsiz": [351, 352, 353, 372, 373], "mb": [4, 9, 11, 442], "mc": [98, 178, 184, 186], "mc33": [98, 178, 184], "me": 1, "mead": 322, "mean": [2, 6, 69, 70, 71, 154, 158, 159, 224, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 317, 329, 438, 448, 450, 455], "meancurvatur": 447, "meaning": 158, "meanratio": [71, 90, 224], "measur": [6, 90, 317, 318, 319, 320, 329, 439, 447, 454], "mechan": 439, "mechanobiolog": [439, 441], "mechanobiologi": [1, 439, 441], "meet": [257, 296, 297, 298, 299, 450], "melt": [18, 444], "mem": [4, 9, 11, 442], "memori": 450, "merg": [107, 115, 123, 128, 143, 146, 150, 219, 401, 421], "mergedconn": 401, "mergedcoord": 401, "mergedv": 401, "mergemesh": 421, "mesh": [1, 2, 5, 7, 12, 18, 89, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 160, 161, 164, 165, 166, 167, 170, 174, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 194, 195, 201, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 269, 272, 275, 277, 278, 284, 287, 293, 294, 303, 305, 334, 335, 336, 337, 358, 359, 377, 384, 389, 390, 392, 393, 394, 395, 396, 397, 401, 402, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 425, 426, 428, 429, 430, 431, 432, 435, 437, 439, 444, 445, 448, 450, 452, 456], "mesh2": 74, "mesh2sdf": 1, "meshanalysi": [4, 442], "meshboolean": 430, "meshgener": [9, 442], "meshio": [76, 78, 81, 84, 85, 88, 435, 436], "meshio2mymesh": 436, "meshpi": 441, "messag": 182, "met": [334, 355, 356, 377, 455], "meth": 74, "method": [2, 7, 8, 10, 16, 27, 30, 51, 52, 93, 98, 99, 100, 101, 104, 105, 116, 126, 135, 144, 153, 158, 164, 165, 166, 167, 170, 174, 176, 178, 179, 180, 184, 185, 186, 194, 195, 220, 221, 223, 224, 225, 228, 251, 255, 258, 301, 303, 305, 306, 322, 335, 336, 358, 399, 412, 430, 432, 436, 438, 439, 440, 446, 447, 453, 456], "metric": [70, 71, 303, 304, 305, 306, 439], "michael": 439, "micro": 441, "middl": 5, "midpoint": [99, 100, 101, 102, 103, 104, 105, 107, 115, 123, 128, 143, 146, 150, 178, 180, 184, 186, 228, 303, 304, 446], "might": [18, 428, 444], "million": [18, 444], "min": [66, 70, 71, 223, 224, 226, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 303, 305, 306, 408, 411, 455], "minangl": 248, "mind": 447, "mindepth": [98, 335], "mindihedr": [71, 254], "minim": [6, 72, 190, 196, 200, 202, 205, 219, 322, 420, 432, 450], "minimum": [77, 79, 98, 154, 155, 156, 157, 158, 159, 160, 161, 163, 184, 186, 187, 193, 199, 213, 214, 215, 224, 248, 250, 285, 286, 288, 300, 301, 322, 334, 335, 348, 351, 352, 353, 372, 373, 377, 400, 439, 447], "mininum": 155, "minor": [212, 241], "minprincip": [154, 155, 156, 157, 158, 159, 160, 161, 163], "minprincipaldirect": 155, "minsiz": [334, 351, 352, 353, 372, 373, 377], "minut": [2, 5, 6, 7, 439], "mirror": [18, 330, 402, 444], "mirroredconn": 402, "mirroredcoord": 402, "mislabel": [72, 420], "mitig": 453, "mix": [8, 9, 10, 22, 28, 62, 63, 64, 101, 102, 103, 104, 105, 132, 133, 418, 431, 441, 442, 446], "mixed_el": [28, 101, 102, 103, 104, 105, 184, 219], "mixed_topology1": 6, "mixed_topology2": 6, "mixed_topology3": 6, "mixed_topology4": 6, "mm": 2, "mnew": [219, 220, 221, 222, 224, 225, 227, 228, 305], "mode": [22, 60, 100, 103, 139, 158, 187, 300, 303, 330, 337, 359, 412, 415, 426, 437, 438], "model": [18, 303, 305, 306, 430, 439, 441, 444], "modif": 438, "modifi": [30, 44, 60, 224, 269, 303, 430, 432, 433, 438, 450, 452], "modul": [1, 6, 14, 16, 20, 93, 428, 429, 432, 436, 438], "mohebi": 441, "moller97": [296, 297, 298, 299, 439], "mollert05": [285, 286, 288, 439, 455], "more": [1, 2, 5, 31, 32, 34, 35, 39, 40, 50, 51, 52, 73, 93, 94, 95, 101, 118, 164, 165, 166, 167, 177, 178, 179, 180, 181, 182, 185, 219, 227, 285, 286, 288, 300, 303, 330, 392, 399, 430, 432, 434, 436, 440, 441, 445, 452, 456], "morgan": [439, 441], "morlei": [279, 280, 289, 290, 439], "morph": [18, 444], "morpholog": 303, "moscow": 439, "most": [2, 72, 136, 303, 305, 306, 322, 399, 412, 413, 418, 420, 426, 429, 439, 440, 441, 445, 446, 447, 448, 454], "mostvis": 399, "mostvisible_it": 399, "mostvisible_loop": 399, "motion": [179, 221], "motiv": 453, "movabl": 185, "move": [2, 179, 184, 185, 186, 221, 222, 224, 225, 228, 302, 303, 304, 305, 306, 330, 412, 438, 448, 452, 453], "movement": [179, 221, 222, 224, 225, 453], "mpr19": [169, 439], "mse": [317, 329], "mt": [98, 178, 184], "much": [2, 285, 286, 288, 430, 455], "multi": [237, 411, 433, 439], "multichannel": [182, 183, 433], "multidimension": 322, "multipl": [6, 44, 62, 63, 64, 65, 74, 109, 132, 227, 264, 285, 286, 288, 411, 429, 434, 438, 446], "must": [29, 44, 60, 62, 63, 64, 73, 101, 104, 105, 117, 118, 139, 144, 155, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 219, 220, 222, 223, 228, 232, 288, 300, 301, 303, 322, 334, 351, 352, 353, 372, 373, 377, 392, 433, 437, 446, 448, 455], "mvbb": [300, 301], "mx3": [168, 173, 175], "mx4": 169, "my": 1, "mymesh": [1, 2, 5, 6, 7, 10, 430, 431, 432, 434, 435, 436, 438, 440, 445, 448, 454], "mymesh2meshio": [84, 436], "m\u00f6ller": [264, 285, 286, 288, 295, 296, 297, 298, 299, 455], "n": [7, 11, 62, 63, 64, 65, 117, 132, 144, 167, 168, 170, 173, 174, 176, 216, 217, 218, 222, 229, 236, 237, 257, 259, 260, 264, 268, 275, 276, 277, 278, 280, 283, 286, 288, 292, 293, 298, 299, 301, 322, 331, 334, 340, 341, 352, 353, 356, 361, 362, 372, 373, 389, 416, 439, 447, 448, 453, 455], "n0": 132, "n1": [132, 134], "n2": [132, 134], "n3": 134, "n4": 134, "n5": 134, "n_i": [453, 456], "name": [17, 18, 22, 29, 62, 63, 64, 65, 83, 88, 183, 426, 427, 428, 433, 440, 443, 444], "nan": [2, 51, 283, 292, 293], "nasti": [18, 444], "nation": 441, "natur": [155, 335, 445, 448, 454], "ndarari": [323, 324, 325, 326], "ndarrai": [17, 73, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 115, 116, 117, 118, 120, 122, 123, 126, 128, 130, 135, 138, 139, 140, 143, 144, 146, 147, 148, 149, 150, 153, 154, 155, 158, 160, 161, 168, 169, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 190, 191, 196, 197, 200, 202, 203, 205, 209, 213, 215, 221, 222, 238, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 268, 273, 276, 278, 280, 282, 283, 284, 285, 286, 287, 291, 292, 293, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 318, 320, 322, 323, 324, 325, 326, 330, 331, 332, 333, 336, 337, 339, 341, 342, 343, 348, 358, 359, 361, 363, 364, 369, 376, 386, 388, 392, 394, 398, 400, 403, 404, 406, 407, 426, 443], "ndimag": [73, 118, 120, 158, 177, 178, 179, 180, 181, 182, 300, 303, 330], "necessari": [29, 158, 300, 335, 448, 455, 456], "necessarili": [126, 135], "need": [93, 136, 223, 285, 286, 288, 330, 411, 419, 430, 435, 437, 438, 445, 446, 448, 450, 454], "neg": [28, 120, 173, 177, 178, 180, 181, 184, 186, 187, 191, 192, 193, 197, 198, 199, 213, 214, 215, 216, 217, 218, 232, 447, 448], "neglect": [108, 112, 122, 130, 140, 147, 149], "neighbor": [5, 35, 50, 57, 116, 126, 135, 153, 155, 160, 161, 221, 223, 224, 225, 250, 252, 412, 413, 415, 416, 417, 418, 429, 448, 450, 453, 456], "neighborhood": [155, 219, 416, 417, 447], "neilesh": 441, "neither": [236, 237], "nelder": 322, "nelem": [72, 219, 227, 228, 420], "nesper": 439, "net": 456, "network": [29, 456], "never": 450, "nevertheless": 6, "new": [7, 62, 63, 64, 65, 99, 100, 101, 102, 103, 104, 105, 107, 115, 116, 117, 123, 126, 128, 129, 135, 138, 143, 144, 146, 150, 153, 219, 220, 221, 222, 224, 225, 228, 322, 392, 394, 396, 405, 406, 430, 438, 446, 448, 452], "new_imag": 330, "new_img": 303, "new_point": [302, 306, 331], "newconn": [99, 100, 102, 103, 107, 108, 117, 119, 123, 128, 130, 131, 144, 146, 147, 150, 392, 394, 405], "newcoord": [99, 100, 102, 103, 116, 117, 119, 126, 131, 144, 153, 394, 405], "newedg": 62, "newfac": 64, "newid": 405, "newli": 448, "newuoa": 322, "newvalu": [104, 105], "next": [117, 144, 335, 448, 454], "nface": 422, "ni": 254, "nii": 439, "nine": 162, "nj": 254, "nlayer": [29, 397], "nme": 439, "nnode": [43, 395], "nodal": [6, 28, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 140, 141, 142, 143, 145, 146, 147, 149, 150, 151, 152, 153, 155, 160, 161, 171, 194, 195, 223, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 256, 258, 261, 336, 358, 390, 391, 393, 394, 395, 396, 397, 399, 401, 402, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 439], "node": [2, 5, 14, 22, 24, 25, 29, 30, 33, 34, 38, 41, 43, 45, 49, 50, 51, 52, 55, 56, 57, 58, 60, 62, 63, 64, 65, 72, 73, 74, 78, 84, 85, 86, 93, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 160, 161, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 179, 181, 185, 187, 194, 195, 201, 219, 220, 221, 222, 223, 224, 225, 228, 257, 259, 260, 262, 269, 272, 275, 277, 278, 281, 284, 287, 293, 294, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 379, 380, 381, 382, 384, 385, 387, 388, 392, 394, 395, 396, 397, 399, 401, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 426, 429, 431, 438, 440, 446, 447, 448, 450, 453, 454], "nodeconn": [2, 22, 23, 55, 59, 63, 67, 72, 86, 98, 99, 101, 102, 104, 105, 106, 107, 108, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 153, 168, 169, 171, 173, 175, 177, 178, 180, 181, 184, 186, 187, 223, 229, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 256, 257, 258, 259, 260, 261, 389, 391, 392, 393, 394, 397, 399, 402, 405, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 429, 438, 440], "nodeconn1": 401, "nodeconn2": 401, "nodecoord": [2, 22, 23, 59, 65, 80, 86, 98, 99, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 158, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 184, 186, 187, 219, 223, 229, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 256, 257, 258, 259, 260, 261, 266, 269, 272, 275, 278, 284, 287, 293, 305, 334, 377, 389, 390, 391, 392, 393, 394, 395, 397, 399, 402, 404, 405, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 429, 430, 438, 440], "nodecoords1": [262, 294, 401, 408, 411], "nodecoords2": [262, 294, 401, 408, 411], "nodedata": [22, 28, 60, 73, 118, 177, 181, 187, 219, 426, 430], "nodeneighbor": [2, 155, 160, 161, 223, 413, 418, 429, 437, 438], "nodeneighborhood": [155, 416, 417], "nodenorm": [2, 136, 155, 160, 161, 399], "nodenormalsmethod": 51, "noderegion": 413, "nodeset": [22, 65], "nodespringsmooth": [179, 185, 456], "nodev": [195, 201, 401], "nodevals1": [401, 411], "nodevals2": [401, 411], "nodevalu": [99, 101, 102, 104, 105], "non": [18, 51, 72, 86, 96, 97, 133, 155, 222, 223, 228, 234, 235, 238, 317, 319, 399, 420, 429, 444, 446, 447, 448, 450], "none": [2, 22, 27, 28, 29, 44, 60, 62, 63, 64, 65, 71, 73, 75, 79, 83, 98, 101, 118, 119, 120, 136, 139, 158, 164, 165, 167, 171, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 194, 219, 220, 221, 222, 223, 224, 225, 227, 228, 230, 231, 232, 233, 236, 237, 239, 240, 241, 242, 257, 258, 264, 269, 272, 275, 284, 287, 293, 295, 300, 301, 302, 303, 304, 305, 306, 317, 322, 327, 328, 329, 330, 334, 335, 338, 341, 360, 375, 377, 378, 384, 398, 402, 404, 405, 408, 411, 412, 413, 415, 419, 421, 422, 425, 426], "nonetyp": [27, 29, 71, 83, 120, 185, 222, 227, 275, 284, 287, 300, 301, 303, 304, 305, 306, 375, 419, 426], "nor": [18, 236, 237, 444], "nord": 441, "norm": [236, 285], "normal": [17, 27, 36, 51, 52, 136, 155, 160, 161, 170, 178, 179, 180, 181, 185, 204, 216, 217, 218, 238, 250, 252, 254, 264, 265, 266, 267, 268, 269, 272, 275, 295, 341, 353, 390, 399, 404, 432, 438, 439, 443, 447, 450, 453, 455], "notabl": 441, "note": [44, 62, 63, 64, 71, 105, 116, 126, 131, 135, 136, 153, 164, 165, 166, 167, 191, 192, 193, 229, 236, 240, 305, 306, 322, 396, 408, 411, 415, 430, 439, 448, 450], "notebook": [2, 5, 6, 7], "noth": 432, "notic": [18, 155, 444], "notion": 447, "notrim": 187, "noura": 439, "novel": 439, "now": 447, "np": [2, 6, 7, 17, 43, 51, 72, 73, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 115, 116, 117, 118, 120, 122, 123, 126, 128, 130, 135, 138, 139, 140, 143, 144, 146, 147, 148, 149, 150, 153, 154, 155, 158, 160, 161, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 190, 191, 196, 197, 200, 202, 203, 205, 209, 213, 215, 219, 221, 222, 233, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 267, 268, 272, 273, 274, 275, 276, 278, 280, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 318, 320, 322, 323, 324, 325, 326, 330, 331, 332, 333, 336, 337, 339, 341, 342, 343, 348, 351, 352, 353, 358, 359, 361, 363, 364, 369, 372, 373, 376, 386, 388, 392, 394, 395, 398, 400, 403, 404, 406, 407, 408, 411, 420, 426, 443], "npt": [408, 411], "nring": [70, 416], "numba": [155, 435], "numbaperformancewarn": 2, "number": [22, 29, 38, 45, 46, 47, 48, 49, 108, 112, 117, 122, 130, 132, 133, 140, 144, 147, 149, 175, 179, 185, 219, 221, 222, 224, 225, 227, 228, 229, 230, 231, 232, 236, 237, 240, 241, 251, 305, 306, 322, 348, 389, 392, 397, 407, 408, 411, 416, 426, 429, 431, 432, 435, 438, 448, 455, 456], "numer": [18, 223, 439, 444], "numpi": [1, 2, 6, 7, 99, 100, 102, 103, 109, 111, 118, 182, 183, 184, 186, 187, 190, 196, 200, 202, 205, 285, 303, 304, 305, 324, 335, 398, 403, 426, 433, 434, 435], "nvidia": 1, "nx2": 22, "nx3": [22, 155, 160, 161, 169, 222, 278, 284, 287, 343, 355, 364, 377, 386, 400], "nx3x3": 389, "nx4": 404, "o": [435, 439, 455], "o_x": 455, "ob01": [179, 185, 439], "obj": 436, "object": [18, 22, 23, 59, 71, 72, 73, 76, 78, 81, 84, 85, 95, 96, 98, 158, 170, 174, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 201, 220, 221, 222, 224, 225, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 300, 301, 322, 335, 378, 410, 420, 426, 430, 434, 436, 437, 438, 439, 441, 444, 447], "obp03": [225, 439, 453], "observ": 6, "obtain": [17, 18, 62, 64, 98, 100, 102, 103, 109, 110, 111, 136, 155, 160, 161, 179, 185, 191, 192, 193, 197, 198, 199, 213, 214, 215, 389, 415, 429, 430, 433, 434, 440, 443, 444, 446, 447, 455], "occur": [139, 158, 184, 351, 352, 353, 372, 373, 455], "octre": [98, 139, 272, 275, 281, 284, 287, 288, 293, 334, 335, 336, 337, 345, 346, 347, 348, 351, 352, 353, 355, 356, 358, 366, 368, 373, 375, 376, 377, 380, 381, 384, 404, 408, 411], "octree2du": 98, "octree_ep": 98, "octree_strategi": 98, "octreenod": [139, 272, 275, 281, 284, 287, 293, 334, 335, 336, 337, 355, 375, 376, 377, 384, 404, 408, 411, 454], "odd": 455, "off": [219, 322, 450], "offer": [322, 430, 434, 438], "offset": [209, 210, 239], "offset_v": 203, "offsetf": 203, "offsetv": 203, "often": [219, 228, 430, 446, 456], "ohtak": [185, 439], "oi": 439, "old": [394, 405], "om": 433, "omit": 435, "onc": [392, 427, 437, 448], "one": [23, 27, 44, 59, 69, 109, 111, 116, 126, 132, 133, 135, 153, 179, 221, 223, 224, 225, 264, 282, 283, 284, 285, 286, 287, 288, 291, 292, 305, 306, 334, 355, 356, 377, 408, 411, 415, 429, 438, 439, 441, 446, 447, 448, 454, 455], "ones": 219, "ones_lik": 2, "ongo": 441, "onli": [27, 62, 64, 96, 101, 109, 111, 120, 132, 133, 158, 173, 179, 182, 185, 219, 221, 222, 223, 224, 225, 228, 232, 236, 240, 241, 269, 272, 275, 279, 280, 281, 284, 285, 286, 287, 288, 300, 301, 305, 306, 334, 336, 337, 355, 356, 358, 359, 377, 392, 393, 397, 408, 411, 415, 419, 426, 427, 429, 433, 435, 447, 448, 450, 453, 454, 455], "onlin": [17, 18, 443, 444], "onlinelibrari": 439, "onto": [2, 404, 448, 453, 455], "opac": 426, "opaqu": 426, "open": [232, 440, 447], "opencv": [433, 435], "oper": [18, 22, 23, 59, 63, 93, 96, 182, 191, 192, 193, 219, 227, 394, 406, 429, 430, 432, 434, 438, 441, 444, 445, 446], "opposit": [28, 177, 178, 180, 181, 184, 186, 187, 257, 285, 434, 446, 447, 448], "optim": [6, 29, 136, 179, 185, 243, 303, 305, 306, 439, 441], "optimizer_arg": [303, 305, 306, 322], "optimizetet": 29, "option": [1, 17, 18, 22, 27, 28, 29, 30, 44, 52, 60, 62, 63, 64, 65, 71, 73, 74, 79, 83, 86, 87, 88, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 116, 118, 120, 126, 132, 133, 135, 136, 138, 139, 153, 155, 158, 164, 165, 166, 167, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 257, 258, 262, 264, 268, 269, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 308, 317, 322, 323, 324, 325, 326, 329, 330, 334, 335, 336, 337, 341, 342, 343, 344, 350, 351, 352, 353, 355, 356, 357, 358, 359, 363, 364, 365, 371, 372, 373, 376, 377, 379, 385, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 411, 412, 413, 415, 418, 419, 421, 426, 427, 431, 432, 443, 444], "optionalperpendicular": 240, "order": [44, 73, 101, 114, 117, 118, 119, 125, 131, 136, 142, 144, 148, 152, 172, 177, 178, 180, 181, 182, 191, 192, 193, 227, 300, 303, 308, 325, 330, 348, 392, 394, 406, 407, 431, 433, 439, 440, 446, 447, 448, 450, 455], "org": [29, 96, 175, 264, 279, 280, 285, 286, 288, 289, 290, 295, 296, 297, 298, 299, 439], "organ": [93, 428], "orient": [116, 126, 135, 153, 155, 170, 212, 238, 282, 300, 301, 426, 429, 432, 447, 448], "orientsurf": 170, "origin": [1, 30, 44, 69, 99, 100, 104, 105, 109, 111, 117, 134, 135, 138, 144, 179, 185, 219, 228, 300, 301, 303, 307, 308, 392, 394, 406, 407, 438, 441, 445, 453, 455], "ortho": 250, "orthogon": [71, 90, 244, 245, 249], "orthogonalqu": [71, 90], "orthopaed": 1, "orthoq": 249, "other": [18, 22, 23, 59, 69, 83, 101, 105, 126, 136, 155, 179, 185, 209, 210, 232, 253, 282, 283, 291, 292, 293, 307, 308, 347, 350, 368, 371, 381, 392, 403, 428, 430, 434, 437, 438, 441, 444, 447, 448, 450, 455], "otherwis": [28, 29, 30, 44, 60, 100, 101, 102, 103, 104, 105, 219, 224, 228, 232, 233, 234, 235, 238, 239, 264, 265, 267, 268, 269, 272, 275, 279, 280, 285, 289, 290, 295, 296, 298, 299, 337, 342, 343, 359, 363, 364, 433, 448, 455], "oup": 439, "our": [18, 444], "out": [2, 60, 87, 340, 362, 398, 403, 406, 407], "outer": [440, 450], "outofprocess": 437, "output": [28, 30, 44, 87, 96, 97, 101, 139, 191, 192, 193, 197, 198, 199, 213, 214, 215, 398, 406, 407], "outsid": [20, 60, 114, 120, 125, 142, 152, 269, 272, 275, 390, 434, 446, 447, 455], "outward": [170, 447, 448], "over": [219, 233, 450], "overal": 448, "overdetermin": 447, "overhead": [72, 155, 420, 437], "overlai": [303, 304], "overlap": [264, 295, 318, 320, 396, 439], "overrid": [183, 223], "overridden": [178, 184], "overview": 441, "p": [6, 205, 206, 207, 247, 279, 280, 289, 290, 448, 455], "p1": 455, "p_": 448, "p_1": 455, "p_2": 455, "p_i": 448, "p_x": 448, "p_y": 448, "packag": [436, 438, 441], "pad": [100, 103, 158, 293, 398, 403], "page": 439, "pair": [254, 283, 292, 293, 298, 299, 450], "pairwis": [276, 288, 389], "pan": 426, "panozzo": 439, "paper": [448, 455], "papli": [303, 304], "paraboloid": 448, "parallel": [44, 269], "parallelepip": 455, "param": 393, "paramet": [6, 17, 18, 22, 27, 28, 29, 30, 44, 60, 62, 63, 64, 65, 71, 73, 74, 76, 79, 81, 83, 88, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 317, 318, 319, 320, 322, 323, 324, 325, 326, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 350, 351, 352, 353, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 371, 372, 373, 375, 376, 377, 379, 380, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 426, 427, 443, 444, 447, 455], "parametr": 455, "parent": [116, 126, 135, 153, 338, 360, 378, 454], "parentid": [104, 105], "pariti": 455, "parsecolor": 426, "part": [62, 64, 132, 133, 322, 448], "partial": [29, 336, 358, 447], "particular": [18, 93, 221, 345, 366, 380, 441, 444, 447], "particularli": [6, 322, 430, 441], "partit": [446, 454], "pasko": 439, "pass": [60, 87, 184, 186, 187, 227, 300, 303, 392, 433, 454], "past": 412, "pasta": [8, 9, 10, 442], "path": [81, 177, 178, 179, 180, 181, 182, 183, 435, 448], "paul": 439, "pdf": [96, 439], "pdfo": 322, "peel": 397, "peelconn": 397, "peelcoord": 397, "peeledconn": 397, "peeledcoord": 397, "pellerin": 439, "penn": 7, "peopl": [18, 444], "per": [73, 118, 177, 178, 180, 181, 182, 429, 447], "perform": [1, 2, 5, 29, 71, 73, 99, 100, 101, 102, 103, 104, 105, 155, 179, 182, 185, 186, 187, 221, 222, 224, 225, 227, 303, 305, 308, 322, 325, 330, 399, 426, 429, 430, 450, 454, 455], "pergamon": 439, "perhap": 454, "period": [6, 190, 196, 200, 202, 205, 432], "permiss": [18, 444], "perpendicular": [230, 231, 232], "peter": 439, "ph": 441, "phi_resolut": [240, 241], "physic": 439, "physik": 439, "pi": [7, 233, 239, 303, 305, 447], "pillow": 435, "pip": [175, 435], "pixel": [100, 103, 177, 303, 323, 324, 332, 333, 359, 426, 440], "pixelconn": 359, "pixelcoord": 359, "place": [30, 44, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 115, 123, 128, 143, 146, 150, 178, 179, 180, 184, 185, 186, 221, 222, 224, 225, 228, 300, 301, 303, 336, 358, 394, 432, 446, 448], "placement": [2, 179, 185], "plan": 16, "planar": [72, 420, 439], "plane": [27, 44, 148, 179, 185, 216, 217, 218, 225, 230, 231, 232, 265, 267, 268, 269, 402, 426, 438, 439, 440, 447, 453], "plant": 439, "pleas": [7, 18, 444], "plot": [2, 5, 6, 7, 18, 87, 95, 98, 178, 180, 181, 184, 186, 187, 188, 189, 190, 196, 200, 202, 205, 208, 212, 229, 230, 232, 233, 234, 235, 236, 240, 241, 395, 426, 430, 438, 444], "plt": [2, 120, 303, 430], "pm": 447, "pmatrix": 448, "png": [183, 433], "point": [6, 27, 44, 92, 93, 108, 135, 138, 155, 158, 162, 168, 169, 170, 171, 172, 174, 175, 176, 179, 184, 186, 194, 195, 201, 204, 230, 231, 232, 236, 237, 238, 239, 240, 241, 262, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 317, 319, 322, 323, 324, 325, 326, 329, 330, 331, 340, 341, 342, 343, 352, 353, 355, 356, 361, 362, 363, 364, 372, 373, 375, 386, 387, 388, 389, 400, 404, 408, 411, 426, 430, 432, 434, 438, 439, 440, 446, 447, 453], "point_method": 303, "point_siz": 426, "pointinboundari": 455, "pointinsurf": 455, "points1": [302, 306, 317, 319, 329], "points2": [302, 306, 317, 319, 329], "points2octre": 454, "pointset": 85, "pole": 241, "polygon": [121, 132, 136, 439, 440, 448], "polyhedr": 439, "polyhedra": 440, "polyhedron": 450, "polytop": 439, "poor": 430, "popular": [448, 454], "pose": [164, 165, 166, 167], "posit": [28, 99, 100, 101, 102, 103, 104, 105, 120, 148, 177, 178, 179, 180, 181, 184, 185, 186, 187, 221, 222, 224, 225, 408, 447, 448, 453, 455], "possibl": [72, 184, 186, 227, 303, 305, 306, 420, 446, 450], "possibli": 1, "potenti": [72, 396, 420, 450], "powel": 322, "power": 441, "pp": 223, "practic": [113, 114, 121, 124, 125, 127, 141, 142, 145, 151, 152, 448], "pre": [89, 317, 329, 432, 448], "preced": [83, 236, 237], "precis": [72, 420], "precomput": [272, 275, 404, 408, 411], "predefin": [322, 432], "predominantli": [230, 231], "prefer": 427, "prefix": [183, 437], "prescrib": [203, 222], "presenc": 322, "present": [120, 132, 133, 174, 176, 219, 419, 420, 426], "preserv": [219, 227, 228, 301, 453], "prevent": [38, 222], "previous": [52, 221, 224, 225, 284, 287, 448], "primal": 439, "primari": [22, 116, 135, 153], "primarili": [225, 254, 429, 430, 431, 440], "primit": [6, 7, 99, 102, 104, 116, 120, 395, 419, 428, 430, 432, 437, 438], "princip": [2, 70, 93, 154, 155, 156, 157, 158, 159, 160, 161, 163, 300, 301, 439], "print": [22, 71, 182, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 285, 303, 305, 306, 408, 411], "priorit": 219, "problem": [164, 165, 166, 167, 322, 439], "problemat": 430, "proce": 455, "procedur": [29, 439, 448], "proceed": 439, "process": [101, 107, 115, 123, 128, 143, 146, 150, 219, 430, 439, 448, 452, 454], "produc": [28, 62, 64, 167, 232, 240, 411, 430, 433, 438], "product": [18, 155, 444, 455], "progress": [219, 227, 228, 303, 305, 306, 445], "project": [1, 175, 404, 408, 411, 441, 448, 453, 455], "proper": [136, 433], "properli": [139, 450, 454], "properti": [23, 24, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 61, 63, 66, 67, 77, 80, 83, 116, 135, 153, 437, 447], "propos": [335, 336, 358, 446], "protanomali": 426, "provid": [1, 14, 22, 28, 60, 62, 63, 64, 65, 83, 101, 104, 119, 120, 136, 139, 154, 158, 160, 161, 171, 173, 176, 179, 186, 219, 222, 223, 224, 228, 233, 234, 236, 257, 258, 264, 275, 295, 301, 330, 401, 404, 408, 411, 412, 413, 419, 436, 441, 445, 448], "pt": [27, 204, 238, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 375, 387, 388, 389], "pt1": 236, "pt2": 236, "public": 439, "publish": [18, 441, 444, 448], "pull": 330, "pure": [96, 97, 113, 114, 117, 124, 125, 127, 141, 142, 144, 145, 151, 152, 220, 230, 231, 232, 233, 239, 240, 259, 260, 389, 441], "purpos": [18, 253, 435, 440, 444, 445], "push": 330, "pv": 95, "pv_mesh": 95, "pvmesh": 85, "py": [2, 4, 5, 6, 7, 9, 437, 442], "pydicom": [433, 435], "pyenv": 437, "pyglet": 427, "pymesh": 441, "pypi": 175, "pyplot": [2, 120, 303], "pyr": 431, "pyr13": 431, "pyramid": [72, 122, 123, 124, 125, 126, 132, 133, 149, 239, 244, 251, 336, 420, 421, 431], "pyramidconn": [126, 421], "pyramidcoord": [126, 421], "pyramidheight": 421, "python": [2, 5, 6, 7, 175, 433, 437, 450], "pyvista": [85, 95, 441], "q": 247, "qef": [335, 454], "qhull": 16, "qingnan": 439, "quad": [126, 129, 132, 133, 184, 232, 235, 238, 239, 240, 241, 256, 334, 358, 392, 418, 419, 431, 440], "quad8": 431, "quadfit": 447, "quadnod": 358, "quadrat": [104, 119, 131, 161, 186, 322, 335, 431, 454], "quadric": [219, 439], "quadrilater": [28, 72, 101, 102, 103, 104, 105, 114, 119, 125, 127, 128, 129, 130, 132, 133, 152, 230, 231, 233, 235, 238, 241, 256, 358, 420, 431, 446], "quadtre": [334, 356, 358, 359, 367, 369, 372], "quadtreenod": [334, 359], "quak": 439, "qual": 71, "qualiti": [2, 5, 21, 71, 116, 135, 153, 219, 224, 227, 300, 303, 430, 432, 435, 439, 441, 447, 450, 452, 453], "qualityfunc": 224, "qualitymetr": 226, "qualitys": 228, "qualitythreshold": 220, "queri": 450, "question": 1, "queue": 448, "quick": 438, "quit": 430, "r": [2, 179, 185, 191, 192, 193, 197, 198, 199, 212, 213, 214, 215, 241, 257, 279, 280, 289, 290, 303, 305, 307, 308, 430, 434, 439, 453, 455], "r1": 232, "r2": 232, "r_": 308, "r_0": [308, 455], "r_1": [308, 455], "r_2": [308, 455], "r_c": [307, 308], "r_x": 455, "r_y": 455, "r_z": 455, "radial": [230, 231, 232, 240, 241], "radial_resolut": [230, 231, 232, 240, 241], "radian": [71, 233, 239, 307, 308, 323, 324, 325, 326], "radii": 232, "radiu": [2, 189, 208, 212, 230, 232, 240, 241, 417, 434, 448], "rag": [398, 403, 406, 407, 429], "rai": [93, 430, 439, 454], "rainald": 439, "rais": [86, 435], "rand": [272, 275], "random": [72, 269, 272, 275, 305, 306, 408, 411, 420], "randomli": [305, 306, 448], "rang": [17, 18, 183, 184, 186, 244, 245, 249, 250, 251, 255, 256, 258, 261, 300, 303, 304, 305, 306, 318, 320, 426, 439, 443, 444, 447], "rare": [72, 420], "raster": 439, "rather": [27, 88, 113, 114, 116, 121, 124, 125, 126, 127, 141, 142, 145, 151, 152, 153, 177, 179, 181, 185, 336, 347, 358, 368, 381, 429, 430, 441, 446, 448, 450, 454], "ratio": [71, 243, 247], "rayboxesintersect": 455, "rayboxintersect": 455, "raysegmentintersect": 455, "raysegmentsintersect": 455, "rayssurfintersect": 288, "raystrianglesintersect": [285, 286, 455], "raysurfintersect": 93, "raytriangleintersect": [286, 288, 455], "raytrianglesintersect": [285, 288, 455], "re": [60, 394, 406, 407, 432, 447, 448], "reach": [450, 454, 455], "reachabl": [347, 368, 381], "reactiv": 322, "read": [433, 436], "readabl": [81, 399, 441], "reader": 433, "real": [190, 196, 200, 202, 205], "reason": [6, 450], "recalcul": [223, 438, 450], "receiv": 51, "recogniz": 447, "recommed": 322, "recommend": [219, 228], "recomput": [62, 64], "reconnect": [394, 452], "reconstruct": [1, 18, 432, 444], "record": 439, "recov": [406, 407], "rectangular": [155, 234, 235, 293, 403, 429, 440], "rectilinear": [99, 102, 148], "recurs": [344, 365, 379], "red": [5, 429], "redistribut": [2, 18, 179, 185, 222, 444], "reduc": [109, 111, 179, 185, 219, 224, 300, 303, 305, 306, 330, 392, 446, 453], "redund": [62, 64, 450], "ref": [311, 312], "refer": [30, 36, 44, 63, 69, 86, 104, 105, 117, 144, 179, 219, 228, 307, 308, 309, 310, 311, 312, 323, 324, 325, 326, 336, 345, 366, 380, 426, 438, 441, 445, 447, 449], "referenc": [38, 62, 64, 429, 438], "refin": [334, 335, 377, 452, 454], "reflect": 44, "regardless": [184, 347, 368, 381, 430, 447, 455], "region": [102, 105, 219, 227, 228, 412, 413, 454], "regist": 1, "registr": [1, 303, 305, 322], "regulargridinterpol": 179, "rel": [155, 184, 186, 347, 368, 381, 387, 388, 389, 408], "relabel": 405, "relat": [16, 93, 109, 111], "relax": 179, "relev": [232, 240, 241, 415, 431, 448, 450], "reli": [430, 447, 454, 455], "relianc": 441, "religi": [18, 444], "remacl": 439, "remain": [6, 108, 112, 122, 130, 140, 147, 149, 394], "rememb": [18, 444], "remesh": 439, "remov": [30, 60, 98, 100, 102, 103, 131, 133, 177, 178, 180, 181, 184, 185, 186, 187, 219, 228, 392, 394, 397, 398, 448, 450, 452], "render": [18, 444], "renumb": [131, 219, 394, 401], "reorder": [173, 406, 407], "repeat": [227, 305, 306, 430, 448, 453, 454], "replac": 435, "report": [71, 305, 306], "reposit": [179, 185, 219, 221, 224, 225, 456], "repositori": [18, 435, 444], "repres": [93, 118, 237, 265, 301, 429, 434, 440, 450, 454], "represent": [6, 14, 23, 31, 32, 34, 35, 39, 40, 50, 59, 311, 312, 334, 377, 384, 404, 408, 410, 411, 430, 450, 454], "request": 1, "requir": [17, 18, 104, 303, 304, 322, 406, 415, 430, 435, 437, 443, 444, 447, 450], "res2": 305, "resampl": [73, 118, 177, 178, 180, 181, 182, 300, 303, 330], "research": [1, 18, 441, 444], "reset": [62, 63, 64, 344, 365, 379], "resolut": [73, 118, 120, 300, 303, 430, 439, 454], "resolv": [119, 120, 431, 446], "respect": [100, 232, 241, 446, 447, 452], "rest": [62, 64], "result": [2, 6, 97, 104, 116, 126, 135, 136, 153, 160, 161, 222, 230, 231, 234, 235, 238, 303, 304, 305, 306, 430, 447], "retriangul": 97, "retriev": [375, 376, 385], "return": [5, 17, 18, 27, 28, 30, 44, 69, 71, 72, 73, 75, 76, 78, 79, 81, 84, 85, 87, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 317, 318, 319, 320, 322, 323, 324, 325, 326, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 346, 347, 348, 349, 355, 356, 358, 359, 361, 362, 363, 364, 367, 368, 369, 370, 375, 376, 377, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 426, 427, 430, 433, 434, 438, 443, 444], "return_anchor": [99, 102], "return_count": 109, "return_direct": 155, "return_edgeconn": 132, "return_edgeelem": 132, "return_faceconn": 133, "return_faceelem": 133, "return_fig": [2, 79, 425, 430], "return_gradi": [73, 118], "return_id": [110, 135, 138], "return_idx": [109, 111, 392, 394, 406, 407], "return_imag": 426, "return_intersect": [282, 283, 291, 292], "return_inv": [109, 111, 135, 138, 394, 406, 407], "return_kf": 223, "return_mappingmatrix": 411, "return_matrix": 400, "return_nodedata": [73, 118, 177, 181], "return_nodevalu": [104, 105], "return_octre": [408, 411], "return_parentid": [104, 105], "return_pt": [262, 293, 294], "return_separ": 406, "return_surfelem": 134, "return_transform": [300, 301], "rever": [18, 444], "revers": [394, 406], "revolut": [239, 241], "revolv": [7, 432], "rfboutputcontext": [2, 5, 6, 7], "rgb": [182, 183, 433], "rgba": [183, 426, 433], "rho": 220, "richard": 439, "ridg": [5, 162], "right": [426, 447, 453, 455], "rigid": [303, 305, 306, 324, 325, 326, 332, 333], "rigid2": 303, "rigid2d": 303, "ring": [416, 447], "risk": [179, 185], "rmax": [191, 192, 193, 197, 198, 199], "rmin": [213, 214, 215], "rmsd": 2, "rmsd_k1a_smooth": 2, "rmsd_k1a_spher": 2, "rmsd_k1m_smooth": 2, "rmsd_k1m_sphere": 2, "robust": [21, 279, 280, 289, 290, 439], "romain": 439, "ron": [154, 158, 439], "root": [2, 281, 334, 335, 336, 337, 345, 347, 350, 355, 356, 357, 358, 359, 366, 368, 371, 375, 376, 377, 380, 381, 384, 385, 435, 454], "rotat": [233, 239, 241, 303, 305, 306, 307, 308, 323, 324, 326, 332, 333, 400, 426, 446], "rotation2d": 303, "rotation_mod": [308, 315, 323, 325, 327, 328], "rotation_ord": [308, 315, 323, 325, 327, 328], "round": [300, 301], "row": [22, 394, 406, 407, 408, 429], "rrner": 439, "rule": [438, 455], "run": [2, 5, 6, 7, 30, 60, 177, 178, 180, 181, 184, 186, 187, 229, 232, 233, 234, 235, 236, 238, 239, 240, 241, 435, 437], "runner": 2, "runtimewarn": 2, "russia": 439, "rut": 162, "s0": [309, 310], "s003660200006": [29, 439], "s00371": 439, "s0925": 439, "s1": [219, 283, 291, 292, 309, 310], "s10237": 439, "s2": [219, 283, 291, 292, 310], "s_0": [309, 310], "s_1": [309, 310], "s_2": 310, "saddl": [162, 447], "safest": [62, 63, 64], "sale": [18, 444], "same": [22, 28, 30, 44, 55, 83, 101, 117, 126, 144, 153, 185, 221, 224, 225, 269, 304, 347, 368, 381, 392, 394, 428, 429, 438, 446, 448, 450, 453, 454, 455], "sampl": [72, 98, 154, 239, 240, 322, 408, 411, 420, 433, 439, 454], "satisfi": 434, "save": 183, "sc": 219, "scaffold": [439, 441], "scalar": [2, 22, 28, 60, 79, 98, 177, 178, 180, 181, 184, 186, 187, 190, 191, 192, 196, 197, 198, 200, 202, 203, 205, 209, 210, 213, 214, 215, 219, 228, 232, 233, 239, 240, 241, 303, 304, 305, 306, 395, 411, 422, 423, 426, 434, 438, 455], "scalar_prefer": [60, 426], "scale": [73, 118, 162, 177, 178, 179, 180, 181, 182, 183, 216, 217, 218, 223, 300, 303, 305, 306, 309, 310, 311, 312, 439, 447], "scalefactor": [73, 118, 177, 178, 180, 181, 182, 433], "scaleord": [73, 118, 177, 178, 180, 181, 182], "scan": [17, 18, 303, 441, 443, 444, 447], "scenario": [72, 420], "scf": 227, "schaefer": 439, "schedul": 227, "scheme": [108, 112, 122, 130, 140, 147, 149, 348], "schneider": 439, "schnere": 439, "scholarli": [18, 444], "schwald": 439, "schwarz": [6, 190, 205], "scienc": 439, "scipi": [16, 73, 118, 120, 158, 164, 166, 170, 174, 176, 177, 178, 179, 180, 181, 182, 223, 300, 303, 317, 319, 322, 329, 330, 435], "score": [305, 306], "scott": 439, "scratch": [432, 441], "script": [2, 5, 6, 7], "sdf": 120, "se": 439, "search": [93, 322, 347, 368, 375, 376, 381, 454], "second": [2, 5, 6, 7, 74, 97, 117, 119, 131, 144, 179, 191, 197, 213, 221, 228, 236, 254, 262, 263, 283, 291, 292, 293, 294, 296, 297, 303, 304, 317, 319, 329, 387, 388, 389, 430, 439, 450], "section": [189, 232, 240, 241, 406, 445, 455], "see": [2, 15, 29, 31, 32, 34, 35, 39, 40, 50, 51, 52, 73, 74, 79, 87, 98, 104, 105, 106, 109, 111, 118, 119, 131, 158, 164, 165, 166, 167, 177, 178, 179, 180, 181, 182, 184, 185, 219, 227, 284, 285, 286, 287, 288, 300, 301, 303, 305, 306, 322, 418, 426, 429, 431, 432, 434, 436, 437, 438, 446, 447, 448, 449, 450, 453, 454, 455, 456], "seed": [305, 306], "seem": 437, "seemingli": [300, 301], "seen": [6, 18, 444], "segment": [102, 236, 237, 278, 282, 283, 289, 290, 291, 292, 446], "segmentsegmentintersect": 455, "segmentssegmentsintersect": 455, "select": [178, 184, 303, 305, 306, 426, 427, 448], "selesk": 439, "self": [293, 455], "semicolon": 437, "sens": [62, 64], "sensit": [155, 160, 161, 335], "sep": [439, 441], "separ": [182, 219, 228, 406, 413, 438, 446], "sequenti": [221, 224, 225], "seri": [6, 237, 439, 440], "serv": [303, 305, 306, 445], "set": [6, 22, 29, 51, 52, 62, 63, 64, 65, 72, 99, 100, 101, 102, 103, 104, 105, 109, 111, 139, 158, 169, 170, 172, 174, 176, 179, 184, 185, 186, 191, 197, 213, 219, 221, 222, 223, 224, 225, 268, 280, 283, 286, 288, 292, 298, 299, 302, 305, 306, 317, 319, 329, 339, 340, 341, 343, 355, 356, 361, 362, 364, 377, 385, 386, 389, 396, 400, 406, 412, 413, 418, 420, 421, 426, 427, 430, 431, 437, 438, 439, 440, 448, 454], "set_axis_off": 430, "set_titl": [2, 430], "set_xtick": 2, "set_xticklabel": 2, "set_ylabel": 2, "set_ylim": 2, "set_yscal": 2, "seven": 447, "sever": [6, 16, 18, 51, 428, 429, 430, 434, 435, 438, 440, 444, 446, 450, 453, 454], "sh": [311, 312], "sh01": [311, 312], "sh02": 312, "sh10": [311, 312], "sh12": 312, "sh20": 312, "sh21": 312, "sh_": [311, 312], "shade": 426, "shadi": 441, "shape": [8, 9, 10, 62, 63, 64, 65, 70, 117, 144, 162, 163, 164, 165, 166, 167, 170, 185, 219, 221, 229, 237, 257, 259, 260, 264, 268, 269, 270, 271, 272, 275, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 291, 292, 298, 299, 300, 301, 302, 303, 304, 305, 306, 318, 320, 323, 325, 326, 331, 332, 333, 334, 340, 341, 352, 353, 356, 361, 362, 372, 373, 389, 425, 430, 432, 439, 440, 442, 448], "shapeindex": [162, 447], "share": [109, 110, 111, 132, 296, 297, 298, 299, 415, 429, 450, 452], "sharp": [430, 439], "she96": [439, 441], "shear": [303, 305, 306, 311, 312], "shewchuk": [16, 175, 176, 439], "shi": 441, "shift": [7, 239], "shirlei": [279, 280, 289, 290, 439], "shortcom": 446, "shorter": 219, "shortest": [223, 243, 300, 301], "shoud": [73, 118], "should": [18, 22, 29, 62, 63, 64, 72, 73, 98, 100, 116, 118, 126, 129, 153, 154, 155, 174, 176, 177, 178, 180, 181, 184, 185, 186, 187, 192, 198, 210, 214, 252, 256, 261, 264, 268, 269, 273, 274, 276, 277, 278, 279, 280, 284, 285, 286, 287, 288, 289, 290, 298, 299, 303, 305, 306, 335, 389, 399, 404, 408, 411, 420, 426, 428, 434, 441, 444, 448], "shouldn": [269, 272, 275], "show": [2, 79, 425, 426, 429, 430, 445], "show_colorbar": 79, "show_edg": [2, 98, 219, 221, 229, 230, 232, 233, 234, 235, 236, 240, 241, 426, 438], "show_empti": 357, "show_fac": 426, "show_point": 426, "shown": [426, 448, 450], "shrinkag": [179, 185, 453], "si": 439, "si15": [439, 441], "sici": 439, "side": [27, 133, 184, 186, 187, 267, 268, 300, 301, 450, 455], "siggraph": [264, 279, 280, 285, 286, 288, 289, 290, 295, 439], "sigma_max": 220, "sigma_min": 220, "sign": [28, 120, 155, 173, 177, 178, 180, 181, 184, 186, 187, 201, 203, 209, 210, 335, 447, 448, 455], "signific": [2, 18, 93, 177, 181, 437, 444], "significantli": [285, 286, 288, 404, 408, 411], "similar": [303, 304, 305, 306, 318, 320, 439, 446], "similarli": [438, 450, 455], "simpl": [399, 430, 432], "simplex": 104, "simplexmethod": 251, "simpli": [244, 392, 411, 448], "simplif": 439, "simul": [1, 18, 426, 440, 444], "simultan": [179, 185, 221, 224, 225], "sin": [190, 196, 200, 202, 205, 233, 307, 308], "sinc": [1, 17, 18, 430, 438, 443, 444, 446, 454, 456], "singl": [7, 28, 60, 62, 63, 64, 65, 100, 101, 102, 103, 104, 105, 116, 126, 153, 156, 157, 159, 163, 177, 178, 180, 181, 182, 183, 184, 186, 187, 237, 288, 322, 389, 412, 413, 433, 450, 454], "site": [18, 444], "situat": 446, "six": [30, 234, 238], "size": [5, 6, 73, 100, 103, 118, 120, 139, 158, 177, 178, 179, 180, 181, 185, 219, 227, 228, 233, 234, 235, 236, 237, 238, 239, 251, 300, 303, 305, 306, 334, 335, 338, 346, 351, 352, 353, 360, 367, 372, 373, 377, 412, 413, 421, 426, 454], "skelet": 441, "skeleton": 303, "skew": [71, 90, 155, 160, 161, 226, 244, 255, 256, 258, 261], "skr": 439, "slice": [182, 406, 433], "slice0": 182, "slightli": [234, 235, 238, 285, 286, 288], "sliver": 251, "slow": 187, "slower": [399, 430], "small": [18, 97, 164, 165, 166, 167, 185, 262, 268, 269, 272, 273, 274, 275, 276, 278, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 294, 296, 297, 298, 299, 406, 435, 444, 455, 456], "smaller": [93, 120, 334, 377, 454], "smart": 224, "smartlaplaciansmooth": [227, 453], "smooth": [2, 179, 185, 220, 221, 222, 224, 225, 227, 426, 439, 452], "smooth_kwarg": 227, "smoother": 227, "smoothheart": 5, "smoothspher": 2, "snap": [184, 186], "snap2surf": [184, 186], "snapgrid2surf": [184, 186], "so": [23, 44, 59, 62, 64, 117, 144, 158, 182, 191, 192, 193, 219, 224, 300, 301, 438, 446, 448, 450, 454, 455], "societi": 439, "sociologi": 439, "softwar": [438, 439, 441], "sohn": 439, "solid": [14, 132, 133, 426, 439], "solid2edg": [106, 109, 113, 121, 124, 127, 137, 141, 145, 151, 418, 429], "solid2fac": [110, 111, 114, 125, 142, 152, 429], "solid2tet": [104, 116, 126, 153], "solv": [223, 447, 448, 455, 456], "some": [18, 22, 23, 59, 72, 83, 155, 164, 165, 166, 167, 173, 232, 240, 241, 322, 336, 347, 358, 368, 381, 419, 420, 430, 431, 441, 444, 445, 447], "sometim": 453, "soo": 439, "sophist": 1, "sor48": [318, 439], "sorensen": [318, 439], "sort": [18, 136, 219, 394, 406, 407, 412, 413, 444, 450], "sourc": [2, 5, 6, 7, 17, 18, 22, 27, 28, 29, 30, 44, 53, 54, 60, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 346, 348, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 369, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 443, 444], "sp": [190, 191, 196, 200, 202, 205, 213], "space": [6, 93, 440, 454], "span": 335, "spars": [223, 337, 359], "spatial": [45, 170, 173, 174, 176, 309, 313, 317, 319, 329, 346, 367, 454], "spec": 439, "specfi": 28, "speci": 439, "special": [440, 448], "specif": [6, 7, 101, 183, 429, 432, 435, 438, 441, 445], "specifi": [27, 29, 30, 44, 71, 72, 83, 98, 100, 103, 106, 118, 120, 132, 133, 158, 174, 176, 177, 178, 180, 181, 183, 184, 186, 187, 189, 194, 195, 203, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 253, 273, 274, 276, 277, 282, 283, 284, 287, 291, 292, 300, 301, 303, 322, 323, 324, 325, 326, 332, 333, 335, 342, 343, 363, 364, 376, 392, 397, 398, 403, 408, 417, 420, 426, 454], "speed": [404, 408, 411], "spent": 430, "sphere": [2, 98, 104, 219, 221, 241, 419, 428, 430, 432, 434, 438, 447], "spheric": [162, 219, 447], "sphinx": [2, 5, 6, 7, 10], "split": [97, 101, 126, 129, 227, 228, 407, 430, 446, 452], "splitfeatur": 70, "spread": 222, "spring": [29, 179, 185, 222, 223, 439, 440, 452], "springer": 439, "spuriou": 447, "sqrt": [2, 257, 447], "squar": [2, 93, 102, 103, 235, 238, 317, 329, 369, 447], "src": 2, "stabl": 95, "stack": [73, 118, 183, 433], "standard": [72, 158, 179, 420, 440, 450, 453], "stanford": [17, 18, 303, 305, 443, 444], "star": 448, "start": [7, 29, 279, 280, 282, 285, 286, 288, 289, 290, 406, 441, 448, 454], "state": [71, 338, 350, 360, 371, 378, 446], "static": 79, "statist": [408, 411], "statu": [18, 182, 444, 450], "steiner": [175, 176], "step": [227, 233, 239, 430, 448], "steve": 439, "stiff": [29, 222, 223, 456], "stiffnessfactor": [29, 223], "still": [21, 95, 120, 241, 300, 303, 453], "stl": [81, 436], "stoddart": 439, "storag": [285, 286, 288, 439], "store": [22, 71, 148, 177, 181, 182, 187, 219, 228, 433, 438, 450], "str": [17, 18, 22, 28, 29, 30, 60, 62, 63, 64, 65, 71, 72, 73, 81, 83, 88, 98, 99, 100, 101, 102, 103, 104, 105, 106, 116, 118, 119, 120, 126, 132, 133, 136, 139, 144, 153, 158, 164, 165, 166, 167, 170, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 251, 253, 272, 275, 284, 287, 293, 300, 303, 305, 306, 322, 335, 336, 350, 358, 371, 392, 399, 404, 408, 411, 412, 415, 418, 419, 420, 426, 427, 443, 444], "straight": [7, 236, 430, 454], "strategi": [98, 335, 453, 454], "stretch": 447, "strict": 393, "strictli": [29, 174, 176, 222, 234, 235, 238, 256, 261, 284, 287, 456], "string": [28, 60, 83, 182, 219, 227, 228, 411, 419, 426], "strive": 441, "structur": [93, 139, 272, 275, 281, 284, 287, 317, 329, 335, 336, 355, 356, 358, 384, 394, 404, 408, 411, 429, 439, 448, 454], "sub": [117, 144, 253, 440], "subdivid": [29, 117, 144, 351, 352, 353, 355, 356, 372, 373, 454], "subdivis": [93, 98, 144, 335, 351, 352, 353, 372, 373], "subject": 6, "sublist": 406, "submit": 7, "submodul": 428, "subplot": [2, 219, 221, 430], "subsequ": 438, "subseri": 439, "substitut": 1, "subtract": 453, "suffer": 430, "suffici": [104, 105, 120, 268, 269, 272, 275, 285, 286, 288, 296, 297, 298, 299, 455, 456], "suit": 71, "suitabl": [132, 418], "sum": [2, 6, 253], "sum_": [453, 456], "super": 448, "suppli": [334, 377, 415, 441], "support": [1, 22, 28, 81, 96, 132, 136, 183, 408, 411, 431, 436, 437, 441], "suppress": 437, "sure": [18, 437, 444, 448, 454], "surf": [22, 28, 29, 72, 86, 98, 101, 102, 103, 104, 105, 119, 120, 132, 133, 164, 165, 166, 167, 170, 229, 230, 231, 232, 233, 234, 239, 240, 241, 242, 392, 418, 419, 420, 430, 431, 438], "surf1": [96, 97], "surf1intersect": 294, "surf2": [96, 97], "surf2intersect": 294, "surf2octre": 293, "surf2tri": [284, 287], "surf2voxel": 438, "surfac": [1, 2, 6, 14, 18, 20, 22, 23, 24, 25, 28, 29, 36, 38, 42, 51, 52, 55, 56, 57, 58, 72, 93, 96, 97, 98, 101, 102, 103, 104, 105, 110, 120, 132, 133, 134, 136, 137, 138, 139, 154, 155, 158, 160, 161, 178, 179, 184, 185, 186, 187, 188, 189, 190, 196, 200, 202, 203, 205, 208, 209, 210, 212, 219, 221, 222, 224, 225, 229, 230, 231, 232, 233, 234, 239, 240, 241, 242, 252, 262, 269, 272, 275, 284, 287, 293, 294, 335, 377, 390, 392, 395, 404, 408, 410, 411, 415, 420, 421, 426, 430, 431, 432, 434, 439, 441, 444, 446, 453], "surface2edg": 132, "surface2octre": [272, 275, 284, 287, 404, 408, 411, 454], "surfacemesh": [2, 5, 188, 189, 190, 196, 200, 202, 205, 208, 212, 221, 430, 432, 434], "surfacenodeoptim": 2, "surfacereconstruct": 432, "surfconn": [29, 36, 59, 110, 134, 136, 139, 155, 160, 161, 266, 272, 275, 284, 287, 293, 377, 390, 395, 404, 410], "surfconn1": [294, 408, 411], "surfconn2": [294, 408, 411], "surfcoord": 139, "sw05": [98, 335, 336, 358, 439, 454], "sweep": [7, 432], "sydnei": 441, "symbol": [18, 98, 154, 190, 193, 196, 199, 200, 202, 205, 215, 444], "symfun": 211, "symfun1": [193, 199, 215], "symfun2": [193, 199, 215], "symmetr": [191, 192, 193, 317, 319, 329, 430], "sympi": [154, 185, 190, 193, 196, 199, 200, 202, 205, 215, 430, 435], "symposium": 439, "system": [95, 158, 400, 447, 454, 456], "t": [18, 28, 29, 30, 44, 46, 48, 62, 64, 69, 72, 79, 86, 93, 110, 120, 136, 137, 174, 176, 180, 184, 209, 210, 211, 219, 222, 224, 264, 269, 272, 275, 282, 283, 284, 285, 286, 287, 288, 291, 292, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 313, 314, 330, 331, 335, 404, 408, 410, 411, 415, 419, 420, 438, 439, 444, 445, 447, 448, 450, 452, 453, 454, 455, 456], "t0": [302, 303, 305, 306, 313, 314, 323, 324, 332, 333], "t1": [313, 314, 323, 324, 332, 333], "t2": [314, 323, 324, 332], "t_": 455, "t_0": [313, 314], "t_1": [313, 314], "t_2": 314, "t_i": 455, "t_j": 448, "t_p": 448, "tabl": [429, 446, 448], "take": [6, 18, 83, 194, 195, 228, 236, 237, 322, 330, 438, 444, 448], "taken": [60, 132, 133, 228, 446, 454], "tami": 439, "tandfonlin": 439, "tangent": [179, 185, 225, 453], "tangenti": [2, 179, 185, 224, 225], "tangentiallaplaciansmooth": 453, "tangentialsurfac": 224, "target": [219, 224, 226, 227, 228], "task": 441, "tast": [18, 444], "tau93": [5, 439], "taubin": [5, 439], "td": 455, "techniqu": 439, "teeth": 441, "temporarili": 253, "term": [300, 301, 408, 411, 438, 439, 450, 455], "termin": [221, 222, 224, 225, 335, 350, 371, 385, 448, 454], "teseo": 439, "tessel": 439, "test": [93, 136, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 284, 287, 288, 295, 296, 297, 298, 299, 439, 446, 454], "tet": [104, 132, 133, 135, 180, 186, 229, 232, 233, 234, 239, 240, 253, 273, 392, 395, 418, 431, 450], "tet10": 431, "tet10nodeconn": [140, 143], "tet4nodeconn": [140, 143], "tetconn": [116, 126, 135, 153], "tetconn1to14": 153, "tetconn1to2": 126, "tetconn1to24": 116, "tetconn1to3": 153, "tetconn1to36": 153, "tetconn1to4": 126, "tetconn1to5": 116, "tetconn1to6": 116, "tetcoord": 135, "tetcoords1to14": 153, "tetcoords1to2": 126, "tetcoords1to24": 116, "tetcoords1to3": 153, "tetcoords1to36": 153, "tetcoords1to4": 126, "tetcoords1to5": 116, "tetcoords1to6": 116, "tetflip": 227, "tetgen": [439, 441], "tetmesh": [6, 219, 395, 430, 432, 434], "tetnodeconn": 104, "tetnodecoord": 104, "tetopt": 29, "tetradehdr": 140, "tetradehedr": 140, "tetrahdr": 144, "tetrahed": 259, "tetrahedr": [14, 29, 72, 104, 115, 116, 126, 132, 133, 135, 140, 141, 142, 143, 153, 165, 166, 167, 169, 173, 180, 186, 219, 220, 227, 228, 232, 233, 234, 239, 240, 244, 251, 257, 258, 387, 409, 420, 430, 432, 439, 441, 448, 450], "tetrahedra": [28, 98, 101, 104, 105, 116, 119, 126, 135, 144, 153, 173, 178, 184, 186, 232, 239, 240, 257, 258, 430, 439, 440, 450, 453], "tetrahedron": [247, 259, 273, 387, 431, 448], "tetraher": 1, "th": [439, 456], "tha": 448, "thai": [18, 444], "than": [20, 28, 72, 73, 83, 88, 99, 100, 101, 102, 103, 104, 105, 113, 114, 116, 118, 120, 121, 124, 125, 126, 127, 141, 142, 145, 151, 152, 153, 155, 158, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 219, 221, 222, 224, 225, 228, 253, 285, 286, 288, 305, 306, 307, 308, 334, 335, 336, 347, 351, 352, 353, 358, 368, 372, 373, 377, 381, 392, 393, 395, 404, 408, 411, 420, 429, 430, 441, 446, 447, 448, 450, 454], "thei": [6, 18, 46, 48, 60, 62, 64, 93, 100, 103, 106, 120, 136, 179, 185, 275, 394, 406, 407, 412, 428, 429, 438, 440, 444, 446, 447, 450, 454], "them": [18, 93, 97, 232, 432, 435, 438, 444, 448, 454], "theme": [423, 426, 441], "theorema": 447, "theoret": 2, "theori": [1, 15, 439, 441, 448], "therefor": 447, "theta": [307, 326], "theta_resolut": [230, 231, 232, 240, 241], "thi": [1, 5, 6, 7, 14, 16, 18, 20, 22, 23, 27, 29, 30, 43, 45, 55, 59, 60, 62, 63, 64, 65, 71, 72, 84, 86, 93, 98, 102, 104, 105, 116, 119, 120, 126, 131, 135, 136, 137, 148, 153, 155, 158, 160, 161, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 196, 197, 200, 202, 203, 205, 209, 210, 212, 213, 219, 222, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 244, 245, 249, 250, 254, 269, 272, 275, 278, 279, 280, 284, 285, 286, 287, 288, 289, 290, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 317, 319, 322, 329, 330, 334, 335, 336, 344, 350, 351, 352, 353, 358, 365, 371, 372, 373, 377, 379, 389, 392, 396, 411, 419, 420, 426, 428, 430, 434, 437, 438, 441, 444, 445, 446, 447, 448, 450, 454, 455, 456], "thick": [29, 209, 210], "thick_fun": 210, "thicken": 210, "thickenf": [6, 395], "thieri": 439, "thing": [18, 432, 438, 444], "think": [18, 444], "third": [108, 168, 171, 173, 174, 176, 179, 221, 356, 387, 388, 389], "thoroughli": 448, "those": [43, 83, 393, 401, 432, 438, 448, 450, 454, 455], "though": [6, 278, 285, 430], "thousand": 454, "three": [5, 100, 120, 148, 154, 167, 168, 177, 178, 179, 180, 181, 184, 186, 187, 188, 189, 192, 193, 198, 199, 204, 208, 210, 212, 214, 215, 216, 217, 218, 228, 234, 239, 240, 241, 252, 257, 267, 273, 274, 285, 295, 296, 297, 300, 303, 304, 342, 363, 376, 404, 429, 433, 434, 438, 439, 440, 447, 448, 450, 454, 455], "threhsold": 60, "thresh": 303, "threshold": [28, 73, 98, 99, 100, 101, 102, 103, 104, 105, 118, 177, 178, 179, 180, 181, 184, 185, 186, 187, 300, 303, 304, 335, 395, 430, 432, 440, 446, 447], "threshold_dir": [178, 180], "threshold_direct": [28, 73, 118, 177, 178, 180, 181, 184, 186, 187, 219, 430, 438], "thresholed": 303, "thrich": 439, "through": [27, 93, 98, 100, 101, 103, 184, 186, 187, 322, 392, 429, 430, 436, 446, 450], "throughout": [120, 434, 441, 452], "thu": [108, 112, 116, 122, 126, 130, 135, 140, 147, 149, 153, 179, 185, 447], "thurrnerwuthrich98": [399, 439], "tiff": [73, 118, 183, 433, 435], "tifffil": [433, 435], "tight_layout": 430, "tim": [1, 441], "time": [2, 5, 6, 7, 221, 224, 225, 227, 259, 260, 285, 286, 288, 438, 448, 455], "times3": 455, "timothi": 439, "tissu": [439, 441], "titl": [219, 425], "to_pyvista": 95, "todo": [132, 393, 411, 415], "togeth": [74, 401, 430], "toj": 7, "tol": [68, 74, 96, 174, 176, 302, 393, 394, 404, 408, 411], "toler": [74, 96, 97, 98, 104, 105, 221, 222, 224, 225, 262, 269, 273, 274, 276, 278, 282, 283, 284, 287, 291, 292, 293, 294, 393, 394, 404, 408, 411], "toma": 439, "too": [158, 322], "tool": [13, 14, 15, 19, 20, 92, 296, 297, 298, 299, 432, 439, 441], "toolbox": 441, "top": [6, 9, 442], "topolog": [18, 38, 42, 439, 444, 446], "topologi": [8, 9, 10, 442, 450, 452], "toru": [120, 219, 432, 434, 437], "total": [2, 4, 5, 6, 7, 9, 11, 29, 240, 241, 242, 322, 442], "touch": 448, "tow": 303, "toward": [179, 185, 447, 448], "tpm": [8, 9, 10, 190, 196, 200, 202, 205, 442], "tpmss": 6, "trace": 430, "trade": 450, "transact": 439, "transfer": [22, 104, 105], "transform": [120, 220, 300, 301, 302, 303, 305, 306, 311, 312, 323, 324, 330, 331, 332, 333, 439], "transform_arg": [300, 303, 305, 306], "transform_imag": 303, "transform_point": [302, 305, 306], "transit": [336, 358], "translat": [303, 305, 306, 313, 314, 323, 324, 333], "translation2d": 303, "transpar": 426, "travers": [448, 450, 454], "treat": [100, 103, 132, 133, 179, 182, 185, 448, 456], "tree": [139, 272, 275, 281, 284, 287, 293, 404, 408, 411, 430, 454], "tree1": [317, 329], "tree2": 329, "treenod": [338, 357, 360, 385], "tri": [129, 132, 133, 138, 184, 230, 231, 232, 233, 235, 238, 239, 240, 241, 264, 268, 273, 274, 276, 286, 288, 341, 353, 358, 376, 389, 392, 419, 430, 431, 440], "tri1": [296, 297, 298, 299], "tri2": [296, 297, 298, 299], "tri6": 431, "triangl": [2, 16, 28, 72, 93, 101, 102, 103, 104, 105, 138, 155, 160, 161, 170, 173, 176, 232, 240, 241, 260, 261, 264, 267, 268, 273, 274, 276, 284, 285, 286, 287, 288, 295, 296, 297, 298, 299, 341, 353, 372, 376, 377, 388, 389, 390, 392, 393, 420, 431, 435, 439, 441, 446, 448, 454], "triangleboxintersect": 264, "triangluar": 411, "triangul": [1, 155, 160, 161, 164, 167, 168, 170, 171, 173, 174, 175, 178, 184, 432, 439, 446], "triangular": [29, 72, 96, 97, 105, 125, 129, 132, 133, 138, 142, 145, 146, 147, 152, 164, 219, 230, 231, 232, 233, 235, 238, 239, 240, 241, 251, 252, 260, 261, 269, 272, 275, 284, 287, 293, 377, 389, 390, 408, 410, 411, 420, 429, 441], "triaxial": [303, 305, 306], "triconn": [129, 138], "tricoord": [138, 267, 285, 295], "trimesh": 441, "trimetr": [426, 430, 438], "trinodeconn": 105, "trinodecoord": 105, "trinorm": [264, 295, 341, 353], "tripl": 455, "tripli": [6, 190, 196, 200, 202, 205, 432], "tritanomali": 426, "trough": 162, "tru": 182, "true": [2, 17, 22, 28, 29, 30, 44, 60, 63, 71, 74, 79, 88, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 115, 120, 123, 128, 131, 132, 133, 135, 138, 143, 146, 150, 155, 158, 170, 172, 173, 179, 182, 183, 184, 185, 186, 190, 196, 200, 202, 205, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 282, 283, 284, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 322, 337, 342, 343, 344, 359, 363, 364, 365, 376, 377, 379, 394, 401, 406, 407, 408, 411, 425, 426, 430, 443], "truli": 6, "trumbor": [285, 286, 288, 439, 455], "try": 432, "tube": [212, 241], "tupl": [60, 79, 98, 100, 103, 118, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 223, 229, 234, 263, 265, 279, 289, 290, 303, 304, 322, 335, 426, 433], "turn": [219, 322, 432], "twin": 448, "twist": 233, "twist_cent": 233, "two": [2, 60, 79, 93, 96, 97, 99, 102, 103, 104, 105, 110, 111, 167, 171, 173, 191, 192, 193, 197, 198, 199, 213, 214, 215, 228, 232, 236, 262, 263, 265, 279, 282, 283, 289, 290, 291, 292, 294, 296, 297, 298, 299, 302, 303, 304, 305, 306, 317, 318, 319, 320, 329, 392, 394, 395, 401, 406, 429, 430, 433, 447, 448, 450, 454], "twt": 439, "type": [17, 18, 22, 23, 27, 28, 30, 37, 44, 62, 63, 64, 69, 71, 72, 73, 75, 76, 78, 81, 84, 85, 86, 87, 96, 98, 101, 102, 103, 104, 105, 106, 110, 113, 114, 119, 120, 121, 124, 125, 127, 129, 131, 132, 133, 134, 137, 141, 142, 145, 148, 151, 152, 156, 157, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 285, 288, 289, 290, 295, 296, 297, 298, 304, 307, 308, 309, 310, 311, 312, 313, 314, 317, 318, 319, 320, 323, 324, 325, 326, 329, 330, 331, 332, 333, 334, 335, 339, 340, 341, 342, 343, 346, 347, 348, 349, 355, 356, 361, 362, 363, 364, 367, 368, 369, 370, 375, 376, 377, 381, 382, 384, 385, 386, 390, 391, 392, 393, 396, 398, 399, 403, 404, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 426, 427, 429, 430, 433, 436, 438, 441, 443, 444, 454], "typic": [2, 116, 126, 135, 153], "u": [318, 320, 406, 407, 430, 453, 455], "uedg": 109, "ufac": 111, "uint8": [17, 443], "ultim": 455, "un": 450, "unalt": [30, 44], "unambigu": [72, 420, 450], "unattach": 38, "unchang": [108, 112, 116, 122, 126, 130, 140, 147, 149, 153, 394, 398, 433, 447], "unclos": [132, 137, 139, 430], "unconstrain": 322, "underbrac": 447, "undergon": 136, "understand": [441, 445], "unexpect": 139, "unidirect": 455, "uniform": [2, 22, 93, 104, 186, 228, 303, 305, 306, 396, 421, 440], "union": [12, 96, 104, 214, 430, 434, 441], "union_fun": 214, "union_sym": 215, "union_v": 213, "unionf": [98, 213, 430], "unionv": 213, "uniqu": [38, 109, 111, 392, 407, 419, 446, 448], "unit": [2, 120, 155, 158, 160, 161, 179, 269, 279, 280, 285, 286, 288, 289, 290, 399, 434, 447, 453, 456], "unitless": 447, "univers": 441, "unknown": [338, 350, 360, 371, 378, 447], "unless": [301, 377, 418], "unlik": 329, "unload": 223, "unnecessari": 438, "unnot": [164, 165, 166, 167], "unpack": [177, 178, 180, 181, 184, 186, 187, 229, 232, 233, 234, 235, 236, 238, 239, 240, 241], "unsign": 201, "unstructur": 85, "unstructuredgrid": 85, "until": [221, 222, 224, 225, 334, 355, 356, 377, 454, 456], "unus": 219, "uobyqa": 322, "up": [22, 72, 101, 420, 426, 431, 432, 433, 440], "updat": [62, 63, 64, 71, 223, 392, 394, 450, 453], "upon": 441, "upper": [60, 79, 188, 234, 235, 238, 264, 265, 270, 271, 279, 280, 289, 290, 295, 455], "url": 439, "us": [1, 6, 7, 16, 18, 20, 22, 27, 28, 29, 38, 42, 51, 60, 62, 63, 64, 73, 79, 93, 98, 100, 101, 102, 103, 104, 105, 113, 114, 116, 119, 120, 121, 124, 125, 126, 127, 132, 133, 135, 136, 139, 141, 142, 145, 151, 152, 153, 155, 158, 164, 165, 166, 167, 170, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 205, 213, 214, 215, 219, 221, 222, 224, 225, 227, 228, 233, 236, 251, 254, 255, 258, 268, 269, 272, 275, 282, 284, 285, 286, 287, 288, 296, 297, 298, 299, 300, 303, 305, 306, 322, 330, 335, 336, 347, 358, 368, 381, 392, 394, 395, 399, 403, 404, 406, 407, 408, 411, 412, 419, 421, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 444, 445, 446, 447, 448, 450, 452, 454, 455, 456], "usag": 450, "user": [432, 435, 438, 441, 445], "util": [2, 88, 104, 105, 116, 119, 135, 136, 153, 155, 158, 160, 161, 252, 288, 300, 301, 430, 431, 433, 435, 436, 438, 450], "uv_1": 455, "v": [2, 38, 98, 181, 184, 186, 187, 253, 257, 258, 259, 318, 320, 335, 409, 410, 448, 455], "v_0": [259, 260, 455], "v_1": [259, 260, 455], "v_2": [259, 455], "v_3": [259, 260], "val": [148, 194], "valid": [269, 272, 275, 393, 441, 448, 449, 450], "valu": [2, 20, 28, 29, 60, 79, 96, 99, 100, 101, 102, 103, 104, 105, 120, 148, 156, 157, 158, 159, 163, 164, 165, 166, 167, 177, 178, 180, 181, 183, 184, 186, 187, 191, 192, 193, 194, 195, 197, 198, 199, 201, 203, 209, 210, 213, 214, 215, 223, 268, 269, 272, 275, 285, 286, 288, 296, 297, 298, 299, 300, 303, 304, 322, 335, 393, 394, 398, 403, 404, 408, 411, 412, 413, 426, 430, 438, 446, 447, 450, 455], "van": [156, 162, 163, 439], "vari": [6, 234, 235, 238, 429], "variabl": [192, 193, 198, 199, 210, 214, 215, 403, 428, 434, 455], "variant": [303, 453], "varieti": [88, 93, 429, 433, 436, 440, 441, 446], "variou": [94, 436, 438, 441, 450, 454], "vartzioti": 439, "vartziotis2009": 247, "vast": 430, "vdot": 447, "vector": [1, 5, 22, 27, 36, 51, 52, 98, 136, 155, 160, 161, 179, 185, 189, 190, 192, 196, 198, 200, 202, 204, 205, 210, 214, 228, 238, 239, 250, 252, 254, 264, 265, 267, 268, 269, 272, 275, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 295, 298, 299, 341, 353, 390, 399, 404, 432, 439, 447, 450, 453, 455], "vector_func": [190, 196, 200, 202, 205], "vectoriz": 434, "verbos": [2, 22, 71, 182, 183, 219, 226, 227, 228, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 303, 305, 306, 408, 411], "veri": [62, 64, 441, 455], "verifi": [86, 411, 441, 450], "versa": 454, "version": [2, 18, 88, 104, 155, 264, 288, 305, 322, 399, 437, 441, 444, 450], "vertebr": 441, "vertex": [38, 257, 348, 369, 439, 448, 450, 453, 455], "vertexvalu": [100, 103], "vertic": [38, 98, 100, 103, 112, 122, 130, 140, 144, 147, 149, 178, 179, 180, 184, 185, 186, 229, 259, 260, 264, 267, 268, 273, 274, 276, 285, 286, 288, 295, 296, 297, 298, 299, 335, 336, 348, 358, 369, 376, 387, 388, 389, 446, 448, 454, 455], "via": [2, 175, 179], "vice": 454, "victoria": 439, "vidensk": 439, "view": [18, 79, 114, 125, 142, 152, 178, 180, 181, 219, 390, 430, 438, 444, 447], "visibl": [399, 448], "vision": [426, 439], "vispi": [426, 427, 435], "visual": [79, 87, 181, 219, 221, 430, 435, 439], "vivian": 441, "vo": 440, "vol": [22, 23, 28, 72, 86, 98, 101, 102, 103, 104, 105, 119, 120, 132, 133, 165, 166, 167, 229, 232, 234, 240, 241, 242, 259, 392, 419, 420, 430, 431], "volum": [5, 17, 22, 23, 36, 38, 42, 71, 72, 77, 86, 96, 97, 98, 101, 102, 103, 104, 105, 116, 120, 134, 135, 137, 153, 173, 179, 185, 225, 233, 239, 242, 247, 251, 257, 258, 259, 300, 301, 392, 400, 409, 410, 420, 431, 434, 439, 441, 443, 446, 448, 450, 455], "volumetr": [14, 28, 229, 232, 234, 240, 241, 430, 440, 453], "von": 439, "voronoi": 439, "voxel": [73, 100, 103, 118, 120, 139, 148, 158, 178, 179, 180, 181, 182, 187, 194, 195, 201, 277, 300, 303, 337, 384, 396, 397, 421, 438], "voxel2octre": 454, "voxelconn": [118, 139, 148, 194, 195, 277, 337, 384, 396, 421], "voxelcoord": [118, 139, 148, 194, 195, 277, 337, 384, 396, 421], "voxeldata": 118, "voxelmesh": [432, 433, 434], "voxelnodeconn": [99, 438], "voxelnodecoord": [99, 438], "voxels": [73, 118, 120, 158, 178, 180, 181], "vsn91": [6, 439], "vtk": [81, 441], "vtu": [81, 436], "vv_2": 455, "vws09": [220, 439], "w": [6, 7, 98, 184, 186, 187, 188, 189, 190, 196, 200, 202, 205, 208, 212, 221, 229, 230, 232, 233, 234, 235, 236, 240, 241, 395, 430, 438, 439, 447], "wa": [1, 219, 427, 438, 441, 448], "wai": [126, 153, 155, 160, 161, 428, 430, 434, 448, 455], "walk": 448, "wang": 439, "want": [18, 444], "warn": 86, "warren": 439, "wat81": [168, 169, 439, 448], "watertight": 446, "watson": [168, 169, 170, 174, 176, 439], "wbms05": [279, 280, 289, 290, 439, 455], "wdg": 431, "wdg15": 431, "we": [18, 444, 447], "web": [18, 444], "websit": [18, 336, 444], "wedg": [28, 72, 101, 104, 126, 132, 133, 149, 150, 151, 152, 153, 233, 239, 244, 251, 420, 431, 446], "wedgeconn": 153, "wedgecoord": 153, "weight": [6, 399], "weights1": 6, "weights2": 6, "weights3": 6, "weights4": 6, "weingarten": 447, "welcom": [18, 444], "well": [16, 136, 155, 184, 186, 251, 278, 300, 301, 435, 438, 441, 445, 452], "were": [219, 228], "what": [135, 234, 235, 238, 330, 393, 415, 430, 446], "when": [22, 72, 114, 125, 142, 152, 183, 216, 217, 218, 219, 221, 222, 224, 225, 273, 274, 276, 282, 285, 286, 288, 330, 390, 394, 420, 429, 430, 437, 445, 447, 448, 454], "where": [2, 20, 22, 108, 112, 122, 130, 140, 147, 149, 184, 186, 187, 222, 228, 234, 235, 238, 257, 259, 260, 282, 283, 291, 292, 293, 296, 297, 298, 299, 300, 301, 303, 323, 324, 325, 326, 332, 333, 335, 389, 405, 429, 434, 437, 440, 446, 447, 448, 450, 452, 455, 456], "whether": [60, 74, 98, 100, 101, 102, 103, 104, 105, 158, 224, 242, 254, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 291, 292, 335, 342, 343, 347, 363, 364, 368, 376, 381, 392, 395, 426, 446, 447, 448, 450, 454, 455], "which": [1, 2, 5, 16, 18, 60, 104, 106, 116, 135, 136, 139, 153, 154, 155, 170, 182, 184, 186, 187, 201, 219, 223, 227, 228, 232, 239, 240, 253, 288, 303, 304, 322, 330, 337, 339, 340, 341, 359, 361, 362, 385, 404, 407, 426, 429, 430, 433, 436, 440, 441, 444, 445, 446, 447, 448, 452, 453, 454], "whichev": [72, 420], "while": [29, 221, 222, 224, 225, 429, 430, 434, 440, 441, 445, 447, 448, 450, 453, 454, 455], "white": [2, 6], "who": [30, 393], "whose": [30, 171, 216, 217, 218, 223, 448], "why": 445, "wide": 441, "width": [2, 426], "wikipedia": 434, "wil": [219, 303], "wild": 439, "wilei": 439, "william": [279, 280, 289, 290, 439, 455], "windeatt": 439, "window": 426, "wipper": 439, "wirefram": [426, 440], "within": [1, 29, 30, 43, 93, 106, 132, 133, 136, 184, 186, 194, 195, 219, 228, 269, 285, 286, 288, 322, 334, 335, 336, 339, 340, 341, 342, 343, 350, 358, 361, 362, 363, 364, 371, 377, 404, 409, 410, 440, 448, 454, 455], "without": [18, 179, 185, 222, 394, 435, 437, 438, 444, 447, 448], "won": [69, 79, 404, 408, 411, 415, 419, 438, 445], "word": 227, "work": [2, 95, 139, 155, 278, 300, 301, 406, 429, 441, 445, 453, 455], "worst": [90, 244, 245, 249, 250, 251, 255, 256, 258, 261, 453], "would": [44, 447], "wrap": [158, 170, 172, 330, 396, 441], "wrapper": [101, 173, 175, 319, 441], "write": [22, 433, 436], "written": [22, 81, 183, 433, 441, 447, 455], "www": [279, 280, 289, 290, 311, 312, 437, 439], "x": [2, 5, 6, 20, 44, 66, 98, 100, 104, 120, 148, 154, 178, 179, 180, 181, 182, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 202, 204, 205, 208, 210, 212, 214, 215, 216, 217, 218, 222, 228, 230, 231, 232, 233, 236, 238, 239, 241, 259, 260, 264, 265, 270, 271, 279, 280, 289, 290, 295, 300, 301, 303, 308, 309, 310, 311, 313, 314, 315, 316, 322, 323, 324, 325, 326, 327, 328, 332, 333, 335, 346, 367, 375, 402, 426, 433, 434, 439, 440, 447, 448, 453, 455, 456], "x0": [134, 216, 273, 274, 276, 322, 421], "x1": [134, 188, 273, 274, 276, 394, 396, 397, 409, 410, 411], "x2": [188, 273, 274, 276, 411], "x3": [273, 411], "x4": [408, 411], "x_": 455, "x_0": 447, "x_1": 447, "x_i": [447, 456], "x_iy_i": 447, "x_n": 447, "xifeng": 439, "xin": 60, "xlim": [264, 265, 270, 271, 279, 280, 289, 290, 295], "xmax": [30, 98, 184, 186, 187, 234, 235, 238, 263, 264, 270, 271, 295, 335, 339, 346, 351, 367, 455], "xmin": [30, 98, 184, 186, 187, 234, 235, 238, 263, 264, 270, 271, 295, 335, 339, 346, 351, 367, 455], "xnew": 223, "xout": 60, "xy": [18, 44, 218, 219, 269, 312, 402, 426, 444], "xyz": 120, "xz": [18, 44, 217, 312, 402, 426, 444], "y": [5, 6, 20, 44, 66, 98, 100, 104, 148, 154, 179, 182, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 202, 204, 205, 208, 210, 212, 214, 215, 216, 217, 218, 222, 228, 230, 231, 232, 233, 236, 238, 239, 241, 259, 260, 264, 265, 270, 271, 279, 280, 289, 290, 295, 300, 301, 303, 308, 309, 310, 311, 313, 314, 323, 324, 325, 332, 333, 335, 346, 367, 375, 402, 426, 433, 434, 439, 440, 447, 448, 455], "y0": [134, 217, 273, 274, 276, 421], "y1": [134, 188, 273, 274, 276, 394, 396, 397, 409, 410, 411], "y2": [188, 273, 274, 276, 411], "y3": [273, 411], "y_": 455, "y_0": 447, "y_1": 447, "y_i": [447, 456], "y_n": 447, "yet": [46, 48, 335], "yixin": 439, "ylim": [264, 265, 270, 271, 279, 280, 289, 290, 295], "ymax": [30, 98, 184, 186, 187, 234, 235, 238, 263, 264, 270, 271, 295, 335, 339, 346, 351, 367, 455], "ymin": [30, 98, 184, 186, 187, 234, 235, 238, 263, 264, 270, 271, 295, 335, 339, 346, 351, 367, 455], "yongji": 439, "you": [1, 18, 93, 438, 444], "your": [18, 444], "yutaka": 439, "yx": [148, 312], "yz": [44, 216, 219, 312, 402], "z": [5, 6, 20, 44, 66, 98, 100, 103, 104, 120, 148, 154, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 202, 204, 205, 208, 210, 212, 214, 215, 216, 217, 218, 222, 228, 230, 231, 232, 233, 235, 236, 238, 239, 240, 241, 259, 260, 264, 265, 270, 279, 280, 289, 290, 295, 300, 301, 303, 308, 310, 314, 323, 324, 325, 332, 335, 346, 348, 375, 402, 426, 433, 434, 439, 447, 448, 455], "z0": [134, 218, 273, 274, 276, 421], "z1": [134, 188, 273, 274, 276, 394, 396, 397, 409, 410, 411], "z2": [188, 273, 274, 276, 411], "z3": [273, 411], "z_": 455, "z_0": 447, "z_1": 447, "z_i": [447, 456], "z_n": 447, "zbs03": [335, 439, 454], "zeitschrift": 439, "zero": [6, 20, 120, 219, 222, 233, 395, 455], "zhang": [410, 439], "zhou": 439, "zip": [2, 5, 6, 7], "ziti": 7, "zlim": [264, 265, 270, 279, 280, 289, 290, 295], "zmax": [30, 98, 184, 186, 187, 234, 238, 263, 264, 270, 295, 335, 339, 346, 351, 455], "zmin": [30, 98, 184, 186, 187, 234, 238, 263, 264, 270, 295, 335, 339, 346, 351, 455], "zoom": [73, 118, 177, 178, 180, 181, 182, 300], "zorin": 439, "zx": 312, "zy": 312, "zyx": 120, "\u00e7": 439, "\u00e9": 439, "\u00f6": 439, "\u00fc": 439}, "titles": ["API Reference", "Development", "Curvature Analysis", "Mesh Analysis Examples", "Computation times", "Implicit Heart", "Mixed-Topology TPMS", "Pasta Shapes", "Mesh Generation Examples", "Computation times", "Examples", "Computation times", "mymesh.booleans", "mymesh.contour", "mymesh.converter", "mymesh.curvature", "mymesh.delaunay", "mymesh.demo_image", "mymesh.demo_mesh", "mymesh.image", "mymesh.implicit", "mymesh.improvement", "mymesh.mesh", "mymesh.mesh.mesh.Boundary", "mymesh.mesh.mesh.BoundaryConn", "mymesh.mesh.mesh.BoundaryNodes", "mymesh.mesh.mesh.Centroids", "mymesh.mesh.mesh.Clip", "mymesh.mesh.mesh.Contour", "mymesh.mesh.mesh.CreateBoundaryLayer", "mymesh.mesh.mesh.Crop", "mymesh.mesh.mesh.EdgeConn", "mymesh.mesh.mesh.EdgeElemConn", "mymesh.mesh.mesh.Edges", "mymesh.mesh.mesh.ElemConn", "mymesh.mesh.mesh.ElemNeighbors", "mymesh.mesh.mesh.ElemNormals", "mymesh.mesh.mesh.ElemType", "mymesh.mesh.mesh.EulerCharacteristic", "mymesh.mesh.mesh.FaceConn", "mymesh.mesh.mesh.FaceElemConn", "mymesh.mesh.mesh.Faces", "mymesh.mesh.mesh.Genus", "mymesh.mesh.mesh.MeshNodes", "mymesh.mesh.mesh.Mirror", "mymesh.mesh.mesh.ND", "mymesh.mesh.mesh.NEdge", "mymesh.mesh.mesh.NElem", "mymesh.mesh.mesh.NFace", "mymesh.mesh.mesh.NNode", "mymesh.mesh.mesh.NodeNeighbors", "mymesh.mesh.mesh.NodeNormals", "mymesh.mesh.mesh.NodeNormalsMethod", "mymesh.mesh.mesh.RenumberFacesBySet", "mymesh.mesh.mesh.RenumberNodesBySet", "mymesh.mesh.mesh.SurfConn", "mymesh.mesh.mesh.SurfElemConn", "mymesh.mesh.mesh.SurfNodeNeighbors", "mymesh.mesh.mesh.SurfNodes", "mymesh.mesh.mesh.Surface", "mymesh.mesh.mesh.Threshold", "mymesh.mesh.mesh.aabb", "mymesh.mesh.mesh.addEdges", "mymesh.mesh.mesh.addElems", "mymesh.mesh.mesh.addFaces", "mymesh.mesh.mesh.addNodes", "mymesh.mesh.mesh.bounds", "mymesh.mesh.mesh.cells", "mymesh.mesh.mesh.cleanup", "mymesh.mesh.mesh.copy", "mymesh.mesh.mesh.getCurvature", "mymesh.mesh.mesh.getQuality", "mymesh.mesh.mesh.identify_type", "mymesh.mesh.mesh.imread", "mymesh.mesh.mesh.merge", "mymesh.mesh.mesh.mesh2dmesh", "mymesh.mesh.mesh.meshio2mymesh", "mymesh.mesh.mesh.mvbb", "mymesh.mesh.mesh.mymesh2meshio", "mymesh.mesh.mesh.plot", "mymesh.mesh.mesh.points", "mymesh.mesh.mesh.read", "mymesh.mesh.mesh.removeElems", "mymesh.mesh.mesh.reset", "mymesh.mesh.mesh.to_meshio", "mymesh.mesh.mesh.to_pyvista", "mymesh.mesh.mesh.validate", "mymesh.mesh.mesh.view", "mymesh.mesh.mesh.write", "mymesh.primitives", "mymesh.quality", "mymesh.rays", "mymesh.register", "mymesh.tree", "mymesh.utils", "mymesh.visualize", "mymesh.booleans.MeshBooleans", "mymesh.booleans.SplitMesh", "mymesh.contour.Adaptive", "mymesh.contour.MarchingCubes", "mymesh.contour.MarchingCubesImage", "mymesh.contour.MarchingElements", "mymesh.contour.MarchingSquares", "mymesh.contour.MarchingSquaresImage", "mymesh.contour.MarchingTetrahedra", "mymesh.contour.MarchingTriangles", "mymesh.converter.EdgesByElement", "mymesh.converter.edge2quadratic", "mymesh.converter.edge32linear", "mymesh.converter.edges2unique", "mymesh.converter.faces2surface", "mymesh.converter.faces2unique", "mymesh.converter.hex202linear", "mymesh.converter.hex2edges", "mymesh.converter.hex2faces", "mymesh.converter.hex2quadratic", "mymesh.converter.hex2tet", "mymesh.converter.hexsubdivide", "mymesh.converter.im2voxel", "mymesh.converter.linear2quadratic", "mymesh.converter.mesh2im", "mymesh.converter.polygon2edges", "mymesh.converter.pyr132linear", "mymesh.converter.pyr2quadratic", "mymesh.converter.pyramid2edges", "mymesh.converter.pyramid2faces", "mymesh.converter.pyramid2tet", "mymesh.converter.quad2edges", "mymesh.converter.quad2quadratic", "mymesh.converter.quad2tri", "mymesh.converter.quad82linear", "mymesh.converter.quadratic2linear", "mymesh.converter.solid2edges", "mymesh.converter.solid2faces", "mymesh.converter.solid2surface", "mymesh.converter.solid2tets", "mymesh.converter.surf2dual", "mymesh.converter.surf2edges", "mymesh.converter.surf2tris", "mymesh.converter.surf2voxel", "mymesh.converter.tet102linear", "mymesh.converter.tet2edges", "mymesh.converter.tet2faces", "mymesh.converter.tet2quadratic", "mymesh.converter.tetsubdivide", "mymesh.converter.tri2edges", "mymesh.converter.tri2quadratic", "mymesh.converter.tri62linear", "mymesh.converter.voxel2im", "mymesh.converter.wdg152linear", "mymesh.converter.wdg2quadratic", "mymesh.converter.wedge2edges", "mymesh.converter.wedge2faces", "mymesh.converter.wedge2tet", "mymesh.curvature.AnalyticalCurvature", "mymesh.curvature.CubicFit", "mymesh.curvature.Curvedness", "mymesh.curvature.GaussianCurvature", "mymesh.curvature.ImageCurvature", "mymesh.curvature.MeanCurvature", "mymesh.curvature.NormCurve", "mymesh.curvature.QuadFit", "mymesh.curvature.ShapeCategory", "mymesh.curvature.ShapeIndex", "mymesh.delaunay.Alpha2d", "mymesh.delaunay.Alpha3d", "mymesh.delaunay.AlphaPeel3d", "mymesh.delaunay.AlphaShape", "mymesh.delaunay.BowyerWatson2d", "mymesh.delaunay.BowyerWatson3d", "mymesh.delaunay.ConvexHull", "mymesh.delaunay.FanTriangulation", "mymesh.delaunay.GiftWrapping", "mymesh.delaunay.SciPy", "mymesh.delaunay.Tetrahedralize", "mymesh.delaunay.Triangle", "mymesh.delaunay.Triangulate", "mymesh.image.PixelMesh", "mymesh.image.SurfaceMesh", "mymesh.image.SurfaceNodeOptimization", "mymesh.image.TetMesh", "mymesh.image.VoxelMesh", "mymesh.image.read", "mymesh.image.write", "mymesh.implicit.SurfaceMesh", "mymesh.implicit.SurfaceNodeOptimization", "mymesh.implicit.TetMesh", "mymesh.implicit.VoxelMesh", "mymesh.implicit.box", "mymesh.implicit.cylinder", "mymesh.implicit.diamond", "mymesh.implicit.diff", "mymesh.implicit.difff", "mymesh.implicit.diffs", "mymesh.implicit.grid2fun", "mymesh.implicit.grid2grad", "mymesh.implicit.gyroid", "mymesh.implicit.intersection", "mymesh.implicit.intersectionf", "mymesh.implicit.intersections", "mymesh.implicit.lidinoid", "mymesh.implicit.mesh2udf", "mymesh.implicit.neovius", "mymesh.implicit.offset", "mymesh.implicit.plane", "mymesh.implicit.primitive", "mymesh.implicit.rMax", "mymesh.implicit.rMin", "mymesh.implicit.sphere", "mymesh.implicit.thicken", "mymesh.implicit.thickenf", "mymesh.implicit.thickens", "mymesh.implicit.torus", "mymesh.implicit.union", "mymesh.implicit.unionf", "mymesh.implicit.unions", "mymesh.implicit.xplane", "mymesh.implicit.yplane", "mymesh.implicit.zplane", "mymesh.improvement.Contract", "mymesh.improvement.GeoTransformSmoothing", "mymesh.improvement.LocalLaplacianSmoothing", "mymesh.improvement.NodeSpringSmoothing", "mymesh.improvement.SegmentSpringSmoothing", "mymesh.improvement.SmartLaplacianSmoothing", "mymesh.improvement.TangentialLaplacianSmoothing", "mymesh.improvement.TetFlip", "mymesh.improvement.TetImprove", "mymesh.improvement.TetSplit", "mymesh.primitives.Box", "mymesh.primitives.Circle", "mymesh.primitives.CirclePt", "mymesh.primitives.Cylinder", "mymesh.primitives.Extrude", "mymesh.primitives.Grid", "mymesh.primitives.Grid2D", "mymesh.primitives.Line", "mymesh.primitives.Multiline", "mymesh.primitives.Plane", "mymesh.primitives.Revolve", "mymesh.primitives.Sphere", "mymesh.primitives.Torus", "mymesh.quality.Area", "mymesh.quality.AspectRatio", "mymesh.quality.InverseOrthogonalQuality", "mymesh.quality.InverseOrthogonality", "mymesh.quality.MaxDihedral", "mymesh.quality.MeanRatio", "mymesh.quality.MinDihedral", "mymesh.quality.OrthogonalQuality", "mymesh.quality.Orthogonality", "mymesh.quality.Skewness", "mymesh.quality.SurfDihedralAngles", "mymesh.quality.Volume", "mymesh.quality.dihedralAngles", "mymesh.quality.equiangular_skewness", "mymesh.quality.quad_skewness", "mymesh.quality.tet_circumradius", "mymesh.quality.tet_vol_skewness", "mymesh.quality.tet_volume", "mymesh.quality.tri_area", "mymesh.quality.tri_skewness", "mymesh.rays.BoundaryBoundaryIntersection", "mymesh.rays.BoxBoxIntersection", "mymesh.rays.BoxTrianglesIntersection", "mymesh.rays.PlaneBoxIntersection", "mymesh.rays.PlaneSurfIntersection", "mymesh.rays.PlaneTriangleIntersection", "mymesh.rays.PlaneTrianglesIntersection", "mymesh.rays.PointInBoundary", "mymesh.rays.PointInBox", "mymesh.rays.PointInBox2D", "mymesh.rays.PointInSurf", "mymesh.rays.PointInTet", "mymesh.rays.PointInTri", "mymesh.rays.PointsInSurf", "mymesh.rays.PointsInTris", "mymesh.rays.PointsInVoxel", "mymesh.rays.RayBoundaryIntersection", "mymesh.rays.RayBoxIntersection", "mymesh.rays.RayBoxesIntersection", "mymesh.rays.RayOctreeIntersection", "mymesh.rays.RaySegmentIntersection", "mymesh.rays.RaySegmentsIntersection", "mymesh.rays.RaySurfIntersection", "mymesh.rays.RayTriangleIntersection", "mymesh.rays.RayTrianglesIntersection", "mymesh.rays.RaysSurfIntersection", "mymesh.rays.RaysTrianglesIntersection", "mymesh.rays.SegmentBox2DIntersection", "mymesh.rays.SegmentBoxIntersection", "mymesh.rays.SegmentSegmentIntersection", "mymesh.rays.SegmentsSegmentsIntersection", "mymesh.rays.SurfSelfIntersection", "mymesh.rays.SurfSurfIntersection", "mymesh.rays.TriangleBoxIntersection", "mymesh.rays.TriangleTriangleIntersection", "mymesh.rays.TriangleTriangleIntersectionPt", "mymesh.rays.TrianglesTrianglesIntersection", "mymesh.rays.TrianglesTrianglesIntersectionPts", "mymesh.register.AxisAlignImage", "mymesh.register.AxisAlignPoints", "mymesh.register.ICP", "mymesh.register.Image2Image", "mymesh.register.ImageOverlay", "mymesh.register.Mesh2Mesh", "mymesh.register.Point2Point", "mymesh.register.R2d", "mymesh.register.R3d", "mymesh.register.S2d", "mymesh.register.S3d", "mymesh.register.Sh2d", "mymesh.register.Sh3d", "mymesh.register.T2d", "mymesh.register.T3d", "mymesh.register.affine", "mymesh.register.affine2d", "mymesh.register.closest_point_MSE", "mymesh.register.dice", "mymesh.register.hausdorff", "mymesh.register.jaccard", "mymesh.register.mutual_information", "mymesh.register.optimize", "mymesh.register.rigid", "mymesh.register.rigid2d", "mymesh.register.rotation", "mymesh.register.rotation2d", "mymesh.register.similarity", "mymesh.register.similarity2d", "mymesh.register.symmetric_closest_point_MSE", "mymesh.register.transform_image", "mymesh.register.transform_points", "mymesh.register.translation", "mymesh.register.translation2d", "mymesh.tree.Edges2Quadtree", "mymesh.tree.Function2Octree", "mymesh.tree.Octree2Dual", "mymesh.tree.Octree2Voxel", "mymesh.tree.OctreeNode", "mymesh.tree.OctreeNode.ContainsBoxes", "mymesh.tree.OctreeNode.ContainsPts", "mymesh.tree.OctreeNode.ContainsTris", "mymesh.tree.OctreeNode.PointInNode", "mymesh.tree.OctreeNode.PointsInNode", "mymesh.tree.OctreeNode.clearData", "mymesh.tree.OctreeNode.getLevel", "mymesh.tree.OctreeNode.getLimits", "mymesh.tree.OctreeNode.getMaxDepth", "mymesh.tree.OctreeNode.getVertices", "mymesh.tree.OctreeNode.hasChildren", "mymesh.tree.OctreeNode.makeChildren", "mymesh.tree.OctreeNode.makeChildrenBoxes", "mymesh.tree.OctreeNode.makeChildrenPts", "mymesh.tree.OctreeNode.makeChildrenTris", "mymesh.tree.OctreeNode.prune", "mymesh.tree.Points2Octree", "mymesh.tree.Points2Quadtree", "mymesh.tree.Print", "mymesh.tree.Quadtree2Dual", "mymesh.tree.Quadtree2Pixel", "mymesh.tree.QuadtreeNode", "mymesh.tree.QuadtreeNode.ContainsEdges", "mymesh.tree.QuadtreeNode.ContainsPts", "mymesh.tree.QuadtreeNode.PointInNode", "mymesh.tree.QuadtreeNode.PointsInNode", "mymesh.tree.QuadtreeNode.clearData", "mymesh.tree.QuadtreeNode.getLevel", "mymesh.tree.QuadtreeNode.getLimits", "mymesh.tree.QuadtreeNode.getMaxDepth", "mymesh.tree.QuadtreeNode.getVertices", "mymesh.tree.QuadtreeNode.hasChildren", "mymesh.tree.QuadtreeNode.makeChildren", "mymesh.tree.QuadtreeNode.makeChildrenEdges", "mymesh.tree.QuadtreeNode.makeChildrenPts", "mymesh.tree.QuadtreeNode.prune", "mymesh.tree.SearchOctree", "mymesh.tree.SearchOctreeTri", "mymesh.tree.Surface2Octree", "mymesh.tree.TreeNode", "mymesh.tree.TreeNode.clearData", "mymesh.tree.TreeNode.getLevel", "mymesh.tree.TreeNode.getMaxDepth", "mymesh.tree.TreeNode.hasChildren", "mymesh.tree.TreeNode.prune", "mymesh.tree.Voxel2Octree", "mymesh.tree.getAllLeaf", "mymesh.utils.AABB", "mymesh.utils.BaryTet", "mymesh.utils.BaryTri", "mymesh.utils.BaryTris", "mymesh.utils.CalcFaceNormal", "mymesh.utils.Centroids", "mymesh.utils.CleanupDegenerateElements", "mymesh.utils.DeleteDegenerateElements", "mymesh.utils.DeleteDuplicateNodes", "mymesh.utils.DetectFeatures", "mymesh.utils.DilateVoxel", "mymesh.utils.ErodeVoxel", "mymesh.utils.ExtractRagged", "mymesh.utils.Face2NodeNormal", "mymesh.utils.MVBB", "mymesh.utils.MergeMesh", "mymesh.utils.MirrorMesh", "mymesh.utils.PadRagged", "mymesh.utils.Project2Surface", "mymesh.utils.RelabelNodes", "mymesh.utils.SortRaggedByLength", "mymesh.utils.SplitRaggedByLength", "mymesh.utils.SurfMapping", "mymesh.utils.TetMeshVol", "mymesh.utils.TriSurfVol", "mymesh.utils.ValueMapping", "mymesh.utils.getConnectedElements", "mymesh.utils.getConnectedNodes", "mymesh.utils.getElemConnectivity", "mymesh.utils.getElemNeighbors", "mymesh.utils.getNodeNeighborhood", "mymesh.utils.getNodeNeighborhoodByRadius", "mymesh.utils.getNodeNeighbors", "mymesh.utils.identify_elem", "mymesh.utils.identify_type", "mymesh.utils.makePyramidLayer", "mymesh.visualize.FaceColor", "mymesh.visualize.GetTheme", "mymesh.visualize.ParseColor", "mymesh.visualize.Subplot", "mymesh.visualize.View", "mymesh.visualize.set_vispy_backend", "User Guide", "Connectivity Representations", "Constructive Solid Geometry", "Element Types", "Getting Started", "Image-based Meshing", "Implicit Meshing", "Installation", "File Input/Output", "Using MyMesh in MATLAB", "Working with the <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">mesh</span></code> class", "References", "What is a mesh?", "MyMesh: General purpose, implicit, and image-based meshing in python", "Computation times", "mymesh.demo_image", "mymesh.demo_mesh", "Theory Guide", "Contour", "Curvature", "Delaunay Triangulation", "Edge Contraction", "2\u21923 and 3\u21922 Flips", "implicit", "Improvement", "Laplacian Smoothing", "Octree", "Rays", "Spring-based Smoothing"], "titleterms": {"2": 450, "2d": [89, 429, 440], "3": 450, "33": 446, "3d": [89, 440], "On": 438, "aabb": [61, 386], "acknowledg": 441, "adapt": 98, "addedg": 62, "addelem": 63, "addfac": 64, "addnod": 65, "affin": 315, "affine2d": 316, "alpha2d": 164, "alpha3d": 165, "alphapeel3d": 166, "alphashap": 167, "an": [5, 434], "analysi": [2, 3, 10], "analyt": 447, "analyticalcurvatur": 154, "api": 0, "area": 242, "aspectratio": 243, "axisalignimag": 300, "axisalignpoint": 301, "barytet": 387, "barytri": [388, 389], "base": [19, 433, 441, 447, 456], "boolean": [12, 96, 97], "bound": 66, "boundari": [23, 455], "boundaryboundaryintersect": 262, "boundaryconn": 24, "boundarynod": 25, "bowyer": 448, "bowyerwatson2d": 168, "bowyerwatson3d": 169, "box": [188, 229, 455], "boxboxintersect": 263, "boxtrianglesintersect": 264, "calcfacenorm": 390, "calcul": [2, 15, 90, 447], "caviti": 448, "cell": 67, "centroid": [26, 391], "circl": 230, "circlept": 231, "circumcircl": 448, "class": 438, "cleanup": [68, 94], "cleanupdegenerateel": 392, "cleardata": [344, 365, 379], "clip": [27, 438], "closest_point_ms": 317, "cloud": 454, "comput": [4, 9, 11, 442], "connect": [14, 94, 429], "construct": [89, 430], "containsbox": 339, "containsedg": 361, "containspt": [340, 362], "containstri": 341, "contour": [13, 28, 98, 99, 100, 101, 102, 103, 104, 105, 438, 446], "contract": [219, 449], "convent": 447, "convers": [14, 15, 93], "convert": [14, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "convexhul": 170, "copi": [69, 438], "core": 435, "creat": 5, "createboundarylay": 29, "creation": 93, "crop": 30, "csg": 430, "cube": 446, "cubic": 447, "cubicfit": 155, "curvatur": [2, 15, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 447], "curved": [156, 447], "cylind": [189, 232], "data": 450, "defin": [5, 434], "definit": 454, "delaunai": [16, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 448], "deletedegenerateel": 393, "deleteduplicatenod": 394, "demand": 438, "demo_imag": [17, 443], "demo_mesh": [18, 444], "depend": 435, "detectfeatur": 395, "develop": 1, "diamond": 190, "dice": 318, "diff": [191, 193], "difff": 192, "dihedralangl": 254, "dilatevoxel": 396, "distanc": 454, "do": 432, "edg": [33, 449, 450], "edge2quadrat": 107, "edge32linear": 108, "edgeconn": 31, "edgeelemconn": 32, "edges2quadtre": 334, "edges2uniqu": 109, "edgesbyel": 106, "elemconn": 34, "element": [14, 431, 450], "elemneighbor": 35, "elemnorm": 36, "elemtyp": 37, "equiangular_skew": 255, "erodevoxel": 397, "error": [2, 454], "euclidean": 454, "eulercharacterist": 38, "exampl": [3, 8, 10, 429, 441], "explicit": 430, "extractrag": 398, "extrud": 233, "face": [41, 450], "face2nodenorm": 399, "facecolor": 422, "faceconn": 39, "faceelemconn": 40, "faces2surfac": 110, "faces2uniqu": 111, "fantriangul": 171, "featur": 1, "file": [19, 436], "fit": 447, "flip": 450, "format": 448, "from": [93, 435, 438], "function": [0, 5, 20, 90, 434, 454], "function2octre": 335, "gaussian": 447, "gaussiancurvatur": 157, "gener": [8, 10, 19, 20, 441, 454], "genu": 42, "geometri": 430, "geotransformsmooth": 220, "get": 432, "getallleaf": 385, "getconnectedel": 412, "getconnectednod": 413, "getcurvatur": 70, "getelemconnect": 414, "getelemneighbor": 415, "getlevel": [345, 366, 380], "getlimit": [346, 367], "getmaxdepth": [347, 368, 381], "getnodeneighbor": 418, "getnodeneighborhood": 416, "getnodeneighborhoodbyradiu": 417, "getqual": 71, "getthem": 423, "getvertic": [348, 369], "giftwrap": 172, "grid": 234, "grid2d": 235, "grid2fun": 194, "grid2grad": 195, "guid": [428, 445], "gyroid": 196, "haschildren": [349, 370, 382], "hausdorff": 319, "heart": 5, "helper": 90, "hex202linear": 112, "hex2edg": 113, "hex2fac": 114, "hex2quadrat": 115, "hex2tet": 116, "hexsubdivid": 117, "hull": 16, "i": [434, 440], "icp": 302, "identify_elem": 419, "identify_typ": [72, 420], "im2voxel": 118, "imag": [19, 177, 178, 179, 180, 181, 182, 183, 433, 436, 441], "image2imag": 303, "imagecurvatur": 158, "imageoverlai": 304, "implicit": [5, 20, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 430, 434, 441, 451, 454], "import": 428, "improv": [21, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 452], "imread": 73, "inclus": 455, "index": [435, 447], "initi": 448, "input": 436, "insert": 448, "insid": 91, "instal": 435, "interpret": 447, "intersect": [91, 197, 199, 455], "intersectionf": 198, "inverseorthogon": 245, "inverseorthogonalqu": 244, "io": 19, "jaccard": 320, "laplacian": 453, "lidinoid": 200, "line": [236, 440], "linear2quadrat": 119, "local": 21, "locallaplaciansmooth": 221, "locat": 448, "makechildren": [350, 371], "makechildrenbox": 351, "makechildrenedg": 372, "makechildrenpt": [352, 373], "makechildrentri": 353, "makepyramidlay": 421, "manipul": 94, "march": 446, "marchingcub": 99, "marchingcubesimag": 100, "marchingel": 101, "marchingsquar": 102, "marchingsquaresimag": 103, "marchingtetrahedra": 104, "marchingtriangl": 105, "matlab": 437, "maxdihedr": 246, "mean": 447, "meancurvatur": 159, "meanratio": 247, "measur": [2, 94], "merg": 74, "mergemesh": 401, "mesh": [3, 8, 10, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 94, 433, 434, 436, 438, 440, 441, 447, 454], "mesh2dmesh": 75, "mesh2im": 120, "mesh2mesh": 305, "mesh2udf": 201, "meshboolean": 96, "meshio2mymesh": 76, "meshnod": 43, "method": [22, 338, 360, 378], "metric": [90, 92, 447], "mindihedr": 248, "mirror": 44, "mirrormesh": 402, "miscellan": 94, "mix": 6, "modif": 452, "multilin": 237, "mutual_inform": 321, "mvbb": [77, 400], "mymesh": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 433, 437, 441, 443, 444], "mymesh2meshio": 78, "nd": 45, "nedg": 46, "need": 441, "nelem": 47, "neoviu": 202, "nface": 48, "nnode": 49, "node": [21, 452, 456], "nodeneighbor": 50, "nodenorm": 51, "nodenormalsmethod": 52, "nodespringsmooth": 222, "normcurv": 160, "object": 0, "octre": [93, 454], "octree2du": 336, "octree2voxel": 337, "octreenod": [338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354], "offset": 203, "oper": [12, 20], "optim": [92, 322], "option": 435, "orthogon": 250, "orthogonalqu": 249, "other": 20, "output": 436, "outsid": 91, "overview": 428, "packag": [428, 435], "padrag": 403, "parsecolor": 424, "pasta": 7, "pixelmesh": 177, "plan": 1, "planar": 440, "plane": [204, 238, 455], "planeboxintersect": 265, "planesurfintersect": 266, "planetriangleintersect": 267, "planetrianglesintersect": 268, "plot": 79, "point": [80, 448, 454, 455], "point2point": 306, "pointinboundari": 269, "pointinbox": 270, "pointinbox2d": 271, "pointinnod": [342, 363], "pointinsurf": 272, "pointintet": 273, "pointintri": 274, "points2octre": 355, "points2quadtre": 356, "pointsinnod": [343, 364], "pointsinsurf": 275, "pointsintri": 276, "pointsinvoxel": 277, "polygon2edg": 121, "primit": [89, 205, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241], "princip": 447, "print": 357, "procedur": 450, "project": 94, "project2surfac": 404, "properti": [22, 338, 360, 378, 438], "prune": [354, 374, 383], "purpos": 441, "pypi": 435, "pyr132linear": 122, "pyr2quadrat": 123, "pyramid2edg": 124, "pyramid2fac": 125, "pyramid2tet": 126, "python": [435, 441], "quad2edg": 127, "quad2quadrat": 128, "quad2tri": 129, "quad82linear": 130, "quad_skew": 256, "quadfit": 161, "quadrat": 447, "quadratic2linear": 131, "quadtre": 93, "quadtree2du": 358, "quadtree2pixel": 359, "quadtreenod": [360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374], "qualiti": [90, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "queri": 93, "r2d": 307, "r3d": 308, "rai": [91, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 455], "rayboundaryintersect": 278, "rayboxesintersect": 280, "rayboxintersect": 279, "rayoctreeintersect": 281, "raysegmentintersect": 282, "raysegmentsintersect": 283, "rayssurfintersect": 287, "raystrianglesintersect": 288, "raysurfintersect": 284, "raytriangleintersect": 285, "raytrianglesintersect": 286, "read": [81, 182], "reconstruct": 451, "refer": [0, 439], "regist": [92, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333], "registr": 92, "relabelnod": 405, "removeelem": 82, "renumberfacesbyset": 53, "renumbernodesbyset": 54, "reposit": [21, 452], "represent": 429, "reset": 83, "retriangul": 448, "revolv": 239, "rigid": 323, "rigid2d": 324, "rmax": 206, "rmin": 207, "roadmap": 1, "rotat": 325, "rotation2d": 326, "s2d": 309, "s3d": 310, "scipi": 173, "searchoctre": 375, "searchoctreetri": 376, "segment": 455, "segmentbox2dintersect": 289, "segmentboxintersect": 290, "segmentsegmentintersect": 291, "segmentspringsmooth": 223, "segmentssegmentsintersect": 292, "set_vispy_backend": 427, "sh2d": 311, "sh3d": 312, "shape": [7, 89, 447, 455], "shapecategori": 162, "shapeindex": 163, "similar": [92, 327], "similarity2d": 328, "skew": 251, "smart": 453, "smartlaplaciansmooth": 224, "smooth": [5, 21, 453, 456], "solid": 430, "solid2edg": 132, "solid2fac": 133, "solid2surfac": 134, "solid2tet": 135, "sortraggedbylength": 406, "sourc": 435, "sphere": [208, 240], "splitmesh": 97, "splitraggedbylength": 407, "spring": 456, "squar": 446, "start": 432, "statement": 441, "structur": 450, "submodul": 0, "subplot": 425, "summari": 441, "surf": 440, "surf2dual": 136, "surf2edg": 137, "surf2tri": 138, "surf2voxel": 139, "surfac": [5, 59, 94, 440, 447, 451, 454, 455], "surface2octre": 377, "surfacemesh": [178, 184], "surfacenodeoptim": [179, 185], "surfconn": 55, "surfdihedralangl": 252, "surfelemconn": 56, "surfmap": 408, "surfnod": 58, "surfnodeneighbor": 57, "surfselfintersect": 293, "surfsurfintersect": 294, "symmetric_closest_point_ms": 329, "t2d": 313, "t3d": 314, "tabl": 450, "tangenti": 453, "tangentiallaplaciansmooth": 225, "test": [91, 448, 455], "tet102linear": 140, "tet2edg": 141, "tet2fac": 142, "tet2quadrat": 143, "tet_circumradiu": 257, "tet_vol_skew": 258, "tet_volum": 259, "tetflip": 226, "tetimprov": 227, "tetmesh": [180, 186], "tetmeshvol": 409, "tetrahedr": [16, 174], "tetrahedra": 446, "tetsplit": 228, "tetsubdivid": 144, "theori": 445, "thicken": [209, 211], "thickenf": 210, "threshold": [60, 438], "time": [4, 9, 11, 442], "tip": 437, "to_meshio": 84, "to_pyvista": 85, "topolog": 452, "topologi": [6, 21], "toru": [212, 241], "tpm": 6, "transform": 92, "transform_imag": 330, "transform_point": 331, "translat": 332, "translation2d": 333, "tree": [93, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385], "treenod": [378, 379, 380, 381, 382, 383], "tri2edg": 145, "tri2quadrat": 146, "tri62linear": 147, "tri_area": 260, "tri_skew": 261, "triangl": [175, 455], "triangleboxintersect": 295, "trianglestrianglesintersect": 298, "trianglestrianglesintersectionpt": 299, "triangletriangleintersect": 296, "triangletriangleintersectionpt": 297, "triangul": [16, 176, 448], "trisurfvol": 410, "type": [14, 431, 440], "union": [213, 215], "unionf": 214, "unpack": 438, "us": 437, "user": 428, "util": [20, 93, 94, 95, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421], "valid": 86, "valuemap": 411, "view": [87, 426], "visual": [92, 95, 422, 423, 424, 425, 426, 427], "vol": 440, "volum": [253, 440], "voxel": [440, 454], "voxel2im": 148, "voxel2octre": 384, "voxelmesh": [181, 187], "want": 432, "watson": 448, "wdg152linear": 149, "wdg2quadrat": 150, "wedge2edg": 151, "wedge2fac": 152, "wedge2tet": 153, "what": [432, 434, 440], "work": 438, "write": [88, 183], "xplane": 216, "you": 432, "yplane": 217, "zplane": 218}})