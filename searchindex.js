Search.setIndex({"alltitles": {"2D Example": [[304, "d-example"]], "2D Planar Meshes": [[314, "d-planar-meshes"]], "2D to 3D Constructions": [[79, "d-to-3d-constructions"]], "2\u21923 and 3\u21922 Flips": [[321, null]], "3D Surfaces": [[314, "d-surfaces"]], "API Reference": [[0, null]], "Acknowledgements": [[315, "acknowledgements"]], "Analytical Curvature": [[319, "analytical-curvature"]], "Bowyer-Watson": [[320, "bowyer-watson"]], "Bowyer-Watson: Initialization": [[320, "bowyer-watson-initialization"]], "Bowyer-Watson: Point Insertion": [[320, "bowyer-watson-point-insertion"]], "Calculating Curvature": [[319, "calculating-curvature"]], "Cavity Formation": [[320, "cavity-formation"]], "Circumcircle Test": [[320, "circumcircle-test"]], "Clip()": [[312, "clip"]], "Computation times": [[4, null], [9, null], [11, null], [316, null]], "Connectivity Representations": [[304, null]], "Connectivity conversion": [[14, "connectivity-conversion"]], "Constructive Solid Geometry": [[305, null]], "Contour": [[318, null]], "Contour()": [[312, "contour"]], "Contouring": [[13, "contouring"]], "Conventions": [[319, "conventions"]], "Conversion From Octree": [[78, "conversion-from-octree"]], "Convex Hull": [[16, "convex-hull"]], "Core dependencies": [[309, "core-dependencies"]], "Creating a Surface": [[5, "creating-a-surface"]], "Cubic Surface Fitting": [[319, "cubic-surface-fitting"]], "Curvature": [[319, null]], "Curvature Analysis": [[2, null]], "Curvature Calculation": [[15, "curvature-calculation"]], "Curvature Conversion": [[15, "curvature-conversion"]], "Curvature Metrics": [[319, "curvature-metrics"]], "Curvature calculation": [[2, "curvature-calculation"]], "Curvedness": [[319, "curvedness"]], "Data Structure": [[321, "data-structure"]], "Defining an implicit function": [[5, "defining-an-implicit-function"]], "Defining implicit functions": [[308, "defining-implicit-functions"]], "Delaunay Triangulation": [[320, null]], "Dependencies": [[309, "dependencies"]], "Development": [[1, null]], "Edge Table": [[321, "id3"]], "Element Table": [[321, "id1"]], "Element Types": [[306, null]], "Element type conversion": [[14, "element-type-conversion"]], "Error Measurement": [[2, "error-measurement"]], "Euclidean Distance Error": [[324, "euclidean-distance-error"]], "Examples": [[10, null]], "Explicit CSG": [[305, "explicit-csg"]], "Face Table": [[321, "id2"]], "File IO": [[17, "file-io"]], "File Input/Output": [[310, null]], "Flipping Procedure": [[321, "flipping-procedure"]], "From meshes to meshes": [[312, "from-meshes-to-meshes"]], "Gaussian Curvature": [[319, "gaussian-curvature"]], "Generating Octrees": [[324, "generating-octrees"]], "Image files": [[310, "image-files"]], "Image-based Mesh Generation": [[17, "image-based-mesh-generation"]], "Image-based Meshing": [[307, null]], "Images in MyMesh": [[307, "images-in-mymesh"]], "Implicit CSG": [[305, "implicit-csg"]], "Implicit Function Octrees": [[324, "implicit-function-octrees"]], "Implicit Function Operators": [[18, "implicit-function-operators"]], "Implicit Functions": [[18, "implicit-functions"]], "Implicit Heart": [[5, null]], "Implicit Meshing": [[308, null]], "Importing MyMesh": [[303, "importing-mymesh"]], "Improvement": [[323, null]], "Inside/Outside Tests": [[81, "inside-outside-tests"]], "Installation": [[309, null]], "Installing from source:": [[309, "installing-from-source"]], "Interpretation": [[319, "interpretation"]], "Intersection Tests": [[81, "intersection-tests"]], "Line Meshes (Type='line')": [[314, "line-meshes-type-line"]], "Local mesh topology": [[19, "local-mesh-topology"]], "Marching Cubes": [[318, "marching-cubes"]], "Marching Cubes 33": [[318, "marching-cubes-33"]], "Marching Squares": [[318, "marching-squares"]], "Marching Tetrahedra": [[318, "marching-tetrahedra"]], "Mean Curvature": [[319, "mean-curvature"]], "Mesh Analysis Examples": [[3, null], [10, "mesh-analysis-examples"]], "Mesh Clean Up": [[82, "mesh-clean-up"]], "Mesh Connectivity": [[82, "mesh-connectivity"]], "Mesh Generation": [[18, "mesh-generation"]], "Mesh Generation Examples": [[8, null], [10, "mesh-generation-examples"]], "Mesh Manipulations": [[82, "mesh-manipulations"]], "Mesh Measurements": [[82, "mesh-measurements"]], "Mesh Types": [[314, "mesh-types"]], "Mesh files": [[310, "mesh-files"]], "Mesh smoothing/node repositioning": [[19, "mesh-smoothing-node-repositioning"]], "Mesh type conversion": [[14, "mesh-type-conversion"]], "Mesh-Based Curvature": [[319, "mesh-based-curvature"]], "Meshing Implicit Functions": [[308, "meshing-implicit-functions"]], "Methods": [[20, "methods"]], "Miscellaneous": [[82, "miscellaneous"]], "Mixed-Topology TPMS": [[6, null]], "MyMesh: General purpose, implicit, and image-based meshing in python": [[315, null]], "Node Repositioning": [[323, "node-repositioning"]], "Node Spring-based": [[326, "node-spring-based"]], "Objects": [[0, "objects"]], "Octree": [[324, null]], "Octree Creation": [[78, "octree-creation"]], "Octree Definition": [[324, "octree-definition"]], "Octree Querying": [[78, "octree-querying"]], "Octree Utilities": [[78, "octree-utilities"]], "On-demand properties": [[312, "on-demand-properties"]], "Operations": [[12, "operations"]], "Optional dependencies": [[309, "optional-dependencies"]], "Other Implicit Mesh Utilities": [[18, "other-implicit-mesh-utilities"]], "Package Overview": [[303, "package-overview"]], "Pasta Shapes": [[7, null]], "Plane-Box Intersection": [[325, "plane-box-intersection"]], "Plane-Shape Intersection Tests": [[325, "plane-shape-intersection-tests"]], "Plane-Triangle Intersection": [[325, "plane-triangle-intersection"]], "Point Cloud Octrees": [[324, "point-cloud-octrees"]], "Point Inclusion Tests": [[325, "point-inclusion-tests"]], "Point Location": [[320, "point-location"]], "Point in Boundary": [[325, "point-in-boundary"]], "Point in Surface": [[325, "point-in-surface"]], "Principal Curvatures": [[319, "principal-curvatures"]], "Properties": [[20, "properties"]], "Python Package Index (PyPI)": [[309, "python-package-index-pypi"]], "Quadratic Surface Fitting": [[319, "quadratic-surface-fitting"]], "Quality Calculation Helper Functions": [[80, "quality-calculation-helper-functions"]], "Quality Metrics": [[80, "quality-metrics"]], "Ray-Box Intersection": [[325, "ray-box-intersection"]], "Ray-Segment Intersection": [[325, "ray-segment-intersection"]], "Ray-Shape Intersection Tests": [[325, "ray-shape-intersection-tests"]], "Ray-Triangle Intersection": [[325, "ray-triangle-intersection"]], "Rays": [[325, null]], "References": [[313, null]], "Retriangulation": [[320, "retriangulation"]], "Roadmap & Planned features": [[1, "roadmap-planned-features"]], "Segment-Segment Intersection": [[325, "segment-segment-intersection"]], "Shape Index": [[319, "shape-index"]], "Shape-Shape Intersection Tests": [[325, "shape-shape-intersection-tests"]], "Shapes": [[79, "shapes"]], "Smoothing": [[5, "smoothing"]], "Spring-based Smoothing": [[326, null]], "Statement of need": [[315, "statement-of-need"]], "Submodules": [[0, "submodules"]], "Summary": [[315, "summary"]], "Surface Mesh Octrees": [[324, "surface-mesh-octrees"]], "Surface Meshes (Type='surf')": [[314, "surface-meshes-type-surf"]], "Surface Projection": [[82, "surface-projection"]], "Surface Reconstruction": [[322, "surface-reconstruction"]], "Tetrahedralization": [[16, "tetrahedralization"]], "Theory Guide": [[317, null]], "Threshold()": [[312, "threshold"]], "Tips for using MyMesh in MATLAB": [[311, "tips-for-using-mymesh-in-matlab"]], "Topological Modifications": [[323, "topological-modifications"]], "Triangle-Box Intersection": [[325, "triangle-box-intersection"]], "Triangle-Triangle Intersection": [[325, "triangle-triangle-intersection"]], "Triangulation": [[16, "triangulation"]], "Unpacking": [[312, "unpacking"]], "User Guide": [[303, null]], "Using MyMesh in MATLAB": [[311, null]], "Visualization": [[83, "visualization"]], "Visualization Utilities": [[83, "visualization-utilities"]], "Volume Meshes (Type='vol')": [[314, "volume-meshes-type-vol"]], "Voxel Meshes": [[314, "voxel-meshes"]], "Voxel Octrees": [[324, "voxel-octrees"]], "What is a mesh?": [[314, null]], "What is an implicit function?": [[308, "what-is-an-implicit-function"]], "Working with the mesh class": [[312, null]], "copy()": [[312, "copy"]], "implicit": [[322, null]], "mymesh.booleans": [[12, null]], "mymesh.booleans.MeshBooleans": [[84, null]], "mymesh.booleans.SplitMesh": [[85, null]], "mymesh.contour": [[13, null]], "mymesh.contour.Adaptive": [[86, null]], "mymesh.contour.MarchingCubes": [[87, null]], "mymesh.contour.MarchingCubesImage": [[88, null]], "mymesh.contour.MarchingSquares": [[89, null]], "mymesh.contour.MarchingSquaresImage": [[90, null]], "mymesh.contour.MarchingTetrahedra": [[91, null]], "mymesh.converter": [[14, null]], "mymesh.converter.EdgesByElement": [[92, null]], "mymesh.converter.edges2unique": [[93, null]], "mymesh.converter.faces2surface": [[94, null]], "mymesh.converter.faces2unique": [[95, null]], "mymesh.converter.hex2edges": [[96, null]], "mymesh.converter.hex2faces": [[97, null]], "mymesh.converter.hex2tet": [[98, null]], "mymesh.converter.im2voxel": [[99, null]], "mymesh.converter.polygon2edges": [[100, null]], "mymesh.converter.pyramid2edges": [[101, null]], "mymesh.converter.pyramid2faces": [[102, null]], "mymesh.converter.pyramid2tet": [[103, null]], "mymesh.converter.quad2edges": [[104, null]], "mymesh.converter.quad2tri": [[105, null]], "mymesh.converter.solid2edges": [[106, null]], "mymesh.converter.solid2faces": [[107, null]], "mymesh.converter.solid2surface": [[108, null]], "mymesh.converter.solid2tets": [[109, null]], "mymesh.converter.surf2dual": [[110, null]], "mymesh.converter.surf2edges": [[111, null]], "mymesh.converter.surf2tris": [[112, null]], "mymesh.converter.surf2voxel": [[113, null]], "mymesh.converter.tet102tet4": [[114, null]], "mymesh.converter.tet2edges": [[115, null]], "mymesh.converter.tet2faces": [[116, null]], "mymesh.converter.tet42tet10": [[117, null]], "mymesh.converter.tri2edges": [[118, null]], "mymesh.converter.voxel2im": [[119, null]], "mymesh.converter.wedge2edges": [[120, null]], "mymesh.converter.wedge2faces": [[121, null]], "mymesh.converter.wedge2tet": [[122, null]], "mymesh.curvature": [[15, null]], "mymesh.curvature.AnalyticalCurvature": [[123, null]], "mymesh.curvature.CubicFit": [[124, null]], "mymesh.curvature.Curvedness": [[125, null]], "mymesh.curvature.GaussianCurvature": [[126, null]], "mymesh.curvature.ImageCurvature": [[127, null]], "mymesh.curvature.MeanCurvature": [[128, null]], "mymesh.curvature.NormCurve": [[129, null]], "mymesh.curvature.QuadFit": [[130, null]], "mymesh.curvature.ShapeCategory": [[131, null]], "mymesh.curvature.ShapeIndex": [[132, null]], "mymesh.delaunay": [[16, null]], "mymesh.delaunay.BowyerWatson2d": [[133, null]], "mymesh.delaunay.BowyerWatson3d": [[134, null]], "mymesh.delaunay.ConvexHull": [[135, null]], "mymesh.delaunay.ConvexHullFanTriangulation": [[136, null]], "mymesh.delaunay.ConvexHull_GiftWrapping": [[137, null]], "mymesh.delaunay.SciPy": [[138, null]], "mymesh.delaunay.Triangle": [[139, null]], "mymesh.delaunay.TriangleSplittingTriangulation": [[140, null]], "mymesh.delaunay.Triangulate": [[141, null]], "mymesh.image": [[17, null]], "mymesh.image.SurfaceMesh": [[142, null]], "mymesh.image.SurfaceNodeOptimization": [[143, null]], "mymesh.image.TetMesh": [[144, null]], "mymesh.image.VoxelMesh": [[145, null]], "mymesh.image.read": [[146, null]], "mymesh.image.write": [[147, null]], "mymesh.implicit": [[18, null]], "mymesh.implicit.SurfaceMesh": [[148, null]], "mymesh.implicit.SurfaceNodeOptimization": [[149, null]], "mymesh.implicit.TetMesh": [[150, null]], "mymesh.implicit.VoxelMesh": [[151, null]], "mymesh.implicit.box": [[152, null]], "mymesh.implicit.cylinder": [[153, null]], "mymesh.implicit.diamond": [[154, null]], "mymesh.implicit.diff": [[155, null]], "mymesh.implicit.difff": [[156, null]], "mymesh.implicit.diffs": [[157, null]], "mymesh.implicit.grid2fun": [[158, null]], "mymesh.implicit.grid2grad": [[159, null]], "mymesh.implicit.gyroid": [[160, null]], "mymesh.implicit.intersection": [[161, null]], "mymesh.implicit.intersectionf": [[162, null]], "mymesh.implicit.intersections": [[163, null]], "mymesh.implicit.lidinoid": [[164, null]], "mymesh.implicit.mesh2sdf": [[165, null]], "mymesh.implicit.mesh2udf": [[166, null]], "mymesh.implicit.neovius": [[167, null]], "mymesh.implicit.offset": [[168, null]], "mymesh.implicit.primitive": [[169, null]], "mymesh.implicit.rMax": [[170, null]], "mymesh.implicit.rMin": [[171, null]], "mymesh.implicit.sphere": [[172, null]], "mymesh.implicit.thicken": [[173, null]], "mymesh.implicit.thickenf": [[174, null]], "mymesh.implicit.thickens": [[175, null]], "mymesh.implicit.torus": [[176, null]], "mymesh.implicit.union": [[177, null]], "mymesh.implicit.unionf": [[178, null]], "mymesh.implicit.unions": [[179, null]], "mymesh.implicit.xplane": [[180, null]], "mymesh.implicit.yplane": [[181, null]], "mymesh.implicit.zplane": [[182, null]], "mymesh.improvement": [[19, null]], "mymesh.improvement.GeoTransformSmoothing": [[183, null]], "mymesh.improvement.LocalLaplacianSmoothing": [[184, null]], "mymesh.improvement.NodeSpringSmoothing": [[185, null]], "mymesh.improvement.SegmentSpringSmoothing": [[186, null]], "mymesh.improvement.SmartLaplacianSmoothing": [[187, null]], "mymesh.improvement.TangentialLaplacianSmoothing": [[188, null]], "mymesh.improvement.TetContract": [[189, null]], "mymesh.improvement.TetFlip": [[190, null]], "mymesh.improvement.TetImprove": [[191, null]], "mymesh.improvement.TetSplit": [[192, null]], "mymesh.mesh": [[20, null]], "mymesh.mesh.mesh.BoundaryConn": [[21, null]], "mymesh.mesh.mesh.BoundaryNodes": [[22, null]], "mymesh.mesh.mesh.Centroids": [[23, null]], "mymesh.mesh.mesh.Clip": [[24, null]], "mymesh.mesh.mesh.Contour": [[25, null]], "mymesh.mesh.mesh.CreateBoundaryLayer": [[26, null]], "mymesh.mesh.mesh.Crop": [[27, null]], "mymesh.mesh.mesh.EdgeConn": [[28, null]], "mymesh.mesh.mesh.EdgeElemConn": [[29, null]], "mymesh.mesh.mesh.Edges": [[30, null]], "mymesh.mesh.mesh.ElemConn": [[31, null]], "mymesh.mesh.mesh.ElemNeighbors": [[32, null]], "mymesh.mesh.mesh.ElemNormals": [[33, null]], "mymesh.mesh.mesh.EulerCharacteristic": [[34, null]], "mymesh.mesh.mesh.FaceConn": [[35, null]], "mymesh.mesh.mesh.FaceElemConn": [[36, null]], "mymesh.mesh.mesh.Faces": [[37, null]], "mymesh.mesh.mesh.Genus": [[38, null]], "mymesh.mesh.mesh.Mirror": [[39, null]], "mymesh.mesh.mesh.ND": [[40, null]], "mymesh.mesh.mesh.NEdge": [[41, null]], "mymesh.mesh.mesh.NElem": [[42, null]], "mymesh.mesh.mesh.NFace": [[43, null]], "mymesh.mesh.mesh.NNode": [[44, null]], "mymesh.mesh.mesh.NodeNeighbors": [[45, null]], "mymesh.mesh.mesh.NodeNormals": [[46, null]], "mymesh.mesh.mesh.NodeNormalsMethod": [[47, null]], "mymesh.mesh.mesh.RenumberFacesBySet": [[48, null]], "mymesh.mesh.mesh.RenumberNodesBySet": [[49, null]], "mymesh.mesh.mesh.SurfConn": [[50, null]], "mymesh.mesh.mesh.SurfElemConn": [[51, null]], "mymesh.mesh.mesh.SurfNodeNeighbors": [[52, null]], "mymesh.mesh.mesh.SurfNodes": [[53, null]], "mymesh.mesh.mesh.Surface": [[54, null]], "mymesh.mesh.mesh.Threshold": [[55, null]], "mymesh.mesh.mesh.addEdges": [[56, null]], "mymesh.mesh.mesh.addElems": [[57, null]], "mymesh.mesh.mesh.addFaces": [[58, null]], "mymesh.mesh.mesh.addNodes": [[59, null]], "mymesh.mesh.mesh.cells": [[60, null]], "mymesh.mesh.mesh.cleanup": [[61, null]], "mymesh.mesh.mesh.copy": [[62, null]], "mymesh.mesh.mesh.getCurvature": [[63, null]], "mymesh.mesh.mesh.getQuality": [[64, null]], "mymesh.mesh.mesh.identify_type": [[65, null]], "mymesh.mesh.mesh.imread": [[66, null]], "mymesh.mesh.mesh.merge": [[67, null]], "mymesh.mesh.mesh.meshio2mymesh": [[68, null]], "mymesh.mesh.mesh.mymesh2meshio": [[69, null]], "mymesh.mesh.mesh.plot": [[70, null]], "mymesh.mesh.mesh.points": [[71, null]], "mymesh.mesh.mesh.read": [[72, null]], "mymesh.mesh.mesh.removeElems": [[73, null]], "mymesh.mesh.mesh.reset": [[74, null]], "mymesh.mesh.mesh.validate": [[75, null]], "mymesh.mesh.mesh.view": [[76, null]], "mymesh.mesh.mesh.write": [[77, null]], "mymesh.octree": [[78, null]], "mymesh.octree.Function2Octree": [[193, null]], "mymesh.octree.Octree2Dual": [[194, null]], "mymesh.octree.Octree2Voxel": [[195, null]], "mymesh.octree.Points2Octree": [[196, null]], "mymesh.octree.Print": [[197, null]], "mymesh.octree.SearchOctree": [[198, null]], "mymesh.octree.SearchOctreeTri": [[199, null]], "mymesh.octree.Surface2Octree": [[200, null]], "mymesh.octree.Voxel2Octree": [[201, null]], "mymesh.octree.getAllLeaf": [[202, null]], "mymesh.primitives": [[79, null]], "mymesh.primitives.Box": [[203, null]], "mymesh.primitives.Circle": [[204, null]], "mymesh.primitives.CirclePt": [[205, null]], "mymesh.primitives.Cylinder": [[206, null]], "mymesh.primitives.Extrude": [[207, null]], "mymesh.primitives.Grid": [[208, null]], "mymesh.primitives.Grid2D": [[209, null]], "mymesh.primitives.Line": [[210, null]], "mymesh.primitives.Plane": [[211, null]], "mymesh.primitives.Revolve": [[212, null]], "mymesh.primitives.Sphere": [[213, null]], "mymesh.primitives.Torus": [[214, null]], "mymesh.quality": [[80, null]], "mymesh.quality.Area": [[215, null]], "mymesh.quality.AspectRatio": [[216, null]], "mymesh.quality.InverseOrthogonalQuality": [[217, null]], "mymesh.quality.InverseOrthogonality": [[218, null]], "mymesh.quality.MaxDihedral": [[219, null]], "mymesh.quality.MeanRatio": [[220, null]], "mymesh.quality.MinDihedral": [[221, null]], "mymesh.quality.OrthogonalQuality": [[222, null]], "mymesh.quality.Orthogonality": [[223, null]], "mymesh.quality.Skewness": [[224, null]], "mymesh.quality.SurfDihedralAngles": [[225, null]], "mymesh.quality.Volume": [[226, null]], "mymesh.quality.dihedralAngles": [[227, null]], "mymesh.quality.equiangular_skewness": [[228, null]], "mymesh.quality.quad_skewness": [[229, null]], "mymesh.quality.tet_vol_skewness": [[230, null]], "mymesh.quality.tri_skewness": [[231, null]], "mymesh.rays": [[81, null]], "mymesh.rays.BoxTrianglesIntersection": [[232, null]], "mymesh.rays.PlaneBoxIntersection": [[233, null]], "mymesh.rays.PlaneSurfIntersection": [[234, null]], "mymesh.rays.PlaneTriangleIntersection": [[235, null]], "mymesh.rays.PlaneTrianglesIntersection": [[236, null]], "mymesh.rays.PointInBoundary": [[237, null]], "mymesh.rays.PointInBox": [[238, null]], "mymesh.rays.PointInSurf": [[239, null]], "mymesh.rays.PointInTri": [[240, null]], "mymesh.rays.PointsInSurf": [[241, null]], "mymesh.rays.PointsInTris": [[242, null]], "mymesh.rays.PointsInVoxel": [[243, null]], "mymesh.rays.RayBoxIntersection": [[244, null]], "mymesh.rays.RayBoxesIntersection": [[245, null]], "mymesh.rays.RayOctreeIntersection": [[246, null]], "mymesh.rays.RaySegmentIntersection": [[247, null]], "mymesh.rays.RaySegmentsIntersection": [[248, null]], "mymesh.rays.RaySurfIntersection": [[249, null]], "mymesh.rays.RayTriangleIntersection": [[250, null]], "mymesh.rays.RayTrianglesIntersection": [[251, null]], "mymesh.rays.RaysSurfIntersection": [[252, null]], "mymesh.rays.RaysTrianglesIntersection": [[253, null]], "mymesh.rays.SegmentSegmentIntersection": [[254, null]], "mymesh.rays.SegmentsSegmentsIntersection": [[255, null]], "mymesh.rays.SurfSelfIntersection": [[256, null]], "mymesh.rays.SurfSurfIntersection": [[257, null]], "mymesh.rays.TriangleBoxIntersection": [[258, null]], "mymesh.rays.TriangleTriangleIntersection": [[259, null]], "mymesh.rays.TriangleTriangleIntersectionPt": [[260, null]], "mymesh.rays.TrianglesTrianglesIntersection": [[261, null]], "mymesh.rays.TrianglesTrianglesIntersectionPts": [[262, null]], "mymesh.utils": [[82, null]], "mymesh.utils.AABB": [[263, null]], "mymesh.utils.BaryTet": [[264, null]], "mymesh.utils.BaryTri": [[265, null]], "mymesh.utils.BaryTris": [[266, null]], "mymesh.utils.CalcFaceNormal": [[267, null]], "mymesh.utils.Centroids": [[268, null]], "mymesh.utils.CleanupDegenerateElements": [[269, null]], "mymesh.utils.DeleteDegenerateElements": [[270, null]], "mymesh.utils.DeleteDuplicateNodes": [[271, null]], "mymesh.utils.DetectFeatures": [[272, null]], "mymesh.utils.DilateVoxel": [[273, null]], "mymesh.utils.ErodeVoxel": [[274, null]], "mymesh.utils.ExtractRagged": [[275, null]], "mymesh.utils.Face2NodeNormal": [[276, null]], "mymesh.utils.MVBB": [[277, null]], "mymesh.utils.MergeMesh": [[278, null]], "mymesh.utils.MirrorMesh": [[279, null]], "mymesh.utils.PadRagged": [[280, null]], "mymesh.utils.Project2Surface": [[281, null]], "mymesh.utils.RelabelNodes": [[282, null]], "mymesh.utils.SortRaggedByLength": [[283, null]], "mymesh.utils.SplitRaggedByLength": [[284, null]], "mymesh.utils.SurfMapping": [[285, null]], "mymesh.utils.TetMeshVol": [[286, null]], "mymesh.utils.TriSurfVol": [[287, null]], "mymesh.utils.ValueMapping": [[288, null]], "mymesh.utils.getConnectedElements": [[289, null]], "mymesh.utils.getConnectedNodes": [[290, null]], "mymesh.utils.getElemConnectivity": [[291, null]], "mymesh.utils.getElemNeighbors": [[292, null]], "mymesh.utils.getNodeNeighborhood": [[293, null]], "mymesh.utils.getNodeNeighborhoodByRadius": [[294, null]], "mymesh.utils.getNodeNeighbors": [[295, null]], "mymesh.utils.identify_type": [[296, null]], "mymesh.utils.makePyramidLayer": [[297, null]], "mymesh.visualize": [[83, null]], "mymesh.visualize.FaceColor": [[298, null]], "mymesh.visualize.GetTheme": [[299, null]], "mymesh.visualize.ParseColor": [[300, null]], "mymesh.visualize.View": [[301, null]], "mymesh.visualize.set_vispy_backend": [[302, null]]}, "docnames": ["api", "dev", "examples/MeshAnalysis/demo_curvature", "examples/MeshAnalysis/index", "examples/MeshAnalysis/sg_execution_times", "examples/MeshGeneration/demo_heart", "examples/MeshGeneration/demo_mixed-top", "examples/MeshGeneration/demo_pasta", "examples/MeshGeneration/index", "examples/MeshGeneration/sg_execution_times", "examples/index", "examples/sg_execution_times", "generated/mymesh.booleans", "generated/mymesh.contour", "generated/mymesh.converter", "generated/mymesh.curvature", "generated/mymesh.delaunay", "generated/mymesh.image", "generated/mymesh.implicit", "generated/mymesh.improvement", "generated/mymesh.mesh", "generated/mymesh.mesh.mesh.BoundaryConn", "generated/mymesh.mesh.mesh.BoundaryNodes", "generated/mymesh.mesh.mesh.Centroids", "generated/mymesh.mesh.mesh.Clip", "generated/mymesh.mesh.mesh.Contour", "generated/mymesh.mesh.mesh.CreateBoundaryLayer", "generated/mymesh.mesh.mesh.Crop", "generated/mymesh.mesh.mesh.EdgeConn", "generated/mymesh.mesh.mesh.EdgeElemConn", "generated/mymesh.mesh.mesh.Edges", "generated/mymesh.mesh.mesh.ElemConn", "generated/mymesh.mesh.mesh.ElemNeighbors", "generated/mymesh.mesh.mesh.ElemNormals", "generated/mymesh.mesh.mesh.EulerCharacteristic", "generated/mymesh.mesh.mesh.FaceConn", "generated/mymesh.mesh.mesh.FaceElemConn", "generated/mymesh.mesh.mesh.Faces", "generated/mymesh.mesh.mesh.Genus", "generated/mymesh.mesh.mesh.Mirror", "generated/mymesh.mesh.mesh.ND", "generated/mymesh.mesh.mesh.NEdge", "generated/mymesh.mesh.mesh.NElem", "generated/mymesh.mesh.mesh.NFace", "generated/mymesh.mesh.mesh.NNode", "generated/mymesh.mesh.mesh.NodeNeighbors", "generated/mymesh.mesh.mesh.NodeNormals", "generated/mymesh.mesh.mesh.NodeNormalsMethod", "generated/mymesh.mesh.mesh.RenumberFacesBySet", "generated/mymesh.mesh.mesh.RenumberNodesBySet", "generated/mymesh.mesh.mesh.SurfConn", "generated/mymesh.mesh.mesh.SurfElemConn", "generated/mymesh.mesh.mesh.SurfNodeNeighbors", "generated/mymesh.mesh.mesh.SurfNodes", "generated/mymesh.mesh.mesh.Surface", "generated/mymesh.mesh.mesh.Threshold", "generated/mymesh.mesh.mesh.addEdges", "generated/mymesh.mesh.mesh.addElems", "generated/mymesh.mesh.mesh.addFaces", "generated/mymesh.mesh.mesh.addNodes", "generated/mymesh.mesh.mesh.cells", "generated/mymesh.mesh.mesh.cleanup", "generated/mymesh.mesh.mesh.copy", "generated/mymesh.mesh.mesh.getCurvature", "generated/mymesh.mesh.mesh.getQuality", "generated/mymesh.mesh.mesh.identify_type", "generated/mymesh.mesh.mesh.imread", "generated/mymesh.mesh.mesh.merge", "generated/mymesh.mesh.mesh.meshio2mymesh", "generated/mymesh.mesh.mesh.mymesh2meshio", "generated/mymesh.mesh.mesh.plot", "generated/mymesh.mesh.mesh.points", "generated/mymesh.mesh.mesh.read", "generated/mymesh.mesh.mesh.removeElems", "generated/mymesh.mesh.mesh.reset", "generated/mymesh.mesh.mesh.validate", "generated/mymesh.mesh.mesh.view", "generated/mymesh.mesh.mesh.write", "generated/mymesh.octree", "generated/mymesh.primitives", "generated/mymesh.quality", "generated/mymesh.rays", "generated/mymesh.utils", "generated/mymesh.visualize", "generated/submodules/mymesh.booleans.MeshBooleans", "generated/submodules/mymesh.booleans.SplitMesh", "generated/submodules/mymesh.contour.Adaptive", "generated/submodules/mymesh.contour.MarchingCubes", "generated/submodules/mymesh.contour.MarchingCubesImage", "generated/submodules/mymesh.contour.MarchingSquares", "generated/submodules/mymesh.contour.MarchingSquaresImage", "generated/submodules/mymesh.contour.MarchingTetrahedra", "generated/submodules/mymesh.converter.EdgesByElement", "generated/submodules/mymesh.converter.edges2unique", "generated/submodules/mymesh.converter.faces2surface", "generated/submodules/mymesh.converter.faces2unique", "generated/submodules/mymesh.converter.hex2edges", "generated/submodules/mymesh.converter.hex2faces", "generated/submodules/mymesh.converter.hex2tet", "generated/submodules/mymesh.converter.im2voxel", "generated/submodules/mymesh.converter.polygon2edges", "generated/submodules/mymesh.converter.pyramid2edges", "generated/submodules/mymesh.converter.pyramid2faces", "generated/submodules/mymesh.converter.pyramid2tet", "generated/submodules/mymesh.converter.quad2edges", "generated/submodules/mymesh.converter.quad2tri", "generated/submodules/mymesh.converter.solid2edges", "generated/submodules/mymesh.converter.solid2faces", "generated/submodules/mymesh.converter.solid2surface", "generated/submodules/mymesh.converter.solid2tets", "generated/submodules/mymesh.converter.surf2dual", "generated/submodules/mymesh.converter.surf2edges", "generated/submodules/mymesh.converter.surf2tris", "generated/submodules/mymesh.converter.surf2voxel", "generated/submodules/mymesh.converter.tet102tet4", "generated/submodules/mymesh.converter.tet2edges", "generated/submodules/mymesh.converter.tet2faces", "generated/submodules/mymesh.converter.tet42tet10", "generated/submodules/mymesh.converter.tri2edges", "generated/submodules/mymesh.converter.voxel2im", "generated/submodules/mymesh.converter.wedge2edges", "generated/submodules/mymesh.converter.wedge2faces", "generated/submodules/mymesh.converter.wedge2tet", "generated/submodules/mymesh.curvature.AnalyticalCurvature", "generated/submodules/mymesh.curvature.CubicFit", "generated/submodules/mymesh.curvature.Curvedness", "generated/submodules/mymesh.curvature.GaussianCurvature", "generated/submodules/mymesh.curvature.ImageCurvature", "generated/submodules/mymesh.curvature.MeanCurvature", "generated/submodules/mymesh.curvature.NormCurve", "generated/submodules/mymesh.curvature.QuadFit", "generated/submodules/mymesh.curvature.ShapeCategory", "generated/submodules/mymesh.curvature.ShapeIndex", "generated/submodules/mymesh.delaunay.BowyerWatson2d", "generated/submodules/mymesh.delaunay.BowyerWatson3d", "generated/submodules/mymesh.delaunay.ConvexHull", "generated/submodules/mymesh.delaunay.ConvexHullFanTriangulation", "generated/submodules/mymesh.delaunay.ConvexHull_GiftWrapping", "generated/submodules/mymesh.delaunay.SciPy", "generated/submodules/mymesh.delaunay.Triangle", "generated/submodules/mymesh.delaunay.TriangleSplittingTriangulation", "generated/submodules/mymesh.delaunay.Triangulate", "generated/submodules/mymesh.image.SurfaceMesh", "generated/submodules/mymesh.image.SurfaceNodeOptimization", "generated/submodules/mymesh.image.TetMesh", "generated/submodules/mymesh.image.VoxelMesh", "generated/submodules/mymesh.image.read", "generated/submodules/mymesh.image.write", "generated/submodules/mymesh.implicit.SurfaceMesh", "generated/submodules/mymesh.implicit.SurfaceNodeOptimization", "generated/submodules/mymesh.implicit.TetMesh", "generated/submodules/mymesh.implicit.VoxelMesh", "generated/submodules/mymesh.implicit.box", "generated/submodules/mymesh.implicit.cylinder", "generated/submodules/mymesh.implicit.diamond", "generated/submodules/mymesh.implicit.diff", "generated/submodules/mymesh.implicit.difff", "generated/submodules/mymesh.implicit.diffs", "generated/submodules/mymesh.implicit.grid2fun", "generated/submodules/mymesh.implicit.grid2grad", "generated/submodules/mymesh.implicit.gyroid", "generated/submodules/mymesh.implicit.intersection", "generated/submodules/mymesh.implicit.intersectionf", "generated/submodules/mymesh.implicit.intersections", "generated/submodules/mymesh.implicit.lidinoid", "generated/submodules/mymesh.implicit.mesh2sdf", "generated/submodules/mymesh.implicit.mesh2udf", "generated/submodules/mymesh.implicit.neovius", "generated/submodules/mymesh.implicit.offset", "generated/submodules/mymesh.implicit.primitive", "generated/submodules/mymesh.implicit.rMax", "generated/submodules/mymesh.implicit.rMin", "generated/submodules/mymesh.implicit.sphere", "generated/submodules/mymesh.implicit.thicken", "generated/submodules/mymesh.implicit.thickenf", "generated/submodules/mymesh.implicit.thickens", "generated/submodules/mymesh.implicit.torus", "generated/submodules/mymesh.implicit.union", "generated/submodules/mymesh.implicit.unionf", "generated/submodules/mymesh.implicit.unions", "generated/submodules/mymesh.implicit.xplane", "generated/submodules/mymesh.implicit.yplane", "generated/submodules/mymesh.implicit.zplane", "generated/submodules/mymesh.improvement.GeoTransformSmoothing", "generated/submodules/mymesh.improvement.LocalLaplacianSmoothing", "generated/submodules/mymesh.improvement.NodeSpringSmoothing", "generated/submodules/mymesh.improvement.SegmentSpringSmoothing", "generated/submodules/mymesh.improvement.SmartLaplacianSmoothing", "generated/submodules/mymesh.improvement.TangentialLaplacianSmoothing", "generated/submodules/mymesh.improvement.TetContract", "generated/submodules/mymesh.improvement.TetFlip", "generated/submodules/mymesh.improvement.TetImprove", "generated/submodules/mymesh.improvement.TetSplit", "generated/submodules/mymesh.octree.Function2Octree", "generated/submodules/mymesh.octree.Octree2Dual", "generated/submodules/mymesh.octree.Octree2Voxel", "generated/submodules/mymesh.octree.Points2Octree", "generated/submodules/mymesh.octree.Print", "generated/submodules/mymesh.octree.SearchOctree", "generated/submodules/mymesh.octree.SearchOctreeTri", "generated/submodules/mymesh.octree.Surface2Octree", "generated/submodules/mymesh.octree.Voxel2Octree", "generated/submodules/mymesh.octree.getAllLeaf", "generated/submodules/mymesh.primitives.Box", "generated/submodules/mymesh.primitives.Circle", "generated/submodules/mymesh.primitives.CirclePt", "generated/submodules/mymesh.primitives.Cylinder", "generated/submodules/mymesh.primitives.Extrude", "generated/submodules/mymesh.primitives.Grid", "generated/submodules/mymesh.primitives.Grid2D", "generated/submodules/mymesh.primitives.Line", "generated/submodules/mymesh.primitives.Plane", "generated/submodules/mymesh.primitives.Revolve", "generated/submodules/mymesh.primitives.Sphere", "generated/submodules/mymesh.primitives.Torus", "generated/submodules/mymesh.quality.Area", "generated/submodules/mymesh.quality.AspectRatio", "generated/submodules/mymesh.quality.InverseOrthogonalQuality", "generated/submodules/mymesh.quality.InverseOrthogonality", "generated/submodules/mymesh.quality.MaxDihedral", "generated/submodules/mymesh.quality.MeanRatio", "generated/submodules/mymesh.quality.MinDihedral", "generated/submodules/mymesh.quality.OrthogonalQuality", "generated/submodules/mymesh.quality.Orthogonality", "generated/submodules/mymesh.quality.Skewness", "generated/submodules/mymesh.quality.SurfDihedralAngles", "generated/submodules/mymesh.quality.Volume", "generated/submodules/mymesh.quality.dihedralAngles", "generated/submodules/mymesh.quality.equiangular_skewness", "generated/submodules/mymesh.quality.quad_skewness", "generated/submodules/mymesh.quality.tet_vol_skewness", "generated/submodules/mymesh.quality.tri_skewness", "generated/submodules/mymesh.rays.BoxTrianglesIntersection", "generated/submodules/mymesh.rays.PlaneBoxIntersection", "generated/submodules/mymesh.rays.PlaneSurfIntersection", "generated/submodules/mymesh.rays.PlaneTriangleIntersection", "generated/submodules/mymesh.rays.PlaneTrianglesIntersection", "generated/submodules/mymesh.rays.PointInBoundary", "generated/submodules/mymesh.rays.PointInBox", "generated/submodules/mymesh.rays.PointInSurf", "generated/submodules/mymesh.rays.PointInTri", "generated/submodules/mymesh.rays.PointsInSurf", "generated/submodules/mymesh.rays.PointsInTris", "generated/submodules/mymesh.rays.PointsInVoxel", "generated/submodules/mymesh.rays.RayBoxIntersection", "generated/submodules/mymesh.rays.RayBoxesIntersection", "generated/submodules/mymesh.rays.RayOctreeIntersection", "generated/submodules/mymesh.rays.RaySegmentIntersection", "generated/submodules/mymesh.rays.RaySegmentsIntersection", "generated/submodules/mymesh.rays.RaySurfIntersection", "generated/submodules/mymesh.rays.RayTriangleIntersection", "generated/submodules/mymesh.rays.RayTrianglesIntersection", "generated/submodules/mymesh.rays.RaysSurfIntersection", "generated/submodules/mymesh.rays.RaysTrianglesIntersection", "generated/submodules/mymesh.rays.SegmentSegmentIntersection", "generated/submodules/mymesh.rays.SegmentsSegmentsIntersection", "generated/submodules/mymesh.rays.SurfSelfIntersection", "generated/submodules/mymesh.rays.SurfSurfIntersection", "generated/submodules/mymesh.rays.TriangleBoxIntersection", "generated/submodules/mymesh.rays.TriangleTriangleIntersection", "generated/submodules/mymesh.rays.TriangleTriangleIntersectionPt", "generated/submodules/mymesh.rays.TrianglesTrianglesIntersection", "generated/submodules/mymesh.rays.TrianglesTrianglesIntersectionPts", "generated/submodules/mymesh.utils.AABB", "generated/submodules/mymesh.utils.BaryTet", "generated/submodules/mymesh.utils.BaryTri", "generated/submodules/mymesh.utils.BaryTris", "generated/submodules/mymesh.utils.CalcFaceNormal", "generated/submodules/mymesh.utils.Centroids", "generated/submodules/mymesh.utils.CleanupDegenerateElements", "generated/submodules/mymesh.utils.DeleteDegenerateElements", "generated/submodules/mymesh.utils.DeleteDuplicateNodes", "generated/submodules/mymesh.utils.DetectFeatures", "generated/submodules/mymesh.utils.DilateVoxel", "generated/submodules/mymesh.utils.ErodeVoxel", "generated/submodules/mymesh.utils.ExtractRagged", "generated/submodules/mymesh.utils.Face2NodeNormal", "generated/submodules/mymesh.utils.MVBB", "generated/submodules/mymesh.utils.MergeMesh", "generated/submodules/mymesh.utils.MirrorMesh", "generated/submodules/mymesh.utils.PadRagged", "generated/submodules/mymesh.utils.Project2Surface", "generated/submodules/mymesh.utils.RelabelNodes", "generated/submodules/mymesh.utils.SortRaggedByLength", "generated/submodules/mymesh.utils.SplitRaggedByLength", "generated/submodules/mymesh.utils.SurfMapping", "generated/submodules/mymesh.utils.TetMeshVol", "generated/submodules/mymesh.utils.TriSurfVol", "generated/submodules/mymesh.utils.ValueMapping", "generated/submodules/mymesh.utils.getConnectedElements", "generated/submodules/mymesh.utils.getConnectedNodes", "generated/submodules/mymesh.utils.getElemConnectivity", "generated/submodules/mymesh.utils.getElemNeighbors", "generated/submodules/mymesh.utils.getNodeNeighborhood", "generated/submodules/mymesh.utils.getNodeNeighborhoodByRadius", "generated/submodules/mymesh.utils.getNodeNeighbors", "generated/submodules/mymesh.utils.identify_type", "generated/submodules/mymesh.utils.makePyramidLayer", "generated/submodules/mymesh.visualize.FaceColor", "generated/submodules/mymesh.visualize.GetTheme", "generated/submodules/mymesh.visualize.ParseColor", "generated/submodules/mymesh.visualize.View", "generated/submodules/mymesh.visualize.set_vispy_backend", "guide", "guide/connectivity", "guide/csg", "guide/elem_types", "guide/image_meshing", "guide/implicit_meshing", "guide/installation", "guide/io", "guide/matlab", "guide/mesh_class", "guide/ref", "guide/what_mesh", "index", "sg_execution_times", "theory", "theory/contour", "theory/curvature", "theory/delaunay", "theory/flips23", "theory/implicit", "theory/improvement", "theory/octree", "theory/rays", "theory/springsmooth"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["api.rst", "dev.rst", "examples/MeshAnalysis/demo_curvature.rst", "examples/MeshAnalysis/index.rst", "examples/MeshAnalysis/sg_execution_times.rst", "examples/MeshGeneration/demo_heart.rst", "examples/MeshGeneration/demo_mixed-top.rst", "examples/MeshGeneration/demo_pasta.rst", "examples/MeshGeneration/index.rst", "examples/MeshGeneration/sg_execution_times.rst", "examples/index.rst", "examples/sg_execution_times.rst", "generated/mymesh.booleans.rst", "generated/mymesh.contour.rst", "generated/mymesh.converter.rst", "generated/mymesh.curvature.rst", "generated/mymesh.delaunay.rst", "generated/mymesh.image.rst", "generated/mymesh.implicit.rst", "generated/mymesh.improvement.rst", "generated/mymesh.mesh.rst", "generated/mymesh.mesh.mesh.BoundaryConn.rst", "generated/mymesh.mesh.mesh.BoundaryNodes.rst", "generated/mymesh.mesh.mesh.Centroids.rst", "generated/mymesh.mesh.mesh.Clip.rst", "generated/mymesh.mesh.mesh.Contour.rst", "generated/mymesh.mesh.mesh.CreateBoundaryLayer.rst", "generated/mymesh.mesh.mesh.Crop.rst", "generated/mymesh.mesh.mesh.EdgeConn.rst", "generated/mymesh.mesh.mesh.EdgeElemConn.rst", "generated/mymesh.mesh.mesh.Edges.rst", "generated/mymesh.mesh.mesh.ElemConn.rst", "generated/mymesh.mesh.mesh.ElemNeighbors.rst", "generated/mymesh.mesh.mesh.ElemNormals.rst", "generated/mymesh.mesh.mesh.EulerCharacteristic.rst", "generated/mymesh.mesh.mesh.FaceConn.rst", "generated/mymesh.mesh.mesh.FaceElemConn.rst", "generated/mymesh.mesh.mesh.Faces.rst", "generated/mymesh.mesh.mesh.Genus.rst", "generated/mymesh.mesh.mesh.Mirror.rst", "generated/mymesh.mesh.mesh.ND.rst", "generated/mymesh.mesh.mesh.NEdge.rst", "generated/mymesh.mesh.mesh.NElem.rst", "generated/mymesh.mesh.mesh.NFace.rst", "generated/mymesh.mesh.mesh.NNode.rst", "generated/mymesh.mesh.mesh.NodeNeighbors.rst", "generated/mymesh.mesh.mesh.NodeNormals.rst", "generated/mymesh.mesh.mesh.NodeNormalsMethod.rst", "generated/mymesh.mesh.mesh.RenumberFacesBySet.rst", "generated/mymesh.mesh.mesh.RenumberNodesBySet.rst", "generated/mymesh.mesh.mesh.SurfConn.rst", "generated/mymesh.mesh.mesh.SurfElemConn.rst", "generated/mymesh.mesh.mesh.SurfNodeNeighbors.rst", "generated/mymesh.mesh.mesh.SurfNodes.rst", "generated/mymesh.mesh.mesh.Surface.rst", "generated/mymesh.mesh.mesh.Threshold.rst", "generated/mymesh.mesh.mesh.addEdges.rst", "generated/mymesh.mesh.mesh.addElems.rst", "generated/mymesh.mesh.mesh.addFaces.rst", "generated/mymesh.mesh.mesh.addNodes.rst", "generated/mymesh.mesh.mesh.cells.rst", "generated/mymesh.mesh.mesh.cleanup.rst", "generated/mymesh.mesh.mesh.copy.rst", "generated/mymesh.mesh.mesh.getCurvature.rst", "generated/mymesh.mesh.mesh.getQuality.rst", "generated/mymesh.mesh.mesh.identify_type.rst", "generated/mymesh.mesh.mesh.imread.rst", "generated/mymesh.mesh.mesh.merge.rst", "generated/mymesh.mesh.mesh.meshio2mymesh.rst", "generated/mymesh.mesh.mesh.mymesh2meshio.rst", "generated/mymesh.mesh.mesh.plot.rst", "generated/mymesh.mesh.mesh.points.rst", "generated/mymesh.mesh.mesh.read.rst", "generated/mymesh.mesh.mesh.removeElems.rst", "generated/mymesh.mesh.mesh.reset.rst", "generated/mymesh.mesh.mesh.validate.rst", "generated/mymesh.mesh.mesh.view.rst", "generated/mymesh.mesh.mesh.write.rst", "generated/mymesh.octree.rst", "generated/mymesh.primitives.rst", "generated/mymesh.quality.rst", "generated/mymesh.rays.rst", "generated/mymesh.utils.rst", "generated/mymesh.visualize.rst", "generated/submodules/mymesh.booleans.MeshBooleans.rst", "generated/submodules/mymesh.booleans.SplitMesh.rst", "generated/submodules/mymesh.contour.Adaptive.rst", "generated/submodules/mymesh.contour.MarchingCubes.rst", "generated/submodules/mymesh.contour.MarchingCubesImage.rst", "generated/submodules/mymesh.contour.MarchingSquares.rst", "generated/submodules/mymesh.contour.MarchingSquaresImage.rst", "generated/submodules/mymesh.contour.MarchingTetrahedra.rst", "generated/submodules/mymesh.converter.EdgesByElement.rst", "generated/submodules/mymesh.converter.edges2unique.rst", "generated/submodules/mymesh.converter.faces2surface.rst", "generated/submodules/mymesh.converter.faces2unique.rst", "generated/submodules/mymesh.converter.hex2edges.rst", "generated/submodules/mymesh.converter.hex2faces.rst", "generated/submodules/mymesh.converter.hex2tet.rst", "generated/submodules/mymesh.converter.im2voxel.rst", "generated/submodules/mymesh.converter.polygon2edges.rst", "generated/submodules/mymesh.converter.pyramid2edges.rst", "generated/submodules/mymesh.converter.pyramid2faces.rst", "generated/submodules/mymesh.converter.pyramid2tet.rst", "generated/submodules/mymesh.converter.quad2edges.rst", "generated/submodules/mymesh.converter.quad2tri.rst", "generated/submodules/mymesh.converter.solid2edges.rst", "generated/submodules/mymesh.converter.solid2faces.rst", "generated/submodules/mymesh.converter.solid2surface.rst", "generated/submodules/mymesh.converter.solid2tets.rst", "generated/submodules/mymesh.converter.surf2dual.rst", "generated/submodules/mymesh.converter.surf2edges.rst", "generated/submodules/mymesh.converter.surf2tris.rst", "generated/submodules/mymesh.converter.surf2voxel.rst", "generated/submodules/mymesh.converter.tet102tet4.rst", "generated/submodules/mymesh.converter.tet2edges.rst", "generated/submodules/mymesh.converter.tet2faces.rst", "generated/submodules/mymesh.converter.tet42tet10.rst", "generated/submodules/mymesh.converter.tri2edges.rst", "generated/submodules/mymesh.converter.voxel2im.rst", "generated/submodules/mymesh.converter.wedge2edges.rst", "generated/submodules/mymesh.converter.wedge2faces.rst", "generated/submodules/mymesh.converter.wedge2tet.rst", "generated/submodules/mymesh.curvature.AnalyticalCurvature.rst", "generated/submodules/mymesh.curvature.CubicFit.rst", "generated/submodules/mymesh.curvature.Curvedness.rst", "generated/submodules/mymesh.curvature.GaussianCurvature.rst", "generated/submodules/mymesh.curvature.ImageCurvature.rst", "generated/submodules/mymesh.curvature.MeanCurvature.rst", "generated/submodules/mymesh.curvature.NormCurve.rst", "generated/submodules/mymesh.curvature.QuadFit.rst", "generated/submodules/mymesh.curvature.ShapeCategory.rst", "generated/submodules/mymesh.curvature.ShapeIndex.rst", "generated/submodules/mymesh.delaunay.BowyerWatson2d.rst", "generated/submodules/mymesh.delaunay.BowyerWatson3d.rst", "generated/submodules/mymesh.delaunay.ConvexHull.rst", "generated/submodules/mymesh.delaunay.ConvexHullFanTriangulation.rst", "generated/submodules/mymesh.delaunay.ConvexHull_GiftWrapping.rst", "generated/submodules/mymesh.delaunay.SciPy.rst", "generated/submodules/mymesh.delaunay.Triangle.rst", "generated/submodules/mymesh.delaunay.TriangleSplittingTriangulation.rst", "generated/submodules/mymesh.delaunay.Triangulate.rst", "generated/submodules/mymesh.image.SurfaceMesh.rst", "generated/submodules/mymesh.image.SurfaceNodeOptimization.rst", "generated/submodules/mymesh.image.TetMesh.rst", "generated/submodules/mymesh.image.VoxelMesh.rst", "generated/submodules/mymesh.image.read.rst", "generated/submodules/mymesh.image.write.rst", "generated/submodules/mymesh.implicit.SurfaceMesh.rst", "generated/submodules/mymesh.implicit.SurfaceNodeOptimization.rst", "generated/submodules/mymesh.implicit.TetMesh.rst", "generated/submodules/mymesh.implicit.VoxelMesh.rst", "generated/submodules/mymesh.implicit.box.rst", "generated/submodules/mymesh.implicit.cylinder.rst", "generated/submodules/mymesh.implicit.diamond.rst", "generated/submodules/mymesh.implicit.diff.rst", "generated/submodules/mymesh.implicit.difff.rst", "generated/submodules/mymesh.implicit.diffs.rst", "generated/submodules/mymesh.implicit.grid2fun.rst", "generated/submodules/mymesh.implicit.grid2grad.rst", "generated/submodules/mymesh.implicit.gyroid.rst", "generated/submodules/mymesh.implicit.intersection.rst", "generated/submodules/mymesh.implicit.intersectionf.rst", "generated/submodules/mymesh.implicit.intersections.rst", "generated/submodules/mymesh.implicit.lidinoid.rst", "generated/submodules/mymesh.implicit.mesh2sdf.rst", "generated/submodules/mymesh.implicit.mesh2udf.rst", "generated/submodules/mymesh.implicit.neovius.rst", "generated/submodules/mymesh.implicit.offset.rst", "generated/submodules/mymesh.implicit.primitive.rst", "generated/submodules/mymesh.implicit.rMax.rst", "generated/submodules/mymesh.implicit.rMin.rst", "generated/submodules/mymesh.implicit.sphere.rst", "generated/submodules/mymesh.implicit.thicken.rst", "generated/submodules/mymesh.implicit.thickenf.rst", "generated/submodules/mymesh.implicit.thickens.rst", "generated/submodules/mymesh.implicit.torus.rst", "generated/submodules/mymesh.implicit.union.rst", "generated/submodules/mymesh.implicit.unionf.rst", "generated/submodules/mymesh.implicit.unions.rst", "generated/submodules/mymesh.implicit.xplane.rst", "generated/submodules/mymesh.implicit.yplane.rst", "generated/submodules/mymesh.implicit.zplane.rst", "generated/submodules/mymesh.improvement.GeoTransformSmoothing.rst", "generated/submodules/mymesh.improvement.LocalLaplacianSmoothing.rst", "generated/submodules/mymesh.improvement.NodeSpringSmoothing.rst", "generated/submodules/mymesh.improvement.SegmentSpringSmoothing.rst", "generated/submodules/mymesh.improvement.SmartLaplacianSmoothing.rst", "generated/submodules/mymesh.improvement.TangentialLaplacianSmoothing.rst", "generated/submodules/mymesh.improvement.TetContract.rst", "generated/submodules/mymesh.improvement.TetFlip.rst", "generated/submodules/mymesh.improvement.TetImprove.rst", "generated/submodules/mymesh.improvement.TetSplit.rst", "generated/submodules/mymesh.octree.Function2Octree.rst", "generated/submodules/mymesh.octree.Octree2Dual.rst", "generated/submodules/mymesh.octree.Octree2Voxel.rst", "generated/submodules/mymesh.octree.Points2Octree.rst", "generated/submodules/mymesh.octree.Print.rst", "generated/submodules/mymesh.octree.SearchOctree.rst", "generated/submodules/mymesh.octree.SearchOctreeTri.rst", "generated/submodules/mymesh.octree.Surface2Octree.rst", "generated/submodules/mymesh.octree.Voxel2Octree.rst", "generated/submodules/mymesh.octree.getAllLeaf.rst", "generated/submodules/mymesh.primitives.Box.rst", "generated/submodules/mymesh.primitives.Circle.rst", "generated/submodules/mymesh.primitives.CirclePt.rst", "generated/submodules/mymesh.primitives.Cylinder.rst", "generated/submodules/mymesh.primitives.Extrude.rst", "generated/submodules/mymesh.primitives.Grid.rst", "generated/submodules/mymesh.primitives.Grid2D.rst", "generated/submodules/mymesh.primitives.Line.rst", "generated/submodules/mymesh.primitives.Plane.rst", "generated/submodules/mymesh.primitives.Revolve.rst", "generated/submodules/mymesh.primitives.Sphere.rst", "generated/submodules/mymesh.primitives.Torus.rst", "generated/submodules/mymesh.quality.Area.rst", "generated/submodules/mymesh.quality.AspectRatio.rst", "generated/submodules/mymesh.quality.InverseOrthogonalQuality.rst", "generated/submodules/mymesh.quality.InverseOrthogonality.rst", "generated/submodules/mymesh.quality.MaxDihedral.rst", "generated/submodules/mymesh.quality.MeanRatio.rst", "generated/submodules/mymesh.quality.MinDihedral.rst", "generated/submodules/mymesh.quality.OrthogonalQuality.rst", "generated/submodules/mymesh.quality.Orthogonality.rst", "generated/submodules/mymesh.quality.Skewness.rst", "generated/submodules/mymesh.quality.SurfDihedralAngles.rst", "generated/submodules/mymesh.quality.Volume.rst", "generated/submodules/mymesh.quality.dihedralAngles.rst", "generated/submodules/mymesh.quality.equiangular_skewness.rst", "generated/submodules/mymesh.quality.quad_skewness.rst", "generated/submodules/mymesh.quality.tet_vol_skewness.rst", "generated/submodules/mymesh.quality.tri_skewness.rst", "generated/submodules/mymesh.rays.BoxTrianglesIntersection.rst", "generated/submodules/mymesh.rays.PlaneBoxIntersection.rst", "generated/submodules/mymesh.rays.PlaneSurfIntersection.rst", "generated/submodules/mymesh.rays.PlaneTriangleIntersection.rst", "generated/submodules/mymesh.rays.PlaneTrianglesIntersection.rst", "generated/submodules/mymesh.rays.PointInBoundary.rst", "generated/submodules/mymesh.rays.PointInBox.rst", "generated/submodules/mymesh.rays.PointInSurf.rst", "generated/submodules/mymesh.rays.PointInTri.rst", "generated/submodules/mymesh.rays.PointsInSurf.rst", "generated/submodules/mymesh.rays.PointsInTris.rst", "generated/submodules/mymesh.rays.PointsInVoxel.rst", "generated/submodules/mymesh.rays.RayBoxIntersection.rst", "generated/submodules/mymesh.rays.RayBoxesIntersection.rst", "generated/submodules/mymesh.rays.RayOctreeIntersection.rst", "generated/submodules/mymesh.rays.RaySegmentIntersection.rst", "generated/submodules/mymesh.rays.RaySegmentsIntersection.rst", "generated/submodules/mymesh.rays.RaySurfIntersection.rst", "generated/submodules/mymesh.rays.RayTriangleIntersection.rst", "generated/submodules/mymesh.rays.RayTrianglesIntersection.rst", "generated/submodules/mymesh.rays.RaysSurfIntersection.rst", "generated/submodules/mymesh.rays.RaysTrianglesIntersection.rst", "generated/submodules/mymesh.rays.SegmentSegmentIntersection.rst", "generated/submodules/mymesh.rays.SegmentsSegmentsIntersection.rst", "generated/submodules/mymesh.rays.SurfSelfIntersection.rst", "generated/submodules/mymesh.rays.SurfSurfIntersection.rst", "generated/submodules/mymesh.rays.TriangleBoxIntersection.rst", "generated/submodules/mymesh.rays.TriangleTriangleIntersection.rst", "generated/submodules/mymesh.rays.TriangleTriangleIntersectionPt.rst", "generated/submodules/mymesh.rays.TrianglesTrianglesIntersection.rst", "generated/submodules/mymesh.rays.TrianglesTrianglesIntersectionPts.rst", "generated/submodules/mymesh.utils.AABB.rst", "generated/submodules/mymesh.utils.BaryTet.rst", "generated/submodules/mymesh.utils.BaryTri.rst", "generated/submodules/mymesh.utils.BaryTris.rst", "generated/submodules/mymesh.utils.CalcFaceNormal.rst", "generated/submodules/mymesh.utils.Centroids.rst", "generated/submodules/mymesh.utils.CleanupDegenerateElements.rst", "generated/submodules/mymesh.utils.DeleteDegenerateElements.rst", "generated/submodules/mymesh.utils.DeleteDuplicateNodes.rst", "generated/submodules/mymesh.utils.DetectFeatures.rst", "generated/submodules/mymesh.utils.DilateVoxel.rst", "generated/submodules/mymesh.utils.ErodeVoxel.rst", "generated/submodules/mymesh.utils.ExtractRagged.rst", "generated/submodules/mymesh.utils.Face2NodeNormal.rst", "generated/submodules/mymesh.utils.MVBB.rst", "generated/submodules/mymesh.utils.MergeMesh.rst", "generated/submodules/mymesh.utils.MirrorMesh.rst", "generated/submodules/mymesh.utils.PadRagged.rst", "generated/submodules/mymesh.utils.Project2Surface.rst", "generated/submodules/mymesh.utils.RelabelNodes.rst", "generated/submodules/mymesh.utils.SortRaggedByLength.rst", "generated/submodules/mymesh.utils.SplitRaggedByLength.rst", "generated/submodules/mymesh.utils.SurfMapping.rst", "generated/submodules/mymesh.utils.TetMeshVol.rst", "generated/submodules/mymesh.utils.TriSurfVol.rst", "generated/submodules/mymesh.utils.ValueMapping.rst", "generated/submodules/mymesh.utils.getConnectedElements.rst", "generated/submodules/mymesh.utils.getConnectedNodes.rst", "generated/submodules/mymesh.utils.getElemConnectivity.rst", "generated/submodules/mymesh.utils.getElemNeighbors.rst", "generated/submodules/mymesh.utils.getNodeNeighborhood.rst", "generated/submodules/mymesh.utils.getNodeNeighborhoodByRadius.rst", "generated/submodules/mymesh.utils.getNodeNeighbors.rst", "generated/submodules/mymesh.utils.identify_type.rst", "generated/submodules/mymesh.utils.makePyramidLayer.rst", "generated/submodules/mymesh.visualize.FaceColor.rst", "generated/submodules/mymesh.visualize.GetTheme.rst", "generated/submodules/mymesh.visualize.ParseColor.rst", "generated/submodules/mymesh.visualize.View.rst", "generated/submodules/mymesh.visualize.set_vispy_backend.rst", "guide.rst", "guide/connectivity.rst", "guide/csg.rst", "guide/elem_types.rst", "guide/image_meshing.rst", "guide/implicit_meshing.rst", "guide/installation.rst", "guide/io.rst", "guide/matlab.rst", "guide/mesh_class.rst", "guide/ref.rst", "guide/what_mesh.rst", "index.rst", "sg_execution_times.rst", "theory.rst", "theory/contour.rst", "theory/curvature.rst", "theory/delaunay.rst", "theory/flips23.rst", "theory/implicit.rst", "theory/improvement.rst", "theory/octree.rst", "theory/rays.rst", "theory/springsmooth.rst"], "indexentries": {"aabb() (in module mymesh.utils)": [[263, "mymesh.utils.AABB", false]], "adaptive() (in module mymesh.contour)": [[86, "mymesh.contour.Adaptive", false]], "addedges() (mymesh.mesh.mesh method)": [[56, "mymesh.mesh.mesh.addEdges", false]], "addelems() (mymesh.mesh.mesh method)": [[57, "mymesh.mesh.mesh.addElems", false]], "addfaces() (mymesh.mesh.mesh method)": [[58, "mymesh.mesh.mesh.addFaces", false]], "addnodes() (mymesh.mesh.mesh method)": [[59, "mymesh.mesh.mesh.addNodes", false]], "analyticalcurvature() (in module mymesh.curvature)": [[123, "mymesh.curvature.AnalyticalCurvature", false]], "area() (in module mymesh.quality)": [[215, "mymesh.quality.Area", false]], "aspectratio() (in module mymesh.quality)": [[216, "mymesh.quality.AspectRatio", false]], "barytet() (in module mymesh.utils)": [[264, "mymesh.utils.BaryTet", false]], "barytri() (in module mymesh.utils)": [[265, "mymesh.utils.BaryTri", false]], "barytris() (in module mymesh.utils)": [[266, "mymesh.utils.BaryTris", false]], "boundaryconn (mymesh.mesh.mesh property)": [[21, "mymesh.mesh.mesh.BoundaryConn", false]], "boundarynodes (mymesh.mesh.mesh property)": [[22, "mymesh.mesh.mesh.BoundaryNodes", false]], "bowyerwatson2d() (in module mymesh.delaunay)": [[133, "mymesh.delaunay.BowyerWatson2d", false]], "bowyerwatson3d() (in module mymesh.delaunay)": [[134, "mymesh.delaunay.BowyerWatson3d", false]], "box() (in module mymesh.implicit)": [[152, "mymesh.implicit.box", false]], "box() (in module mymesh.primitives)": [[203, "mymesh.primitives.Box", false]], "boxtrianglesintersection() (in module mymesh.rays)": [[232, "mymesh.rays.BoxTrianglesIntersection", false]], "calcfacenormal() (in module mymesh.utils)": [[267, "mymesh.utils.CalcFaceNormal", false]], "cells (mymesh.mesh.mesh property)": [[60, "mymesh.mesh.mesh.cells", false]], "centroids (mymesh.mesh.mesh property)": [[23, "mymesh.mesh.mesh.Centroids", false]], "centroids() (in module mymesh.utils)": [[268, "mymesh.utils.Centroids", false]], "circle() (in module mymesh.primitives)": [[204, "mymesh.primitives.Circle", false]], "circlept() (in module mymesh.primitives)": [[205, "mymesh.primitives.CirclePt", false]], "cleanup() (mymesh.mesh.mesh method)": [[61, "mymesh.mesh.mesh.cleanup", false]], "cleanupdegenerateelements() (in module mymesh.utils)": [[269, "mymesh.utils.CleanupDegenerateElements", false]], "clip() (mymesh.mesh.mesh method)": [[24, "mymesh.mesh.mesh.Clip", false]], "contour() (mymesh.mesh.mesh method)": [[25, "mymesh.mesh.mesh.Contour", false]], "convexhull() (in module mymesh.delaunay)": [[135, "mymesh.delaunay.ConvexHull", false]], "convexhull_giftwrapping() (in module mymesh.delaunay)": [[137, "mymesh.delaunay.ConvexHull_GiftWrapping", false]], "convexhullfantriangulation() (in module mymesh.delaunay)": [[136, "mymesh.delaunay.ConvexHullFanTriangulation", false]], "copy() (mymesh.mesh.mesh method)": [[62, "mymesh.mesh.mesh.copy", false]], "createboundarylayer() (mymesh.mesh.mesh method)": [[26, "mymesh.mesh.mesh.CreateBoundaryLayer", false]], "crop() (mymesh.mesh.mesh method)": [[27, "mymesh.mesh.mesh.Crop", false]], "cubicfit() (in module mymesh.curvature)": [[124, "mymesh.curvature.CubicFit", false]], "curvedness() (in module mymesh.curvature)": [[125, "mymesh.curvature.Curvedness", false]], "cylinder() (in module mymesh.implicit)": [[153, "mymesh.implicit.cylinder", false]], "cylinder() (in module mymesh.primitives)": [[206, "mymesh.primitives.Cylinder", false]], "deletedegenerateelements() (in module mymesh.utils)": [[270, "mymesh.utils.DeleteDegenerateElements", false]], "deleteduplicatenodes() (in module mymesh.utils)": [[271, "mymesh.utils.DeleteDuplicateNodes", false]], "detectfeatures() (in module mymesh.utils)": [[272, "mymesh.utils.DetectFeatures", false]], "diamond() (in module mymesh.implicit)": [[154, "mymesh.implicit.diamond", false]], "diff() (in module mymesh.implicit)": [[155, "mymesh.implicit.diff", false]], "difff() (in module mymesh.implicit)": [[156, "mymesh.implicit.difff", false]], "diffs() (in module mymesh.implicit)": [[157, "mymesh.implicit.diffs", false]], "dihedralangles() (in module mymesh.quality)": [[227, "mymesh.quality.dihedralAngles", false]], "dilatevoxel() (in module mymesh.utils)": [[273, "mymesh.utils.DilateVoxel", false]], "edgeconn (mymesh.mesh.mesh property)": [[28, "mymesh.mesh.mesh.EdgeConn", false]], "edgeelemconn (mymesh.mesh.mesh property)": [[29, "mymesh.mesh.mesh.EdgeElemConn", false]], "edges (mymesh.mesh.mesh property)": [[30, "mymesh.mesh.mesh.Edges", false]], "edges2unique() (in module mymesh.converter)": [[93, "mymesh.converter.edges2unique", false]], "edgesbyelement() (in module mymesh.converter)": [[92, "mymesh.converter.EdgesByElement", false]], "edgesets (mymesh.mesh attribute)": [[20, "mymesh.mesh.EdgeSets", false]], "elemconn (mymesh.mesh.mesh property)": [[31, "mymesh.mesh.mesh.ElemConn", false]], "elemdata (mymesh.mesh attribute)": [[20, "mymesh.mesh.ElemData", false]], "elemneighbors (mymesh.mesh.mesh property)": [[32, "mymesh.mesh.mesh.ElemNeighbors", false]], "elemnormals (mymesh.mesh.mesh property)": [[33, "mymesh.mesh.mesh.ElemNormals", false]], "elemsets (mymesh.mesh attribute)": [[20, "mymesh.mesh.ElemSets", false]], "equiangular_skewness() (in module mymesh.quality)": [[228, "mymesh.quality.equiangular_skewness", false]], "erodevoxel() (in module mymesh.utils)": [[274, "mymesh.utils.ErodeVoxel", false]], "eulercharacteristic (mymesh.mesh.mesh property)": [[34, "mymesh.mesh.mesh.EulerCharacteristic", false]], "extractragged() (in module mymesh.utils)": [[275, "mymesh.utils.ExtractRagged", false]], "extrude() (in module mymesh.primitives)": [[207, "mymesh.primitives.Extrude", false]], "face2nodenormal() (in module mymesh.utils)": [[276, "mymesh.utils.Face2NodeNormal", false]], "facecolor() (in module mymesh.visualize)": [[298, "mymesh.visualize.FaceColor", false]], "faceconn (mymesh.mesh.mesh property)": [[35, "mymesh.mesh.mesh.FaceConn", false]], "faceelemconn (mymesh.mesh.mesh property)": [[36, "mymesh.mesh.mesh.FaceElemConn", false]], "faces (mymesh.mesh.mesh property)": [[37, "mymesh.mesh.mesh.Faces", false]], "faces2surface() (in module mymesh.converter)": [[94, "mymesh.converter.faces2surface", false]], "faces2unique() (in module mymesh.converter)": [[95, "mymesh.converter.faces2unique", false]], "facesets (mymesh.mesh attribute)": [[20, "mymesh.mesh.FaceSets", false]], "function2octree() (in module mymesh.octree)": [[193, "mymesh.octree.Function2Octree", false]], "gaussiancurvature() (in module mymesh.curvature)": [[126, "mymesh.curvature.GaussianCurvature", false]], "genus (mymesh.mesh.mesh property)": [[38, "mymesh.mesh.mesh.Genus", false]], "geotransformsmoothing() (in module mymesh.improvement)": [[183, "mymesh.improvement.GeoTransformSmoothing", false]], "getallleaf() (in module mymesh.octree)": [[202, "mymesh.octree.getAllLeaf", false]], "getconnectedelements() (in module mymesh.utils)": [[289, "mymesh.utils.getConnectedElements", false]], "getconnectednodes() (in module mymesh.utils)": [[290, "mymesh.utils.getConnectedNodes", false]], "getcurvature() (mymesh.mesh.mesh method)": [[63, "mymesh.mesh.mesh.getCurvature", false]], "getelemconnectivity() (in module mymesh.utils)": [[291, "mymesh.utils.getElemConnectivity", false]], "getelemneighbors() (in module mymesh.utils)": [[292, "mymesh.utils.getElemNeighbors", false]], "getnodeneighborhood() (in module mymesh.utils)": [[293, "mymesh.utils.getNodeNeighborhood", false]], "getnodeneighborhoodbyradius() (in module mymesh.utils)": [[294, "mymesh.utils.getNodeNeighborhoodByRadius", false]], "getnodeneighbors() (in module mymesh.utils)": [[295, "mymesh.utils.getNodeNeighbors", false]], "getquality() (mymesh.mesh.mesh method)": [[64, "mymesh.mesh.mesh.getQuality", false]], "gettheme() (in module mymesh.visualize)": [[299, "mymesh.visualize.GetTheme", false]], "grid() (in module mymesh.primitives)": [[208, "mymesh.primitives.Grid", false]], "grid2d() (in module mymesh.primitives)": [[209, "mymesh.primitives.Grid2D", false]], "grid2fun() (in module mymesh.implicit)": [[158, "mymesh.implicit.grid2fun", false]], "grid2grad() (in module mymesh.implicit)": [[159, "mymesh.implicit.grid2grad", false]], "gyroid() (in module mymesh.implicit)": [[160, "mymesh.implicit.gyroid", false]], "hex2edges() (in module mymesh.converter)": [[96, "mymesh.converter.hex2edges", false]], "hex2faces() (in module mymesh.converter)": [[97, "mymesh.converter.hex2faces", false]], "hex2tet() (in module mymesh.converter)": [[98, "mymesh.converter.hex2tet", false]], "identify_type() (in module mymesh.utils)": [[296, "mymesh.utils.identify_type", false]], "identify_type() (mymesh.mesh.mesh method)": [[65, "mymesh.mesh.mesh.identify_type", false]], "im2voxel() (in module mymesh.converter)": [[99, "mymesh.converter.im2voxel", false]], "imagecurvature() (in module mymesh.curvature)": [[127, "mymesh.curvature.ImageCurvature", false]], "imread() (mymesh.mesh.mesh method)": [[66, "mymesh.mesh.mesh.imread", false]], "intersection() (in module mymesh.implicit)": [[161, "mymesh.implicit.intersection", false]], "intersectionf() (in module mymesh.implicit)": [[162, "mymesh.implicit.intersectionf", false]], "intersections() (in module mymesh.implicit)": [[163, "mymesh.implicit.intersections", false]], "inverseorthogonality() (in module mymesh.quality)": [[218, "mymesh.quality.InverseOrthogonality", false]], "inverseorthogonalquality() (in module mymesh.quality)": [[217, "mymesh.quality.InverseOrthogonalQuality", false]], "lidinoid() (in module mymesh.implicit)": [[164, "mymesh.implicit.lidinoid", false]], "line() (in module mymesh.primitives)": [[210, "mymesh.primitives.Line", false]], "locallaplaciansmoothing() (in module mymesh.improvement)": [[184, "mymesh.improvement.LocalLaplacianSmoothing", false]], "makepyramidlayer() (in module mymesh.utils)": [[297, "mymesh.utils.makePyramidLayer", false]], "marchingcubes() (in module mymesh.contour)": [[87, "mymesh.contour.MarchingCubes", false]], "marchingcubesimage() (in module mymesh.contour)": [[88, "mymesh.contour.MarchingCubesImage", false]], "marchingsquares() (in module mymesh.contour)": [[89, "mymesh.contour.MarchingSquares", false]], "marchingsquaresimage() (in module mymesh.contour)": [[90, "mymesh.contour.MarchingSquaresImage", false]], "marchingtetrahedra() (in module mymesh.contour)": [[91, "mymesh.contour.MarchingTetrahedra", false]], "maxdihedral() (in module mymesh.quality)": [[219, "mymesh.quality.MaxDihedral", false]], "meancurvature() (in module mymesh.curvature)": [[128, "mymesh.curvature.MeanCurvature", false]], "meanratio() (in module mymesh.quality)": [[220, "mymesh.quality.MeanRatio", false]], "merge() (mymesh.mesh.mesh method)": [[67, "mymesh.mesh.mesh.merge", false]], "mergemesh() (in module mymesh.utils)": [[278, "mymesh.utils.MergeMesh", false]], "mesh (class in mymesh)": [[20, "mymesh.mesh", false]], "mesh2sdf() (in module mymesh.implicit)": [[165, "mymesh.implicit.mesh2sdf", false]], "mesh2udf() (in module mymesh.implicit)": [[166, "mymesh.implicit.mesh2udf", false]], "meshbooleans() (in module mymesh.booleans)": [[84, "mymesh.booleans.MeshBooleans", false]], "meshio2mymesh() (mymesh.mesh.mesh method)": [[68, "mymesh.mesh.mesh.meshio2mymesh", false]], "mindihedral() (in module mymesh.quality)": [[221, "mymesh.quality.MinDihedral", false]], "mirror() (mymesh.mesh.mesh method)": [[39, "mymesh.mesh.mesh.Mirror", false]], "mirrormesh() (in module mymesh.utils)": [[279, "mymesh.utils.MirrorMesh", false]], "module": [[0, "module-mymesh", false], [12, "module-mymesh.booleans", false], [13, "module-mymesh.contour", false], [14, "module-mymesh.converter", false], [15, "module-mymesh.curvature", false], [16, "module-mymesh.delaunay", false], [17, "module-mymesh.image", false], [18, "module-mymesh.implicit", false], [19, "module-mymesh.improvement", false], [78, "module-mymesh.octree", false], [79, "module-mymesh.primitives", false], [80, "module-mymesh.quality", false], [81, "module-mymesh.rays", false], [82, "module-mymesh.utils", false], [83, "module-mymesh.visualize", false]], "mvbb() (in module mymesh.utils)": [[277, "mymesh.utils.MVBB", false]], "mymesh": [[0, "module-mymesh", false]], "mymesh.booleans": [[12, "module-mymesh.booleans", false]], "mymesh.contour": [[13, "module-mymesh.contour", false]], "mymesh.converter": [[14, "module-mymesh.converter", false]], "mymesh.curvature": [[15, "module-mymesh.curvature", false]], "mymesh.delaunay": [[16, "module-mymesh.delaunay", false]], "mymesh.image": [[17, "module-mymesh.image", false]], "mymesh.implicit": [[18, "module-mymesh.implicit", false]], "mymesh.improvement": [[19, "module-mymesh.improvement", false]], "mymesh.octree": [[78, "module-mymesh.octree", false]], "mymesh.primitives": [[79, "module-mymesh.primitives", false]], "mymesh.quality": [[80, "module-mymesh.quality", false]], "mymesh.rays": [[81, "module-mymesh.rays", false]], "mymesh.utils": [[82, "module-mymesh.utils", false]], "mymesh.visualize": [[83, "module-mymesh.visualize", false]], "mymesh2meshio() (mymesh.mesh.mesh method)": [[69, "mymesh.mesh.mesh.mymesh2meshio", false]], "nd (mymesh.mesh.mesh property)": [[40, "mymesh.mesh.mesh.ND", false]], "nedge (mymesh.mesh.mesh property)": [[41, "mymesh.mesh.mesh.NEdge", false]], "nelem (mymesh.mesh.mesh property)": [[42, "mymesh.mesh.mesh.NElem", false]], "neovius() (in module mymesh.implicit)": [[167, "mymesh.implicit.neovius", false]], "nface (mymesh.mesh.mesh property)": [[43, "mymesh.mesh.mesh.NFace", false]], "nnode (mymesh.mesh.mesh property)": [[44, "mymesh.mesh.mesh.NNode", false]], "nodedata (mymesh.mesh attribute)": [[20, "mymesh.mesh.NodeData", false]], "nodeneighbors (mymesh.mesh.mesh property)": [[45, "mymesh.mesh.mesh.NodeNeighbors", false]], "nodenormals (mymesh.mesh.mesh property)": [[46, "mymesh.mesh.mesh.NodeNormals", false]], "nodenormalsmethod (mymesh.mesh.mesh property)": [[47, "mymesh.mesh.mesh.NodeNormalsMethod", false]], "nodesets (mymesh.mesh attribute)": [[20, "mymesh.mesh.NodeSets", false]], "nodespringsmoothing() (in module mymesh.improvement)": [[185, "mymesh.improvement.NodeSpringSmoothing", false]], "normcurve() (in module mymesh.curvature)": [[129, "mymesh.curvature.NormCurve", false]], "octree2dual() (in module mymesh.octree)": [[194, "mymesh.octree.Octree2Dual", false]], "octree2voxel() (in module mymesh.octree)": [[195, "mymesh.octree.Octree2Voxel", false]], "offset() (in module mymesh.implicit)": [[168, "mymesh.implicit.offset", false]], "orthogonality() (in module mymesh.quality)": [[223, "mymesh.quality.Orthogonality", false]], "orthogonalquality() (in module mymesh.quality)": [[222, "mymesh.quality.OrthogonalQuality", false]], "padragged() (in module mymesh.utils)": [[280, "mymesh.utils.PadRagged", false]], "parsecolor() (in module mymesh.visualize)": [[300, "mymesh.visualize.ParseColor", false]], "plane() (in module mymesh.primitives)": [[211, "mymesh.primitives.Plane", false]], "planeboxintersection() (in module mymesh.rays)": [[233, "mymesh.rays.PlaneBoxIntersection", false]], "planesurfintersection() (in module mymesh.rays)": [[234, "mymesh.rays.PlaneSurfIntersection", false]], "planetriangleintersection() (in module mymesh.rays)": [[235, "mymesh.rays.PlaneTriangleIntersection", false]], "planetrianglesintersection() (in module mymesh.rays)": [[236, "mymesh.rays.PlaneTrianglesIntersection", false]], "plot() (mymesh.mesh.mesh method)": [[70, "mymesh.mesh.mesh.plot", false]], "pointinboundary() (in module mymesh.rays)": [[237, "mymesh.rays.PointInBoundary", false]], "pointinbox() (in module mymesh.rays)": [[238, "mymesh.rays.PointInBox", false]], "pointinsurf() (in module mymesh.rays)": [[239, "mymesh.rays.PointInSurf", false]], "pointintri() (in module mymesh.rays)": [[240, "mymesh.rays.PointInTri", false]], "points (mymesh.mesh.mesh property)": [[71, "mymesh.mesh.mesh.points", false]], "points2octree() (in module mymesh.octree)": [[196, "mymesh.octree.Points2Octree", false]], "pointsinsurf() (in module mymesh.rays)": [[241, "mymesh.rays.PointsInSurf", false]], "pointsintris() (in module mymesh.rays)": [[242, "mymesh.rays.PointsInTris", false]], "pointsinvoxel() (in module mymesh.rays)": [[243, "mymesh.rays.PointsInVoxel", false]], "polygon2edges() (in module mymesh.converter)": [[100, "mymesh.converter.polygon2edges", false]], "primitive() (in module mymesh.implicit)": [[169, "mymesh.implicit.primitive", false]], "print() (in module mymesh.octree)": [[197, "mymesh.octree.Print", false]], "project2surface() (in module mymesh.utils)": [[281, "mymesh.utils.Project2Surface", false]], "pyramid2edges() (in module mymesh.converter)": [[101, "mymesh.converter.pyramid2edges", false]], "pyramid2faces() (in module mymesh.converter)": [[102, "mymesh.converter.pyramid2faces", false]], "pyramid2tet() (in module mymesh.converter)": [[103, "mymesh.converter.pyramid2tet", false]], "quad2edges() (in module mymesh.converter)": [[104, "mymesh.converter.quad2edges", false]], "quad2tri() (in module mymesh.converter)": [[105, "mymesh.converter.quad2tri", false]], "quad_skewness() (in module mymesh.quality)": [[229, "mymesh.quality.quad_skewness", false]], "quadfit() (in module mymesh.curvature)": [[130, "mymesh.curvature.QuadFit", false]], "rayboxesintersection() (in module mymesh.rays)": [[245, "mymesh.rays.RayBoxesIntersection", false]], "rayboxintersection() (in module mymesh.rays)": [[244, "mymesh.rays.RayBoxIntersection", false]], "rayoctreeintersection() (in module mymesh.rays)": [[246, "mymesh.rays.RayOctreeIntersection", false]], "raysegmentintersection() (in module mymesh.rays)": [[247, "mymesh.rays.RaySegmentIntersection", false]], "raysegmentsintersection() (in module mymesh.rays)": [[248, "mymesh.rays.RaySegmentsIntersection", false]], "rayssurfintersection() (in module mymesh.rays)": [[252, "mymesh.rays.RaysSurfIntersection", false]], "raystrianglesintersection() (in module mymesh.rays)": [[253, "mymesh.rays.RaysTrianglesIntersection", false]], "raysurfintersection() (in module mymesh.rays)": [[249, "mymesh.rays.RaySurfIntersection", false]], "raytriangleintersection() (in module mymesh.rays)": [[250, "mymesh.rays.RayTriangleIntersection", false]], "raytrianglesintersection() (in module mymesh.rays)": [[251, "mymesh.rays.RayTrianglesIntersection", false]], "read() (in module mymesh.image)": [[146, "mymesh.image.read", false]], "read() (mymesh.mesh.mesh method)": [[72, "mymesh.mesh.mesh.read", false]], "relabelnodes() (in module mymesh.utils)": [[282, "mymesh.utils.RelabelNodes", false]], "removeelems() (mymesh.mesh.mesh method)": [[73, "mymesh.mesh.mesh.removeElems", false]], "renumberfacesbyset() (mymesh.mesh.mesh method)": [[48, "mymesh.mesh.mesh.RenumberFacesBySet", false]], "renumbernodesbyset() (mymesh.mesh.mesh method)": [[49, "mymesh.mesh.mesh.RenumberNodesBySet", false]], "reset() (mymesh.mesh.mesh method)": [[74, "mymesh.mesh.mesh.reset", false]], "revolve() (in module mymesh.primitives)": [[212, "mymesh.primitives.Revolve", false]], "rmax() (in module mymesh.implicit)": [[170, "mymesh.implicit.rMax", false]], "rmin() (in module mymesh.implicit)": [[171, "mymesh.implicit.rMin", false]], "scipy() (in module mymesh.delaunay)": [[138, "mymesh.delaunay.SciPy", false]], "searchoctree() (in module mymesh.octree)": [[198, "mymesh.octree.SearchOctree", false]], "searchoctreetri() (in module mymesh.octree)": [[199, "mymesh.octree.SearchOctreeTri", false]], "segmentsegmentintersection() (in module mymesh.rays)": [[254, "mymesh.rays.SegmentSegmentIntersection", false]], "segmentspringsmoothing() (in module mymesh.improvement)": [[186, "mymesh.improvement.SegmentSpringSmoothing", false]], "segmentssegmentsintersection() (in module mymesh.rays)": [[255, "mymesh.rays.SegmentsSegmentsIntersection", false]], "set_vispy_backend() (in module mymesh.visualize)": [[302, "mymesh.visualize.set_vispy_backend", false]], "shapecategory() (in module mymesh.curvature)": [[131, "mymesh.curvature.ShapeCategory", false]], "shapeindex() (in module mymesh.curvature)": [[132, "mymesh.curvature.ShapeIndex", false]], "skewness() (in module mymesh.quality)": [[224, "mymesh.quality.Skewness", false]], "smartlaplaciansmoothing() (in module mymesh.improvement)": [[187, "mymesh.improvement.SmartLaplacianSmoothing", false]], "solid2edges() (in module mymesh.converter)": [[106, "mymesh.converter.solid2edges", false]], "solid2faces() (in module mymesh.converter)": [[107, "mymesh.converter.solid2faces", false]], "solid2surface() (in module mymesh.converter)": [[108, "mymesh.converter.solid2surface", false]], "solid2tets() (in module mymesh.converter)": [[109, "mymesh.converter.solid2tets", false]], "sortraggedbylength() (in module mymesh.utils)": [[283, "mymesh.utils.SortRaggedByLength", false]], "sphere() (in module mymesh.implicit)": [[172, "mymesh.implicit.sphere", false]], "sphere() (in module mymesh.primitives)": [[213, "mymesh.primitives.Sphere", false]], "splitmesh() (in module mymesh.booleans)": [[85, "mymesh.booleans.SplitMesh", false]], "splitraggedbylength() (in module mymesh.utils)": [[284, "mymesh.utils.SplitRaggedByLength", false]], "surf2dual() (in module mymesh.converter)": [[110, "mymesh.converter.surf2dual", false]], "surf2edges() (in module mymesh.converter)": [[111, "mymesh.converter.surf2edges", false]], "surf2tris() (in module mymesh.converter)": [[112, "mymesh.converter.surf2tris", false]], "surf2voxel() (in module mymesh.converter)": [[113, "mymesh.converter.surf2voxel", false]], "surface (mymesh.mesh.mesh property)": [[54, "mymesh.mesh.mesh.Surface", false]], "surface2octree() (in module mymesh.octree)": [[200, "mymesh.octree.Surface2Octree", false]], "surfacemesh() (in module mymesh.image)": [[142, "mymesh.image.SurfaceMesh", false]], "surfacemesh() (in module mymesh.implicit)": [[148, "mymesh.implicit.SurfaceMesh", false]], "surfacenodeoptimization() (in module mymesh.image)": [[143, "mymesh.image.SurfaceNodeOptimization", false]], "surfacenodeoptimization() (in module mymesh.implicit)": [[149, "mymesh.implicit.SurfaceNodeOptimization", false]], "surfconn (mymesh.mesh.mesh property)": [[50, "mymesh.mesh.mesh.SurfConn", false]], "surfdihedralangles() (in module mymesh.quality)": [[225, "mymesh.quality.SurfDihedralAngles", false]], "surfelemconn (mymesh.mesh.mesh property)": [[51, "mymesh.mesh.mesh.SurfElemConn", false]], "surfmapping() (in module mymesh.utils)": [[285, "mymesh.utils.SurfMapping", false]], "surfnodeneighbors (mymesh.mesh.mesh property)": [[52, "mymesh.mesh.mesh.SurfNodeNeighbors", false]], "surfnodes (mymesh.mesh.mesh property)": [[53, "mymesh.mesh.mesh.SurfNodes", false]], "surfselfintersection() (in module mymesh.rays)": [[256, "mymesh.rays.SurfSelfIntersection", false]], "surfsurfintersection() (in module mymesh.rays)": [[257, "mymesh.rays.SurfSurfIntersection", false]], "tangentiallaplaciansmoothing() (in module mymesh.improvement)": [[188, "mymesh.improvement.TangentialLaplacianSmoothing", false]], "tet102tet4() (in module mymesh.converter)": [[114, "mymesh.converter.tet102tet4", false]], "tet2edges() (in module mymesh.converter)": [[115, "mymesh.converter.tet2edges", false]], "tet2faces() (in module mymesh.converter)": [[116, "mymesh.converter.tet2faces", false]], "tet42tet10() (in module mymesh.converter)": [[117, "mymesh.converter.tet42tet10", false]], "tet_vol_skewness() (in module mymesh.quality)": [[230, "mymesh.quality.tet_vol_skewness", false]], "tetcontract() (in module mymesh.improvement)": [[189, "mymesh.improvement.TetContract", false]], "tetflip() (in module mymesh.improvement)": [[190, "mymesh.improvement.TetFlip", false]], "tetimprove() (in module mymesh.improvement)": [[191, "mymesh.improvement.TetImprove", false]], "tetmesh() (in module mymesh.image)": [[144, "mymesh.image.TetMesh", false]], "tetmesh() (in module mymesh.implicit)": [[150, "mymesh.implicit.TetMesh", false]], "tetmeshvol() (in module mymesh.utils)": [[286, "mymesh.utils.TetMeshVol", false]], "tetsplit() (in module mymesh.improvement)": [[192, "mymesh.improvement.TetSplit", false]], "thicken() (in module mymesh.implicit)": [[173, "mymesh.implicit.thicken", false]], "thickenf() (in module mymesh.implicit)": [[174, "mymesh.implicit.thickenf", false]], "thickens() (in module mymesh.implicit)": [[175, "mymesh.implicit.thickens", false]], "threshold() (mymesh.mesh.mesh method)": [[55, "mymesh.mesh.mesh.Threshold", false]], "torus() (in module mymesh.implicit)": [[176, "mymesh.implicit.torus", false]], "torus() (in module mymesh.primitives)": [[214, "mymesh.primitives.Torus", false]], "tri2edges() (in module mymesh.converter)": [[118, "mymesh.converter.tri2edges", false]], "tri_skewness() (in module mymesh.quality)": [[231, "mymesh.quality.tri_skewness", false]], "triangle() (in module mymesh.delaunay)": [[139, "mymesh.delaunay.Triangle", false]], "triangleboxintersection() (in module mymesh.rays)": [[258, "mymesh.rays.TriangleBoxIntersection", false]], "trianglesplittingtriangulation() (in module mymesh.delaunay)": [[140, "mymesh.delaunay.TriangleSplittingTriangulation", false]], "trianglestrianglesintersection() (in module mymesh.rays)": [[261, "mymesh.rays.TrianglesTrianglesIntersection", false]], "trianglestrianglesintersectionpts() (in module mymesh.rays)": [[262, "mymesh.rays.TrianglesTrianglesIntersectionPts", false]], "triangletriangleintersection() (in module mymesh.rays)": [[259, "mymesh.rays.TriangleTriangleIntersection", false]], "triangletriangleintersectionpt() (in module mymesh.rays)": [[260, "mymesh.rays.TriangleTriangleIntersectionPt", false]], "triangulate() (in module mymesh.delaunay)": [[141, "mymesh.delaunay.Triangulate", false]], "trisurfvol() (in module mymesh.utils)": [[287, "mymesh.utils.TriSurfVol", false]], "union() (in module mymesh.implicit)": [[177, "mymesh.implicit.union", false]], "unionf() (in module mymesh.implicit)": [[178, "mymesh.implicit.unionf", false]], "unions() (in module mymesh.implicit)": [[179, "mymesh.implicit.unions", false]], "validate() (mymesh.mesh.mesh method)": [[75, "mymesh.mesh.mesh.validate", false]], "valuemapping() (in module mymesh.utils)": [[288, "mymesh.utils.ValueMapping", false]], "view() (in module mymesh.visualize)": [[301, "mymesh.visualize.View", false]], "view() (mymesh.mesh.mesh method)": [[76, "mymesh.mesh.mesh.view", false]], "volume() (in module mymesh.quality)": [[226, "mymesh.quality.Volume", false]], "voxel2im() (in module mymesh.converter)": [[119, "mymesh.converter.voxel2im", false]], "voxel2octree() (in module mymesh.octree)": [[201, "mymesh.octree.Voxel2Octree", false]], "voxelmesh() (in module mymesh.image)": [[145, "mymesh.image.VoxelMesh", false]], "voxelmesh() (in module mymesh.implicit)": [[151, "mymesh.implicit.VoxelMesh", false]], "wedge2edges() (in module mymesh.converter)": [[120, "mymesh.converter.wedge2edges", false]], "wedge2faces() (in module mymesh.converter)": [[121, "mymesh.converter.wedge2faces", false]], "wedge2tet() (in module mymesh.converter)": [[122, "mymesh.converter.wedge2tet", false]], "write() (in module mymesh.image)": [[147, "mymesh.image.write", false]], "write() (mymesh.mesh.mesh method)": [[77, "mymesh.mesh.mesh.write", false]], "xplane() (in module mymesh.implicit)": [[180, "mymesh.implicit.xplane", false]], "yplane() (in module mymesh.implicit)": [[181, "mymesh.implicit.yplane", false]], "zplane() (in module mymesh.implicit)": [[182, "mymesh.implicit.zplane", false]]}, "objects": {"": [[0, 0, 0, "-", "mymesh"]], "mymesh": [[12, 0, 0, "-", "booleans"], [13, 0, 0, "-", "contour"], [14, 0, 0, "-", "converter"], [15, 0, 0, "-", "curvature"], [16, 0, 0, "-", "delaunay"], [17, 0, 0, "-", "image"], [18, 0, 0, "-", "implicit"], [19, 0, 0, "-", "improvement"], [20, 2, 1, "", "mesh"], [78, 0, 0, "-", "octree"], [79, 0, 0, "-", "primitives"], [80, 0, 0, "-", "quality"], [81, 0, 0, "-", "rays"], [82, 0, 0, "-", "utils"], [83, 0, 0, "-", "visualize"]], "mymesh.booleans": [[84, 1, 1, "", "MeshBooleans"], [85, 1, 1, "", "SplitMesh"]], "mymesh.contour": [[86, 1, 1, "", "Adaptive"], [87, 1, 1, "", "MarchingCubes"], [88, 1, 1, "", "MarchingCubesImage"], [89, 1, 1, "", "MarchingSquares"], [90, 1, 1, "", "MarchingSquaresImage"], [91, 1, 1, "", "MarchingTetrahedra"]], "mymesh.converter": [[92, 1, 1, "", "EdgesByElement"], [93, 1, 1, "", "edges2unique"], [94, 1, 1, "", "faces2surface"], [95, 1, 1, "", "faces2unique"], [96, 1, 1, "", "hex2edges"], [97, 1, 1, "", "hex2faces"], [98, 1, 1, "", "hex2tet"], [99, 1, 1, "", "im2voxel"], [100, 1, 1, "", "polygon2edges"], [101, 1, 1, "", "pyramid2edges"], [102, 1, 1, "", "pyramid2faces"], [103, 1, 1, "", "pyramid2tet"], [104, 1, 1, "", "quad2edges"], [105, 1, 1, "", "quad2tri"], [106, 1, 1, "", "solid2edges"], [107, 1, 1, "", "solid2faces"], [108, 1, 1, "", "solid2surface"], [109, 1, 1, "", "solid2tets"], [110, 1, 1, "", "surf2dual"], [111, 1, 1, "", "surf2edges"], [112, 1, 1, "", "surf2tris"], [113, 1, 1, "", "surf2voxel"], [114, 1, 1, "", "tet102tet4"], [115, 1, 1, "", "tet2edges"], [116, 1, 1, "", "tet2faces"], [117, 1, 1, "", "tet42tet10"], [118, 1, 1, "", "tri2edges"], [119, 1, 1, "", "voxel2im"], [120, 1, 1, "", "wedge2edges"], [121, 1, 1, "", "wedge2faces"], [122, 1, 1, "", "wedge2tet"]], "mymesh.curvature": [[123, 1, 1, "", "AnalyticalCurvature"], [124, 1, 1, "", "CubicFit"], [125, 1, 1, "", "Curvedness"], [126, 1, 1, "", "GaussianCurvature"], [127, 1, 1, "", "ImageCurvature"], [128, 1, 1, "", "MeanCurvature"], [129, 1, 1, "", "NormCurve"], [130, 1, 1, "", "QuadFit"], [131, 1, 1, "", "ShapeCategory"], [132, 1, 1, "", "ShapeIndex"]], "mymesh.delaunay": [[133, 1, 1, "", "BowyerWatson2d"], [134, 1, 1, "", "BowyerWatson3d"], [135, 1, 1, "", "ConvexHull"], [136, 1, 1, "", "ConvexHullFanTriangulation"], [137, 1, 1, "", "ConvexHull_GiftWrapping"], [138, 1, 1, "", "SciPy"], [139, 1, 1, "", "Triangle"], [140, 1, 1, "", "TriangleSplittingTriangulation"], [141, 1, 1, "", "Triangulate"]], "mymesh.image": [[142, 1, 1, "", "SurfaceMesh"], [143, 1, 1, "", "SurfaceNodeOptimization"], [144, 1, 1, "", "TetMesh"], [145, 1, 1, "", "VoxelMesh"], [146, 1, 1, "", "read"], [147, 1, 1, "", "write"]], "mymesh.implicit": [[148, 1, 1, "", "SurfaceMesh"], [149, 1, 1, "", "SurfaceNodeOptimization"], [150, 1, 1, "", "TetMesh"], [151, 1, 1, "", "VoxelMesh"], [152, 1, 1, "", "box"], [153, 1, 1, "", "cylinder"], [154, 1, 1, "", "diamond"], [155, 1, 1, "", "diff"], [156, 1, 1, "", "difff"], [157, 1, 1, "", "diffs"], [158, 1, 1, "", "grid2fun"], [159, 1, 1, "", "grid2grad"], [160, 1, 1, "", "gyroid"], [161, 1, 1, "", "intersection"], [162, 1, 1, "", "intersectionf"], [163, 1, 1, "", "intersections"], [164, 1, 1, "", "lidinoid"], [165, 1, 1, "", "mesh2sdf"], [166, 1, 1, "", "mesh2udf"], [167, 1, 1, "", "neovius"], [168, 1, 1, "", "offset"], [169, 1, 1, "", "primitive"], [170, 1, 1, "", "rMax"], [171, 1, 1, "", "rMin"], [172, 1, 1, "", "sphere"], [173, 1, 1, "", "thicken"], [174, 1, 1, "", "thickenf"], [175, 1, 1, "", "thickens"], [176, 1, 1, "", "torus"], [177, 1, 1, "", "union"], [178, 1, 1, "", "unionf"], [179, 1, 1, "", "unions"], [180, 1, 1, "", "xplane"], [181, 1, 1, "", "yplane"], [182, 1, 1, "", "zplane"]], "mymesh.improvement": [[183, 1, 1, "", "GeoTransformSmoothing"], [184, 1, 1, "", "LocalLaplacianSmoothing"], [185, 1, 1, "", "NodeSpringSmoothing"], [186, 1, 1, "", "SegmentSpringSmoothing"], [187, 1, 1, "", "SmartLaplacianSmoothing"], [188, 1, 1, "", "TangentialLaplacianSmoothing"], [189, 1, 1, "", "TetContract"], [190, 1, 1, "", "TetFlip"], [191, 1, 1, "", "TetImprove"], [192, 1, 1, "", "TetSplit"]], "mymesh.mesh": [[20, 3, 1, "", "EdgeSets"], [20, 3, 1, "", "ElemData"], [20, 3, 1, "", "ElemSets"], [20, 3, 1, "", "FaceSets"], [20, 3, 1, "", "NodeData"], [20, 3, 1, "", "NodeSets"]], "mymesh.mesh.mesh": [[21, 4, 1, "", "BoundaryConn"], [22, 4, 1, "", "BoundaryNodes"], [23, 4, 1, "", "Centroids"], [24, 5, 1, "", "Clip"], [25, 5, 1, "", "Contour"], [26, 5, 1, "", "CreateBoundaryLayer"], [27, 5, 1, "", "Crop"], [28, 4, 1, "", "EdgeConn"], [29, 4, 1, "", "EdgeElemConn"], [30, 4, 1, "", "Edges"], [31, 4, 1, "", "ElemConn"], [32, 4, 1, "", "ElemNeighbors"], [33, 4, 1, "", "ElemNormals"], [34, 4, 1, "", "EulerCharacteristic"], [35, 4, 1, "", "FaceConn"], [36, 4, 1, "", "FaceElemConn"], [37, 4, 1, "", "Faces"], [38, 4, 1, "", "Genus"], [39, 5, 1, "", "Mirror"], [40, 4, 1, "", "ND"], [41, 4, 1, "", "NEdge"], [42, 4, 1, "", "NElem"], [43, 4, 1, "", "NFace"], [44, 4, 1, "", "NNode"], [45, 4, 1, "", "NodeNeighbors"], [46, 4, 1, "", "NodeNormals"], [47, 4, 1, "", "NodeNormalsMethod"], [48, 5, 1, "", "RenumberFacesBySet"], [49, 5, 1, "", "RenumberNodesBySet"], [50, 4, 1, "", "SurfConn"], [51, 4, 1, "", "SurfElemConn"], [52, 4, 1, "", "SurfNodeNeighbors"], [53, 4, 1, "", "SurfNodes"], [54, 4, 1, "", "Surface"], [55, 5, 1, "", "Threshold"], [56, 5, 1, "", "addEdges"], [57, 5, 1, "", "addElems"], [58, 5, 1, "", "addFaces"], [59, 5, 1, "", "addNodes"], [60, 4, 1, "", "cells"], [61, 5, 1, "", "cleanup"], [62, 5, 1, "", "copy"], [63, 5, 1, "", "getCurvature"], [64, 5, 1, "", "getQuality"], [65, 5, 1, "", "identify_type"], [66, 5, 1, "", "imread"], [67, 5, 1, "", "merge"], [68, 5, 1, "", "meshio2mymesh"], [69, 5, 1, "", "mymesh2meshio"], [70, 5, 1, "", "plot"], [71, 4, 1, "", "points"], [72, 5, 1, "", "read"], [73, 5, 1, "", "removeElems"], [74, 5, 1, "", "reset"], [75, 5, 1, "", "validate"], [76, 5, 1, "", "view"], [77, 5, 1, "", "write"]], "mymesh.octree": [[193, 1, 1, "", "Function2Octree"], [194, 1, 1, "", "Octree2Dual"], [195, 1, 1, "", "Octree2Voxel"], [196, 1, 1, "", "Points2Octree"], [197, 1, 1, "", "Print"], [198, 1, 1, "", "SearchOctree"], [199, 1, 1, "", "SearchOctreeTri"], [200, 1, 1, "", "Surface2Octree"], [201, 1, 1, "", "Voxel2Octree"], [202, 1, 1, "", "getAllLeaf"]], "mymesh.primitives": [[203, 1, 1, "", "Box"], [204, 1, 1, "", "Circle"], [205, 1, 1, "", "CirclePt"], [206, 1, 1, "", "Cylinder"], [207, 1, 1, "", "Extrude"], [208, 1, 1, "", "Grid"], [209, 1, 1, "", "Grid2D"], [210, 1, 1, "", "Line"], [211, 1, 1, "", "Plane"], [212, 1, 1, "", "Revolve"], [213, 1, 1, "", "Sphere"], [214, 1, 1, "", "Torus"]], "mymesh.quality": [[215, 1, 1, "", "Area"], [216, 1, 1, "", "AspectRatio"], [217, 1, 1, "", "InverseOrthogonalQuality"], [218, 1, 1, "", "InverseOrthogonality"], [219, 1, 1, "", "MaxDihedral"], [220, 1, 1, "", "MeanRatio"], [221, 1, 1, "", "MinDihedral"], [222, 1, 1, "", "OrthogonalQuality"], [223, 1, 1, "", "Orthogonality"], [224, 1, 1, "", "Skewness"], [225, 1, 1, "", "SurfDihedralAngles"], [226, 1, 1, "", "Volume"], [227, 1, 1, "", "dihedralAngles"], [228, 1, 1, "", "equiangular_skewness"], [229, 1, 1, "", "quad_skewness"], [230, 1, 1, "", "tet_vol_skewness"], [231, 1, 1, "", "tri_skewness"]], "mymesh.rays": [[232, 1, 1, "", "BoxTrianglesIntersection"], [233, 1, 1, "", "PlaneBoxIntersection"], [234, 1, 1, "", "PlaneSurfIntersection"], [235, 1, 1, "", "PlaneTriangleIntersection"], [236, 1, 1, "", "PlaneTrianglesIntersection"], [237, 1, 1, "", "PointInBoundary"], [238, 1, 1, "", "PointInBox"], [239, 1, 1, "", "PointInSurf"], [240, 1, 1, "", "PointInTri"], [241, 1, 1, "", "PointsInSurf"], [242, 1, 1, "", "PointsInTris"], [243, 1, 1, "", "PointsInVoxel"], [244, 1, 1, "", "RayBoxIntersection"], [245, 1, 1, "", "RayBoxesIntersection"], [246, 1, 1, "", "RayOctreeIntersection"], [247, 1, 1, "", "RaySegmentIntersection"], [248, 1, 1, "", "RaySegmentsIntersection"], [249, 1, 1, "", "RaySurfIntersection"], [250, 1, 1, "", "RayTriangleIntersection"], [251, 1, 1, "", "RayTrianglesIntersection"], [252, 1, 1, "", "RaysSurfIntersection"], [253, 1, 1, "", "RaysTrianglesIntersection"], [254, 1, 1, "", "SegmentSegmentIntersection"], [255, 1, 1, "", "SegmentsSegmentsIntersection"], [256, 1, 1, "", "SurfSelfIntersection"], [257, 1, 1, "", "SurfSurfIntersection"], [258, 1, 1, "", "TriangleBoxIntersection"], [259, 1, 1, "", "TriangleTriangleIntersection"], [260, 1, 1, "", "TriangleTriangleIntersectionPt"], [261, 1, 1, "", "TrianglesTrianglesIntersection"], [262, 1, 1, "", "TrianglesTrianglesIntersectionPts"]], "mymesh.utils": [[263, 1, 1, "", "AABB"], [264, 1, 1, "", "BaryTet"], [265, 1, 1, "", "BaryTri"], [266, 1, 1, "", "BaryTris"], [267, 1, 1, "", "CalcFaceNormal"], [268, 1, 1, "", "Centroids"], [269, 1, 1, "", "CleanupDegenerateElements"], [270, 1, 1, "", "DeleteDegenerateElements"], [271, 1, 1, "", "DeleteDuplicateNodes"], [272, 1, 1, "", "DetectFeatures"], [273, 1, 1, "", "DilateVoxel"], [274, 1, 1, "", "ErodeVoxel"], [275, 1, 1, "", "ExtractRagged"], [276, 1, 1, "", "Face2NodeNormal"], [277, 1, 1, "", "MVBB"], [278, 1, 1, "", "MergeMesh"], [279, 1, 1, "", "MirrorMesh"], [280, 1, 1, "", "PadRagged"], [281, 1, 1, "", "Project2Surface"], [282, 1, 1, "", "RelabelNodes"], [283, 1, 1, "", "SortRaggedByLength"], [284, 1, 1, "", "SplitRaggedByLength"], [285, 1, 1, "", "SurfMapping"], [286, 1, 1, "", "TetMeshVol"], [287, 1, 1, "", "TriSurfVol"], [288, 1, 1, "", "ValueMapping"], [289, 1, 1, "", "getConnectedElements"], [290, 1, 1, "", "getConnectedNodes"], [291, 1, 1, "", "getElemConnectivity"], [292, 1, 1, "", "getElemNeighbors"], [293, 1, 1, "", "getNodeNeighborhood"], [294, 1, 1, "", "getNodeNeighborhoodByRadius"], [295, 1, 1, "", "getNodeNeighbors"], [296, 1, 1, "", "identify_type"], [297, 1, 1, "", "makePyramidLayer"]], "mymesh.visualize": [[298, 1, 1, "", "FaceColor"], [299, 1, 1, "", "GetTheme"], [300, 1, 1, "", "ParseColor"], [301, 1, 1, "", "View"], [302, 1, 1, "", "set_vispy_backend"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "method", "Python method"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:property", "5": "py:method"}, "terms": {"": [5, 16, 55, 86, 110, 127, 139, 141, 154, 155, 160, 161, 164, 167, 168, 169, 173, 177, 191, 192, 199, 244, 245, 250, 260, 262, 272, 303, 306, 310, 311, 314, 315, 319, 320, 321, 324, 325], "0": [2, 4, 5, 6, 7, 9, 11, 18, 24, 39, 66, 80, 86, 87, 88, 89, 90, 91, 98, 99, 103, 119, 122, 131, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 160, 164, 167, 169, 170, 171, 172, 176, 180, 181, 182, 183, 184, 185, 186, 193, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 217, 218, 222, 223, 224, 228, 229, 230, 231, 236, 237, 239, 241, 247, 248, 250, 251, 253, 254, 255, 259, 260, 261, 262, 270, 271, 272, 283, 284, 301, 303, 304, 305, 306, 307, 308, 311, 312, 313, 316, 318, 319, 320, 325, 326], "00": [4, 9, 11, 316], "000": 11, "00012": 313, "001": 270, "002": 313, "0020": 137, "005": 313, "00529": 313, "00843": 313, "01": [193, 313], "0181": 313, "01880": 313, "019": 313, "0190": 137, "02": [4, 272, 316], "024": 313, "0262": 313, "027": 313, "03": 272, "03581": 313, "0363": 313, "04": [6, 9, 316], "05": [5, 9, 142, 148, 149, 150, 151, 152, 154, 160, 164, 167, 169, 203, 208, 209, 305, 308, 313, 316], "06": [250, 313], "08": [84, 141, 237, 239, 241], "08831v2": 134, "09": 313, "1": [2, 4, 5, 6, 7, 24, 25, 26, 39, 63, 66, 80, 86, 88, 90, 91, 98, 99, 103, 119, 122, 127, 131, 137, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 160, 164, 167, 169, 172, 176, 180, 181, 182, 184, 185, 186, 191, 193, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 222, 223, 224, 228, 229, 230, 231, 244, 245, 250, 271, 272, 274, 275, 278, 280, 283, 284, 285, 288, 297, 300, 301, 303, 304, 305, 306, 307, 308, 311, 312, 313, 318, 319, 320, 321, 325, 326], "10": [2, 26, 61, 65, 84, 91, 114, 117, 137, 184, 188, 189, 196, 204, 205, 206, 213, 214, 232, 244, 245, 250, 251, 253, 258, 259, 260, 261, 262, 283, 284, 296, 313, 318, 325], "100": [187, 207], "1002": 313, "1007": [26, 313], "1016": [137, 313], "10487472": [259, 260, 261, 262, 313], "10487487": 313, "1056": 313, "1080": [259, 260, 261, 262, 313], "10867651": [259, 260, 261, 262, 313], "1093": 313, "1097": 313, "11": [9, 318], "1111": 313, "1145": [84, 232, 244, 245, 250, 251, 253, 258, 313], "1148": 313, "115": 313, "1198555": [232, 244, 245, 250, 251, 253, 258, 313], "1198746": [250, 251, 253, 313], "1198747": [232, 258, 313], "1198748": [244, 245, 313], "12": [85, 91, 240, 242, 270, 271, 305, 313, 318], "123811": 313, "126": 313, "13": [316, 318], "131": 313, "13th": 313, "14": [7, 67, 234, 236, 249, 251, 252, 253, 256, 257, 259, 260, 261, 262, 271, 315, 318], "144": 313, "1467": 313, "14th": 313, "15": 318, "150": 313, "15904": [84, 313], "15922": [84, 313], "16": 318, "160": 313, "161": 313, "162": 313, "163": 313, "1641": 313, "1652": 313, "166": 313, "167": 313, "169": 313, "170": 313, "172": 313, "179": 270, "18": [26, 137, 192, 313], "180": 270, "1805": 134, "182": 313, "19": 313, "1908": 313, "195": 313, "1973": 137, "1981": 313, "1986": 313, "1987": 313, "199": 313, "1991": 313, "1992": [125, 131, 132, 313], "1994": 313, "1995": 313, "1996": 313, "1997": [259, 260, 261, 262, 313], "1998": 313, "1d": [148, 150, 151, 314], "1e": [61, 67, 84, 85, 91, 141, 149, 184, 185, 187, 188, 234, 236, 237, 239, 240, 241, 242, 249, 250, 251, 252, 253, 256, 257, 259, 260, 261, 262, 270, 271], "1to14": 122, "1to2": 103, "1to20": 103, "1to24": [98, 103], "1to2c": 103, "1to3": 122, "1to36": 122, "1to3c": 122, "1to4": 103, "1to5": 98, "1to6": 98, "2": [2, 5, 7, 38, 86, 88, 91, 103, 105, 119, 122, 131, 137, 138, 141, 146, 148, 150, 170, 171, 173, 174, 183, 184, 190, 192, 193, 204, 205, 206, 207, 212, 213, 214, 232, 245, 247, 248, 254, 255, 258, 259, 260, 261, 262, 271, 272, 278, 283, 284, 285, 288, 296, 297, 304, 305, 306, 307, 308, 313, 318, 319, 320, 323, 325], "20": [185, 204, 205, 206, 213, 214, 305, 313], "2000": [186, 313], "20000330": 313, "2001": [287, 313], "2002": [26, 313], "2003": 313, "2004": [124, 129, 130, 313], "2005": [123, 127, 232, 244, 245, 250, 251, 253, 258, 313], "2008": 313, "2009": 313, "201": 313, "2010": 313, "2015": 313, "2016": 313, "2018": 313, "2020": 313, "2024": 313, "2025": 315, "203": 313, "21": [137, 313], "212": 9, "22": 313, "220": 313, "222": 313, "23": 313, "24": 313, "25": [6, 7, 176, 189, 191, 214, 259, 260, 261, 262, 272, 305, 313], "256": 318, "26006103": 239, "2629697": 313, "286": 313, "291": 313, "2d": [20, 90, 106, 108, 119, 133, 137, 147, 153, 207, 211, 212, 237, 245, 253, 280, 287, 303, 306, 307, 313], "2exi": 319, "2fxy": 319, "2x_ii": 319, "2x_iy_i": 319, "2y": 319, "2y_0": 319, "2y_1": 319, "2y_i": 319, "2y_n": 319, "3": [5, 9, 65, 91, 103, 106, 118, 122, 131, 137, 138, 141, 147, 176, 184, 185, 190, 192, 232, 235, 236, 237, 238, 239, 241, 243, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 261, 262, 266, 269, 270, 271, 283, 284, 296, 304, 305, 306, 307, 308, 313, 318, 319, 320, 323, 325], "30": [259, 260, 261, 262, 313], "3197517": 313, "32": [186, 313], "3201353": 313, "324": 313, "33": [86, 87, 88, 142, 148, 313], "336156": 313, "338193": 313, "338200": 313, "3386569": 313, "3392385": 313, "349": 313, "35": 2, "36": 7, "368": 313, "37": 313, "37401": 313, "37422": 313, "376": 313, "39": 313, "3c647": 313, "3d": [18, 66, 88, 98, 99, 103, 108, 109, 119, 122, 127, 134, 146, 147, 148, 150, 172, 176, 198, 207, 208, 212, 232, 233, 237, 238, 239, 241, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 256, 258, 287, 303, 306, 307, 313], "3dx": 319, "3e3": 313, "3gy": 319, "3x3": 199, "3x_i": 319, "3y_i": 319, "4": [2, 5, 7, 103, 104, 105, 106, 114, 115, 116, 117, 122, 131, 147, 184, 189, 190, 192, 269, 271, 283, 284, 295, 304, 305, 306, 307, 313, 316, 318], "407": 313, "412": 313, "43": 313, "44148245": 239, "45": 313, "46": 313, "5": [5, 6, 7, 65, 66, 86, 99, 101, 102, 103, 106, 122, 131, 142, 144, 145, 146, 148, 149, 150, 189, 191, 193, 200, 210, 213, 271, 283, 284, 296, 304, 306, 311, 312, 318, 319, 321], "50": 214, "50040": 313, "530": [2, 4, 316], "55": [7, 244, 245, 313], "557": 313, "564": 313, "569": 2, "58": 313, "590": [5, 9, 316], "6": [65, 86, 106, 120, 121, 122, 131, 148, 150, 151, 184, 186, 187, 188, 193, 250, 283, 284, 296, 304, 306, 313, 318, 321, 325], "60": [244, 245, 313], "63": 313, "632": 313, "647": [186, 313], "658": 313, "66": [26, 313], "668": [186, 313], "7": [7, 86, 91, 131, 283, 284, 306, 313, 318], "73": 137, "742": 316, "75": 250, "771": [7, 9, 316], "7721": 313, "781606": 313, "781653": 313, "7823": 313, "7830": 313, "79": [26, 313], "8": [6, 65, 84, 96, 97, 98, 106, 131, 237, 239, 241, 283, 284, 296, 306, 313, 318, 324], "80": 5, "82": 270, "83": 313, "851": [6, 9, 316], "86162401": 239, "8659": 313, "8856": 313, "9": [5, 7, 152, 224, 283, 284, 304, 305, 308, 313, 318], "90020": 137, "90076": 313, "92": 313, "966131": 313, "966134": 313, "A": [11, 26, 65, 98, 103, 117, 122, 125, 131, 132, 137, 215, 232, 244, 245, 285, 296, 305, 307, 312, 313, 314, 315, 318, 319, 320, 321], "As": [315, 320, 321], "At": [39, 194], "By": [6, 27, 39, 47, 74, 86, 87, 88, 89, 90, 91, 94, 127, 148, 149, 150, 184, 185, 187, 188, 206, 207, 208, 209, 210, 211, 212, 213, 237, 247, 248, 254, 255, 269, 301, 306, 319], "For": [2, 28, 29, 31, 32, 33, 34, 35, 36, 38, 45, 83, 88, 89, 90, 91, 98, 103, 106, 107, 122, 143, 146, 147, 148, 149, 150, 154, 160, 164, 167, 168, 169, 173, 174, 184, 185, 187, 188, 206, 212, 215, 216, 217, 218, 222, 223, 224, 226, 237, 239, 241, 250, 251, 253, 266, 269, 273, 288, 289, 290, 292, 301, 305, 307, 308, 311, 312, 318, 319, 321, 324, 325, 326], "If": [1, 20, 24, 25, 26, 27, 39, 41, 43, 47, 50, 55, 64, 66, 70, 74, 75, 77, 87, 88, 89, 90, 91, 93, 94, 95, 99, 106, 107, 109, 110, 112, 127, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 180, 181, 182, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 198, 200, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 230, 241, 247, 248, 250, 254, 255, 256, 257, 259, 260, 261, 262, 269, 278, 285, 288, 289, 290, 292, 297, 301, 302, 305, 311, 320, 325], "In": [65, 129, 130, 250, 251, 253, 275, 280, 283, 284, 288, 296, 301, 304, 305, 308, 314, 315, 319, 320], "It": [26, 106, 187, 308, 315, 319, 320, 321, 324], "No": [87, 88, 89, 90, 91], "Not": [98, 103, 122, 292], "On": [137, 313], "One": [312, 318], "Or": 303, "Such": 6, "That": 236, "The": [2, 5, 18, 20, 26, 39, 62, 85, 86, 88, 90, 93, 95, 98, 106, 107, 109, 110, 113, 122, 136, 145, 148, 149, 150, 151, 159, 173, 174, 176, 186, 189, 192, 193, 196, 200, 206, 213, 214, 266, 269, 271, 273, 274, 276, 279, 284, 285, 289, 290, 297, 302, 304, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 324, 325], "There": [46, 106, 303, 311, 312, 315, 321], "These": [7, 110, 253, 283, 284, 303, 305, 314, 318, 320], "To": [2, 6, 34, 139, 206, 297, 309, 312, 315, 320, 321, 325], "Will": [106, 232, 239, 241, 258, 281, 285, 288], "With": [253, 283], "_": [2, 311, 319], "_ax": 70, "_description_": [183, 193, 253, 301], "_i": [319, 326], "_j": 326, "_mesh": [68, 69], "_type_": [183, 193, 253, 301], "a1": 305, "a2": 305, "a3": 305, "a_i": [319, 320], "a_x": 320, "ab": [65, 227, 296, 313], "abil": [142, 144, 145, 148, 150, 151, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214], "abl": [156, 162, 174, 178], "about": [110, 176, 214, 279], "abov": [18, 151, 180, 181, 182, 192, 224, 318, 321], "absenc": 306, "academ": [1, 313], "acceler": [239, 241, 249, 252, 253], "accept": 308, "access": [77, 283, 312, 315], "accomplish": 319, "accord": [282, 314], "accordingli": 278, "accur": [2, 6, 321], "achiev": [185, 305, 312, 326], "acm": [84, 232, 244, 245, 250, 251, 253, 258, 313], "across": [1, 39, 320], "activ": [20, 321], "actual": [173, 174], "ad": [98, 103, 109, 122, 186, 189, 192, 311, 320, 321], "adapt": [192, 193, 313], "add": [106, 145, 185, 186, 320], "addit": [2, 91, 93, 95, 148, 150, 151, 283, 292, 314, 318, 319, 321], "addition": [75, 309, 310, 312], "adjac": [32, 45, 87, 88, 89, 90, 91, 184, 187, 188, 225, 259, 260, 261, 262, 272, 283, 295, 318, 320], "admiss": 325, "adopt": [308, 319], "adrian": [313, 320], "advanc": 305, "advantag": [312, 319], "after": [184, 187, 188, 189, 191, 192, 325], "ag073671": 315, "against": 324, "agatho": 313, "ahead": 320, "ai": 223, "aid": 313, "aim": [305, 315, 317], "akenin": [232, 258, 313], "al": [192, 325], "alec": 313, "alexand": 313, "algorithm": [16, 87, 88, 89, 90, 91, 133, 134, 137, 141, 194, 233, 244, 245, 250, 251, 253, 303, 313, 315, 317, 318, 320, 325], "alia": [60, 71], "alias": [54, 312], "align": [98, 103, 109, 122, 206, 233, 244, 245, 263, 277, 319, 325], "all": [6, 27, 55, 64, 65, 66, 74, 83, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 112, 113, 115, 116, 118, 120, 121, 122, 127, 148, 150, 151, 184, 185, 187, 188, 189, 197, 202, 216, 218, 222, 223, 284, 285, 288, 296, 303, 304, 307, 309, 311, 312, 315, 316, 319, 320, 321, 325], "all_nod": 55, "allevi": 305, "allow": [1, 143, 148, 187, 301, 306, 315, 319, 320, 324, 326], "alohner08": [276, 313], "alon": 319, "along": [24, 26, 85, 87, 88, 89, 90, 91, 146, 180, 181, 182, 206, 212, 213, 281, 305, 312, 318, 325], "alpha": [2, 170, 171, 264, 265, 266, 281, 285, 300, 301], "alpha_0": 320, "alreadi": 50, "also": [5, 6, 15, 106, 210, 212, 259, 260, 261, 262, 282, 307, 315, 318, 320, 321, 326], "alter": [143, 149], "altern": [65, 113, 296, 302, 303, 320], "alwai": [283, 317], "am": 106, "ambigu": [65, 296, 306, 318], "amd": 313, "american": 313, "ami": 313, "amoller05": [232, 258, 313], "among": 320, "amount": [168, 207, 283, 311], "an": [18, 20, 25, 55, 66, 75, 76, 77, 86, 87, 89, 91, 99, 111, 113, 119, 123, 138, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 155, 156, 157, 158, 159, 161, 162, 163, 166, 173, 174, 177, 178, 179, 185, 186, 189, 191, 192, 193, 194, 195, 196, 200, 201, 206, 213, 216, 232, 233, 235, 236, 239, 241, 244, 245, 246, 247, 248, 249, 250, 252, 254, 255, 258, 259, 260, 261, 262, 269, 270, 272, 276, 281, 285, 288, 292, 293, 294, 301, 302, 304, 306, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 324, 325, 326], "analog": 314, "analogi": [185, 186, 313], "analysi": [4, 303, 304, 314, 315, 316], "analyt": 2, "analyticalcurvatur": 2, "analyz": [3, 10, 315], "andr": 315, "andrea": 313, "angl": [47, 189, 191, 212, 219, 221, 223, 224, 225, 227, 270, 272, 276], "anglestep": 212, "angletol": 270, "ani": [1, 7, 26, 27, 55, 65, 72, 75, 111, 113, 143, 149, 151, 158, 159, 189, 226, 235, 236, 292, 296, 305, 308, 310, 312, 315, 320, 324], "anisotrop": 208, "annual": 313, "anoth": [184, 187, 188, 194, 237, 271, 285, 288, 304, 305, 318], "ansi": [217, 218, 222, 223], "anyth": 319, "apart": [185, 271], "api": [315, 317], "appear": [65, 278, 296], "appli": [88, 90, 185, 186, 313, 326], "applic": [77, 305, 313, 315], "approach": [6, 65, 193, 281, 285, 288, 296, 305, 318, 320], "appropri": [75, 77, 305, 311, 315], "approxim": [6, 86, 129, 142, 144, 148, 149, 150, 154, 160, 164, 167, 169, 203, 210, 313, 318], "ar": [2, 5, 6, 16, 18, 19, 27, 34, 39, 46, 54, 55, 64, 65, 74, 75, 87, 88, 89, 90, 91, 97, 102, 106, 109, 110, 113, 114, 116, 121, 124, 127, 129, 130, 141, 143, 145, 146, 147, 148, 149, 150, 151, 155, 156, 157, 161, 162, 163, 177, 178, 179, 184, 185, 187, 188, 189, 192, 193, 200, 210, 235, 236, 241, 243, 249, 250, 251, 252, 256, 267, 269, 271, 276, 283, 284, 285, 292, 295, 296, 301, 303, 304, 305, 306, 307, 308, 309, 312, 314, 315, 317, 318, 319, 320, 321, 324, 325, 326], "arang": 207, "arbitrari": [313, 325], "arbitrarili": [65, 296], "arcco": [2, 227], "arctan": 319, "area": 224, "aren": [65, 94, 110, 185, 296, 321], "arg": [148, 150, 151, 193], "argument": [5, 70, 74, 76, 123, 148, 150, 151, 158, 159, 191, 237], "ariella": 315, "aris": [2, 314], "around": [273, 293, 294, 319], "arrai": [2, 20, 22, 53, 66, 70, 86, 87, 88, 89, 90, 93, 95, 99, 103, 109, 112, 119, 122, 124, 127, 129, 130, 133, 134, 138, 139, 142, 143, 144, 145, 146, 147, 148, 150, 151, 184, 185, 189, 192, 193, 194, 200, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 235, 236, 239, 244, 245, 250, 251, 253, 256, 258, 259, 260, 261, 262, 266, 269, 271, 275, 280, 281, 301, 305, 307, 308, 321], "array_lik": [20, 24, 25, 27, 55, 70, 86, 87, 89, 91, 103, 105, 110, 113, 114, 117, 119, 122, 127, 133, 134, 138, 139, 141, 142, 144, 145, 147, 148, 149, 150, 151, 153, 165, 166, 172, 176, 184, 185, 187, 188, 189, 191, 192, 193, 196, 198, 199, 200, 201, 204, 205, 206, 207, 210, 212, 213, 214, 215, 219, 221, 225, 226, 227, 230, 232, 233, 235, 236, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 269, 277, 282, 284, 291, 295, 301], "articl": 313, "artifici": 313, "arxiv": [134, 313], "ascii": 77, "aspect": [64, 216], "aspectratio": [64, 80], "assert": 75, "assess": [193, 318, 324], "assign": [185, 186, 297], "associ": [20, 119, 278, 288, 304, 324], "assum": [87, 88, 89, 90, 91, 106, 114, 146, 155, 156, 157, 161, 162, 163, 177, 178, 179, 187, 237, 267, 273, 274, 295, 297, 306, 307, 308], "assumpt": 319, "attempt": [65, 147, 189, 296, 302], "attribut": [20, 312], "aubri": 313, "aug": 313, "auger": 315, "author": 317, "auto": [92, 106, 111, 192, 226, 269, 295], "automat": [20, 215], "avail": [6, 64, 184, 185, 187, 188, 301, 302, 308, 317], "averag": [99, 187, 192, 276, 319, 320], "avoid": [65, 186, 296, 303, 312], "awai": 320, "ax": [2, 70, 88, 119, 146, 206, 213, 319, 325], "ax1": [2, 305], "ax2": [2, 305], "ax3": [2, 305], "ax4": 2, "axi": [6, 7, 70, 146, 176, 180, 181, 182, 204, 205, 206, 207, 212, 213, 214, 233, 244, 245, 256, 263, 325], "axial_resolut": 206, "b": [170, 171, 232, 235, 236, 250, 251, 253, 258, 259, 260, 261, 262, 305, 313, 319, 320, 321, 325], "b978": 313, "b_i": 319, "b_x": 320, "b_y": 320, "back": [109, 112], "backend": 302, "background": [127, 148, 150, 272, 305], "bajaj": 313, "balanc": 312, "bar": [2, 325, 326], "bari": [264, 265], "barrier": 289, "barrierelem": 289, "barriernod": 290, "barru": [244, 245, 313], "baryarea": [240, 242], "barycentr": [264, 265, 266, 281, 285, 288, 320, 325], "barytri": 320, "base": [1, 2, 25, 26, 40, 66, 86, 99, 123, 124, 127, 129, 130, 138, 143, 149, 193, 194, 206, 276, 287, 301, 305, 308, 310, 312, 313, 314, 318, 323, 324, 325], "basic": [16, 320], "bd02": [26, 313], "becaus": 6, "becom": [189, 326], "been": [2, 41, 43, 109, 110, 189, 274, 311, 318, 320], "befor": 189, "begin": [319, 320, 325], "behavior": 113, "behind": [317, 320], "being": [19, 55, 189, 216, 217, 218, 222, 223, 224, 228, 229, 230, 231, 250, 251, 253, 281, 304, 305, 308, 311, 315, 319, 320, 324], "below": [151, 189, 304, 318], "belyaev": [149, 313], "ben": 313, "bend": 319, "benjamin": 313, "bent": 319, "bernd": 313, "best": [2, 80, 96, 97, 100, 101, 102, 104, 115, 116, 118, 120, 121, 217, 218, 222, 223, 224, 228, 229, 230, 231], "beta": [264, 265, 266, 281, 285], "beta_0": 320, "better": [129, 130, 288, 311], "between": [1, 6, 85, 87, 88, 89, 90, 91, 93, 94, 95, 98, 103, 109, 122, 186, 189, 192, 193, 194, 212, 219, 221, 223, 225, 227, 232, 233, 235, 236, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 262, 266, 272, 304, 305, 306, 317, 324, 325, 326], "bf01313411": 313, "bfb0014497": 313, "bgcolor": [2, 5, 6, 7, 86, 142, 148, 150, 151, 152, 153, 154, 160, 164, 167, 169, 172, 176, 184, 203, 204, 206, 207, 208, 209, 210, 213, 214, 272, 301, 305, 312], "bicub": [88, 90], "bidirect": [250, 251, 252, 253, 325], "big": [319, 320], "biggest": 319, "bilinear": [87, 88, 89, 90], "binari": [77, 318], "bioinformat": 313, "biomechan": [1, 313, 315], "bit": 5, "blackbox": 317, "blake": 315, "blo00": [185, 313, 326], "blo94": [91, 313, 318], "block": 312, "blom": [186, 313, 326], "bloomenth": [313, 318], "blue": 304, "bmatrix": [319, 325], "board": 1, "bolun": 313, "bone": [313, 319], "bong": 313, "bool": [20, 26, 27, 39, 55, 64, 67, 70, 77, 87, 88, 89, 90, 91, 93, 94, 95, 106, 107, 109, 112, 127, 143, 145, 148, 149, 150, 184, 185, 186, 187, 188, 189, 191, 192, 197, 199, 206, 208, 209, 211, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 232, 233, 235, 236, 237, 238, 239, 241, 243, 244, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 271, 277, 278, 283, 284, 285, 288, 301], "boolean": [155, 156, 157, 161, 162, 163, 177, 178, 179, 245, 305, 315], "boston": 315, "both": [2, 19, 55, 65, 149, 173, 174, 186, 195, 250, 251, 252, 253, 296, 301, 314, 315, 319, 320, 321, 324, 325, 326], "bottasso": [26, 313], "boubekeur": 313, "bound": [5, 6, 24, 27, 55, 70, 86, 148, 150, 151, 152, 158, 159, 193, 203, 208, 209, 211, 232, 233, 244, 245, 258, 263, 277, 301, 320, 324, 325], "boundari": [5, 21, 22, 25, 26, 87, 88, 89, 90, 127, 151, 192, 199, 237, 243, 313, 314, 318, 320], "boundaryconn": 237, "bow81": [133, 313, 320], "bowyer": [133, 134, 141, 313], "bowyerwatson": 141, "bowyerwatson2d": 320, "bowyerwatson3d": 320, "box": [24, 86, 208, 209, 210, 232, 233, 238, 244, 245, 258, 263, 277, 305, 308, 313, 324], "boxcent": [232, 258], "branch": 324, "break": 54, "bridg": 317, "bright": [127, 319], "brightobject": 127, "brute": [281, 285, 288], "bu": [7, 313], "bucati": 7, "build": [127, 315, 320], "built": [6, 308, 309], "bx": 319, "bx_0y_0": 319, "bx_1y_1": 319, "bx_ny_n": 319, "bxy": 319, "c": [26, 191, 232, 235, 236, 250, 251, 253, 258, 259, 260, 261, 262, 287, 313, 319, 320, 321, 325], "c_i": 319, "c_x": 320, "c_y": 320, "cach": [74, 312], "cag": 313, "cagd": 313, "calcfacenorm": [124, 129, 130, 225], "calcul": [33, 38, 47, 110, 123, 124, 125, 126, 127, 128, 129, 130, 132, 149, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 241, 263, 267, 268, 276, 277, 286, 287, 305, 312, 320, 325], "call": [292, 312], "callabl": [156, 162, 174, 178, 192], "came": 92, "can": [2, 5, 6, 7, 20, 26, 46, 64, 70, 83, 88, 89, 90, 91, 110, 113, 124, 127, 129, 130, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 158, 159, 189, 191, 192, 198, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 249, 252, 253, 266, 271, 281, 283, 285, 288, 289, 290, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 314, 315, 318, 319, 320, 321, 324, 325, 326], "candid": 321, "cannot": 289, "cap": [131, 206, 319], "capabl": [1, 10, 16, 86, 303], "captur": 319, "care": [318, 324], "carefulli": 303, "cartesian": 39, "case": [65, 98, 109, 122, 146, 259, 260, 261, 262, 288, 296, 304, 309, 314, 318, 319, 320], "cast": [81, 237, 239, 241, 275], "categor": 131, "categori": 131, "caus": [250, 311], "ccw": 110, "cdot": 325, "cell": [69, 186, 312], "cellcent": 186, "center": [7, 24, 98, 103, 122, 153, 172, 176, 184, 186, 187, 188, 204, 205, 206, 207, 212, 213, 214, 232, 258, 308, 318, 319, 320], "centric": [264, 265], "centrod": 186, "centroid": [27, 86, 110, 113, 151, 165, 194, 223, 311, 312, 324], "certain": 147, "cgal": 315, "chalmer": 313, "chanc": [65, 296], "chandrajit": 313, "chang": [47, 54, 62, 193, 269, 318, 320, 321, 326], "channel": 307, "charact": 191, "characterist": [34, 38], "charl": 313, "che95": [87, 88, 313, 318], "check": [75, 250, 251, 252, 253, 269, 320, 321, 324, 325], "chen": 287, "chernyaev": [313, 318], "chi": [34, 38], "child": [98, 103, 109, 122, 324], "children": 324, "choic": [185, 237, 239, 241, 320, 324], "choos": [250, 251, 253, 318], "chosen": [86, 301, 302, 305, 312], "ci": 223, "circl": [205, 206, 214], "circular": [176, 206, 213, 214], "circumfer": [204, 205, 206], "circumferenti": [204, 205, 213, 214], "citat": 317, "cite": 320, "class": [20, 78, 147, 303, 304, 310, 319], "classic": 305, "classif": 319, "classifi": [65, 91, 272, 296], "cleaner": 305, "cleanup": [27, 55, 67, 88, 89, 90, 91, 189, 278], "cleanup_tol": 91, "clear": [47, 74, 306, 315], "clim": [70, 301], "cline": [313, 318], "clockwis": [97, 102, 110, 116, 121, 136, 267, 320], "clone": 309, "close": [2, 91, 111, 113, 127, 206, 236, 237, 239, 241, 250, 251, 253, 259, 260, 261, 262, 305, 314, 325], "cma": 313, "cmu": 313, "cnm": 313, "co": [154, 160, 164, 167, 169, 313], "coarsen": [66, 99, 142, 144, 145, 146, 189], "code": [2, 5, 6, 7, 301, 312, 315], "collaps": 189, "collect": [303, 304, 314], "color": [2, 5, 7, 272, 298, 300, 301, 305, 315], "color_convert": [298, 301], "colorscal": 70, "colorspaci": [301, 309], "column": 138, "column_stack": 207, "com": [311, 313], "combin": [6, 148, 253, 305, 308, 313, 318], "come": [217, 218, 222, 223, 312], "comjnl": 313, "command": 311, "common": [310, 319, 321], "commonli": [6, 312, 314, 319], "commun": [313, 315], "commut": 39, "compar": [2, 266], "comparison": 266, "compat": [6, 148, 311], "compil": 315, "complement": 319, "complet": 276, "complex": [7, 305, 308, 317, 321, 324], "compo": 314, "compon": [40, 319, 325], "comprehens": 315, "compris": 304, "comput": [1, 26, 46, 47, 91, 137, 145, 187, 232, 258, 289, 290, 305, 313, 314, 320, 325], "computation": 305, "concav": 319, "concern": 305, "conclud": 325, "concurr": 320, "condens": 313, "condit": [55, 308, 325], "confer": 313, "configur": 321, "confirm": 75, "conflict": 303, "connect": [5, 20, 21, 28, 29, 31, 32, 35, 36, 45, 50, 51, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 129, 130, 133, 134, 136, 138, 139, 143, 149, 158, 159, 186, 187, 194, 195, 200, 201, 207, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 228, 229, 230, 231, 237, 239, 241, 243, 249, 252, 256, 257, 267, 268, 269, 270, 271, 272, 273, 274, 276, 278, 279, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 306, 312, 314, 318, 319, 320, 321, 326], "connet": 91, "consid": [18, 25, 91, 127, 142, 144, 145, 148, 150, 151, 236, 247, 248, 250, 251, 253, 254, 255, 292, 308, 314, 319], "consider": [186, 313], "consist": [16, 103, 143, 149, 273, 274, 281, 297, 304, 314, 318, 319, 320, 325], "constant": [88, 90], "constitut": [6, 270, 292], "constrain": [1, 139, 309], "constraint": [139, 141], "construct": [7, 113, 204, 205, 249, 252, 253, 304, 313, 318, 319, 320, 324], "contain": [2, 20, 26, 65, 66, 70, 84, 92, 93, 95, 106, 142, 144, 145, 147, 148, 150, 151, 186, 194, 195, 196, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 226, 269, 271, 273, 274, 281, 285, 286, 287, 288, 289, 290, 295, 296, 297, 304, 307, 314, 315, 320, 321, 324, 325], "continu": [1, 6, 98, 103, 109, 122, 155, 156, 157, 161, 162, 163, 177, 178, 179, 324], "contour": [127, 142, 148, 305, 313], "contract": [189, 191, 192], "contractit": 191, "contribut": [124, 129, 130, 315], "control": [6, 301, 326], "conveni": [312, 319], "convent": [18, 308, 314], "converg": [184, 185, 187, 188, 190], "convers": [66, 249, 252, 301, 315], "convert": [66, 68, 69, 83, 91, 127, 149, 158, 159, 194, 195, 207, 212, 226, 269, 271, 275, 295, 301, 304, 310, 312, 314], "convex": [136, 137, 314, 319, 321], "convolut": 143, "coolwarm": [2, 272], "coordin": [20, 24, 40, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 129, 130, 137, 138, 139, 141, 148, 150, 151, 152, 153, 154, 158, 159, 160, 164, 167, 169, 172, 176, 180, 181, 182, 186, 192, 193, 194, 195, 196, 198, 199, 200, 201, 205, 206, 207, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 312, 314, 319, 320, 321, 325, 326], "copi": [27, 39, 55, 143, 149, 187, 279], "coplanar": [205, 320, 325], "core": 312, "corner": [90, 184, 185, 187, 188, 189, 263, 272, 277, 318, 319], "correct": [127, 313, 318], "correspond": [64, 74, 87, 88, 89, 94, 108, 109, 112, 119, 142, 144, 145, 146, 173, 174, 180, 181, 182, 187, 191, 193, 200, 206, 281, 285, 288, 304, 307, 319, 324, 325], "cosalpha": 2, "cosin": 223, "cost": [91, 145], "could": [1, 113, 151, 204, 205, 206, 207, 212, 213, 214, 314, 318, 321, 325], "count": [34, 259, 260, 261, 262, 325], "counter": [97, 102, 110, 116, 121, 267, 320], "counterclockwis": [136, 137], "cours": [207, 232, 244, 245, 250, 251, 253, 258, 313, 321], "cover": 297, "creat": [1, 7, 20, 55, 62, 64, 65, 91, 113, 143, 149, 187, 189, 249, 252, 273, 279, 281, 285, 288, 296, 305, 311, 312, 318, 320, 324], "creation": 324, "criteria": [187, 200, 324], "crop": [39, 55, 66, 99], "cross": [153, 206, 213, 214, 320, 325], "csg": 308, "ct": [315, 319], "cube": [2, 86, 87, 88, 142, 148, 305, 313, 324], "cubic": [88, 90, 99, 124, 142, 148, 208, 273, 297, 313, 314], "cubicfit": [2, 129, 130, 319], "cuda": 1, "cup": [131, 319], "cupi": 1, "current": [16, 25, 26, 67, 184, 187, 188, 194, 270, 273, 288, 292, 315, 324], "curv": [123, 127, 313], "curvatur": [3, 4, 6, 10, 313, 315, 316], "curved": 63, "custom": 312, "cut": [24, 312], "cv2": 309, "cw": 110, "cy": 319, "cylind": [213, 214, 319], "cylindr": [153, 206, 319], "d": [1, 6, 26, 154, 192, 232, 235, 236, 250, 251, 253, 258, 259, 260, 261, 262, 305, 313, 315, 319, 321, 325], "daniel": 313, "dark": 127, "darker": 127, "data": [20, 55, 66, 69, 78, 88, 90, 99, 119, 127, 145, 146, 147, 195, 200, 239, 241, 246, 275, 278, 285, 301, 304, 305, 307, 313, 315, 320, 324], "date": 315, "david": [313, 320], "de": 313, "deal": 312, "dec": 313, "decid": [189, 301], "decompos": [98, 103, 109, 112, 122, 318], "decomposit": [98, 103, 122], "decreas": 187, "def": [5, 308], "default": [18, 20, 24, 25, 26, 27, 39, 47, 55, 64, 66, 67, 70, 74, 77, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 103, 106, 107, 109, 110, 112, 113, 122, 127, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 232, 236, 237, 239, 241, 243, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 288, 289, 290, 292, 295, 297, 301, 302, 306, 308], "defect": 305, "defin": [25, 30, 37, 79, 87, 88, 89, 90, 91, 114, 165, 166, 279, 285, 288, 304, 312, 314, 319, 320, 325], "definit": [217, 218, 222, 223, 312], "deform": [185, 326], "defualt": 288, "deg": 64, "degener": [65, 88, 89, 90, 194, 269, 270, 296], "degre": [64, 189, 191, 270, 272], "delaunai": [1, 309, 313], "delaunau": 313, "delet": [269, 270, 278, 320], "deleteduplicatenod": [91, 269], "delta": 264, "delval": 275, "demand": 305, "demo": 315, "demo_curvatur": [2, 4, 316], "demo_heart": [5, 9, 316], "demo_mix": [6, 9, 316], "demo_pasta": [7, 9, 316], "demonstr": 7, "deni": 313, "denot": [87, 88, 89, 90, 91, 212, 301], "depend": [1, 6, 109, 173, 174, 269, 305, 315, 319], "depict": 321, "depth": [86, 193, 196, 200, 324], "describ": [18, 86, 148, 149, 150, 151, 192, 193, 319, 320], "descript": 315, "design": [6, 306, 313, 315], "destruct": [143, 149], "det": [320, 325], "detail": [46, 47, 93, 95, 295, 305, 308, 310, 315], "detect": [106, 143, 149, 193, 232, 233, 235, 236, 244, 245, 247, 248, 250, 251, 253, 254, 255, 258], "detectfeatur": [184, 185, 187, 188, 189, 191], "determin": [20, 41, 43, 55, 64, 67, 88, 89, 90, 91, 98, 109, 113, 122, 127, 151, 187, 189, 193, 195, 215, 223, 227, 236, 237, 239, 241, 243, 250, 251, 252, 253, 259, 260, 261, 262, 270, 271, 272, 276, 283, 291, 292, 295, 301, 318, 320, 324, 325], "detomi": [26, 313], "deuteranomali": 301, "dev": 315, "develop": [16, 83, 315, 320], "deviat": [2, 127, 143, 208, 209, 211], "diagon": 318, "diamond": 6, "dicom": [66, 99, 147, 307, 309], "dict": [64, 148, 150, 151, 183, 184, 185, 187, 188, 191, 320], "dictionari": [20, 64, 148, 150, 151, 321], "diff": 305, "diff_fun": 156, "diff_sym": [157, 163], "diff_val": 155, "differ": [8, 10, 20, 84, 86, 106, 111, 143, 149, 155, 156, 157, 163, 191, 235, 236, 269, 301, 304, 305, 308, 314, 315, 319, 325], "differen": [189, 192], "differenti": [86, 149, 154, 155, 156, 157, 160, 161, 162, 163, 164, 167, 169, 177, 178, 179], "difff": 305, "difficult": [305, 315, 320], "dihedr": [64, 219, 221, 225, 227, 272], "dimens": [40, 138, 141, 307, 308], "dimension": [87, 89, 141, 307, 313, 314, 320, 324], "dimetr": 301, "dimitri": 313, "direct": [2, 86, 110, 148, 150, 151, 173, 174, 180, 181, 182, 193, 206, 207, 208, 232, 233, 244, 245, 250, 251, 252, 253, 258, 305, 313, 315, 319, 325], "direction": [127, 319], "directli": [2, 91, 96, 97, 98, 100, 101, 102, 103, 104, 115, 116, 118, 120, 121, 122, 142, 144, 145, 148, 150, 151, 187, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 303, 305, 307, 312, 315, 319, 320], "directori": [66, 99, 146, 147, 307, 309], "dirichlet": 313, "disadvantag": 319, "discard": [66, 99], "discuss": [317, 319, 320], "displac": [185, 186], "displai": [70, 189, 191, 192, 301], "distanc": [148, 150, 165, 166, 168, 173, 174, 176, 192, 193, 207, 214, 236, 249, 252, 271, 281, 285, 288, 313, 320, 325, 326], "distort": [143, 149], "distribut": [5, 326], "divid": [200, 216, 319, 324], "divis": 313, "dl": [84, 313], "do": [187, 189, 312, 315], "document": 315, "doesn": [26, 27, 111, 187, 189, 320, 324], "doi": [26, 84, 137, 232, 244, 245, 250, 251, 253, 258, 259, 260, 261, 262, 313], "domain": 314, "dome": 131, "domin": [206, 212, 213], "don": [39, 75, 247, 248, 249, 252, 254, 255, 320], "done": [5, 303, 305], "doorn": [125, 131, 132, 313], "doubl": 55, "down": 307, "download": [2, 5, 6, 7, 309], "dramat": 1, "drawn": 320, "driven": 315, "dtype": [147, 275], "dual": [86, 110, 194, 313], "dualconn": [110, 194], "dualcoord": [110, 194], "dualgrid_method": 86, "due": [142, 144, 145, 148, 150, 151, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 320], "duplic": [67, 88, 89, 90, 107, 271, 278], "dure": [143, 149, 184, 185, 187, 188], "dx": [313, 319], "dx_0": 319, "dx_1": 319, "dx_n": 319, "dxnew": 186, "dynam": 313, "e": [2, 34, 87, 89, 93, 94, 95, 98, 103, 106, 107, 109, 119, 122, 146, 147, 189, 192, 194, 206, 212, 224, 232, 235, 236, 238, 250, 251, 253, 258, 259, 260, 261, 262, 304, 305, 307, 309, 311, 313, 314, 315, 319, 320, 321, 325], "e0": 106, "e1": 106, "e10": 106, "e2": 106, "e3": 106, "e4": 106, "e5": 106, "e6": 106, "e7": 106, "e8": 106, "e9": 106, "e_": 325, "e_1": 325, "e_2": 325, "each": [20, 28, 29, 30, 31, 32, 35, 36, 37, 40, 45, 86, 87, 89, 90, 91, 94, 99, 105, 106, 107, 109, 110, 112, 117, 123, 124, 127, 129, 130, 148, 150, 151, 158, 159, 165, 166, 184, 186, 187, 188, 191, 192, 193, 196, 200, 208, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 236, 243, 245, 249, 251, 252, 253, 256, 261, 262, 271, 273, 274, 276, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 304, 306, 307, 312, 314, 318, 319, 320, 321, 324, 325], "earliest": 318, "easi": [312, 315], "easili": [6, 312, 321], "ebcb8b": 7, "ecosystem": 312, "ederror": [86, 193, 324], "edg": [20, 28, 29, 34, 41, 87, 88, 89, 90, 91, 92, 93, 96, 98, 100, 101, 103, 104, 106, 109, 111, 115, 117, 118, 120, 122, 127, 139, 141, 143, 149, 184, 185, 187, 188, 189, 191, 192, 204, 205, 206, 213, 214, 216, 259, 260, 261, 262, 269, 272, 289, 292, 301, 304, 305, 306, 314, 318, 320, 325], "edgeconn": [106, 304, 321], "edgeedg": [259, 260, 261, 262], "edgeelem": 106, "edgeelemconn": [304, 321], "edgemod": [88, 90], "edges2uniqu": 304, "edgeset": [20, 56], "edu": [7, 313], "educ": 317, "effici": [19, 65, 154, 160, 164, 167, 169, 244, 245, 250, 251, 253, 287, 296, 305, 309, 312, 313, 318, 320, 321, 324, 325], "effort": 305, "egregium": 319, "eigenvalu": 319, "eight": 324, "either": [25, 55, 65, 86, 87, 88, 89, 90, 91, 119, 127, 136, 143, 146, 148, 149, 156, 162, 174, 178, 189, 192, 203, 207, 208, 209, 211, 212, 214, 224, 266, 269, 271, 296, 301, 304, 314, 315, 318], "elbow": 7, "elemconn": [110, 186, 276, 291, 292, 304], "elemdata": [20, 25, 55, 64, 66, 145, 189, 191, 192, 301], "element": [5, 6, 20, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 42, 51, 55, 64, 65, 66, 69, 70, 75, 80, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 118, 119, 120, 121, 122, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 158, 183, 185, 186, 187, 189, 191, 192, 193, 194, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 239, 241, 244, 249, 252, 256, 257, 258, 267, 268, 269, 270, 271, 272, 273, 274, 276, 279, 281, 282, 285, 288, 289, 291, 292, 295, 296, 297, 301, 304, 305, 307, 312, 313, 314, 315, 318, 319, 320, 324], "elementedg": 92, "elemet": 121, "elemid": [73, 109, 112, 281], "elemneighbor": [225, 289, 292, 304], "elemnorm": [225, 237, 239, 241, 267, 276], "elemregion": 289, "elemset": [20, 57], "elemtyp": [91, 92, 106, 111, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 226, 272, 295, 305], "elia": 313, "elimin": [5, 324], "elis": [313, 315], "ellipsoid": 213, "ellipt": [206, 213, 319], "elsewher": 308, "embed": 319, "emploi": 317, "empti": [26, 65, 75, 195, 197, 247, 248, 254, 255, 296, 324], "enabl": [1, 154, 160, 164, 167, 169, 324], "encod": 324, "encount": 2, "end": [2, 5, 6, 7, 206, 247, 248, 254, 255, 319, 320, 325], "endpoint": 247, "endpt_inclus": [247, 248, 254, 255], "energi": 313, "enforc": [208, 209, 211], "engin": [26, 313], "enhanc": [1, 309], "enough": [319, 320], "ensur": [139, 256, 318, 320, 321, 325], "entir": 26, "entiti": 304, "entri": [20, 25, 55, 64, 74, 88, 93, 95, 106, 142, 144, 145, 189, 191, 192, 275, 301, 318, 321], "environ": [83, 311], "ep": [65, 85, 193, 234, 236, 237, 239, 240, 241, 242, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 296], "epsilon": 325, "equal": [2, 25, 142, 144, 145, 148, 150, 151, 186, 189, 192, 208, 209, 211, 266, 270, 272, 283, 284, 301, 319, 324], "equat": [186, 319], "equiangular": [224, 228], "equilater": [224, 230], "equilibrium": [185, 326], "equival": [55, 114, 305, 312], "error": [75, 86, 124, 127, 129, 130, 193, 288, 305, 309, 318], "especi": 305, "essenti": [320, 324], "establish": [309, 312], "estim": 319, "et": [192, 325], "eta": 183, "etc": [206, 269, 301, 311], "euclidian": 193, "euler": [34, 38], "ev": 313, "evalu": [64, 86, 91, 123, 127, 143, 148, 150, 151, 154, 158, 159, 160, 164, 165, 166, 167, 169, 180, 181, 182, 192, 193, 305, 311, 315, 318, 324], "even": [26, 250, 301, 325], "evenli": [5, 143, 149, 326], "everi": [186, 320, 321, 324], "ex": [106, 108, 225, 269, 271, 273, 274, 286, 287, 288, 297, 319], "ex_0": 319, "ex_1": 319, "ex_n": 319, "exact": [86, 324], "exact_h": [208, 209, 211], "exactli": [199, 208, 209, 211, 235, 236, 243, 247, 248, 254, 255, 259, 260, 261, 262, 271, 320, 324], "examin": 319, "exampl": [2, 4, 5, 6, 7, 9, 11, 39, 86, 91, 98, 103, 122, 141, 142, 145, 148, 150, 151, 152, 153, 154, 160, 164, 167, 169, 172, 176, 184, 203, 204, 206, 207, 210, 213, 214, 250, 251, 253, 271, 272, 283, 284, 307, 308, 310, 311, 312, 315, 316, 318, 319, 321, 324, 325], "example_func": 308, "except": [283, 315], "exclud": 247, "exclus": 55, "exculd": [281, 285, 288], "execut": [4, 9, 11, 311, 316], "executionmod": 311, "exist": [26, 55, 75, 113, 146, 272, 305, 314, 315, 318, 320, 324], "expand": 320, "expans": 1, "expect": 83, "expens": 151, "experiment": 83, "explain": [194, 315], "explan": 317, "explicitli": [65, 296], "explor": 1, "expos": [106, 111, 143, 149, 314], "express": [154, 160, 164, 167, 169], "extend": [315, 318, 320], "extens": [77, 147, 307, 315], "exterior": [87, 88, 89, 90, 91], "extern": [315, 326], "extract": [13, 25, 87, 89, 91, 96, 97, 100, 101, 102, 104, 107, 108, 111, 115, 116, 118, 120, 121, 287, 315, 318], "extrud": [7, 206, 211], "extrus": 207, "ezproxi": 313, "f": [6, 18, 34, 86, 148, 150, 151, 154, 160, 164, 167, 169, 174, 186, 191, 192, 193, 232, 235, 236, 250, 251, 253, 258, 259, 260, 261, 262, 308, 313, 319, 326], "f1": [156, 162, 178], "f2": [156, 162, 178], "face": [20, 26, 34, 35, 36, 43, 93, 94, 95, 97, 98, 102, 103, 106, 107, 116, 121, 122, 186, 219, 221, 223, 225, 267, 272, 276, 282, 292, 301, 304], "face2nodenorm": [46, 47, 124, 129, 130], "face2uniqu": 107, "face_alpha": [298, 301], "facecent": 186, "faceconn": [107, 304, 321], "faceelem": 107, "faceelemconn": [304, 321], "faces2surfac": 107, "faces2uniqu": 304, "faceset": [20, 26, 58], "facet": 313, "facilit": 321, "factor": [26, 66, 99, 142, 144, 145, 146, 180, 181, 182, 186], "fail": [75, 285], "fall": [318, 325], "fals": [2, 27, 39, 55, 63, 66, 70, 87, 88, 89, 90, 91, 93, 94, 95, 99, 106, 107, 108, 109, 112, 127, 140, 143, 145, 148, 149, 184, 185, 186, 187, 188, 190, 192, 197, 208, 209, 211, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 232, 233, 235, 236, 237, 239, 241, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 269, 270, 271, 277, 283, 284, 285, 288, 301, 305, 312], "famou": 318, "fan": 136, "far": [192, 320], "faraj": [192, 313], "fast": [232, 250, 251, 253, 258, 259, 260, 261, 262, 313], "faster": [250, 251, 253], "featur": [83, 143, 149, 184, 185, 187, 188, 189, 191, 192, 272, 287, 305, 312, 313, 315, 319, 321, 324], "featureangl": [189, 191], "feb": [313, 315], "fi": 223, "field": [165, 166, 192, 200, 313, 318], "fig": [2, 70, 305], "fig1": [2, 305], "fig2": [2, 305], "fig3": [2, 305], "fig4": 2, "figsiz": 305, "figur": 70, "file": [4, 9, 11, 20, 66, 72, 77, 99, 142, 143, 144, 145, 146, 147, 307, 309, 315, 316], "filenam": [77, 147], "filetyp": [77, 147, 310], "fill": [89, 90, 113, 280, 318], "fill_valu": 158, "fillval": 280, "final": [141, 204, 205, 206, 212, 213, 214, 325], "find": [1, 85, 186, 320, 321, 325], "finfo": [65, 296], "finit": [86, 137, 149, 305, 314], "finite_diff_step": 149, "first": [2, 39, 65, 85, 114, 138, 146, 155, 161, 177, 189, 210, 227, 248, 254, 255, 257, 259, 260, 264, 265, 266, 269, 278, 283, 289, 290, 296, 304, 305, 307, 311, 312, 321, 324, 325], "fit": [124, 130], "fix": [26, 184, 185, 186, 187, 188, 189], "fixedg": [143, 149], "fixednod": [26, 143, 149, 184, 185, 187, 188, 189], "fixednot": 186, "fixfeatur": [184, 185, 187, 188], "fixsurf": [184, 185, 187, 188], "flat": [205, 301], "fld979": 313, "flexibl": 306, "flip": [87, 88, 89, 90, 91, 190, 191, 250, 323], "flippabl": 321, "float": [25, 26, 39, 55, 65, 66, 67, 85, 86, 88, 90, 91, 99, 113, 125, 126, 127, 128, 132, 142, 143, 144, 145, 146, 148, 149, 150, 152, 153, 172, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 200, 203, 204, 206, 207, 208, 209, 210, 211, 212, 236, 237, 239, 241, 249, 250, 251, 252, 253, 256, 257, 259, 260, 261, 262, 264, 265, 266, 270, 271, 272, 279, 281, 285, 286, 287, 288, 294, 296, 297, 301, 305], "flow": [143, 149], "fluid": [186, 313], "focu": [308, 315], "focus": 315, "follow": [136, 192, 207, 212, 278, 285, 301, 303, 304, 308, 312, 318, 319, 320, 325], "forc": [185, 186, 281, 285, 288, 326], "foreground": [127, 319], "form": [86, 136, 137, 148, 150, 151, 193, 194, 251, 253, 308, 314, 320, 321, 325], "format": [20, 27, 86, 146, 148, 150, 151, 186, 193, 197, 232, 235, 236, 250, 251, 253, 258, 259, 260, 261, 262, 266, 307, 310], "former": 74, "formula": [123, 127, 313], "forum": 313, "forward": [305, 324], "found": [74, 198, 305, 320], "four": [106, 209, 318, 320, 325], "fourier": [6, 313], "fourth": 264, "frac": [319, 325, 326], "fractur": 315, "frad": 159, "frame": 319, "fre97": [187, 313], "freder": 313, "free": 185, "freenod": 149, "freitag": 313, "fring": 315, "from": [1, 2, 4, 5, 6, 7, 9, 11, 13, 34, 38, 76, 87, 89, 91, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 143, 149, 176, 185, 186, 189, 192, 195, 196, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 217, 218, 222, 223, 224, 225, 228, 229, 230, 231, 236, 250, 257, 267, 269, 270, 271, 274, 275, 278, 283, 284, 285, 288, 303, 304, 305, 307, 308, 310, 313, 314, 315, 316, 318, 319, 320, 321, 324], "ftb16": [192, 313], "ftetwild": 305, "full": [2, 5, 6, 7, 70, 76, 83, 127, 212, 226, 304, 312, 313, 314, 324], "fulli": [193, 289, 290], "fulltext": 313, "fun": 158, "func": [66, 86, 91, 123, 148, 149, 150, 151, 152, 153, 154, 160, 164, 167, 169, 172, 176, 180, 181, 182, 193, 305, 308], "func1": 305, "func2": 305, "function": [2, 6, 13, 19, 65, 86, 91, 106, 110, 123, 142, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 187, 192, 193, 227, 237, 239, 241, 269, 296, 305, 306, 307, 309, 310, 311, 312, 315, 318, 319], "function2octre": [86, 324], "fund": 315, "fundament": 313, "further": [16, 193, 315, 324], "furthest": 320, "fusilli": 7, "futur": 16, "fval": [168, 173], "fval1": [155, 161, 177], "fval2": [155, 161, 177], "fx_0y_0": 319, "fx_1y_1": 319, "fx_ny_n": 319, "fxy": 319, "fy": 319, "g": [2, 38, 87, 89, 146, 147, 189, 192, 206, 232, 235, 236, 238, 250, 251, 253, 258, 259, 260, 261, 262, 304, 305, 307, 311, 313, 314, 315, 319], "galleri": [2, 5, 6, 7, 10, 316], "gamma": [264, 265, 266, 281, 285], "gamma_0": 320, "gao": 313, "gap": 317, "gauss": 319, "gaussian": [63, 123, 126, 127, 143], "gaussian_filt": [127, 143], "gaussian_sigma": [66, 99, 127, 143], "gaussiancurvatur": 319, "gem": 313, "gener": [2, 5, 6, 7, 26, 65, 70, 76, 79, 86, 87, 88, 89, 90, 91, 98, 103, 109, 112, 113, 122, 129, 130, 136, 141, 142, 144, 145, 148, 150, 151, 165, 166, 192, 193, 195, 196, 200, 201, 203, 206, 208, 209, 210, 211, 213, 214, 239, 241, 244, 245, 249, 250, 251, 252, 253, 256, 273, 276, 281, 285, 288, 296, 297, 303, 305, 307, 308, 310, 312, 313], "genu": 308, "geometr": [98, 109, 122, 183, 313, 319, 320], "geometri": [86, 148, 150, 151, 193, 207, 271, 272, 308, 313, 314], "geq": 325, "get": [47, 90, 143, 207, 212, 226, 292, 315], "get_arrai": 305, "get_imag": 305, "getelemconnect": 110, "getelemneighbor": 289, "getnodeneighbor": [124, 129, 130, 289, 290, 292, 312], "getthem": 301, "gi04": [124, 129, 130, 313, 319], "gift": 137, "giftwrap": 135, "github": 309, "give": [119, 247, 293, 294, 319, 325], "given": [39, 66, 99, 141, 146, 147, 198, 206, 256, 273, 301], "gmbh": 313, "gmsh": 315, "go": [2, 5, 6, 7, 186, 312], "goal": 312, "gol05": [123, 127, 313, 319], "goldfeath": [124, 129, 130, 313, 319], "goldman": [123, 127, 313, 319], "gomiti": 7, "gpu": 1, "grad": [86, 193], "gradient": [86, 127, 143, 149, 159, 324], "grant": 315, "graphic": [259, 260, 261, 262, 305, 313, 314], "grayscal": [88, 90, 127, 301], "greater": [66, 87, 88, 89, 90, 91, 99, 142, 144, 145, 146, 192, 270, 281, 285, 288, 319], "grid": [86, 87, 89, 91, 98, 119, 127, 150, 158, 159, 165, 166, 203, 209, 211, 272, 305, 312, 313, 314, 318], "grid2d": 89, "grid2fun": 127, "grit": 313, "group": [92, 284, 289, 290], "growth": 315, "guarante": 103, "guid": [1, 15, 193, 315], "gutierrez": 315, "gy": 319, "gy_0": 319, "gy_1": 319, "gy_n": 319, "gyroid": [6, 142, 148, 150, 151, 272], "h": [5, 6, 88, 90, 113, 142, 143, 144, 145, 148, 149, 150, 151, 189, 191, 192, 203, 208, 209, 210, 211, 232, 235, 236, 250, 251, 253, 258, 259, 260, 261, 262, 313, 319], "h_node": 192, "ha": [5, 40, 65, 75, 91, 106, 107, 110, 250, 251, 253, 269, 273, 296, 303, 310, 311, 315, 318, 320, 321, 325], "ha01": [313, 325], "half": [206, 213, 304, 320, 321], "halt": 193, "handl": [5, 65, 86, 88, 90, 127, 156, 162, 174, 178, 253, 296, 306, 320], "hang": 313, "harvei": 313, "hash": 321, "hasn": 110, "hat": [319, 325], "have": [1, 2, 27, 85, 91, 109, 189, 225, 232, 236, 245, 251, 253, 261, 262, 266, 269, 270, 274, 303, 304, 307, 312, 318, 319, 320], "haven": [41, 43], "health": 315, "heap": 189, "hear": 1, "heart": [8, 9, 10, 316], "heavili": 1, "height": [206, 297], "held": [26, 184, 185, 186, 187, 188, 189], "help": 317, "here": [305, 317, 319, 320, 321], "hex": [103, 106, 206, 208, 213, 269, 301], "hexahedr": [87, 96, 97, 98, 194, 195, 207, 208, 212, 217, 224, 243, 273, 274, 297, 314, 315], "hexahedra": [87, 194, 314], "hexahedron": [65, 296, 306], "hexconn": 98, "hexcoord": 98, "hi": 192, "hide": 301, "hierarch": 324, "high": [2, 305, 313], "higher": [187, 324], "highli": [124, 129, 130], "highlight": [10, 315], "hip": 315, "hner": 313, "hol10": [194, 313], "hold": [70, 143, 149, 185], "holder": 315, "holmlid": 313, "home": 2, "hormann": 313, "how": [2, 7, 40, 88, 90, 269, 315, 317, 319, 320, 325], "howev": [26, 54, 127, 141, 189, 305, 306, 318, 320], "hsw": [305, 313], "html": [311, 313], "http": [26, 84, 134, 137, 139, 232, 244, 245, 250, 251, 253, 258, 259, 260, 261, 262, 311, 313], "hu": 313, "hugh": 313, "hull": [136, 137, 140], "hx": [88, 99, 142, 144, 145], "hy": [88, 99, 142, 144, 145], "hyperbol": 319, "hz": [88, 99, 142, 144, 145], "hzg": [192, 313], "i": [1, 2, 6, 18, 20, 25, 26, 30, 34, 37, 38, 39, 40, 50, 55, 65, 66, 70, 74, 75, 83, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 109, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 156, 157, 161, 162, 163, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 192, 193, 194, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 222, 223, 224, 227, 232, 233, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 266, 269, 271, 272, 273, 274, 275, 276, 279, 281, 282, 283, 284, 285, 288, 289, 290, 292, 295, 296, 297, 301, 304, 305, 306, 307, 309, 310, 311, 312, 315, 317, 318, 319, 320, 321, 324, 325, 326], "id": [20, 22, 26, 53, 91, 94, 108, 109, 112, 200, 225, 257, 269, 281, 282, 285], "idea": 317, "ident": [305, 312], "identif": [137, 305], "identifi": [5, 65, 67, 94, 184, 185, 187, 188, 189, 191, 192, 246, 249, 252, 256, 257, 272, 289, 290, 296, 320, 321], "identify_typ": [20, 106, 215, 269], "idx": [93, 95, 269, 271, 283, 284], "ignor": [138, 141, 150], "ij": 326, "im2voxel": [66, 127], "imag": [1, 2, 13, 66, 88, 90, 99, 119, 127, 301, 305, 309, 313, 314, 318, 319], "img": [66, 99, 142, 143, 144, 145, 146], "img_data": 301, "impath": 147, "imperfect": 305, "implement": [16, 25, 86, 193, 194, 292, 315, 317, 320], "implicit": [1, 2, 6, 8, 9, 10, 13, 86, 91, 123, 127, 142, 144, 145, 193, 272, 312, 313, 316, 318, 319], "implicitli": 308, "import": [2, 5, 6, 7, 83, 127, 250, 310, 311, 317, 319, 320], "improv": [1, 5, 16, 26, 281, 285, 288, 305, 315], "imshow": 305, "inaccur": 319, "inact": 321, "incircl": 320, "inclu": [259, 260, 261, 262], "includ": [6, 195, 197, 199, 243, 276, 283, 289, 293, 307, 308, 310, 313, 314, 315, 318, 319, 324], "includecollinear": [135, 137], "inclus": [55, 199, 238, 240, 242, 243, 320], "inconsequenti": 325, "increment": 320, "independ": [62, 319, 320], "index": [26, 63, 106, 107, 266, 281, 282, 304, 318], "indic": [25, 30, 37, 55, 93, 95, 106, 107, 109, 112, 131, 132, 136, 137, 139, 141, 148, 150, 189, 191, 208, 249, 251, 252, 256, 269, 271, 283, 284, 285, 292, 304, 306, 314, 320], "individu": 1, "inf": [281, 285, 288], "infer": [269, 306, 321], "infinit": [320, 325], "influenc": [34, 62], "info": [28, 29, 31, 32, 35, 36, 45], "inform": [2, 20, 137, 189, 191, 315, 319, 321], "infti": 80, "inher": [192, 319], "initi": [91, 184, 186, 187, 188, 207, 212, 305, 315], "inner": 20, "inp": [72, 310], "inplac": [27, 39, 55, 143, 149, 187], "input": [5, 27, 39, 84, 86, 87, 88, 89, 90, 91, 98, 103, 114, 122, 143, 146, 147, 148, 155, 156, 157, 162, 174, 178, 187, 192, 207, 212, 226, 269, 275, 277, 280, 307, 308, 312], "insid": [18, 25, 55, 87, 88, 89, 90, 91, 113, 142, 143, 144, 145, 148, 150, 151, 155, 156, 157, 161, 162, 163, 177, 178, 179, 194, 237, 238, 239, 241, 243, 308, 318, 319, 320, 325], "inspir": [192, 315, 318], "instal": [139, 311], "instanc": [27, 39, 312], "instead": [142, 144, 145, 147, 148, 150, 151, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 276, 325], "institut": [313, 315], "instruct": 309, "int": [25, 26, 55, 66, 86, 87, 88, 89, 90, 91, 99, 127, 142, 143, 144, 145, 146, 149, 180, 181, 182, 184, 185, 187, 188, 189, 191, 193, 196, 200, 204, 205, 206, 207, 210, 212, 213, 214, 247, 248, 254, 255, 274, 275, 280, 285, 288, 293, 301], "int16": 147, "integ": [142, 144, 145, 148, 150, 151, 204, 205], "intellig": 313, "intend": [305, 315, 317], "intens": [66, 99], "interact": [76, 301, 313], "interc": 319, "interesect": 256, "interest": [6, 319, 324], "interfac": [16, 85, 139, 141, 187, 189, 191, 192, 305, 311, 315], "interfer": 320, "interior": [87, 88, 89, 90, 91, 111, 184, 185, 187, 188, 189, 314, 320], "intermedi": 312, "intern": [143, 149, 186, 227, 313], "interpol": [1, 2, 66, 87, 88, 89, 90, 91, 99, 142, 143, 144, 145, 146, 148, 150, 158, 159, 193, 285, 318, 324], "interpret": [320, 321, 325], "interrant": [124, 129, 130, 313, 319], "intersect": [84, 85, 162, 232, 233, 235, 236, 239, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 305, 308, 313, 315, 320, 324], "intersection_fun": 162, "intersection_leav": 246, "intersection_v": 161, "intersectionf": 305, "intersectionpair": 256, "intersectionpoint": [256, 257], "intersectionpt": [249, 250, 251, 252, 262], "interv": 325, "intins": 319, "intric": 325, "introduc": [2, 305], "intuit": 319, "inv": [93, 95, 109, 112, 271, 283, 284], "invalid": [2, 98, 103, 109, 122, 320], "invari": 313, "invers": [2, 64, 143, 149, 185, 217, 218, 318], "inverseorthogon": [64, 80], "inverseorthogonalqu": [64, 80, 222], "invert": [75, 189, 321], "involv": [1, 305, 320], "iortho": 218, "iorthoq": 217, "ipynb": [2, 5, 6, 7], "irregular": 2, "irrelev": 185, "isn": [148, 326], "iso": 301, "isocontour": 89, "isolin": [89, 318], "isometr": 301, "isosurfac": [13, 18, 25, 87, 88, 89, 90, 91, 123, 142, 143, 144, 148, 149, 150, 168, 173, 193, 313, 318, 319], "isotrop": [88, 90, 201], "isovalu": [86, 89, 142, 144, 145, 148, 150, 151, 318], "iss": 313, "issu": [75, 320], "iter": [2, 143, 149, 184, 185, 187, 188, 189, 190, 191, 276, 326], "itertool": 253, "its": [20, 98, 103, 109, 122, 184, 187, 188, 281, 312, 320, 321, 324, 326], "itself": [319, 325], "j": [125, 131, 132, 186, 313, 326], "jack": 313, "jacobson": 313, "jan": 313, "jarvi": 137, "jean": 313, "jm24": [6, 313, 315], "joachim": 313, "joe": 313, "john": 313, "join": 305, "jonathan": [16, 139, 313], "jonathon": 141, "josephson": [1, 313, 315], "joshua": 315, "journal": [186, 259, 260, 261, 262, 313, 320], "jpeg": 147, "jpg": 307, "jul": 313, "jule": 313, "jupyt": [2, 5, 6, 7], "jupyter_rfb": 309, "just": [145, 204, 205], "k": [186, 244, 245, 313, 319], "k1a_smooth": 2, "k1a_spher": 2, "k1m_smooth": 2, "k1m_sphere": 2, "k2a_smooth": 2, "k2a_spher": 2, "k2m_smooth": 2, "k2m_sphere": 2, "k_": 326, "kai": 313, "kappa_": 319, "kappa_1": [2, 319], "kappa_2": [2, 319], "keep": [24, 27, 55, 74, 86, 142, 144, 145, 148, 150, 151, 185, 312], "kei": [26, 191, 315, 320, 321, 325], "keith": 313, "kept": [113, 151, 269], "kernel": 143, "keyword": [148, 150, 151], "kf": 186, "know": 320, "known": [6, 325], "koenderink": [125, 131, 132, 313], "ku": 186, "kvd92": [125, 131, 132, 313, 319], "kwarg": [70, 76, 148, 150, 151, 193], "l": [26, 193, 313], "l0overrid": 186, "lab": 315, "label": [2, 187, 189, 191, 192, 305], "laidlaw": 313, "lambda": [6, 91], "lambdifi": [154, 160, 164, 167, 169], "laplacian": [2, 5, 143, 149, 184, 185, 187, 188, 313], "larg": [145, 185, 305, 311], "larger": [187, 314, 321, 324], "largest": [184, 185, 187, 188, 320], "last": 283, "later": [26, 312], "layer": [26, 273, 274, 297, 313], "layerconn": 273, "layercoord": 273, "lc87": [87, 88, 313, 318], "lead": [305, 318, 319, 320], "leaf": [195, 198, 199, 202, 246, 324], "least": [39, 292, 319, 320], "leav": [27, 39, 202, 206, 320], "lectur": 313, "left": [319, 325], "legend": 2, "len": [2, 119, 207, 256, 283, 285, 288], "length": [20, 148, 150, 151, 186, 189, 191, 192, 216, 280, 283, 284, 301, 306], "leq": 325, "less": [18, 25, 65, 66, 87, 88, 89, 90, 91, 99, 142, 144, 145, 146, 148, 150, 151, 184, 185, 187, 188, 189, 193, 269, 272, 296, 319], "lessen": 317, "letter": 137, "level": [25, 87, 88, 89, 90, 91, 193, 194, 312, 324], "lexicograph": 307, "li": [320, 325], "lib": 313, "librari": [110, 313, 315], "lie": [2, 123, 143, 148, 149, 150, 206, 235, 236, 259, 260, 261, 262, 272, 321], "like": [98, 109, 122, 253, 315], "likewis": 321, "limit": [110, 238, 305, 315, 325], "linalg": 250, "line": [7, 20, 89, 90, 204, 205, 207, 212, 247, 248, 254, 255, 296, 301, 306, 318, 320, 325], "line_color": 301, "line_width": 301, "linear": [87, 88, 89, 90, 91, 142, 143, 144, 148, 150, 158, 159, 186, 193, 319, 324], "link": [54, 313, 320, 324], "linspac": 207, "list": [20, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 45, 64, 67, 70, 74, 76, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 136, 137, 141, 146, 148, 150, 151, 158, 159, 165, 166, 186, 193, 194, 197, 199, 200, 202, 203, 208, 209, 211, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 237, 239, 241, 243, 244, 246, 249, 252, 257, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 301, 304, 311, 312], "ller": 313, "load": [66, 307, 326], "local": [143, 149, 184, 185, 187, 188, 189, 191, 277, 319], "locallaplaciansmooth": 5, "locat": [18, 183, 184, 185, 187, 188, 269, 271, 282], "lock": 312, "log": 2, "long": [6, 206, 237, 325], "longer": [27, 55, 250, 324], "longest": [186, 216], "look": 319, "lookup": 318, "loop": [250, 251, 253], "loos": 315, "lorensen": [313, 318], "lori": 313, "loss": 305, "love": 1, "low": [2, 6, 305, 319], "lower": [55, 70, 152, 189, 232, 233, 238, 244, 245, 258, 312, 324, 325], "lth86": [305, 313], "lumetr": 314, "ly": [247, 248, 254, 255], "m": [25, 27, 39, 62, 64, 66, 68, 69, 72, 83, 143, 149, 165, 166, 170, 171, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 207, 212, 252, 256, 301, 308, 310, 311, 312, 313, 326], "m1": [6, 305], "m2": [6, 305, 312], "m3": 6, "m4": 6, "macaroni": 7, "machin": [65, 296], "made": [27, 39, 314], "magnitud": [127, 319], "mai": [54, 83, 98, 103, 109, 122, 147, 148, 150, 151, 185, 189, 194, 208, 209, 211, 212, 288, 304, 305, 308, 311, 319, 321, 325], "main": [314, 318], "maintain": 1, "major": [176, 214, 305, 308], "make": [20, 208, 209, 211, 312, 315, 319], "mani": [19, 40, 65, 250, 251, 253, 296, 306, 312, 319, 325], "manifold": [239, 241, 313], "manipul": [303, 315], "manufactur": 314, "map": [1, 281, 285, 288], "mappingmatrix": [281, 285, 288], "marc": 313, "march": [2, 86, 87, 88, 89, 90, 91, 142, 148, 150, 313], "marchingcub": [142, 148, 318], "marchingcubesimag": [127, 142, 148], "marchingsquar": 318, "marchingtetrahedra": [142, 148, 318], "mark": [320, 324], "marti": 315, "masknan": 2, "mat": 277, "match": [189, 192, 275], "materi": [189, 192, 313], "mathbf": 319, "mathemat": [308, 313], "mathwork": 311, "matplotlib": [2, 70, 309], "matric": 186, "matrix": [88, 90, 119, 146, 277, 285, 288, 319, 325], "matter": [39, 155, 156, 157, 237, 239, 241, 313], "max": [63, 64, 186, 216, 217, 218, 219, 221, 222, 223, 224, 226, 325], "maxangl": 219, "maxdepth": [86, 193, 196, 200], "maxdihedr": [64, 227], "maximum": [26, 70, 86, 123, 124, 125, 126, 127, 128, 129, 130, 132, 148, 150, 151, 155, 156, 161, 162, 184, 185, 187, 188, 189, 191, 193, 196, 200, 217, 219, 319, 324], "maxit": [184, 185, 187, 188, 189], "maxprincip": [123, 124, 125, 126, 127, 128, 129, 130, 132], "mb": [4, 9, 11, 316], "mc": [86, 142, 148, 150], "mc33": [86, 142, 148], "me": 1, "mean": [2, 6, 62, 63, 64, 123, 127, 128, 187, 216, 217, 218, 219, 221, 222, 223, 224, 226, 312, 320, 321, 325], "meancurvatur": 319, "meaning": 127, "meanratio": [64, 80, 187], "measur": [6, 80, 319, 324], "mechan": 313, "mechanobiolog": [313, 315], "mechanobiologi": [1, 313, 315], "meet": [259, 260, 261, 262, 321], "mem": [4, 9, 11, 316], "memori": 321, "merg": [278, 297], "mergedconn": 278, "mergedcoord": 278, "mergedv": 278, "mergemesh": 297, "mesh": [1, 2, 5, 7, 12, 79, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 129, 130, 142, 143, 144, 145, 148, 149, 150, 151, 158, 159, 165, 166, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 222, 223, 224, 225, 226, 228, 229, 230, 231, 237, 239, 241, 243, 249, 252, 256, 257, 266, 267, 269, 270, 271, 272, 273, 274, 278, 279, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 301, 303, 304, 305, 306, 309, 311, 313, 317, 320, 321, 326], "mesh2": 67, "mesh2sdf": 1, "meshanalysi": [4, 316], "meshboolean": 305, "meshgener": [9, 316], "meshio": [68, 69, 72, 77, 309, 310, 315], "meshio2mymesh": 310, "meshpi": 315, "met": [196, 200, 325], "meth": 67, "method": [2, 7, 8, 10, 16, 24, 25, 27, 46, 47, 78, 86, 87, 88, 89, 90, 91, 98, 103, 109, 122, 127, 135, 141, 142, 143, 144, 148, 149, 150, 158, 159, 165, 183, 184, 186, 187, 188, 192, 194, 224, 228, 230, 240, 242, 276, 289, 305, 310, 312, 313, 314, 318, 319, 326], "metric": [63, 64], "micro": 315, "middl": 5, "midpoint": [87, 88, 89, 90, 91, 117, 142, 144, 148, 150, 192, 318], "might": 303, "min": [63, 64, 186, 187, 190, 216, 217, 218, 219, 221, 222, 223, 224, 226, 285, 288, 325], "minangl": 221, "mind": 319, "mindepth": [86, 193], "mindihedr": [64, 227], "minim": [6, 65, 154, 160, 164, 167, 169, 296, 321], "minimum": [70, 86, 123, 124, 125, 126, 127, 128, 129, 130, 132, 148, 150, 151, 157, 163, 177, 178, 179, 187, 193, 200, 221, 223, 250, 251, 253, 277, 313, 319], "minor": [176, 214], "minprincip": [123, 124, 125, 126, 127, 128, 129, 130, 132], "minsiz": 200, "minut": [2, 5, 6, 7], "mirror": 279, "mirroredconn": 279, "mirroredcoord": 279, "mislabel": [65, 296], "mix": [8, 9, 10, 20, 91, 106, 295, 306, 315, 316, 318], "mixed_el": [91, 148], "mixed_topology1": 6, "mixed_topology2": 6, "mixed_topology3": 6, "mixed_topology4": 6, "mm": 2, "mnew": [183, 184, 185, 187, 188, 189, 191, 192], "mode": [55, 88, 90, 113, 127, 151, 195, 289, 292, 301, 311, 312], "model": [305, 313, 315], "modif": 312, "modifi": [27, 39, 55, 187, 189, 237, 305, 307, 312, 321], "modul": [1, 6, 16, 18, 303, 304, 310, 312], "mohebi": 315, "moller97": [259, 260, 261, 262, 313], "mollert05": [250, 251, 253, 313, 325], "more": [1, 2, 5, 28, 29, 31, 32, 35, 36, 45, 46, 47, 66, 83, 99, 142, 143, 144, 145, 146, 149, 189, 191, 250, 251, 253, 269, 276, 305, 308, 310, 314, 315, 317, 326], "morgan": [313, 315], "morlei": [244, 245, 313], "moscow": 313, "most": [2, 65, 110, 189, 276, 289, 290, 295, 296, 301, 304, 313, 314, 315, 317, 318, 319, 320, 324], "mostvis": 276, "mostvisible_it": 276, "mostvisible_loop": 276, "movabl": 149, "move": [2, 143, 148, 149, 150, 184, 185, 187, 188, 192, 289, 312, 320], "movement": [184, 185, 187, 188], "mt": [86, 142, 148], "much": [2, 250, 251, 253, 305, 325], "multi": [288, 307, 313], "multichannel": [146, 147, 307], "multipl": [6, 39, 67, 93, 106, 189, 191, 232, 250, 251, 253, 288, 304, 308, 312, 318], "must": [26, 39, 55, 66, 85, 91, 99, 113, 139, 141, 142, 143, 144, 145, 146, 148, 150, 183, 185, 186, 189, 192, 200, 206, 253, 269, 307, 311, 318, 320, 325], "mx3": [133, 134, 138, 139], "my": 1, "mymesh": [1, 2, 5, 6, 7, 10, 305, 306, 308, 309, 310, 312, 314, 317, 320], "mymesh2meshio": [83, 310], "m\u00f6ller": [232, 250, 251, 253, 258, 259, 260, 261, 262, 325], "n": [7, 11, 106, 138, 141, 180, 181, 182, 185, 210, 232, 236, 241, 243, 245, 248, 251, 253, 255, 256, 261, 262, 266, 293, 313, 319, 320, 325], "n0": 106, "n1": [106, 108], "n2": [106, 108], "n3": 108, "n4": 108, "n5": 108, "n_i": 326, "name": [20, 26, 74, 77, 147, 301, 302, 303, 307, 314], "nan": [46, 248, 255, 256], "nation": 315, "natur": [317, 320, 324], "ndarrai": [66, 86, 87, 88, 89, 90, 91, 93, 95, 98, 99, 103, 109, 112, 113, 114, 117, 119, 122, 123, 124, 127, 129, 130, 133, 134, 136, 137, 138, 139, 142, 143, 144, 145, 146, 154, 155, 160, 161, 164, 167, 168, 169, 173, 177, 179, 185, 194, 195, 199, 211, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 236, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 261, 262, 263, 265, 269, 271, 275, 277, 280, 281, 283, 284, 301], "ndimag": [66, 99, 127, 142, 143, 144, 145, 146], "nearbi": 189, "necessari": [26, 127, 193, 320, 325, 326], "necessarili": [103, 109], "need": [110, 186, 250, 251, 253, 288, 305, 309, 311, 312, 317, 318, 320, 321, 324], "neg": [25, 142, 144, 145, 148, 150, 151, 155, 156, 157, 161, 162, 163, 177, 178, 179, 180, 181, 182, 206, 319, 320], "neglect": 114, "neighbor": [5, 32, 45, 52, 98, 103, 109, 122, 124, 129, 130, 184, 186, 187, 188, 223, 225, 289, 290, 292, 293, 294, 295, 304, 320, 321, 326], "neighborhood": [189, 293, 294, 319], "neilesh": 315, "neither": 210, "nelem": [65, 189, 191, 192, 296], "nesper": 313, "net": 326, "network": [26, 326], "never": 321, "nevertheless": 6, "new": [7, 87, 88, 89, 90, 91, 98, 103, 105, 109, 112, 117, 122, 183, 184, 185, 187, 188, 189, 192, 269, 271, 273, 282, 283, 305, 312, 318, 320], "newconn": [87, 88, 89, 90, 269, 271, 282], "newcoord": [87, 88, 89, 90, 98, 103, 122, 271, 282], "newedg": 56, "newfac": 58, "newid": 282, "newli": 320, "newnodeconn": 57, "newnodecoord": 59, "newvalu": 91, "next": [193, 320, 324], "nface": 298, "ni": 227, "nine": 131, "nj": 227, "nlayer": [26, 274], "nnode": 272, "nodal": [6, 25, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 124, 129, 130, 136, 158, 159, 186, 194, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 228, 229, 230, 231, 267, 268, 270, 271, 272, 273, 274, 276, 278, 279, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 313], "node": [2, 5, 20, 21, 22, 26, 27, 30, 31, 34, 37, 40, 44, 45, 46, 47, 50, 51, 52, 53, 55, 65, 66, 67, 69, 75, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 129, 130, 133, 134, 138, 139, 141, 143, 145, 149, 151, 158, 159, 165, 166, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 237, 239, 241, 243, 246, 249, 252, 256, 257, 264, 265, 269, 271, 272, 273, 274, 276, 278, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 301, 304, 306, 312, 314, 318, 319, 320, 321, 324], "nodeconn": [2, 20, 50, 54, 60, 65, 75, 86, 87, 89, 91, 92, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 115, 116, 118, 120, 121, 122, 133, 134, 136, 138, 139, 142, 144, 145, 148, 150, 151, 186, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 228, 229, 230, 231, 266, 268, 269, 270, 271, 274, 276, 279, 282, 286, 289, 290, 291, 292, 293, 294, 295, 296, 304, 312, 314], "nodeconn1": 278, "nodeconn2": 278, "nodecoord": [2, 20, 54, 71, 75, 86, 87, 89, 91, 92, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 127, 129, 130, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 148, 150, 151, 186, 200, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 228, 229, 230, 231, 234, 237, 239, 241, 249, 252, 256, 266, 267, 268, 269, 270, 271, 272, 274, 276, 279, 281, 282, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 304, 305, 312, 314], "nodecoords1": [257, 278, 285, 288], "nodecoords2": [257, 278, 285, 288], "nodedata": [20, 25, 55, 66, 99, 145, 151, 301, 305], "nodeneighbor": [2, 124, 129, 130, 186, 290, 295, 304, 311, 312], "nodeneighborhood": [124, 293, 294], "nodenorm": [2, 110, 124, 129, 130, 276], "nodenormalsmethod": 46, "noderegion": 290, "nodeset": [20, 59], "nodespringsmooth": [143, 149, 326], "nodev": [159, 165, 166, 278], "nodevals1": [278, 288], "nodevals2": [278, 288], "nodevalu": [87, 89, 91], "non": [46, 65, 75, 107, 141, 185, 186, 189, 192, 208, 209, 211, 276, 296, 304, 318, 319, 320, 321], "nondelaunai": 141, "none": [20, 24, 25, 26, 39, 55, 56, 57, 58, 59, 64, 66, 70, 74, 86, 99, 110, 113, 127, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 158, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 198, 200, 204, 205, 206, 207, 210, 212, 213, 214, 215, 230, 232, 237, 239, 241, 249, 252, 256, 258, 275, 279, 281, 282, 285, 288, 289, 290, 292, 297, 298, 301], "nonetyp": [24, 26, 64, 74, 149, 185, 191, 198, 241, 249, 252, 301], "nor": 210, "nord": 315, "norm": [210, 250], "normal": [24, 33, 46, 47, 110, 124, 129, 130, 143, 149, 180, 181, 182, 211, 223, 225, 227, 232, 233, 234, 235, 236, 237, 239, 241, 258, 267, 276, 281, 312, 313, 319, 321, 325], "notabl": 315, "note": [39, 64, 98, 103, 109, 110, 122, 155, 156, 157, 203, 210, 213, 273, 285, 288, 292, 305, 313, 320, 321], "notebook": [2, 5, 6, 7], "notion": 319, "notrim": 151, "noura": 313, "novel": 313, "now": 319, "np": [2, 6, 7, 46, 65, 66, 86, 87, 88, 89, 90, 91, 93, 95, 98, 99, 103, 109, 112, 113, 114, 117, 119, 122, 123, 124, 127, 129, 130, 133, 134, 136, 137, 138, 139, 142, 143, 144, 145, 146, 154, 155, 160, 161, 164, 167, 168, 169, 173, 177, 179, 184, 185, 194, 195, 199, 207, 211, 212, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 239, 241, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 265, 269, 271, 272, 275, 277, 280, 281, 283, 284, 285, 288, 296, 301], "npt": [285, 288], "nring": [63, 293], "numba": 309, "number": [20, 26, 34, 40, 41, 42, 43, 44, 106, 114, 143, 149, 184, 185, 187, 188, 189, 191, 192, 204, 205, 206, 210, 213, 214, 224, 266, 269, 274, 284, 285, 288, 293, 301, 304, 306, 309, 312, 320, 325, 326], "numer": [186, 313], "numpi": [1, 2, 6, 7, 87, 88, 89, 90, 93, 95, 99, 146, 147, 148, 150, 151, 154, 160, 164, 167, 169, 193, 250, 275, 280, 301, 307, 308, 309], "nvidia": 1, "nx2": [20, 133], "nx3": [20, 124, 129, 130, 133, 134, 185, 196, 200, 249, 252, 263, 277], "nx3x3": 266, "nx4": 281, "o": [309, 313, 325], "o_x": 325, "ob01": [143, 149, 313], "obj": 310, "object": [54, 64, 65, 66, 68, 69, 72, 84, 86, 127, 142, 143, 144, 145, 148, 149, 150, 151, 165, 166, 183, 184, 185, 187, 188, 193, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 287, 296, 301, 305, 308, 310, 311, 312, 313, 315, 319], "obp03": [188, 313], "observ": 6, "obtain": [86, 88, 89, 93, 94, 95, 110, 124, 129, 130, 143, 149, 155, 156, 157, 161, 162, 163, 177, 178, 179, 266, 292, 304, 305, 307, 308, 314, 318, 319, 325], "occur": [113, 127, 148, 325], "octre": [86, 113, 239, 241, 246, 249, 252, 253, 256, 281, 285, 288, 305], "octree2du": 86, "octree_ep": 86, "octree_strategi": 86, "octreenod": [113, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 239, 241, 246, 249, 252, 256, 281, 285, 288], "odd": 325, "off": 321, "offer": [305, 308, 312], "offset": [173, 174, 212], "offset_v": 168, "often": [189, 192, 305, 318, 326], "ohtak": [149, 313], "old": [271, 282], "om": 307, "omit": 309, "onc": [269, 302, 311, 320], "one": [24, 39, 54, 62, 93, 95, 98, 103, 106, 107, 109, 122, 143, 184, 186, 187, 188, 196, 200, 232, 247, 248, 249, 250, 251, 252, 253, 254, 255, 285, 288, 292, 304, 312, 315, 318, 319, 320, 324], "ongo": 315, "onli": [24, 93, 95, 106, 107, 127, 138, 143, 146, 149, 184, 185, 186, 187, 188, 189, 192, 194, 195, 196, 200, 206, 210, 213, 214, 237, 239, 241, 250, 251, 252, 253, 269, 270, 274, 285, 288, 292, 301, 302, 304, 307, 309, 319, 320, 321, 324, 325], "onlinelibrari": 313, "onto": [2, 281, 320, 325], "opac": 301, "opaqu": 301, "open": [206, 314, 319], "opencv": [307, 309], "oper": [20, 54, 146, 155, 156, 157, 189, 191, 271, 283, 304, 305, 308, 312, 315, 317, 318], "opposit": [25, 142, 144, 145, 148, 150, 151, 250, 308, 318, 319, 320], "optim": [6, 26, 110, 143, 149, 216, 313, 315], "optimizetet": 26, "option": [1, 20, 24, 25, 26, 27, 39, 47, 55, 64, 66, 67, 70, 74, 75, 76, 77, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 103, 106, 107, 109, 110, 112, 113, 122, 127, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 230, 232, 236, 237, 239, 241, 243, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 288, 289, 290, 292, 295, 297, 301, 302], "optionalperpendicular": 213, "order": [39, 66, 97, 99, 102, 110, 116, 119, 121, 136, 137, 142, 144, 145, 146, 155, 156, 157, 191, 269, 271, 283, 284, 307, 313, 314, 318, 319, 320, 321, 325], "org": [26, 84, 134, 137, 139, 232, 244, 245, 250, 251, 253, 258, 259, 260, 261, 262, 313], "organ": 303, "orient": [98, 103, 109, 122, 176, 211, 247, 301, 304, 319, 320], "origin": [1, 27, 39, 62, 87, 88, 91, 93, 95, 108, 109, 112, 143, 149, 189, 192, 269, 271, 283, 284, 312, 315, 317, 325], "ortho": 223, "orthogon": [64, 80, 217, 218, 222], "orthogonalqu": [64, 80], "orthopaed": 1, "orthoq": 222, "other": [20, 54, 62, 74, 103, 110, 143, 149, 173, 174, 189, 206, 226, 247, 248, 254, 255, 256, 269, 280, 303, 305, 308, 311, 312, 315, 319, 320, 321, 325], "otherwis": [26, 27, 39, 55, 88, 91, 187, 189, 192, 195, 206, 207, 208, 209, 211, 212, 232, 233, 235, 236, 237, 239, 241, 244, 245, 250, 258, 259, 261, 262, 307, 320, 325], "oup": 313, "out": [55, 76, 275, 280, 283, 284], "outer": [314, 321], "outofprocess": 311, "output": [27, 39, 76, 113, 155, 156, 157, 161, 162, 163, 177, 178, 179, 275, 283, 284], "outsid": [18, 55, 97, 102, 116, 121, 237, 239, 241, 267, 308, 318, 319, 325], "outward": [319, 320], "over": [189, 207, 321], "overal": 320, "overdetermin": 319, "overhead": [65, 296, 311], "overlap": [232, 258, 273, 313], "overrid": [147, 186], "overridden": [142, 148], "overview": 315, "p": [6, 169, 170, 171, 244, 245, 320, 325], "p1": 325, "p_": 320, "p_1": 325, "p_2": 325, "p_i": 320, "p_x": 320, "p_y": 320, "packag": [310, 312, 315], "pad": [88, 90, 127, 256, 275, 280], "page": 313, "pair": [227, 248, 255, 256, 261, 262, 321], "pairwis": [253, 266], "pan": 301, "panozzo": 313, "paper": [320, 325], "paraboloid": 320, "parallel": [39, 237], "parallelepip": 325, "param": 270, "paramet": [6, 20, 24, 25, 26, 27, 39, 55, 64, 66, 67, 68, 70, 72, 74, 77, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 301, 302, 319, 325], "parametr": 325, "parent": [98, 103, 109, 122, 324], "parentid": 91, "pariti": 325, "parsecolor": 301, "part": [106, 107, 320], "partial": [26, 194, 319], "particular": [315, 319], "particularli": [6, 305, 315], "partit": [318, 324], "pasko": 313, "pass": [55, 76, 148, 150, 151, 189, 191, 269, 307, 315, 324], "past": 289, "pasta": [8, 9, 10, 316], "path": [72, 142, 143, 144, 145, 146, 147, 309, 320], "pdf": [84, 134, 313], "peel": 274, "peelconn": 274, "peelcoord": 274, "peeledconn": 274, "peeledcoord": 274, "penn": 7, "per": [66, 99, 142, 144, 145, 146, 304, 319], "perform": [1, 2, 5, 26, 64, 66, 87, 88, 89, 90, 91, 143, 146, 149, 150, 151, 184, 185, 187, 188, 189, 191, 276, 301, 304, 305, 321, 324, 325], "pergamon": 313, "perhap": 324, "period": [6, 154, 160, 164, 167, 169], "permit": 189, "perpendicular": [204, 205, 206], "peter": 313, "ph": 315, "phi_resolut": [213, 214], "physic": 313, "physik": 313, "pi": [7, 207, 212, 319], "pillow": 309, "pip": [139, 309], "pixel": [88, 90, 314], "place": [27, 39, 85, 86, 87, 88, 89, 90, 91, 117, 142, 143, 144, 148, 149, 150, 184, 185, 187, 188, 192, 194, 271, 318, 320], "placement": [2, 143, 149], "plan": 16, "planar": [65, 296], "plane": [24, 39, 119, 137, 143, 149, 180, 181, 182, 188, 204, 205, 206, 233, 235, 236, 237, 279, 301, 312, 314, 319], "pleas": 7, "plot": [2, 5, 6, 7, 76, 83, 86, 142, 148, 150, 151, 152, 153, 154, 160, 164, 167, 169, 172, 176, 184, 203, 204, 206, 207, 208, 209, 210, 213, 214, 272, 301, 305, 312], "plt": [2, 305], "pm": 319, "pmatrix": 320, "png": [147, 307], "point": [6, 24, 39, 109, 112, 127, 131, 133, 134, 136, 137, 139, 143, 148, 150, 158, 159, 165, 166, 196, 198, 204, 205, 206, 210, 211, 212, 213, 214, 233, 235, 236, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 277, 281, 285, 288, 305, 308, 312, 313, 314, 318, 319], "pointinboundari": 325, "pointinsurf": 325, "points2octre": 324, "pole": 214, "polygon": [100, 106, 110, 313, 314, 320], "polyhedr": 313, "polyhedra": 314, "polyhedron": 321, "polytop": 313, "poor": 305, "popular": [320, 324], "posit": [25, 87, 88, 89, 90, 91, 119, 142, 143, 144, 145, 148, 149, 150, 151, 184, 185, 187, 188, 285, 319, 320, 325], "possibl": [65, 148, 150, 189, 191, 296, 318, 321], "possibli": 1, "potenti": [65, 273, 296, 321], "power": 315, "pp": 186, "practic": [96, 97, 100, 101, 102, 104, 115, 116, 118, 120, 121, 320], "pre": [79, 320], "preced": [74, 210], "precis": [65, 296], "precomput": [239, 241, 281, 285, 288], "predominantli": [204, 205], "prefer": 302, "prefix": [147, 311], "prescrib": [168, 185], "present": [106, 141, 189, 296, 301], "preserv": [189, 191, 192], "prevent": [34, 185], "previous": [47, 184, 187, 188, 249, 252, 320], "primal": 313, "primari": [20, 98, 109, 122], "primarili": [188, 227, 304, 305, 314], "primit": [6, 7, 87, 89, 91, 98, 272, 303, 305, 311, 312], "princip": [2, 63, 123, 124, 125, 126, 127, 128, 129, 130, 132, 313], "print": [20, 64, 216, 217, 218, 219, 221, 222, 223, 224, 226, 250, 285, 288], "priorit": 189, "problem": 313, "problemat": 305, "proce": 325, "procedur": [26, 313, 320], "proceed": 313, "process": [137, 189, 305, 320, 324], "produc": [25, 206, 213, 288, 305, 307, 312], "product": 325, "progress": [189, 191, 192, 317], "project": [1, 139, 281, 285, 288, 315, 320, 325], "proper": [110, 307], "properli": [113, 321, 324], "properti": [21, 22, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 60, 71, 74, 98, 109, 122, 311, 319], "propos": [193, 194, 318], "protanomali": 301, "provid": [1, 20, 55, 74, 91, 110, 113, 123, 127, 129, 130, 138, 141, 150, 185, 186, 187, 189, 192, 207, 208, 210, 230, 232, 241, 258, 278, 281, 285, 288, 289, 290, 310, 315, 317, 320], "pt": [24, 198, 211, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 264, 265, 266], "pt1": 210, "pt2": 210, "public": 313, "publish": [315, 320], "pure": [96, 97, 101, 102, 104, 115, 116, 118, 120, 121, 183, 204, 205, 206, 207, 212, 213, 266, 315], "purpos": [226, 309, 314, 317], "pv": 83, "pvmesh": 83, "py": [2, 4, 5, 6, 7, 9, 311, 316], "pydicom": [307, 309], "pyenv": 311, "pyglet": 302, "pymesh": 315, "pypi": 139, "pyplot": 2, "pyramid": [65, 101, 102, 103, 106, 194, 212, 217, 224, 296, 297, 306], "pyramidconn": [103, 297], "pyramidcoord": [103, 297], "pyramidheight": 297, "python": [2, 5, 6, 7, 139, 307, 311, 321], "pyvista": [83, 315], "qef": [193, 324], "qhull": 16, "qingnan": 313, "quad": [103, 105, 106, 148, 203, 206, 209, 211, 212, 213, 214, 229, 269, 295, 306, 314], "quadfit": 319, "quadrat": [91, 130, 150, 193, 306, 324], "quadrilater": [65, 89, 91, 97, 102, 104, 105, 106, 121, 203, 204, 205, 207, 209, 211, 214, 229, 296, 306, 318], "quak": 313, "qual": 64, "qualiti": [2, 5, 19, 64, 98, 109, 122, 187, 189, 191, 305, 309, 313, 315, 319, 321], "qualityfunc": 187, "qualitymetr": 190, "qualitys": 192, "qualitythreshold": 183, "queri": 321, "question": 1, "queue": 320, "quick": 312, "quit": 305, "r": [137, 143, 149, 155, 156, 157, 161, 162, 163, 176, 177, 178, 179, 214, 244, 245, 305, 308, 313, 325], "r1": 206, "r2": 206, "r_0": 325, "r_1": 325, "r_2": 325, "r_x": 325, "r_y": 325, "r_z": 325, "radial": [204, 205, 206, 213, 214], "radial_resolut": [204, 205, 206, 213, 214], "radian": [64, 207, 212], "radii": 206, "radiu": [2, 153, 172, 176, 204, 206, 213, 214, 294, 308, 320], "rag": [275, 280, 283, 284, 304], "rai": [305, 313, 324], "rainald": 313, "rais": [75, 309], "rand": [239, 241], "random": [65, 237, 239, 241, 285, 288, 296], "randomli": 320, "rang": [148, 150, 217, 218, 222, 223, 224, 228, 229, 230, 231, 301, 319], "rare": [65, 296], "rather": [24, 77, 96, 97, 98, 100, 101, 102, 103, 104, 115, 116, 118, 120, 121, 122, 143, 145, 149, 194, 304, 305, 315, 318, 320, 321, 324], "ratio": [64, 216], "rayboxesintersect": 325, "rayboxintersect": 325, "raysegmentintersect": 325, "raysegmentsintersect": 325, "rayssurfintersect": 253, "raystrianglesintersect": [250, 251, 325], "raytriangleintersect": [251, 253, 325], "raytrianglesintersect": [250, 253, 325], "re": [55, 271, 283, 284, 319, 320], "reach": [321, 324, 325], "read": [307, 310], "readabl": [72, 276, 315], "reader": 307, "real": [154, 160, 164, 167, 169], "reason": [6, 321], "recalcul": [186, 312, 321], "receiv": 46, "recogniz": 319, "recommend": [189, 192], "reconnect": 271, "reconstruct": 1, "record": 313, "recov": [283, 284], "rectangular": [203, 208, 209, 210, 256, 280, 304, 314], "rectilinear": [87, 89, 119], "red": [5, 304], "redistribut": [2, 143, 149, 185], "reduc": [93, 95, 143, 149, 187, 189, 269, 318], "redund": 321, "refer": [27, 33, 39, 62, 75, 91, 189, 192, 194, 301, 312, 315, 317, 319], "referenc": [34, 304, 312], "refin": [193, 200, 324], "reflect": 39, "regardless": [148, 305, 319, 325], "region": [89, 189, 191, 192, 289, 290, 324], "regist": 1, "registr": 1, "regulargridinterpol": 143, "rel": [148, 150, 264, 265, 266, 285], "relabel": 282, "relat": [16, 78, 93, 95], "relev": [206, 213, 214, 292, 306, 320, 321], "reli": [305, 319, 324, 325], "relianc": 315, "remain": [6, 114, 271], "remesh": 313, "remov": [27, 55, 86, 88, 89, 90, 107, 142, 144, 145, 148, 149, 150, 151, 189, 192, 269, 271, 274, 275, 320, 321], "renumb": [189, 271, 278], "reorder": [283, 284], "repeat": [191, 305, 320, 324], "replac": 309, "report": 64, "reposit": [143, 149, 184, 187, 188, 326], "repositori": 309, "repres": [99, 233, 304, 308, 314, 321, 324], "represent": [6, 28, 29, 31, 32, 35, 36, 45, 54, 200, 201, 281, 285, 287, 288, 305, 321, 324], "request": 1, "requir": [91, 283, 292, 305, 309, 311, 319, 321], "resampl": [66, 99, 142, 144, 145, 146], "research": [1, 315], "resolut": [66, 99, 305, 313, 324], "resolv": 318, "respect": [88, 206, 214, 318, 319], "result": [2, 6, 85, 91, 98, 103, 109, 110, 122, 129, 130, 185, 204, 205, 208, 209, 211, 305, 319], "retriev": [198, 199, 202], "return": [5, 24, 25, 27, 39, 62, 64, 65, 66, 68, 69, 70, 72, 76, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 301, 302, 305, 307, 308, 312], "return_anchor": [87, 89], "return_count": 93, "return_edgeconn": 106, "return_edgeelem": 106, "return_faceconn": 107, "return_faceelem": 107, "return_fig": [2, 70, 305], "return_gradi": [66, 99], "return_hul": 140, "return_id": [94, 109, 112], "return_idx": [93, 95, 269, 271, 283, 284], "return_imag": 301, "return_intersect": [247, 248, 254, 255], "return_inv": [93, 95, 109, 112, 271, 283, 284], "return_kf": 186, "return_mappingmatrix": 288, "return_matrix": 277, "return_nodedata": [66, 99, 145], "return_nodevalu": 91, "return_octre": [285, 288], "return_parentid": 91, "return_pt": [256, 257], "return_separ": 283, "return_surfelem": 108, "revers": [271, 283], "revolut": [212, 214], "revolv": 7, "rfboutputcontext": [2, 5, 6, 7], "rgb": [146, 147, 307], "rgba": [147, 301, 307], "rho": 183, "richard": 313, "ridg": [5, 131], "right": [301, 319, 325], "ring": [293, 319], "risk": [143, 149], "rmax": [155, 156, 157, 161, 162, 163], "rmin": [177, 178, 179], "rmsd": 2, "rmsd_k1a_smooth": 2, "rmsd_k1a_spher": 2, "rmsd_k1m_smooth": 2, "rmsd_k1m_sphere": 2, "robust": [19, 244, 245, 313], "romain": 313, "ron": [123, 127, 313], "root": [2, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 246, 309, 324], "rotat": [207, 212, 214, 277, 301, 318], "row": [20, 271, 283, 284, 285, 304], "rrner": 313, "rule": [312, 325], "run": [2, 5, 6, 7, 27, 55, 142, 144, 145, 148, 150, 151, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 309, 311], "runner": 2, "runtimewarn": 2, "russia": 313, "rut": 131, "s003660200006": [26, 313], "s00371": 313, "s0925": 313, "s1": [248, 254, 255], "s10237": 313, "s2": [248, 254, 255], "saddl": [131, 319], "same": [20, 27, 39, 50, 74, 103, 122, 149, 184, 187, 188, 237, 269, 271, 303, 304, 312, 318, 320, 321, 324, 325], "sampl": [65, 86, 123, 212, 213, 285, 288, 296, 307, 313, 324], "satisfi": 308, "save": 147, "scaffold": [313, 315], "scalar": [2, 20, 25, 55, 70, 86, 142, 144, 145, 148, 150, 151, 154, 155, 156, 160, 161, 162, 164, 167, 168, 169, 173, 174, 177, 178, 179, 192, 206, 207, 212, 213, 214, 272, 288, 298, 299, 301, 308, 312, 325], "scalar_prefer": [55, 301], "scale": [66, 99, 131, 142, 144, 145, 146, 180, 181, 182, 186, 313, 319], "scalefactor": [66, 99, 142, 144, 145, 146, 307], "scaleord": [66, 99, 142, 144, 145, 146], "scan": [315, 319], "scenario": [65, 296], "scf": 191, "schaefer": 313, "schedul": 191, "scheme": 114, "schneider": 313, "schnere": 313, "schwald": 313, "schwarz": [6, 154, 169], "scienc": 313, "scipi": [16, 66, 99, 127, 141, 142, 143, 144, 145, 146, 186, 309], "scott": 313, "scratch": 315, "script": [2, 5, 6, 7], "se": 313, "search": [198, 199, 324], "second": [2, 5, 6, 7, 67, 85, 155, 161, 177, 192, 210, 227, 248, 254, 255, 256, 257, 259, 260, 264, 265, 266, 305, 321], "section": [153, 206, 213, 214, 283, 317, 325], "see": [2, 15, 26, 28, 29, 31, 32, 35, 36, 45, 46, 47, 66, 67, 70, 76, 86, 91, 92, 93, 95, 99, 127, 142, 143, 144, 145, 146, 148, 149, 189, 191, 249, 250, 251, 252, 253, 295, 301, 304, 308, 310, 311, 312, 318, 319, 320, 321, 324, 325, 326], "seem": 311, "seen": 6, "segment": [89, 210, 247, 248, 254, 255, 318], "segmentsegmentintersect": 325, "segmentssegmentsintersect": 325, "select": [142, 148, 301, 302, 320], "self": [256, 325], "semicolon": 311, "sensit": [124, 129, 130], "sep": 313, "separ": [146, 189, 192, 283, 290, 312, 318], "sequenti": [184, 187, 188], "seri": [6, 313, 314], "serv": 317, "set": [6, 20, 26, 46, 47, 65, 87, 88, 89, 90, 91, 93, 95, 113, 127, 133, 134, 137, 143, 148, 149, 150, 155, 161, 177, 184, 185, 186, 187, 188, 189, 196, 236, 245, 248, 251, 253, 255, 261, 262, 263, 266, 273, 277, 283, 289, 290, 295, 296, 297, 301, 302, 305, 311, 312, 314, 320, 324], "set_axis_off": 305, "set_titl": [2, 305], "set_xtick": 2, "set_xticklabel": 2, "set_ylabel": 2, "set_ylim": 2, "set_yscal": 2, "seven": 319, "sever": [6, 16, 46, 303, 304, 305, 308, 309, 312, 314, 318, 321, 324], "shade": 301, "shadi": 315, "shape": [8, 9, 10, 63, 131, 132, 232, 236, 237, 238, 239, 241, 243, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 261, 262, 266, 305, 313, 314, 316, 320], "shapeindex": [131, 319], "share": [93, 94, 95, 106, 259, 260, 261, 262, 292, 304, 321], "sharp": [305, 313], "she96": [313, 315], "shewchuk": [16, 139, 141, 313], "shi": 315, "shift": [7, 212], "shirlei": [244, 245, 313], "shortcom": 318, "shorter": 189, "shortest": [186, 216], "shoud": [66, 99], "should": [20, 26, 65, 66, 86, 88, 98, 99, 103, 105, 122, 123, 136, 141, 142, 144, 145, 148, 149, 150, 151, 156, 162, 174, 178, 193, 225, 229, 231, 232, 236, 237, 243, 244, 245, 249, 250, 251, 252, 253, 261, 262, 266, 276, 281, 285, 288, 296, 301, 303, 308, 315, 320], "shouldn": [237, 239, 241], "show": [2, 70, 301, 304, 305, 317], "show_edg": [2, 86, 184, 203, 204, 206, 207, 208, 209, 210, 213, 214, 301, 312], "show_empti": 197, "show_fac": 301, "shown": [301, 320, 321], "shrinkag": [143, 149], "si": 313, "si15": [313, 315], "sici": 313, "side": [24, 107, 148, 150, 151, 235, 236, 321, 325], "siggraph": [232, 244, 245, 250, 251, 253, 258, 313], "sigma_max": 183, "sigma_min": 183, "sign": [25, 142, 144, 145, 148, 150, 151, 165, 166, 168, 173, 174, 193, 319, 320, 325], "signific": [2, 145, 311], "significantli": [250, 251, 253, 281, 285, 288], "similar": 318, "similarli": [312, 321, 325], "simpl": [276, 305], "simplex": 91, "simplexmethod": 224, "simpli": [217, 269, 288, 320], "simul": [1, 301, 314], "simultan": [143, 149, 184, 187, 188], "sin": [154, 160, 164, 167, 169, 207], "sinc": [1, 305, 312, 318, 324, 326], "singl": [7, 55, 88, 90, 91, 98, 103, 122, 125, 126, 128, 132, 142, 144, 145, 146, 147, 148, 150, 151, 253, 266, 289, 290, 307, 321, 324], "situat": 318, "six": [27, 203, 208, 211], "size": [5, 6, 66, 88, 90, 99, 113, 127, 142, 143, 144, 145, 149, 189, 191, 192, 193, 200, 203, 207, 208, 209, 210, 211, 212, 224, 289, 290, 297, 324], "skelet": 315, "skew": [64, 80, 124, 129, 130, 190, 217, 228, 229, 230, 231], "slice": [146, 283, 307], "slice0": 146, "slightli": [208, 209, 211, 250, 251, 253], "sliver": 224, "slow": 151, "slower": [276, 305], "small": [85, 149, 236, 237, 239, 241, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 283, 309, 325, 326], "smaller": [200, 324], "smart": 187, "smartlaplaciansmooth": 191, "smooth": [2, 143, 149, 183, 184, 185, 187, 188, 191, 301, 313, 323], "smooth_kwarg": 191, "smoother": 191, "smoothspher": 2, "snap": [148, 150], "snap2surf": [148, 150], "snapgrid2surf": [148, 150], "so": [39, 54, 127, 146, 155, 156, 157, 187, 189, 312, 318, 320, 321, 324, 325], "societi": 313, "softwar": [312, 313, 315], "sohn": 313, "solid": [106, 107, 301, 313], "solid2edg": [92, 93, 96, 100, 101, 104, 111, 115, 118, 120, 295, 304], "solid2fac": [94, 95, 97, 102, 116, 121, 304], "solid2tet": [91, 98, 103, 122], "solv": [186, 319, 320, 325, 326], "some": [20, 54, 65, 74, 189, 194, 206, 213, 214, 296, 305, 315, 317, 319], "soo": 313, "sophist": 1, "sort": [110, 189, 271, 283, 284, 289, 290, 321], "sourc": [2, 5, 6, 7, 20, 24, 25, 26, 27, 39, 48, 49, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302], "sp": [154, 160, 164, 167, 169], "space": [6, 314, 324], "span": 193, "spars": [186, 195], "spatial": [40, 138, 141, 324], "spec": 313, "specfi": 25, "special": [314, 320], "specif": [6, 7, 147, 304, 306, 309, 312, 315, 317], "specifi": [24, 26, 27, 39, 64, 65, 74, 86, 88, 90, 92, 99, 106, 127, 141, 142, 144, 145, 147, 148, 150, 151, 153, 158, 159, 168, 184, 185, 186, 187, 188, 191, 192, 193, 199, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 226, 243, 247, 248, 249, 252, 254, 255, 269, 274, 275, 280, 285, 294, 296, 301, 324], "speed": [281, 285, 288], "spent": 305, "sphere": [2, 86, 91, 214, 303, 305, 308, 312, 319], "spheric": [131, 319], "sphinx": [2, 5, 6, 7, 10], "split": [85, 103, 105, 141, 191, 192, 284, 305, 318], "splitfeatur": 63, "spread": 185, "spring": [26, 143, 149, 185, 186, 313, 314, 323], "springer": 313, "spuriou": 319, "sqrt": [2, 319], "squar": [2, 89, 90, 209, 211, 319], "src": 2, "stabl": 83, "stack": [66, 99, 147, 307], "standard": [65, 127, 143, 296, 314, 321], "star": 320, "start": [7, 26, 244, 245, 247, 250, 251, 253, 283, 315, 320, 324], "state": [64, 318], "static": 70, "statist": [285, 288], "statu": 321, "step": [191, 207, 212, 305, 320], "steve": 313, "stiff": [26, 185, 186, 326], "stiffnessfactor": [26, 186], "still": [19, 83, 214], "stl": [72, 310], "storag": [250, 251, 253, 313], "store": [20, 64, 119, 145, 146, 151, 189, 192, 307, 312, 321], "str": [20, 25, 26, 27, 55, 64, 65, 66, 72, 74, 77, 86, 87, 88, 89, 90, 91, 92, 98, 99, 103, 106, 110, 113, 122, 127, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 165, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 224, 226, 239, 241, 249, 252, 256, 269, 276, 281, 285, 288, 289, 292, 295, 296, 301, 302], "straight": [7, 305, 324], "strategi": [86, 193, 324], "stretch": 319, "strict": 270, "strictli": [26, 185, 208, 209, 211, 229, 231, 249, 252, 326], "string": [25, 55, 74, 146, 189, 191, 192, 288, 301], "strive": 315, "structur": [78, 113, 193, 194, 196, 201, 239, 241, 246, 249, 252, 271, 281, 285, 288, 304, 313, 315, 320, 324], "sub": [226, 314], "subdivid": [26, 196, 324], "subdivis": [86, 193], "subject": 6, "sublist": 283, "submit": 7, "submodul": 303, "subplot": [2, 305], "subsequ": 312, "subseri": 313, "substitut": 1, "suffer": 305, "suffici": [91, 236, 237, 239, 241, 250, 251, 253, 259, 260, 261, 262, 325, 326], "suit": 64, "suitabl": [106, 295], "sum": [2, 6, 226], "sum_": 326, "super": 320, "suppli": [200, 292, 315], "support": [1, 20, 72, 106, 110, 147, 285, 288, 310, 311, 315], "suppress": 311, "sure": [311, 320, 324], "surf": [20, 25, 26, 65, 75, 86, 91, 106, 204, 205, 206, 207, 212, 213, 214, 215, 269, 295, 296, 312], "surf1": [84, 85], "surf1intersect": 257, "surf2": [84, 85], "surf2intersect": 257, "surf2octre": 256, "surf2tri": [249, 252], "surf2voxel": 312, "surfac": [1, 2, 6, 18, 20, 21, 22, 26, 33, 34, 38, 46, 47, 50, 51, 52, 53, 65, 84, 85, 86, 91, 94, 106, 107, 108, 110, 111, 112, 113, 123, 124, 127, 129, 130, 142, 143, 148, 149, 150, 151, 152, 153, 154, 160, 164, 167, 169, 172, 173, 174, 176, 184, 185, 187, 188, 189, 200, 203, 204, 205, 206, 207, 210, 212, 213, 214, 215, 225, 237, 239, 241, 249, 252, 256, 257, 267, 269, 272, 281, 285, 287, 288, 292, 296, 297, 301, 305, 306, 308, 313, 315, 318], "surface2edg": 106, "surface2octre": [239, 241, 249, 252, 281, 285, 288, 324], "surfacemesh": [2, 5, 152, 153, 154, 160, 164, 167, 169, 172, 176, 305, 308], "surfacenodeoptim": 2, "surfconn": [26, 33, 54, 94, 108, 110, 113, 124, 129, 130, 200, 234, 239, 241, 249, 252, 256, 267, 272, 281, 287], "surfconn1": [257, 285, 288], "surfconn2": [257, 285, 288], "surfcoord": 113, "sw05": [86, 193, 194, 313, 324], "sweep": 7, "sydnei": 315, "symbol": [86, 123, 154, 157, 160, 163, 164, 167, 169, 179], "symfun": 175, "symfun1": [157, 163, 179], "symfun2": [157, 163, 179], "symmetr": [155, 156, 157, 305], "sympi": [123, 149, 154, 157, 160, 163, 164, 167, 169, 179, 305, 309], "symposium": 313, "system": [83, 127, 277, 319, 324, 326], "t": [26, 27, 39, 41, 43, 62, 65, 70, 75, 94, 110, 111, 148, 173, 174, 175, 185, 187, 189, 232, 237, 239, 241, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 281, 285, 287, 288, 292, 296, 312, 317, 319, 320, 321, 324, 325, 326], "t_": 325, "t_i": 325, "t_j": 320, "t_p": 320, "tabl": [304, 318, 320], "take": [6, 74, 158, 159, 192, 210, 312, 320], "taken": [55, 106, 107, 192, 318, 324], "tami": 313, "tandfonlin": 313, "tangent": [143, 149, 188], "tangenti": [2, 143, 149, 187, 188], "tangentialsurfac": 187, "target": [187, 189, 190, 191, 192], "task": 315, "taubin": 5, "td": 325, "techniqu": 313, "teeth": 315, "temporarili": 226, "term": [285, 288, 312, 321, 325], "termin": [184, 185, 187, 188, 320, 324], "teseo": 313, "tessel": 313, "test": [110, 232, 235, 236, 237, 238, 239, 241, 243, 246, 249, 252, 253, 258, 259, 260, 261, 262, 313, 318, 324], "tet": [91, 106, 109, 144, 150, 206, 207, 208, 212, 213, 226, 269, 272, 295, 321], "tet10nodeconn": 114, "tet4nodeconn": [114, 117], "tetconn": [98, 103, 109, 122], "tetconn1to14": 122, "tetconn1to2": 103, "tetconn1to24": 98, "tetconn1to3": 122, "tetconn1to36": 122, "tetconn1to4": 103, "tetconn1to5": 98, "tetconn1to6": 98, "tetcontract": 191, "tetcoord": 109, "tetcoords1to14": 122, "tetcoords1to2": 103, "tetcoords1to24": 98, "tetcoords1to3": 122, "tetcoords1to36": 122, "tetcoords1to4": 103, "tetcoords1to5": 98, "tetcoords1to6": 98, "tetflip": 191, "tetgen": [313, 315], "tetmesh": [6, 272, 305, 308], "tetnodeconn": 91, "tetnodecoord": 91, "tetopt": 26, "tetradehdr": 114, "tetradehedr": 114, "tetrahedr": [26, 65, 91, 98, 103, 106, 109, 114, 115, 116, 117, 122, 134, 144, 150, 183, 189, 191, 192, 206, 207, 208, 212, 213, 217, 224, 230, 264, 286, 296, 305, 306, 313, 315, 320, 321], "tetrahedra": [86, 91, 98, 103, 109, 122, 142, 148, 150, 206, 212, 213, 230, 305, 306, 314, 321], "tetrahedron": [264, 306, 320], "tetraher": 1, "tetsplit": 191, "th": [313, 326], "tha": 320, "than": [18, 25, 65, 66, 74, 77, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 115, 116, 118, 120, 121, 122, 127, 142, 143, 144, 145, 146, 148, 149, 150, 151, 184, 185, 187, 188, 189, 192, 193, 194, 200, 226, 250, 251, 253, 269, 270, 272, 281, 285, 288, 296, 304, 305, 315, 318, 319, 320, 321, 324], "thei": [6, 41, 43, 55, 88, 92, 110, 143, 149, 241, 271, 283, 284, 289, 303, 304, 306, 312, 314, 318, 319, 321, 324], "them": [85, 206, 309, 312, 320, 324], "theme": [299, 301, 315], "theorema": 319, "theoret": 2, "theori": [1, 15, 313, 315, 320], "therefor": 319, "theta_resolut": [204, 205, 206, 213, 214], "thi": [1, 5, 6, 7, 16, 18, 20, 24, 25, 26, 27, 40, 50, 54, 55, 64, 65, 75, 85, 86, 89, 91, 98, 103, 109, 110, 111, 119, 122, 124, 127, 129, 130, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 160, 164, 167, 168, 169, 173, 174, 176, 185, 191, 192, 193, 194, 200, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 217, 218, 222, 223, 227, 237, 239, 241, 244, 245, 249, 250, 251, 252, 253, 259, 260, 261, 262, 266, 269, 273, 288, 296, 301, 303, 305, 306, 308, 311, 312, 315, 317, 318, 319, 320, 321, 324, 325, 326], "thick": [26, 173, 174], "thick_fun": 174, "thicken": 174, "thickenf": [6, 272], "thieri": 313, "thing": 312, "third": [138, 141, 264, 265, 266], "thoroughli": 320, "those": [74, 270, 278, 312, 320, 321, 324, 325], "though": [6, 250, 305], "thousand": 324, "three": [5, 88, 119, 123, 142, 144, 145, 148, 150, 151, 152, 153, 156, 157, 162, 163, 172, 174, 176, 178, 179, 180, 181, 182, 192, 199, 208, 212, 213, 214, 225, 235, 250, 258, 259, 260, 281, 304, 307, 308, 312, 314, 319, 320, 321, 324, 325], "threhsold": 55, "threshold": [25, 66, 86, 87, 88, 89, 90, 91, 99, 142, 143, 144, 145, 148, 149, 150, 151, 193, 272, 305, 314, 318, 319], "threshold_dir": [142, 144], "threshold_direct": [25, 66, 99, 142, 144, 145, 148, 150, 151, 305, 312], "thrich": 313, "through": [24, 86, 88, 148, 150, 151, 189, 269, 304, 305, 310, 318, 321], "throughout": [308, 315], "thu": [98, 103, 109, 114, 122, 143, 149, 189, 319], "thurrnerwuthrich98": [276, 313], "tiff": [66, 99, 147, 307], "tifffil": 307, "tight_layout": 305, "tim": [1, 315], "time": [2, 5, 6, 7, 184, 187, 188, 189, 191, 250, 251, 253, 312, 320, 325], "times3": 325, "timothi": 313, "tissu": [313, 315], "todo": [106, 270, 288, 292], "togeth": [67, 278, 305], "toj": 7, "tol": [61, 67, 84, 141, 270, 271, 281, 285, 288], "toler": [67, 84, 85, 86, 91, 184, 185, 187, 188, 247, 248, 249, 252, 254, 255, 256, 257, 270, 271, 281, 285, 288], "toma": 313, "too": 127, "tool": [13, 14, 15, 17, 18, 259, 260, 261, 262, 313, 315], "toolbox": 315, "top": [6, 9, 316], "topolog": [34, 38, 313, 318], "topologi": [8, 9, 10, 316, 321], "toru": [308, 311], "total": [2, 4, 5, 6, 7, 9, 11, 26, 213, 214, 215, 316], "touch": 320, "toward": [143, 149, 319, 320], "tpm": [8, 9, 10, 154, 160, 164, 167, 169, 316], "tpmss": 6, "trace": 305, "trade": 321, "transact": 313, "transfer": [20, 91], "transform": [183, 313], "transit": 194, "transpar": 301, "travers": [320, 321, 324], "treat": [88, 106, 143, 146, 149, 320, 326], "tree": 324, "tri": [105, 106, 112, 148, 199, 203, 204, 205, 206, 207, 209, 211, 212, 213, 214, 232, 236, 240, 242, 251, 253, 266, 269, 305, 314], "tri1": [259, 260, 261, 262], "tri2": [259, 260, 261, 262], "triangl": [2, 16, 65, 89, 90, 91, 112, 124, 129, 130, 136, 138, 141, 199, 200, 206, 213, 214, 231, 232, 235, 236, 249, 250, 251, 252, 253, 258, 259, 260, 261, 262, 265, 266, 267, 269, 270, 296, 306, 309, 313, 315, 318, 320, 324], "triangleboxintersect": 232, "triangluar": 288, "triangul": [1, 124, 129, 130, 133, 134, 136, 138, 139, 142, 148, 313, 318], "triangular": [26, 65, 85, 89, 90, 102, 105, 106, 112, 116, 118, 121, 200, 203, 204, 205, 206, 207, 209, 211, 212, 213, 214, 224, 225, 231, 237, 239, 241, 249, 252, 256, 266, 267, 285, 287, 288, 296, 304, 315], "triconn": [105, 112], "tricoord": [112, 235, 250, 258], "trimesh": 315, "trimetr": [301, 305, 312], "trinorm": [232, 258], "tripl": 325, "tripli": [6, 154, 160, 164, 167, 169], "tritanomali": 301, "trough": 131, "true": [2, 20, 26, 27, 39, 55, 64, 67, 70, 77, 86, 87, 88, 89, 90, 91, 93, 94, 95, 106, 107, 109, 112, 127, 135, 137, 143, 147, 148, 149, 150, 154, 160, 164, 167, 169, 184, 185, 186, 187, 188, 189, 191, 192, 199, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 226, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 271, 278, 283, 284, 285, 288, 301, 305], "truli": 6, "trumbor": [250, 251, 253, 313, 325], "tube": [176, 214], "tupl": [55, 70, 86, 88, 90, 99, 142, 144, 145, 146, 147, 148, 150, 151, 186, 193, 208, 233, 244, 301, 307], "twin": 320, "twist": 207, "twist_cent": 207, "two": [2, 55, 70, 84, 85, 87, 89, 90, 91, 94, 95, 138, 141, 155, 156, 157, 161, 162, 163, 177, 178, 179, 192, 206, 233, 244, 247, 248, 254, 255, 257, 259, 260, 261, 262, 269, 271, 272, 278, 283, 304, 305, 307, 319, 320, 321, 324], "twt": 313, "type": [20, 24, 25, 27, 39, 62, 64, 65, 66, 68, 69, 72, 75, 76, 84, 86, 91, 92, 94, 96, 97, 100, 101, 102, 104, 105, 106, 108, 111, 115, 116, 118, 119, 120, 121, 125, 126, 128, 131, 132, 133, 134, 136, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 191, 192, 193, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 241, 243, 244, 245, 246, 250, 253, 258, 259, 260, 261, 263, 267, 268, 269, 270, 273, 275, 276, 280, 281, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 301, 302, 304, 305, 307, 310, 312, 315, 324], "typic": [2, 98, 103, 109, 122], "u": [283, 284, 305, 325], "uedg": 93, "ufac": 95, "ultim": 325, "un": 321, "unalt": [27, 39], "unambigu": [65, 296, 321], "unattach": 34, "unchang": [98, 103, 114, 122, 271, 275, 307, 319], "unclos": [106, 111, 113, 305], "underbrac": 319, "undergon": 110, "understand": [315, 317], "unexpect": 113, "unidirect": 325, "uniform": [2, 20, 91, 150, 192, 273, 297, 314], "union": [84, 91, 178, 305, 308, 315], "union_fun": 178, "union_sym": 179, "union_v": 177, "unionf": [86, 305], "uniqu": [34, 93, 95, 269, 284, 318, 320], "unit": [2, 124, 127, 129, 130, 143, 237, 244, 245, 250, 251, 253, 276, 308, 319, 326], "unitless": 319, "univers": 315, "unknown": 319, "unless": 295, "unload": 186, "unnecessari": 312, "unpack": [142, 144, 145, 148, 150, 151, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214], "unsign": 166, "until": [184, 185, 187, 188, 189, 196, 200, 324, 326], "unus": 189, "up": [20, 65, 296, 301, 307, 314], "updat": [64, 186, 269, 271, 321], "upon": 315, "upper": [55, 70, 152, 208, 209, 211, 232, 233, 238, 244, 245, 258, 325], "url": 313, "us": [1, 6, 7, 16, 18, 20, 24, 25, 26, 34, 38, 46, 55, 66, 70, 86, 88, 89, 90, 91, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 109, 110, 113, 115, 116, 118, 120, 121, 122, 127, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 169, 177, 178, 179, 184, 185, 187, 188, 189, 191, 192, 193, 194, 207, 210, 224, 227, 228, 230, 236, 237, 239, 241, 247, 249, 250, 251, 252, 253, 259, 260, 261, 262, 269, 271, 272, 276, 280, 281, 283, 284, 285, 288, 289, 297, 301, 303, 304, 305, 307, 308, 309, 310, 312, 314, 315, 317, 318, 319, 320, 321, 324, 325, 326], "usag": 321, "user": [309, 312, 315, 317], "util": [2, 77, 91, 98, 109, 110, 122, 124, 127, 129, 130, 225, 253, 305, 307, 309, 310, 312, 321], "uv_1": 325, "v": [34, 86, 148, 150, 151, 193, 226, 230, 286, 287, 320, 325], "v_0": 325, "v_1": 325, "v_2": 325, "val": [119, 158], "valid": [237, 239, 241, 270, 315, 320, 321], "valu": [2, 18, 25, 26, 55, 70, 84, 87, 88, 89, 90, 91, 119, 125, 126, 127, 128, 132, 142, 144, 145, 148, 150, 151, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 168, 173, 174, 177, 178, 179, 186, 193, 236, 237, 239, 241, 250, 251, 253, 259, 260, 261, 262, 270, 271, 275, 280, 281, 285, 288, 289, 290, 301, 305, 312, 318, 319, 321, 325], "van": [125, 131, 132, 313], "vari": [6, 208, 209, 211, 304], "variabl": [156, 157, 162, 163, 174, 178, 179, 280, 303, 308, 325], "varieti": [77, 304, 307, 310, 314, 315, 318], "variou": [82, 310, 312, 315, 321, 324], "vartzioti": 313, "vast": 305, "vdot": 319, "vector": [1, 5, 20, 24, 33, 46, 47, 86, 110, 124, 129, 130, 143, 149, 153, 154, 156, 160, 162, 164, 167, 169, 174, 178, 192, 211, 212, 223, 225, 227, 232, 233, 235, 236, 237, 239, 241, 244, 245, 246, 247, 249, 250, 251, 252, 253, 258, 261, 262, 267, 276, 281, 313, 319, 321, 325], "vector_func": [154, 160, 164, 167, 169], "vectoriz": 308, "verbos": [2, 20, 64, 147, 189, 190, 191, 192, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 285, 288], "veri": [315, 325], "verifi": [75, 288, 315, 321], "versa": 324, "version": [2, 77, 91, 232, 253, 276, 311, 315, 321], "vertebr": 315, "vertex": [34, 313, 320, 321, 325], "vertexvalu": 88, "vertic": [34, 86, 88, 90, 114, 142, 143, 144, 148, 149, 150, 193, 194, 199, 232, 235, 236, 250, 251, 253, 258, 259, 260, 261, 262, 264, 265, 266, 318, 320, 324, 325], "via": [2, 139, 143], "viabl": 189, "vice": 324, "victoria": 313, "view": [70, 97, 102, 116, 121, 184, 267, 305, 312, 319], "visibl": [276, 320], "vision": [301, 313], "vispi": [301, 302, 309], "visual": [70, 76, 305, 309, 313], "vivian": 315, "vo": 314, "vol": [20, 25, 65, 75, 86, 91, 106, 206, 213, 214, 215, 269, 296, 305], "volum": [5, 20, 33, 34, 38, 64, 65, 75, 86, 91, 98, 108, 109, 111, 122, 143, 149, 188, 207, 212, 215, 224, 230, 269, 277, 286, 287, 296, 306, 308, 313, 315, 318, 320, 321, 325], "volumetr": [206, 213, 214, 305, 314], "von": 313, "voronoi": 313, "voxel": [66, 88, 99, 113, 119, 127, 142, 143, 144, 145, 146, 151, 158, 159, 165, 166, 195, 201, 243, 273, 274, 297, 312], "voxel2octre": 324, "voxelconn": [99, 113, 119, 158, 159, 195, 201, 243, 273, 297], "voxelcoord": [99, 113, 119, 158, 159, 195, 201, 243, 273, 297], "voxeldata": 99, "voxelmesh": [307, 308], "voxelnodeconn": [87, 312], "voxelnodecoord": [87, 312], "voxels": [66, 99, 127, 143], "vsn91": [6, 313], "vtk": [72, 315], "vtu": [72, 310], "vv_2": 325, "vws09": [183, 313], "w": [6, 7, 86, 142, 148, 150, 151, 152, 153, 154, 160, 164, 167, 169, 172, 176, 184, 203, 204, 206, 207, 208, 209, 210, 213, 214, 272, 305, 312, 313, 319], "wa": [1, 189, 302, 312, 315, 320], "wai": [103, 122, 124, 129, 130, 303, 305, 308, 320, 325], "walk": 320, "wang": 313, "warn": 75, "warren": 313, "wat81": [133, 313, 320], "watertight": 318, "watson": [133, 134, 141, 313], "wbms05": [244, 245, 313, 325], "we": [315, 319], "websit": 194, "wedg": [65, 91, 103, 106, 120, 121, 122, 207, 212, 217, 224, 296, 306, 318], "wedgeconn": 122, "wedgecoord": 122, "weight": [6, 276], "weights1": 6, "weights2": 6, "weights3": 6, "weights4": 6, "weingarten": 319, "well": [16, 110, 148, 150, 224, 309, 312, 315, 317], "were": [189, 192], "what": [109, 208, 209, 211, 270, 292, 305, 318], "when": [20, 65, 97, 102, 116, 121, 180, 181, 182, 184, 185, 187, 188, 189, 247, 250, 251, 253, 267, 271, 296, 304, 305, 306, 311, 317, 319, 320, 324], "where": [2, 18, 20, 114, 148, 150, 151, 185, 192, 193, 208, 209, 211, 247, 248, 254, 255, 256, 259, 260, 261, 262, 266, 282, 304, 308, 311, 314, 318, 319, 320, 321, 325, 326], "whether": [55, 67, 86, 88, 89, 90, 91, 127, 187, 193, 199, 215, 227, 237, 238, 239, 241, 243, 247, 248, 249, 250, 251, 252, 253, 254, 255, 269, 272, 301, 318, 319, 320, 321, 324, 325], "which": [1, 2, 5, 16, 55, 91, 92, 98, 109, 110, 113, 122, 123, 146, 148, 150, 151, 165, 166, 186, 189, 191, 192, 195, 202, 206, 212, 213, 226, 253, 281, 284, 301, 304, 305, 307, 310, 314, 315, 317, 318, 319, 320, 324], "whichev": [65, 296], "while": [26, 184, 185, 187, 188, 304, 305, 308, 314, 315, 317, 319, 320, 321, 324, 325], "white": [2, 5, 6], "who": [27, 270], "whose": [27, 180, 181, 182, 186, 320], "why": 317, "wide": 315, "width": [2, 301], "wikipedia": 308, "wil": 189, "wild": 313, "wilei": 313, "william": [244, 245, 313, 325], "window": 301, "wipper": 313, "wirefram": [301, 314], "within": [1, 26, 27, 92, 106, 110, 148, 150, 158, 159, 189, 192, 193, 194, 200, 250, 251, 253, 281, 286, 287, 314, 320, 324, 325], "without": [143, 149, 185, 271, 309, 311, 312, 319, 320], "won": [62, 70, 281, 285, 288, 292, 312, 317], "word": 191, "work": [2, 83, 113, 283, 304, 315, 317, 325], "worst": [80, 217, 218, 222, 223, 224, 228, 229, 230, 231], "would": [39, 319], "wrap": [83, 127, 137, 273, 315], "wrapper": [138, 139, 315], "write": [20, 307, 310], "written": [20, 72, 147, 307, 315, 319, 325], "www": [244, 245, 311, 313], "x": [5, 6, 18, 39, 86, 88, 91, 119, 123, 146, 148, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 167, 169, 172, 174, 176, 178, 179, 180, 181, 182, 185, 192, 193, 198, 204, 205, 206, 207, 210, 211, 212, 214, 232, 233, 238, 244, 245, 258, 279, 301, 307, 308, 313, 314, 319, 320, 325, 326], "x0": [108, 180, 297], "x1": [108, 152, 271, 273, 274, 286, 287, 288], "x2": [152, 288], "x3": 288, "x4": [285, 288], "x_": 325, "x_0": 319, "x_1": 319, "x_i": [319, 326], "x_iy_i": 319, "x_n": 319, "xifeng": 313, "xin": 55, "xlim": [232, 233, 238, 244, 245, 258], "xmax": [27, 86, 148, 150, 151, 193, 203, 208, 209, 211, 232, 238, 258, 325], "xmin": [27, 86, 148, 150, 151, 193, 203, 208, 209, 211, 232, 238, 258, 325], "xnew": 186, "xout": 55, "xy": [39, 182, 184, 237, 279, 301], "xz": [39, 181, 279, 301], "y": [5, 6, 18, 39, 86, 88, 91, 119, 123, 146, 148, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 167, 169, 172, 174, 176, 178, 179, 180, 181, 182, 185, 192, 193, 198, 204, 205, 206, 207, 210, 211, 212, 214, 232, 233, 238, 244, 245, 258, 279, 301, 307, 308, 313, 314, 319, 320, 325], "y0": [108, 181, 297], "y1": [108, 152, 271, 273, 274, 286, 287, 288], "y2": [152, 288], "y3": 288, "y_": 325, "y_0": 319, "y_1": 319, "y_i": [319, 326], "y_n": 319, "yet": [41, 43, 193], "yixin": 313, "ylim": [232, 233, 238, 244, 245, 258], "ymax": [27, 86, 148, 150, 151, 193, 203, 208, 209, 211, 232, 238, 258, 325], "ymin": [27, 86, 148, 150, 151, 193, 203, 208, 209, 211, 232, 238, 258, 325], "yongji": 313, "you": [1, 312], "yutaka": 313, "yx": 119, "yz": [39, 180, 279], "z": [5, 6, 18, 39, 86, 88, 90, 91, 119, 123, 143, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 167, 169, 172, 174, 176, 178, 179, 180, 181, 182, 185, 192, 193, 198, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 232, 233, 238, 244, 245, 258, 279, 301, 307, 308, 313, 319, 320, 325], "z0": [108, 182, 297], "z1": [108, 152, 271, 273, 274, 286, 287, 288], "z2": [152, 288], "z3": 288, "z_": 325, "z_0": 319, "z_1": 319, "z_i": [319, 326], "z_n": 319, "zbs03": [193, 313, 324], "zeitschrift": 313, "zero": [6, 18, 185, 207, 272, 325], "zhang": [287, 313], "zhou": 313, "zip": [2, 5, 6, 7], "ziti": 7, "zlim": [232, 233, 238, 244, 245, 258], "zmax": [27, 86, 148, 150, 151, 193, 203, 208, 211, 232, 238, 258, 325], "zmin": [27, 86, 148, 150, 151, 193, 203, 208, 211, 232, 238, 258, 325], "zoom": [66, 99, 142, 144, 145, 146], "zorin": 313, "\u00f6": 313, "\u00fc": 313}, "titles": ["API Reference", "Development", "Curvature Analysis", "Mesh Analysis Examples", "Computation times", "Implicit Heart", "Mixed-Topology TPMS", "Pasta Shapes", "Mesh Generation Examples", "Computation times", "Examples", "Computation times", "mymesh.booleans", "mymesh.contour", "mymesh.converter", "mymesh.curvature", "mymesh.delaunay", "mymesh.image", "mymesh.implicit", "mymesh.improvement", "mymesh.mesh", "mymesh.mesh.mesh.BoundaryConn", "mymesh.mesh.mesh.BoundaryNodes", "mymesh.mesh.mesh.Centroids", "mymesh.mesh.mesh.Clip", "mymesh.mesh.mesh.Contour", "mymesh.mesh.mesh.CreateBoundaryLayer", "mymesh.mesh.mesh.Crop", "mymesh.mesh.mesh.EdgeConn", "mymesh.mesh.mesh.EdgeElemConn", "mymesh.mesh.mesh.Edges", "mymesh.mesh.mesh.ElemConn", "mymesh.mesh.mesh.ElemNeighbors", "mymesh.mesh.mesh.ElemNormals", "mymesh.mesh.mesh.EulerCharacteristic", "mymesh.mesh.mesh.FaceConn", "mymesh.mesh.mesh.FaceElemConn", "mymesh.mesh.mesh.Faces", "mymesh.mesh.mesh.Genus", "mymesh.mesh.mesh.Mirror", "mymesh.mesh.mesh.ND", "mymesh.mesh.mesh.NEdge", "mymesh.mesh.mesh.NElem", "mymesh.mesh.mesh.NFace", "mymesh.mesh.mesh.NNode", "mymesh.mesh.mesh.NodeNeighbors", "mymesh.mesh.mesh.NodeNormals", "mymesh.mesh.mesh.NodeNormalsMethod", "mymesh.mesh.mesh.RenumberFacesBySet", "mymesh.mesh.mesh.RenumberNodesBySet", "mymesh.mesh.mesh.SurfConn", "mymesh.mesh.mesh.SurfElemConn", "mymesh.mesh.mesh.SurfNodeNeighbors", "mymesh.mesh.mesh.SurfNodes", "mymesh.mesh.mesh.Surface", "mymesh.mesh.mesh.Threshold", "mymesh.mesh.mesh.addEdges", "mymesh.mesh.mesh.addElems", "mymesh.mesh.mesh.addFaces", "mymesh.mesh.mesh.addNodes", "mymesh.mesh.mesh.cells", "mymesh.mesh.mesh.cleanup", "mymesh.mesh.mesh.copy", "mymesh.mesh.mesh.getCurvature", "mymesh.mesh.mesh.getQuality", "mymesh.mesh.mesh.identify_type", "mymesh.mesh.mesh.imread", "mymesh.mesh.mesh.merge", "mymesh.mesh.mesh.meshio2mymesh", "mymesh.mesh.mesh.mymesh2meshio", "mymesh.mesh.mesh.plot", "mymesh.mesh.mesh.points", "mymesh.mesh.mesh.read", "mymesh.mesh.mesh.removeElems", "mymesh.mesh.mesh.reset", "mymesh.mesh.mesh.validate", "mymesh.mesh.mesh.view", "mymesh.mesh.mesh.write", "mymesh.octree", "mymesh.primitives", "mymesh.quality", "mymesh.rays", "mymesh.utils", "mymesh.visualize", "mymesh.booleans.MeshBooleans", "mymesh.booleans.SplitMesh", "mymesh.contour.Adaptive", "mymesh.contour.MarchingCubes", "mymesh.contour.MarchingCubesImage", "mymesh.contour.MarchingSquares", "mymesh.contour.MarchingSquaresImage", "mymesh.contour.MarchingTetrahedra", "mymesh.converter.EdgesByElement", "mymesh.converter.edges2unique", "mymesh.converter.faces2surface", "mymesh.converter.faces2unique", "mymesh.converter.hex2edges", "mymesh.converter.hex2faces", "mymesh.converter.hex2tet", "mymesh.converter.im2voxel", "mymesh.converter.polygon2edges", "mymesh.converter.pyramid2edges", "mymesh.converter.pyramid2faces", "mymesh.converter.pyramid2tet", "mymesh.converter.quad2edges", "mymesh.converter.quad2tri", "mymesh.converter.solid2edges", "mymesh.converter.solid2faces", "mymesh.converter.solid2surface", "mymesh.converter.solid2tets", "mymesh.converter.surf2dual", "mymesh.converter.surf2edges", "mymesh.converter.surf2tris", "mymesh.converter.surf2voxel", "mymesh.converter.tet102tet4", "mymesh.converter.tet2edges", "mymesh.converter.tet2faces", "mymesh.converter.tet42tet10", "mymesh.converter.tri2edges", "mymesh.converter.voxel2im", "mymesh.converter.wedge2edges", "mymesh.converter.wedge2faces", "mymesh.converter.wedge2tet", "mymesh.curvature.AnalyticalCurvature", "mymesh.curvature.CubicFit", "mymesh.curvature.Curvedness", "mymesh.curvature.GaussianCurvature", "mymesh.curvature.ImageCurvature", "mymesh.curvature.MeanCurvature", "mymesh.curvature.NormCurve", "mymesh.curvature.QuadFit", "mymesh.curvature.ShapeCategory", "mymesh.curvature.ShapeIndex", "mymesh.delaunay.BowyerWatson2d", "mymesh.delaunay.BowyerWatson3d", "mymesh.delaunay.ConvexHull", "mymesh.delaunay.ConvexHullFanTriangulation", "mymesh.delaunay.ConvexHull_GiftWrapping", "mymesh.delaunay.SciPy", "mymesh.delaunay.Triangle", "mymesh.delaunay.TriangleSplittingTriangulation", "mymesh.delaunay.Triangulate", "mymesh.image.SurfaceMesh", "mymesh.image.SurfaceNodeOptimization", "mymesh.image.TetMesh", "mymesh.image.VoxelMesh", "mymesh.image.read", "mymesh.image.write", "mymesh.implicit.SurfaceMesh", "mymesh.implicit.SurfaceNodeOptimization", "mymesh.implicit.TetMesh", "mymesh.implicit.VoxelMesh", "mymesh.implicit.box", "mymesh.implicit.cylinder", "mymesh.implicit.diamond", "mymesh.implicit.diff", "mymesh.implicit.difff", "mymesh.implicit.diffs", "mymesh.implicit.grid2fun", "mymesh.implicit.grid2grad", "mymesh.implicit.gyroid", "mymesh.implicit.intersection", "mymesh.implicit.intersectionf", "mymesh.implicit.intersections", "mymesh.implicit.lidinoid", "mymesh.implicit.mesh2sdf", "mymesh.implicit.mesh2udf", "mymesh.implicit.neovius", "mymesh.implicit.offset", "mymesh.implicit.primitive", "mymesh.implicit.rMax", "mymesh.implicit.rMin", "mymesh.implicit.sphere", "mymesh.implicit.thicken", "mymesh.implicit.thickenf", "mymesh.implicit.thickens", "mymesh.implicit.torus", "mymesh.implicit.union", "mymesh.implicit.unionf", "mymesh.implicit.unions", "mymesh.implicit.xplane", "mymesh.implicit.yplane", "mymesh.implicit.zplane", "mymesh.improvement.GeoTransformSmoothing", "mymesh.improvement.LocalLaplacianSmoothing", "mymesh.improvement.NodeSpringSmoothing", "mymesh.improvement.SegmentSpringSmoothing", "mymesh.improvement.SmartLaplacianSmoothing", "mymesh.improvement.TangentialLaplacianSmoothing", "mymesh.improvement.TetContract", "mymesh.improvement.TetFlip", "mymesh.improvement.TetImprove", "mymesh.improvement.TetSplit", "mymesh.octree.Function2Octree", "mymesh.octree.Octree2Dual", "mymesh.octree.Octree2Voxel", "mymesh.octree.Points2Octree", "mymesh.octree.Print", "mymesh.octree.SearchOctree", "mymesh.octree.SearchOctreeTri", "mymesh.octree.Surface2Octree", "mymesh.octree.Voxel2Octree", "mymesh.octree.getAllLeaf", "mymesh.primitives.Box", "mymesh.primitives.Circle", "mymesh.primitives.CirclePt", "mymesh.primitives.Cylinder", "mymesh.primitives.Extrude", "mymesh.primitives.Grid", "mymesh.primitives.Grid2D", "mymesh.primitives.Line", "mymesh.primitives.Plane", "mymesh.primitives.Revolve", "mymesh.primitives.Sphere", "mymesh.primitives.Torus", "mymesh.quality.Area", "mymesh.quality.AspectRatio", "mymesh.quality.InverseOrthogonalQuality", "mymesh.quality.InverseOrthogonality", "mymesh.quality.MaxDihedral", "mymesh.quality.MeanRatio", "mymesh.quality.MinDihedral", "mymesh.quality.OrthogonalQuality", "mymesh.quality.Orthogonality", "mymesh.quality.Skewness", "mymesh.quality.SurfDihedralAngles", "mymesh.quality.Volume", "mymesh.quality.dihedralAngles", "mymesh.quality.equiangular_skewness", "mymesh.quality.quad_skewness", "mymesh.quality.tet_vol_skewness", "mymesh.quality.tri_skewness", "mymesh.rays.BoxTrianglesIntersection", "mymesh.rays.PlaneBoxIntersection", "mymesh.rays.PlaneSurfIntersection", "mymesh.rays.PlaneTriangleIntersection", "mymesh.rays.PlaneTrianglesIntersection", "mymesh.rays.PointInBoundary", "mymesh.rays.PointInBox", "mymesh.rays.PointInSurf", "mymesh.rays.PointInTri", "mymesh.rays.PointsInSurf", "mymesh.rays.PointsInTris", "mymesh.rays.PointsInVoxel", "mymesh.rays.RayBoxIntersection", "mymesh.rays.RayBoxesIntersection", "mymesh.rays.RayOctreeIntersection", "mymesh.rays.RaySegmentIntersection", "mymesh.rays.RaySegmentsIntersection", "mymesh.rays.RaySurfIntersection", "mymesh.rays.RayTriangleIntersection", "mymesh.rays.RayTrianglesIntersection", "mymesh.rays.RaysSurfIntersection", "mymesh.rays.RaysTrianglesIntersection", "mymesh.rays.SegmentSegmentIntersection", "mymesh.rays.SegmentsSegmentsIntersection", "mymesh.rays.SurfSelfIntersection", "mymesh.rays.SurfSurfIntersection", "mymesh.rays.TriangleBoxIntersection", "mymesh.rays.TriangleTriangleIntersection", "mymesh.rays.TriangleTriangleIntersectionPt", "mymesh.rays.TrianglesTrianglesIntersection", "mymesh.rays.TrianglesTrianglesIntersectionPts", "mymesh.utils.AABB", "mymesh.utils.BaryTet", "mymesh.utils.BaryTri", "mymesh.utils.BaryTris", "mymesh.utils.CalcFaceNormal", "mymesh.utils.Centroids", "mymesh.utils.CleanupDegenerateElements", "mymesh.utils.DeleteDegenerateElements", "mymesh.utils.DeleteDuplicateNodes", "mymesh.utils.DetectFeatures", "mymesh.utils.DilateVoxel", "mymesh.utils.ErodeVoxel", "mymesh.utils.ExtractRagged", "mymesh.utils.Face2NodeNormal", "mymesh.utils.MVBB", "mymesh.utils.MergeMesh", "mymesh.utils.MirrorMesh", "mymesh.utils.PadRagged", "mymesh.utils.Project2Surface", "mymesh.utils.RelabelNodes", "mymesh.utils.SortRaggedByLength", "mymesh.utils.SplitRaggedByLength", "mymesh.utils.SurfMapping", "mymesh.utils.TetMeshVol", "mymesh.utils.TriSurfVol", "mymesh.utils.ValueMapping", "mymesh.utils.getConnectedElements", "mymesh.utils.getConnectedNodes", "mymesh.utils.getElemConnectivity", "mymesh.utils.getElemNeighbors", "mymesh.utils.getNodeNeighborhood", "mymesh.utils.getNodeNeighborhoodByRadius", "mymesh.utils.getNodeNeighbors", "mymesh.utils.identify_type", "mymesh.utils.makePyramidLayer", "mymesh.visualize.FaceColor", "mymesh.visualize.GetTheme", "mymesh.visualize.ParseColor", "mymesh.visualize.View", "mymesh.visualize.set_vispy_backend", "User Guide", "Connectivity Representations", "Constructive Solid Geometry", "Element Types", "Image-based Meshing", "Implicit Meshing", "Installation", "File Input/Output", "Using MyMesh in MATLAB", "Working with the <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">mesh</span></code> class", "References", "What is a mesh?", "MyMesh: General purpose, implicit, and image-based meshing in python", "Computation times", "Theory Guide", "Contour", "Curvature", "Delaunay Triangulation", "2\u21923 and 3\u21922 Flips", "implicit", "Improvement", "Octree", "Rays", "Spring-based Smoothing"], "titleterms": {"2": 321, "2d": [79, 304, 314], "3": 321, "33": 318, "3d": [79, 314], "On": 312, "aabb": 263, "acknowledg": 315, "adapt": 86, "addedg": 56, "addelem": 57, "addfac": 58, "addnod": 59, "an": [5, 308], "analysi": [2, 3, 10], "analyt": 319, "analyticalcurvatur": 123, "api": 0, "area": 215, "aspectratio": 216, "barytet": 264, "barytri": [265, 266], "base": [17, 307, 315, 319, 326], "boolean": [12, 84, 85], "boundari": 325, "boundaryconn": 21, "boundarynod": 22, "bowyer": 320, "bowyerwatson2d": 133, "bowyerwatson3d": 134, "box": [152, 203, 325], "boxtrianglesintersect": 232, "calcfacenorm": 267, "calcul": [2, 15, 80, 319], "caviti": 320, "cell": 60, "centroid": [23, 268], "circl": 204, "circlept": 205, "circumcircl": 320, "class": 312, "clean": 82, "cleanup": 61, "cleanupdegenerateel": 269, "clip": [24, 312], "cloud": 324, "comput": [4, 9, 11, 316], "connect": [14, 82, 304], "construct": [79, 305], "contour": [13, 25, 86, 87, 88, 89, 90, 91, 312, 318], "convent": 319, "convers": [14, 15, 78], "convert": [14, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122], "convex": 16, "convexhul": 135, "convexhull_giftwrap": 137, "convexhullfantriangul": 136, "copi": [62, 312], "core": 309, "creat": 5, "createboundarylay": 26, "creation": 78, "crop": 27, "csg": 305, "cube": 318, "cubic": 319, "cubicfit": 124, "curvatur": [2, 15, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 319], "curved": [125, 319], "cylind": [153, 206], "data": 321, "defin": [5, 308], "definit": 324, "delaunai": [16, 133, 134, 135, 136, 137, 138, 139, 140, 141, 320], "deletedegenerateel": 270, "deleteduplicatenod": 271, "demand": 312, "depend": 309, "detectfeatur": 272, "develop": 1, "diamond": 154, "diff": [155, 157], "difff": 156, "dihedralangl": 227, "dilatevoxel": 273, "distanc": 324, "edg": [30, 321], "edgeconn": 28, "edgeelemconn": 29, "edges2uniqu": 93, "edgesbyel": 92, "elemconn": 31, "element": [14, 306, 321], "elemneighbor": 32, "elemnorm": 33, "equiangular_skew": 228, "erodevoxel": 274, "error": [2, 324], "euclidean": 324, "eulercharacterist": 34, "exampl": [3, 8, 10, 304], "explicit": 305, "extractrag": 275, "extrud": 207, "face": [37, 321], "face2nodenorm": 276, "facecolor": 298, "faceconn": 35, "faceelemconn": 36, "faces2surfac": 94, "faces2uniqu": 95, "featur": 1, "file": [17, 310], "fit": 319, "flip": 321, "format": 320, "from": [78, 309, 312], "function": [5, 18, 80, 308, 324], "function2octre": 193, "gaussian": 319, "gaussiancurvatur": 126, "gener": [8, 10, 17, 18, 315, 324], "genu": 38, "geometri": 305, "geotransformsmooth": 183, "getallleaf": 202, "getconnectedel": 289, "getconnectednod": 290, "getcurvatur": 63, "getelemconnect": 291, "getelemneighbor": 292, "getnodeneighbor": 295, "getnodeneighborhood": 293, "getnodeneighborhoodbyradiu": 294, "getqual": 64, "getthem": 299, "grid": 208, "grid2d": 209, "grid2fun": 158, "grid2grad": 159, "guid": [303, 317], "gyroid": 160, "heart": 5, "helper": 80, "hex2edg": 96, "hex2fac": 97, "hex2tet": 98, "hull": 16, "i": [308, 314], "identify_typ": [65, 296], "im2voxel": 99, "imag": [17, 142, 143, 144, 145, 146, 147, 307, 310, 315], "imagecurvatur": 127, "implicit": [5, 18, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 305, 308, 315, 322, 324], "import": 303, "improv": [19, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 323], "imread": 66, "inclus": 325, "index": [309, 319], "initi": 320, "input": 310, "insert": 320, "insid": 81, "instal": 309, "interpret": 319, "intersect": [81, 161, 163, 325], "intersectionf": 162, "inverseorthogon": 218, "inverseorthogonalqu": 217, "io": 17, "lidinoid": 164, "line": [210, 314], "local": 19, "locallaplaciansmooth": 184, "locat": 320, "makepyramidlay": 297, "manipul": 82, "march": 318, "marchingcub": 87, "marchingcubesimag": 88, "marchingsquar": 89, "marchingsquaresimag": 90, "marchingtetrahedra": 91, "matlab": 311, "maxdihedr": 219, "mean": 319, "meancurvatur": 128, "meanratio": 220, "measur": [2, 82], "merg": 67, "mergemesh": 278, "mesh": [3, 8, 10, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 307, 308, 310, 312, 314, 315, 319, 324], "mesh2sdf": 165, "mesh2udf": 166, "meshboolean": 84, "meshio2mymesh": 68, "method": 20, "metric": [80, 319], "mindihedr": 221, "mirror": 39, "mirrormesh": 279, "miscellan": 82, "mix": 6, "modif": 323, "mvbb": 277, "mymesh": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 307, 311, 315], "mymesh2meshio": 69, "nd": 40, "nedg": 41, "need": 315, "nelem": 42, "neoviu": 167, "nface": 43, "nnode": 44, "node": [19, 323, 326], "nodeneighbor": 45, "nodenorm": 46, "nodenormalsmethod": 47, "nodespringsmooth": 185, "normcurv": 129, "object": 0, "octre": [78, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 324], "octree2du": 194, "octree2voxel": 195, "offset": 168, "oper": [12, 18], "option": 309, "orthogon": 223, "orthogonalqu": 222, "other": 18, "output": 310, "outsid": 81, "overview": 303, "packag": [303, 309], "padrag": 280, "parsecolor": 300, "pasta": 7, "plan": 1, "planar": 314, "plane": [211, 325], "planeboxintersect": 233, "planesurfintersect": 234, "planetriangleintersect": 235, "planetrianglesintersect": 236, "plot": 70, "point": [71, 320, 324, 325], "pointinboundari": 237, "pointinbox": 238, "pointinsurf": 239, "pointintri": 240, "points2octre": 196, "pointsinsurf": 241, "pointsintri": 242, "pointsinvoxel": 243, "polygon2edg": 100, "primit": [79, 169, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214], "princip": 319, "print": 197, "procedur": 321, "project": 82, "project2surfac": 281, "properti": [20, 312], "purpos": 315, "pypi": 309, "pyramid2edg": 101, "pyramid2fac": 102, "pyramid2tet": 103, "python": [309, 315], "quad2edg": 104, "quad2tri": 105, "quad_skew": 229, "quadfit": 130, "quadrat": 319, "qualiti": [80, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "queri": 78, "rai": [81, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 325], "rayboxesintersect": 245, "rayboxintersect": 244, "rayoctreeintersect": 246, "raysegmentintersect": 247, "raysegmentsintersect": 248, "rayssurfintersect": 252, "raystrianglesintersect": 253, "raysurfintersect": 249, "raytriangleintersect": 250, "raytrianglesintersect": 251, "read": [72, 146], "reconstruct": 322, "refer": [0, 313], "relabelnod": 282, "removeelem": 73, "renumberfacesbyset": 48, "renumbernodesbyset": 49, "reposit": [19, 323], "represent": 304, "reset": 74, "retriangul": 320, "revolv": 212, "rmax": 170, "rmin": 171, "roadmap": 1, "scipi": 138, "searchoctre": 198, "searchoctreetri": 199, "segment": 325, "segmentsegmentintersect": 254, "segmentspringsmooth": 186, "segmentssegmentsintersect": 255, "set_vispy_backend": 302, "shape": [7, 79, 319, 325], "shapecategori": 131, "shapeindex": 132, "skew": 224, "smartlaplaciansmooth": 187, "smooth": [5, 19, 326], "solid": 305, "solid2edg": 106, "solid2fac": 107, "solid2surfac": 108, "solid2tet": 109, "sortraggedbylength": 283, "sourc": 309, "sphere": [172, 213], "splitmesh": 85, "splitraggedbylength": 284, "spring": 326, "squar": 318, "statement": 315, "structur": 321, "submodul": 0, "summari": 315, "surf": 314, "surf2dual": 110, "surf2edg": 111, "surf2tri": 112, "surf2voxel": 113, "surfac": [5, 54, 82, 314, 319, 322, 324, 325], "surface2octre": 200, "surfacemesh": [142, 148], "surfacenodeoptim": [143, 149], "surfconn": 50, "surfdihedralangl": 225, "surfelemconn": 51, "surfmap": 285, "surfnod": 53, "surfnodeneighbor": 52, "surfselfintersect": 256, "surfsurfintersect": 257, "tabl": 321, "tangentiallaplaciansmooth": 188, "test": [81, 320, 325], "tet102tet4": 114, "tet2edg": 115, "tet2fac": 116, "tet42tet10": 117, "tet_vol_skew": 230, "tetcontract": 189, "tetflip": 190, "tetimprov": 191, "tetmesh": [144, 150], "tetmeshvol": 286, "tetrahedr": 16, "tetrahedra": 318, "tetsplit": 192, "theori": 317, "thicken": [173, 175], "thickenf": 174, "threshold": [55, 312], "time": [4, 9, 11, 316], "tip": 311, "topolog": 323, "topologi": [6, 19], "toru": [176, 214], "tpm": 6, "tri2edg": 118, "tri_skew": 231, "triangl": [139, 325], "triangleboxintersect": 258, "trianglesplittingtriangul": 140, "trianglestrianglesintersect": 261, "trianglestrianglesintersectionpt": 262, "triangletriangleintersect": 259, "triangletriangleintersectionpt": 260, "triangul": [16, 141, 320], "trisurfvol": 287, "type": [14, 306, 314], "union": [177, 179], "unionf": 178, "unpack": 312, "up": 82, "us": 311, "user": 303, "util": [18, 78, 82, 83, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "valid": 75, "valuemap": 288, "view": [76, 301], "visual": [83, 298, 299, 300, 301, 302], "vol": 314, "volum": [226, 314], "voxel": [314, 324], "voxel2im": 119, "voxel2octre": 201, "voxelmesh": [145, 151], "watson": 320, "wedge2edg": 120, "wedge2fac": 121, "wedge2tet": 122, "what": [308, 314], "work": 312, "write": [77, 147], "xplane": 180, "yplane": 181, "zplane": 182}})